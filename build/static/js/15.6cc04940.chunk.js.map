{"version":3,"sources":["utils/PlanDropdowns.tsx","../node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","../node_modules/@material-ui/icons/AccessTime.js","pages/AppUsers/AppUserDetails.tsx","pages/AppUsers/AppUserFeedback.tsx","hook/useEuropienCountriesList.tsx","pages/AppUsers/AppUserCCPA.tsx","pages/AppUsers/AppNutrition.tsx","pages/AppUsers/AppSkinCare.tsx","pages/AppUsers/AppWorkout.tsx","pages/AppUsers/AppUsers.tsx"],"names":["DietTypeDrop","id","name","FitnessGoalDrop","FitnessGoalWomenDrop","LifeStyleDrop","ExperienceDrop","PreferredDrop","InterestsDrop","SkinTypeDrop","CurrentClimateDrop","SkinIrregularDrop","SubDrop","SkinTextureDrop","CcpaStatus","NoOption","getSubSkinIrregular","SkinIrregularValue","find","getDropValues","dropValues","value","CardHeader","React","props","ref","action","avatar","classes","className","_props$component","component","Component","_props$disableTypogra","disableTypography","subheaderProp","subheader","subheaderTypographyProps","titleProp","title","titleTypographyProps","other","_objectWithoutProperties","type","Typography","_extends","variant","display","color","clsx","root","content","withStyles","alignItems","padding","flex","marginRight","alignSelf","marginTop","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_default","createElement","Fragment","d","useStyles","makeStyles","theme","AppUserDetails","data","useState","formData","setFormData","useEffect","Card","Table","TableBody","TableRow","TableCell","firstName","lastName","email","dateOfBirth","gender","mobileNumber","country","state","accessTimeIcon","palette","text","secondary","fontSize","height","width","paddingTop","message","marginBottom","spacing","divider","replayInsertDiv","paper","flexGrow","marginLeft","input","replayListDiv","bubble","borderRadius","shape","backgroundColor","background","header","time","replayMessage","actions","justifyContent","lColor","green","main","FeedbackCard","Post","useService","Snackbar","useSnackbar","replayText","setReplayText","loading","setLoading","Avatar","alt","src","profilePic","moment","created_at","fromNow","CardContent","feedback","replay","length","Divider","map","index","FeedbackReplayCard","Paper","elevation","Input","disableUnderline","onChange","e","target","placeholder","Tooltip","IconButton","disabled","onClick","_id","then","res","console","log","push","prevState","catch","err","show","memo","replay_by_name","replay_by_image","feedback_replay","AppUserFeedback","page_no","page_limit","stateData","setStateData","pageCount","setPageCount","dataList","setDataList","listFeedback","a","error","page_count","prevData","CircularProgress","Pagination","count","page","event","getCountryList","code","useEuropienCountriesList","marginTop10","themeButton","white","dark","noTextTransform","textTransform","ChangeStatusModel","onSuccess","isOpen","setIsOpen","submitting","setSubmitting","apiUrl","setApiUrl","status","setStatus","handleModel","cloneDeep","Button","Dialog","disableBackdropClick","disableEscapeKeyDown","fullWidth","maxWidth","aria-labelledby","open","DialogTitle","onClose","DialogContent","Grid","container","item","xs","Autocomplete","options","getOptionLabel","option","getOptionSelected","newValue","renderInput","params","TextField","label","inputProps","DialogActions","size","AppUserCCPA","isEuropienCountry","setIsEuropienCountry","onRefresh","getRequestFor","gdpr_type_value","items","TableHead","isSharePersonalData","gdpr_share_data","isProtectYourData","gdpr_protect_data","isPersonalInformation","gdpr_personal_data","ccpa_access_data","ccpa_share_data","ccpa_delete_data","align","editCardRoot","marginLeft1","actionGrid","editButtonDiv","paddingBottom","EditCard","formikRef","useRef","fitnessGoal","lifestyle","diet_type","weight","weightUnit","heightUnit","initialValue","setInitialValue","useLayoutEffect","innerRef","enableReinitialize","initialValues","validationSchema","Yup","trim","required","onSubmit","resetForm","values","errors","touched","handleChange","handleBlur","setFieldValue","submitForm","isSubmitting","onBlur","Boolean","helperText","InputProps","endAdornment","style","ViewCard","AppNutrition","isEdit","setIsEdit","skin_type","current_climate","skin_irregular","skin_irregular_sub","skin_texture","experience_level","preferred_workout","interests","AppWorkout","breakpoints","lg","margin","addIcon","inner","minWidth","tabCard","sEvenly","iconPadd","jCenter","imageView","avatarRoot","textPrimary","fontWeight","textSecondary","tabsRoot","tabIndicator","tabPanelRoot","tabPanelContent","dialogBackground","AddEditDailog","okBtnText","initialFormValue","description","image","file","prevImage","isNew","imageRef","onImageChange","persist","files","reader","FileReader","onloadend","current","result","readAsDataURL","addData","editData","rest","EditData","url","helper","PostData","uploadNewImage","render","max","notRequired","dividers","md","multiline","accept","hidden","click","startIcon","FormControl","FormHelperText","ViewDailog","tabValue","setTabValue","getAppUserById","userData","tabs","AppSkinCare","fullScreen","Loader","List","ListItem","disableGutters","ListItemAvatar","ListItemText","primary","TabContext","TabList","scrollButtons","indicator","tab","Tab","SnackbarProvider","TabPanel","AppUsers","useConfModel","addEditDialog","setAddEditDialog","viewDialog","setViewDialog","listAppUsers","closeAddEditDialog","onSuccessAction","Page","justify","Name","Value","TableContainer","hover","arrow","openViewDialog","CardActions"],"mappings":"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","file":"static/js/15.6cc04940.chunk.js","sourcesContent":["//=====Meal Plan\r\nexport const DietTypeDrop = [\r\n  { id: 'VEG', name: 'Vegetarian' },\r\n  { id: 'NONVEG', name: 'Non-Vegetarian' },\r\n  { id: 'EGG', name: 'Eggetarian' },\r\n  { id: 'VEGAN', name: 'Vegan' },\r\n];\r\n\r\nexport const FitnessGoalDrop = [\r\n  { id: 'WEIGHTGAIN', name: 'Weight Gain' },\r\n  { id: 'WEIGHTLOSS', name: 'Weight Loss' },\r\n  { id: 'MAINTAINWEIGHT', name: 'Maintain Weight' },\r\n];\r\nexport const FitnessGoalWomenDrop = [\r\n  { id: 'WEIGHTGAIN', name: 'Weight Gain' },\r\n  { id: 'WEIGHTLOSS', name: 'Weight Loss' },\r\n  { id: 'MAINTAINWEIGHT', name: 'Maintain Weight' },\r\n  { id: 'WEIGHTGAINPOSTPARTUM', name: 'Weight Gain (Post-Partum)' },\r\n  { id: 'WEIGHTLOSSPOSTPARTUM', name: 'Weight Loss (Post-Partum)' },\r\n  { id: 'MAINTAINWEIGHTPOSTPARTUM', name: 'Maintain Weight (Post-Partum)' },\r\n];\r\nexport const LifeStyleDrop = [\r\n  { id: 'SEDENTARY', name: 'Sedentary' },\r\n  { id: 'LIGHTLYACTIVE', name: 'Lightly Active' },\r\n  { id: 'MODERATEACTIVE', name: 'Moderately Active' },\r\n  { id: 'VERYACTIVE', name: 'Very Active' },\r\n];\r\n\r\n//==========Workout Plan===========\r\nexport const ExperienceDrop = [\r\n  { id: 'BEGINNER', name: 'Beginner' },\r\n  { id: 'INTERMEDIATE', name: 'Intermediate' },\r\n  { id: 'PROFESSIONAL', name: 'Professional' },\r\n];\r\n\r\nexport const PreferredDrop = [\r\n  { id: 'STRENGTH', name: 'Strength Training' },\r\n  { id: 'HIIT', name: 'HIIT' },\r\n];\r\n\r\nexport const InterestsDrop = [\r\n  { id: 'HOME', name: 'Home Workout' },\r\n  { id: 'GYM', name: 'Gym Workout' },\r\n];\r\n\r\n//=========Skincare Plan============\r\nexport const SkinTypeDrop = [\r\n  { id: 'DRY', name: 'Dry' },\r\n  { id: 'OILY', name: 'Oily' },\r\n  { id: 'COMBINATION', name: 'Combination' },\r\n  { id: 'NORMAL', name: 'Normal' },\r\n];\r\n\r\nexport const CurrentClimateDrop = [\r\n  { id: 'HOT', name: 'Hot' },\r\n  { id: 'COLD', name: 'Cold' },\r\n  { id: 'HUMID', name: 'Humid' },\r\n  { id: 'DRY', name: 'Dry' },\r\n];\r\n\r\nexport const SkinIrregularDrop = [\r\n  {\r\n    id: 'ACNE', name: 'Acne', SubDrop: [\r\n      { id: 'PIMPLES', name: 'Pimples' },\r\n      { id: 'BLACKHEADS', name: 'Black Heads' },\r\n      { id: 'WHITEHEADS', name: 'White Heads' },\r\n    ]\r\n  },\r\n  {\r\n    id: 'RASHES', name: 'Rashes', SubDrop: [\r\n      { id: 'SCALY', name: 'Scaly' },\r\n      { id: 'ITCHY', name: 'Itchy' },\r\n      { id: 'BUMPY', name: 'Bumpy' },\r\n      { id: 'BOILS', name: 'Boils' },\r\n      { id: 'BLISTERS', name: 'Blisters' },\r\n    ]\r\n  },\r\n  {\r\n    id: 'DISCOLORATION', name: 'Discoloration', SubDrop: [\r\n      { id: 'BLACKISH', name: 'Blackish' },\r\n      { id: 'WHITISH', name: 'Whitish' },\r\n      { id: 'PINKISH', name: 'Pinkish' },\r\n      { id: 'REDDISH', name: 'Reddish' },\r\n      { id: 'SUNSPOTS', name: 'Sun Spots' },\r\n    ]\r\n  },\r\n];\r\n\r\nexport const SkinTextureDrop = [\r\n  { id: 'SAGGY', name: 'Saggy', },\r\n  { id: 'FINELINES', name: ' Fine Lines' },\r\n  { id: 'WRINKLES', name: 'Wrinkles' },\r\n  { id: 'NONE', name: 'None' },\r\n];\r\n\r\nexport const CcpaStatus = [\r\n  { id: '0', name: 'Pending', },\r\n  { id: '1', name: 'Processing' },\r\n  { id: '2', name: 'Closed' },\r\n];\r\n\r\nexport const NoOption = { id: '', name: '' }\r\n\r\nexport const getSubSkinIrregular = (SkinIrregularValue: any) => {\r\n  return SkinIrregularDrop?.find(({ id }: any) => id == SkinIrregularValue)?.SubDrop || []\r\n}\r\n\r\nconst getDropValues = (dropValues: any, value: string) => {\r\n  return dropValues.find(({ id }: any) => id == value)?.name || ''\r\n};\r\n\r\nexport default getDropValues\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"\n})), 'AccessTime');\n\nexports.default = _default;","import {\r\n  Card, Table, TableBody, TableCell,\r\n  TableRow,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { FitnessGoalDrop } from '../../utils/PlanDropdowns';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n\r\n}));\r\n\r\nconst AppUserDetails = (props: any) => {\r\n  const classes = useStyles();\r\n  const { data } = props;\r\n  const [formData, setFormData] = useState<any>(data);\r\n  useEffect(() => {\r\n    setFormData(props.data)\r\n  }, [props.data]);\r\n\r\n  return (\r\n    <Card>\r\n      <Table>\r\n        <TableBody>\r\n          <TableRow >\r\n            <TableCell>Name</TableCell>\r\n            <TableCell>{formData?.firstName + ' ' + formData?.lastName}</TableCell>\r\n          </TableRow>\r\n          <TableRow >\r\n            <TableCell>Email</TableCell>\r\n            <TableCell>{formData?.email}</TableCell>\r\n          </TableRow>\r\n          <TableRow >\r\n            <TableCell>Date of Birth</TableCell>\r\n            <TableCell>{formData?.dateOfBirth}</TableCell>\r\n          </TableRow>\r\n          <TableRow >\r\n            <TableCell>Gender</TableCell>\r\n            <TableCell>{formData?.gender}</TableCell>\r\n          </TableRow>\r\n          <TableRow >\r\n            <TableCell>Mobile Number</TableCell>\r\n            <TableCell>{formData?.mobileNumber}</TableCell>\r\n          </TableRow>\r\n          <TableRow >\r\n            <TableCell>Country</TableCell>\r\n            <TableCell>{formData?.country}</TableCell>\r\n          </TableRow>\r\n          <TableRow >\r\n            <TableCell>State</TableCell>\r\n            <TableCell>{formData?.state}</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </Card>\r\n  );\r\n};\r\n\r\n\r\nexport default AppUserDetails;\r\n","import React, { useEffect, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActionArea,\n  CardMedia,\n  Avatar,\n  Link,\n  Typography,\n  Divider,\n  Input,\n  Paper,\n  Tooltip,\n  IconButton,\n  CircularProgress\n} from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport SendIcon from '@material-ui/icons/Send';\nimport useService from '../../hook/useService';\nimport useSnackbar from '../../hook/useSnackbar';\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\nimport { Pagination } from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme: any) => ({\n  root: {},\n  subheader: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  accessTimeIcon: {\n    color: theme.palette.text.secondary,\n    fontSize: '14px',\n    height: 14,\n    width: 14,\n    marginRight: 6\n  },\n  content: {\n    paddingTop: 0\n  },\n  message: {\n    marginBottom: theme.spacing(2)\n  },\n  divider: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  },\n  replayInsertDiv: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  paper: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(2),\n    padding: theme.spacing(0.5, 2)\n  },\n  input: {\n    width: '100%'\n  },\n  replayListDiv: {\n    display: 'flex',\n    marginBottom: theme.spacing(2)\n  },\n  bubble: {\n    flexGrow: 1,\n    padding: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: theme.palette.background.default\n  },\n  header: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  time: {\n    marginLeft: 'auto'\n  },\n  replayMessage: {\n    marginTop: theme.spacing(1)\n  },\n  actions: {\n    display: 'flex',\n    padding: theme.spacing(2, 1),\n    justifyContent: 'center',\n  },\n  lColor: {\n    color: theme.palette.green.main,\n  }\n\n}));\n\nconst AppUserFeedback = (props: any) => {\n  const classes = useStyles();\n  const { data } = props;\n  const { Post } = useService();\n  const Snackbar = useSnackbar();\n  // const ConfModel = useConfModel();\n\n  const [stateData, setStateData] = useState({ page_no: 1, page_limit: 10, id: '' });\n  const [pageCount, setPageCount] = useState(0);\n  const [dataList, setDataList] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const listFeedback = async (data: any = stateData) => {\n    setLoading(true);\n    Post('app/listFeedback', data)\n      .then((res: any) => {\n        console.log('listFeedback', res);\n        setLoading(false);\n        if (!res.error) {\n          setDataList(res.data);\n          setPageCount(res.page_count);\n        } else {\n          Snackbar.show(res.message, 'error');\n        }\n      })\n      .catch((err: any) => {\n        console.log('err', err);\n        setLoading(false);\n        Snackbar.show(err.message, 'error');\n      });\n  };\n\n  const onPageChange = (event: React.ChangeEvent<unknown>, value: number) => {\n    setStateData((prevState: any) => ({ ...prevState, page_no: value }));\n    listFeedback({ ...stateData, page_no: value })\n  };\n\n  useEffect(() => {\n    setStateData((prevData) => ({ ...prevData, id: data._id }))\n    listFeedback({ ...stateData, id: data._id })\n  }, [props]);\n\n  return (\n    <>\n      {!loading && dataList.map((data: any, index: number) => <FeedbackCard data={data} />)}\n      {loading && <div className={classes.actions}><CircularProgress className={classes.lColor} /></div>}\n      {!loading && dataList.length == 0 && <div className={classes.actions}>No Feedback</div>}\n      <div className={classes.actions}>\n        <Pagination\n          count={pageCount}\n          page={stateData.page_no}\n          onChange={onPageChange}\n        />\n      </div>\n    </>\n  );\n};\n\nconst FeedbackCard = (props: any) => {\n  const classes = useStyles();\n  const { data } = props;\n  const { Post } = useService();\n  const Snackbar = useSnackbar()\n  const [formData, setFormData] = useState<any>(data);\n  const [replayText, setReplayText] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const replaySubmit = () => {\n    setLoading(true);\n    Post('app/postReplay', { id: formData._id, replay: replayText })\n      .then((res: any) => {\n        console.log('postReplay', res);\n        setLoading(false);\n        formData.replay.push(res.data);\n        setFormData((prevState: any) => formData)\n        setReplayText('')\n      })\n      .catch((err: any) => {\n        console.log('err', err);\n        setLoading(false);\n        Snackbar.show(err.message, 'error');\n      });\n  };\n\n\n  const handleReplayChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setReplayText(e.target.value)\n  }\n\n\n  useEffect(() => {\n    setFormData(data)\n  }, [props]);\n\n  return (\n    <Card>\n      <CardHeader\n        avatar={\n          <Avatar alt={formData?.name} src={formData?.profilePic} />\n        }\n        disableTypography\n        subheader={\n          <div className={classes.subheader}>\n            <AccessTimeIcon className={classes.accessTimeIcon} />\n            <Typography variant=\"body2\">\n              {moment(formData?.created_at).fromNow()}\n            </Typography>\n          </div>\n        }\n        title={formData?.name}\n      />\n      <CardContent className={classes.content}>\n        <Typography className={classes.message} variant=\"body1\">\n          {formData?.feedback}\n        </Typography>\n\n        {!(formData?.replay.length == 0) && <Divider className={classes.divider} />}\n        {formData?.replay && formData?.replay.map((data: any, index: number) => <FeedbackReplayCard key={index} data={data} />)}\n\n        <Divider className={classes.divider} />\n        <div className={classes.replayInsertDiv} >\n          <Paper\n            className={classes.paper}\n            elevation={1}\n          >\n            <Input\n              value={replayText}\n              className={classes.input}\n              disableUnderline\n              onChange={handleReplayChange}\n              placeholder=\"Leave a replay\"\n            />\n          </Paper>\n          <Tooltip title=\"Send\">\n            <IconButton color='primary' disabled={loading} onClick={replaySubmit}>\n              <SendIcon />\n            </IconButton>\n          </Tooltip>\n\n        </div>\n\n\n      </CardContent>\n    </Card>\n\n  )\n}\n\nconst FeedbackReplayCard = React.memo((props: any) => {\n  const classes = useStyles();\n  const { data } = props;\n  const [formData, setFormData] = useState<any>({});\n  useEffect(() => {\n    console.log('data', data)\n    setFormData(data)\n  }, [props]);\n  return (\n\n    <div className={classes.replayListDiv}>\n      <Avatar alt={formData?.replay_by_name} src={formData?.replay_by_image} />\n      <div className={classes.bubble}>\n        <div className={classes.header}>\n          <Typography color=\"textPrimary\" variant=\"h6\">\n            {formData?.replay_by_name}\n          </Typography>\n          <Typography className={classes.time} variant=\"body2\" >\n            {moment(formData?.created_at).fromNow()}\n          </Typography>\n        </div>\n        <Typography className={classes.replayMessage} variant=\"body1\" >\n          {formData?.feedback_replay}\n        </Typography>\n      </div>\n    </div>\n  )\n})\n\nexport default AppUserFeedback;\n","let getCountryList = [\r\n    {\r\n        id : 1,\r\n        name : 'Andorra',\r\n        code : 'AD',\r\n    },\r\n    {\r\n        id : 2,\r\n        name : 'Albania',\r\n        code : 'AL',\r\n    },\r\n    {\r\n        id : 3,\r\n        name : 'Austria',\r\n        code : 'AT',\r\n    },\r\n    {\r\n        id : 4,\r\n        name : 'Åland Islands',\r\n        code : 'AX',\r\n    },\r\n    {\r\n        id : 5,\r\n        name : 'Bosnia and Herzegovina',\r\n        code : 'BA',\r\n    },\r\n    {\r\n        id : 6,\r\n        name : 'Belgium',\r\n        code : 'BE',\r\n    },\r\n    {\r\n        id : 7,\r\n        name : 'Bulgaria',\r\n        code : 'BG',\r\n    },\r\n    {\r\n        id : 8,\r\n        name : 'Belarus',\r\n        code : 'BY',\r\n    },\r\n    {\r\n        id : 9,\r\n        name : 'Switzerland',\r\n        code : 'CH',\r\n    },\r\n    {\r\n        id : 10,\r\n        name : 'Cyprus',\r\n        code : 'CY',\r\n    },\r\n    {\r\n        id : 11,\r\n        name : 'Czech Republic',\r\n        code : 'CZ',\r\n    },\r\n    {\r\n        id : 12,\r\n        name : 'Germany',\r\n        code : 'DE',\r\n    },\r\n    {\r\n        id : 13,\r\n        name : 'Denmark',\r\n        code : 'DK',\r\n    },\r\n    {\r\n        id : 14,\r\n        name : 'Estonia',\r\n        code : 'EE',\r\n    },\r\n    {\r\n        id : 15,\r\n        name : 'Spain',\r\n        code : 'ES',\r\n    },\r\n    {\r\n        id : 16,\r\n        name : 'Finland',\r\n        code : 'FI',\r\n    },\r\n    {\r\n        id : 17,\r\n        name : 'Faroe Islands',\r\n        code : 'FO',\r\n    },\r\n    {\r\n        id : 18,\r\n        name : 'France',\r\n        code : 'FR',\r\n    },\r\n    {\r\n        id : 19,\r\n        name : 'United Kingdon',\r\n        code : 'GB',\r\n    },    \r\n    {\r\n        id : 20,\r\n        name : 'Guernsey',\r\n        code : 'GG',\r\n    },    \r\n    {\r\n        id : 21,\r\n        name : 'Greece',\r\n        code : 'GR',\r\n    },\r\n    {\r\n        id : 22,\r\n        name : 'Croatia',\r\n        code : 'HR',\r\n    },    \r\n    {\r\n        id : 23,\r\n        name : 'Hungary',\r\n        code : 'HU',\r\n    },    \r\n    {\r\n        id : 24,\r\n        name : 'Ireland',\r\n        code : 'IE',\r\n    },    \r\n    {\r\n        id : 25,\r\n        name : 'Isle of Man',\r\n        code : 'IM',\r\n    },\r\n    {\r\n        id : 26,\r\n        name : 'Iceland',\r\n        code : 'IC',\r\n    },    \r\n    {\r\n        id : 27,\r\n        name : 'Italy',\r\n        code : 'IT',\r\n    },    \r\n    {\r\n        id : 28,\r\n        name : 'Jersey',\r\n        code : 'JE',\r\n    },\r\n    {\r\n        id : 29,\r\n        name : 'Liechtenstein',\r\n        code : 'LI',\r\n    },    \r\n    {\r\n        id : 30,\r\n        name : 'Lithuania',\r\n        code : 'LT',\r\n    },    \r\n    {\r\n        id : 31,\r\n        name : 'Luxembourg',\r\n        code : 'LU',\r\n    },\r\n    {\r\n        id : 32,\r\n        name : 'Latvia',\r\n        code : 'LV',\r\n    },    \r\n    {\r\n        id : 33,\r\n        name : 'Monaco',\r\n        code : 'MC',\r\n    },    \r\n    {\r\n        id : 34,\r\n        name : 'Moldova, Republic of',\r\n        code : 'MD',\r\n    },\r\n    {\r\n        id : 35,\r\n        name : 'Macedonia, The Former Yugoslav Republic of',\r\n        code : 'MK',\r\n    },    \r\n    {\r\n        id : 36,\r\n        name : 'Malta',\r\n        code : 'MT',\r\n    },    \r\n    {\r\n        id : 37,\r\n        name : 'Netherlands',\r\n        code : 'NL',\r\n    },    \r\n    {\r\n        id : 38,\r\n        name : 'Norway',\r\n        code : 'NO',\r\n    },\r\n    {\r\n        id : 39,\r\n        name : 'Poland',\r\n        code : 'PL',\r\n    },    \r\n    {\r\n        id : 40,\r\n        name : 'Portugal',\r\n        code : 'PT',\r\n    },    \r\n    {\r\n        id : 41,\r\n        name : 'Romania',\r\n        code : 'RO',\r\n    },    \r\n    {\r\n        id : 42,\r\n        name : 'Russian Federation',\r\n        code : 'RU',\r\n    },    \r\n    {\r\n        id : 43,\r\n        name : 'Sweden',\r\n        code : 'SE',\r\n    },    \r\n    {\r\n        id : 44,\r\n        name : 'Slovenia',\r\n        code : 'SI',\r\n    },\r\n    {\r\n        id : 45,\r\n        name : 'Svalbard and Jan Mayen',\r\n        code : 'SJ',\r\n    },    \r\n    {\r\n        id : 46,\r\n        name : 'Slovakia',\r\n        code : 'SK',\r\n    },    \r\n    {\r\n        id : 44,\r\n        name : 'San Marino',\r\n        code : 'SM',\r\n    },\r\n    {\r\n        id : 45,\r\n        name : 'Ukraine',\r\n        code : 'UA',\r\n    },    \r\n    {\r\n        id : 46,\r\n        name : 'Vatican City State (Holy See)',\r\n        code : 'VA',\r\n    },    \r\n]\r\n\r\nfunction useEuropienCountriesList() {\r\n    return getCountryList;\r\n}\r\n\r\nexport default useEuropienCountriesList\r\n","import {\r\n  Card, Table, TableBody, TableCell, TextField,\r\n  TableHead, TableRow, Typography, Button,\r\n  Dialog, DialogActions, DialogContent, Grid, CircularProgress\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\r\nimport React, { useEffect, useState } from 'react';\r\nimport getDropValues, { CcpaStatus, NoOption } from '../../utils/PlanDropdowns';\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport clsx from 'clsx';\r\nimport useService from '../../hook/useService';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport { cloneDeep } from 'lodash';\r\nimport useEuropienCountriesList from '../../hook/useEuropienCountriesList';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  marginTop10: {\r\n    marginTop: 10\r\n  },\r\n  lColor: {\r\n    color: 'white',\r\n  },\r\n  themeButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n  },\r\n  noTextTransform: {\r\n    textTransform: 'none'\r\n  },\r\n  content : {\r\n    height : '50vh',\r\n    display:'flex',\r\n    justifyContent : 'center',\r\n    alignItems : 'center'\r\n  }\r\n}));\r\n\r\nconst AppUserCCPA = (props: any) => {\r\n  const classes = useStyles();\r\n  const getCountryList = useEuropienCountriesList();\r\n  const [isEuropienCountry, setIsEuropienCountry] = useState<any>(0)\r\n  const { data, onRefresh } = props;\r\n  const [formData, setFormData] = useState<any>({});\r\n\r\n  const getRequestFor = (data: any) => {\r\n    switch (data?.gdpr_type_value) {\r\n      case true:\r\n        return 'Enable';\r\n      case false:\r\n        return 'Disable';\r\n      default:\r\n        return 'No Request';\r\n    }\r\n  }\r\n\r\n  const checkEuropiesCountry = () =>{\r\n    getCountryList.map((items,index)=>{\r\n      if(items.name === formData?.country){\r\n        setIsEuropienCountry(1);\r\n      }\r\n    })\r\n  } \r\n\r\n  const getRequestStatus = (data: any) => {\r\n    const { status } = data\r\n    switch (status) {\r\n      case true:\r\n        return 'Enable';\r\n        break;\r\n      case false:\r\n        return 'Disable';\r\n        break;\r\n      default:\r\n        return { status, is_display: false };\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    setFormData(data)\r\n    checkEuropiesCountry()\r\n  }, [props, formData, isEuropienCountry]);\r\n\r\n  return (\r\n    <div>\r\n      {isEuropienCountry === 1 && (\r\n        <>\r\n          <Typography variant=\"body1\">GDPR</Typography>\r\n          <Card>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell ></TableCell>\r\n                  <TableCell >Current Status</TableCell>\r\n                  <TableCell >Request for</TableCell>\r\n                  <TableCell >Request Status</TableCell>\r\n                  <TableCell ></TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                <TableRow >\r\n                  <TableCell>Share your personal data</TableCell>\r\n                  <TableCell>{formData?.isSharePersonalData ? 'Enabled' : 'Disabled'}</TableCell>\r\n                  <TableCell>{getRequestFor(formData?.gdpr_share_data)}</TableCell>\r\n                  <TableCell>{getDropValues(CcpaStatus, formData?.gdpr_share_data?.status)}</TableCell>\r\n                  <TableCell>{formData?.gdpr_share_data && <ChangeStatusModel data={formData?.gdpr_share_data} apiUrl={'app/gdprUpdateData'} onSuccess={onRefresh} />}</TableCell>\r\n                </TableRow>\r\n                <TableRow >\r\n                  <TableCell>Protect your data</TableCell>\r\n                  <TableCell>{formData?.isProtectYourData ? 'Enabled' : 'Disabled'}</TableCell>\r\n                  <TableCell>{getRequestFor(formData?.gdpr_protect_data)}</TableCell>\r\n                  <TableCell>{getDropValues(CcpaStatus, formData?.gdpr_protect_data?.status)}</TableCell>\r\n                  <TableCell>{formData?.gdpr_protect_data && <ChangeStatusModel data={formData?.gdpr_protect_data} apiUrl={'app/gdprUpdateData'} onSuccess={onRefresh} />}</TableCell>\r\n                </TableRow>\r\n                <TableRow >\r\n                  <TableCell>Personal Information</TableCell>\r\n                  <TableCell>{formData?.isPersonalInformation ? 'Enabled' : 'Disabled'}</TableCell>\r\n                  <TableCell>{getRequestFor(formData?.gdpr_personal_data)}</TableCell>\r\n                  <TableCell>{getDropValues(CcpaStatus, formData?.gdpr_personal_data?.status)}</TableCell>\r\n                  <TableCell>{formData?.gdpr_personal_data && <ChangeStatusModel data={formData?.gdpr_personal_data} apiUrl={'app/gdprUpdateData'} onSuccess={onRefresh} />}</TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          </Card>\r\n        </>\r\n      )}\r\n\r\n      {formData?.state === 'California' && (\r\n        <>\r\n          {formData?.ccpa_access_data &&\r\n            <div className={classes.marginTop10}>\r\n              <Typography variant=\"body1\">CCPA Access your data</Typography>\r\n              <Card>\r\n                <Table>\r\n                  <TableBody>\r\n                    <TableRow >\r\n                      <TableCell>Name</TableCell>\r\n                      <TableCell>{formData?.ccpa_access_data?.firstName + ' ' + formData?.ccpa_access_data?.lastName}</TableCell>\r\n                      <TableCell></TableCell>\r\n                    </TableRow>\r\n                    <TableRow >\r\n                      <TableCell>Email</TableCell>\r\n                      <TableCell>{formData?.ccpa_access_data?.email}</TableCell>\r\n                      <TableCell></TableCell>\r\n                    </TableRow>\r\n                    <TableRow >\r\n                      <TableCell>State</TableCell>\r\n                      <TableCell>{formData?.ccpa_access_data?.state}</TableCell>\r\n                      <TableCell></TableCell>\r\n                    </TableRow>\r\n                    <TableRow >\r\n                      <TableCell>Status</TableCell>\r\n                      <TableCell>{getDropValues(CcpaStatus, formData?.ccpa_access_data?.status)}</TableCell>\r\n                      <TableCell><ChangeStatusModel data={formData?.ccpa_access_data} apiUrl={'app/ccpaUpdateAccessData'} onSuccess={onRefresh} /></TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                </Table>\r\n              </Card>\r\n            </div>\r\n          }\r\n\r\n          {formData?.ccpa_share_data &&\r\n            <div className={classes.marginTop10}>\r\n              <Typography variant=\"body1\">CCPA Share your data</Typography>\r\n              <Card>\r\n                <Table>\r\n                  <TableBody>\r\n                    <TableRow >\r\n                      <TableCell>Email</TableCell>\r\n                      <TableCell>{formData?.ccpa_share_data?.email}</TableCell>\r\n                      <TableCell></TableCell>\r\n                    </TableRow>\r\n                    <TableRow >\r\n                      <TableCell>State</TableCell>\r\n                      <TableCell>{formData?.ccpa_share_data?.state}</TableCell>\r\n                      <TableCell></TableCell>\r\n                    </TableRow>\r\n                    <TableRow >\r\n                      <TableCell>Status</TableCell>\r\n                      <TableCell>{getDropValues(CcpaStatus, formData?.ccpa_share_data?.status)}</TableCell>\r\n                      <TableCell><ChangeStatusModel data={formData?.ccpa_share_data} apiUrl={'app/ccpaUpdateShareData'} onSuccess={onRefresh} /></TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                </Table>\r\n              </Card>\r\n            </div>\r\n          }\r\n\r\n          {formData?.ccpa_delete_data &&\r\n            <div className={classes.marginTop10}>\r\n              <Typography variant=\"body1\">CCPA Delete your data</Typography>\r\n              <Card>\r\n                <Table>\r\n                  <TableBody>\r\n                    <TableRow >\r\n                      <TableCell>Name</TableCell>\r\n                      <TableCell>{formData?.ccpa_delete_data?.firstName + ' ' + formData?.ccpa_delete_data?.lastName}</TableCell>\r\n                      <TableCell></TableCell>\r\n                    </TableRow>\r\n                    <TableRow >\r\n                      <TableCell>Email</TableCell>\r\n                      <TableCell>{formData?.ccpa_delete_data?.email}</TableCell>\r\n                      <TableCell></TableCell>\r\n                    </TableRow>\r\n                    <TableRow >\r\n                      <TableCell>State</TableCell>\r\n                      <TableCell>{formData?.ccpa_delete_data?.state}</TableCell>\r\n                      <TableCell></TableCell>\r\n                    </TableRow>\r\n                    <TableRow >\r\n                      <TableCell>Status</TableCell>\r\n                      <TableCell>{getDropValues(CcpaStatus, formData?.ccpa_delete_data?.status)}</TableCell>\r\n                      <TableCell><ChangeStatusModel data={formData?.ccpa_delete_data} apiUrl={'app/ccpaUpdateDeleteData'} onSuccess={onRefresh} /></TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                </Table>\r\n              </Card>\r\n            </div>\r\n          }\r\n        </>\r\n      )}\r\n\r\n      {isEuropienCountry !== 1 && formData?.state !== 'California' && (\r\n        <div className={classes.content}>\r\n          <Typography variant='h4' align='center'><strong>This is not available for user's Country</strong></Typography>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport const ChangeStatusModel = (props: any) => {\r\n  const classes = useStyles();\r\n  const { onSuccess } = props;\r\n  const { Post } = useService();\r\n  const Snackbar = useSnackbar();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [submitting, setSubmitting] = useState(false);\r\n\r\n  const [formData, setFormData] = useState(props?.data);\r\n  const [apiUrl, setApiUrl] = useState(props.apiUrl);\r\n  const [status, setStatus] = useState(props?.data?.status);\r\n\r\n  const handleModel = () => {\r\n    setIsOpen(!isOpen);\r\n    setSubmitting(false);\r\n  }\r\n\r\n  const onSubmit = () => {\r\n    if (status == '') {\r\n      Snackbar.show('Status required', 'error');\r\n      return\r\n    }\r\n    setSubmitting(true);\r\n    Post(apiUrl, { id: formData._id, status })\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        handleModel();\r\n        onSuccess()\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    const { data, apiUrl } = cloneDeep(props)\r\n    const { status } = cloneDeep(data)\r\n    setFormData(data)\r\n    setStatus(status)\r\n    setApiUrl(apiUrl)\r\n  }, [props, isOpen])\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={handleModel} className={clsx(classes.themeButton, classes.noTextTransform)}>Change Status</Button>\r\n      {isOpen &&\r\n        <Dialog\r\n          disableBackdropClick\r\n          disableEscapeKeyDown\r\n          fullWidth\r\n          maxWidth='sm'\r\n          aria-labelledby='dialog-title'\r\n          open={isOpen}\r\n        >\r\n          <DialogTitle id='dialog-title' onClose={handleModel}>Change Status</DialogTitle>\r\n          <DialogContent>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <Autocomplete\r\n                  options={CcpaStatus}\r\n                  value={CcpaStatus.find((data: any) => data.id == status) || NoOption}\r\n                  getOptionLabel={(option: any) => option.name}\r\n                  getOptionSelected={(option) => option.id == status}\r\n                  onChange={(event: any, newValue: any) => {\r\n                    setStatus(newValue?.id || '');\r\n                  }}\r\n                  renderInput={(params: any) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label='Change Status'\r\n                      variant='outlined'\r\n                      inputProps={{\r\n                        ...params.inputProps,\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n\r\n          <DialogActions>\r\n            <Button onClick={handleModel} variant='outlined' color='secondary'>Cancel</Button>\r\n            <Button className={classes.themeButton} onClick={() => onSubmit()} variant='outlined'>\r\n              {submitting ? <CircularProgress size={24} className={classes.lColor} /> : 'Change'}\r\n            </Button>\r\n          </DialogActions>\r\n\r\n        </Dialog>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AppUserCCPA;\r\n","import React, { memo, useEffect, useLayoutEffect, useRef, useState } from 'react';\r\nimport {\r\n  Button,\r\n  Card, CircularProgress, Grid, Table, TableBody, TableCell,\r\n  TableRow,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Formik } from 'formik';\r\nimport clsx from 'clsx';\r\nimport * as Yup from 'yup';\r\nimport getDropValues, { DietTypeDrop, FitnessGoalDrop, FitnessGoalWomenDrop, LifeStyleDrop, NoOption } from '../../utils/PlanDropdowns';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport useService from '../../hook/useService';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  editCardRoot: {\r\n    padding: theme.spacing(2)\r\n  },\r\n  marginLeft1: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  themeButton: {\r\n    color: theme.palette.white,\r\n\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n  },\r\n  actionGrid: {\r\n    display: 'flex',\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\"\r\n  },\r\n  editButtonDiv: {\r\n    display: 'flex',\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    paddingBottom: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst AppNutrition = (props: any) => {\r\n  const classes = useStyles();\r\n  const [isEdit, setIsEdit] = useState(false)\r\n  const { data, onRefresh } = props;\r\n  const [formData, setFormData] = useState<any>(data);\r\n  useEffect(() => {\r\n    setFormData(props.data)\r\n  }, [props.data]);\r\n\r\n  return (\r\n    <>\r\n      {!isEdit && <div className={classes.editButtonDiv}>\r\n        <Button onClick={() => setIsEdit(true)} className={classes.themeButton} variant='outlined'>\r\n          Edit\r\n        </Button>\r\n      </div>\r\n      }\r\n      {!isEdit && <ViewCard data={formData} />}\r\n      {isEdit && <EditCard data={formData} onClose={() => setIsEdit(false)} onSuccess={() => onRefresh()} />}\r\n    </>\r\n  );\r\n};\r\n\r\nconst EditCard = (props: any) => {\r\n  const classes = useStyles();\r\n  const { onClose, onSuccess } = props;\r\n  const formikRef = useRef<any>(null);\r\n  const Snackbar = useSnackbar();\r\n  const { Post } = useService();\r\n\r\n  const formInitialValue = {\r\n    id: \"\",\r\n    fitnessGoal: \"\",\r\n    lifestyle: \"\",\r\n    diet_type: \"\",\r\n    weight: 0,\r\n    weightUnit: \"kgs\",\r\n    height: 0,\r\n    heightUnit: \"cm\"\r\n  }\r\n\r\n  console.log(props.data)\r\n\r\n  const [initialValue, setInitialValue] = useState<any>(formInitialValue);\r\n\r\n  const onSubmit = (value: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n\r\n    Post('app/updateMealPlan', value)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onClose();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        if(err.message === 'Request failed with status code 500'){\r\n          Snackbar.show('No combination found', 'error');\r\n        }\r\n        else {\r\n          Snackbar.show(err.message, 'error');\r\n        }\r\n      });\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    const { _id, fitnessGoal, lifestyle, diet_type, weight, height } = props.data\r\n    setInitialValue((prevState: any) => ({ ...prevState, id: _id, fitnessGoal, lifestyle, diet_type, weight, height }))\r\n  }, [props.data]);\r\n\r\n\r\n  return (\r\n    <Card className={classes.editCardRoot}>\r\n      <Formik\r\n        innerRef={formikRef}\r\n        enableReinitialize\r\n        initialValues={initialValue}\r\n        validationSchema={\r\n          Yup.object().shape({\r\n            fitnessGoal: Yup.string().trim().required('Fitness goal is required'),\r\n            lifestyle: Yup.string().trim().required('Life style is required'),\r\n            diet_type: Yup.string().trim().required('Diet type is required'),\r\n            weight: Yup.number().required('Weight is required'),\r\n            weightUnit: Yup.string().trim().required('Weight unit is required'),\r\n            height: Yup.number().required('Height is required'),\r\n            heightUnit: Yup.string().trim().required('Height unit is required'),\r\n          })\r\n        }\r\n        onSubmit={onSubmit}\r\n      >\r\n        {({ values, errors, touched, handleChange, handleBlur, setFieldValue, submitForm, isSubmitting }) => (\r\n          <>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={4}>\r\n                <Autocomplete\r\n                  options={props.data?.gender !== 'She/Her/Hers' ? FitnessGoalDrop : FitnessGoalWomenDrop}\r\n                  value={FitnessGoalDrop.find((data: any) => data.id == values.fitnessGoal) || NoOption}\r\n                  getOptionLabel={(option: any) => option.name}\r\n                  getOptionSelected={(option) => option.id == values.fitnessGoal}\r\n                  onChange={(event: any, newValue: any) => {\r\n                    setFieldValue('fitnessGoal', newValue?.id || '');\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  renderInput={(params: any) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label='Fitness goals'\r\n                      variant='outlined'\r\n                      error={Boolean(touched.fitnessGoal && errors.fitnessGoal)}\r\n                      helperText={touched.fitnessGoal && errors.fitnessGoal}\r\n                      inputProps={{\r\n                        ...params.inputProps,\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={4}>\r\n                <Autocomplete\r\n                  options={LifeStyleDrop}\r\n                  value={LifeStyleDrop.find((data: any) => data.id == values.lifestyle) || NoOption}\r\n                  getOptionLabel={(option: any) => option.name}\r\n                  getOptionSelected={(option) => option.id == values.lifestyle}\r\n                  onChange={(event: any, newValue: any) => {\r\n                    setFieldValue('lifestyle', newValue?.id || '');\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  renderInput={(params: any) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label='Life style'\r\n                      variant='outlined'\r\n                      error={Boolean(touched.lifestyle && errors.lifestyle)}\r\n                      helperText={touched.lifestyle && errors.lifestyle}\r\n                      inputProps={{\r\n                        ...params.inputProps,\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={4}>\r\n                <Autocomplete\r\n                  options={DietTypeDrop}\r\n                  value={DietTypeDrop.find((data: any) => data.id == values.diet_type) || NoOption}\r\n                  getOptionLabel={(option: any) => option.name}\r\n                  getOptionSelected={(option) => option.id == values.diet_type}\r\n                  onChange={(event: any, newValue: any) => {\r\n                    setFieldValue('diet_type', newValue?.id || '');\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  renderInput={(params: any) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label='Diet Types'\r\n                      variant='outlined'\r\n                      error={Boolean(touched.diet_type && errors.diet_type)}\r\n                      helperText={touched.diet_type && errors.diet_type}\r\n                      inputProps={{\r\n                        ...params.inputProps,\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  label='Weight'\r\n                  name='weight'\r\n                  variant='outlined'\r\n                  error={Boolean(touched.weight && errors.weight)}\r\n                  helperText={touched.weight && errors.weight}\r\n                  value={values?.weight}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  InputProps={{\r\n                    endAdornment: values?.weightUnit\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  label='Height'\r\n                  name='height'\r\n                  variant='outlined'\r\n                  error={Boolean(touched.height && errors.height)}\r\n                  helperText={touched.height && errors.height}\r\n                  value={values?.height}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  InputProps={{\r\n                    endAdornment: values?.heightUnit\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid className={classes.actionGrid} item xs={12}>\r\n                <Button onClick={() => onClose()} variant='outlined' color='secondary'>\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  className={clsx(classes.themeButton, classes.marginLeft1)}\r\n                  onClick={() => submitForm()}\r\n                  disabled={isSubmitting}\r\n                  variant='outlined'\r\n                >\r\n                  {isSubmitting ? (\r\n                    <CircularProgress size={24} style={{ color: 'white' }} />\r\n                  ) : 'Update'}\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst ViewCard = (props: any) => {\r\n  const classes = useStyles();\r\n\r\n  const { data } = props;\r\n  const [formData, setFormData] = useState<any>({});\r\n  useEffect(() => {\r\n    setFormData(data)\r\n  }, [props]);\r\n\r\n  return (\r\n    <Card>\r\n      <Table>\r\n        <TableBody>\r\n          <TableRow >\r\n            <TableCell>Fitness Goals</TableCell>\r\n            <TableCell>{getDropValues(FitnessGoalDrop, formData?.fitnessGoal)}</TableCell>\r\n          </TableRow>\r\n          <TableRow >\r\n            <TableCell>Life Style</TableCell>\r\n            <TableCell>{getDropValues(LifeStyleDrop, formData?.lifestyle)}</TableCell>\r\n          </TableRow>\r\n          <TableRow >\r\n            <TableCell>Diet Type</TableCell>\r\n            <TableCell>{getDropValues(DietTypeDrop, formData?.diet_type)}</TableCell>\r\n          </TableRow>\r\n          <TableRow >\r\n            <TableCell>Height</TableCell>\r\n            <TableCell>{formData?.height !== null ? formData?.height : '' + ' ' + formData?.heightUnit !== null ? formData?.heightUnit : ''}</TableCell>\r\n            {/* <TableCell>{formData?.height + ' ' + formData?.heightUnit}</TableCell> */}\r\n          </TableRow>\r\n          <TableRow >\r\n            <TableCell>Weight</TableCell>\r\n            <TableCell>{formData?.weight !== null ? formData?.weight : '' + ' ' + formData?.weightUnit !== null ? formData?.weightUnit : ''}</TableCell>\r\n            {/* <TableCell>{formData?.weight + ' ' + formData?.weightUnit}</TableCell> */}\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </Card>\r\n  );\r\n};\r\n\r\n\r\nexport default AppNutrition;\r\n","import React, { memo, useEffect, useLayoutEffect, useRef, useState } from 'react';\r\nimport {\r\n  Button,\r\n  Card, CircularProgress, Grid, Table, TableBody, TableCell,\r\n  TableRow,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Formik } from 'formik';\r\nimport clsx from 'clsx';\r\nimport * as Yup from 'yup';\r\nimport getDropValues, { CurrentClimateDrop, DietTypeDrop, FitnessGoalDrop, getSubSkinIrregular, LifeStyleDrop, NoOption, SkinIrregularDrop, SkinTextureDrop, SkinTypeDrop } from '../../utils/PlanDropdowns';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport useService from '../../hook/useService';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  editCardRoot: {\r\n    padding: theme.spacing(2)\r\n  },\r\n  marginLeft1: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  themeButton: {\r\n    color: theme.palette.white,\r\n\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n  },\r\n  actionGrid: {\r\n    display: 'flex',\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\"\r\n  },\r\n  editButtonDiv: {\r\n    display: 'flex',\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    paddingBottom: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst AppNutrition = (props: any) => {\r\n  const classes = useStyles();\r\n  const [isEdit, setIsEdit] = useState(false)\r\n  const { data, onRefresh } = props;\r\n  const [formData, setFormData] = useState<any>(data);\r\n  useEffect(() => {\r\n    setFormData(props.data)\r\n  }, [props.data]);\r\n\r\n  return (\r\n    <>\r\n      {!isEdit && <div className={classes.editButtonDiv}>\r\n        <Button onClick={() => setIsEdit(true)} className={classes.themeButton} variant='outlined'>\r\n          Edit\r\n        </Button>\r\n      </div>\r\n      }\r\n      {!isEdit && <ViewCard data={formData} />}\r\n      {isEdit && <EditCard data={formData} onClose={() => setIsEdit(false)} onSuccess={() => onRefresh()} />}\r\n    </>\r\n  );\r\n};\r\n\r\nconst EditCard = (props: any) => {\r\n  const classes = useStyles();\r\n  const { onClose, onSuccess } = props;\r\n  const formikRef = useRef<any>(null);\r\n  const Snackbar = useSnackbar();\r\n  const { Post } = useService();\r\n\r\n  const formInitialValue = {\r\n    id: \"\",\r\n    skin_type: \"\",\r\n    current_climate: \"\",\r\n    skin_irregular: \"\",\r\n    skin_irregular_sub: \"\",\r\n    skin_texture: \"\",\r\n\r\n  }\r\n\r\n  const [initialValue, setInitialValue] = useState<any>(formInitialValue);\r\n\r\n  const onSubmit = (value: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n\r\n    Post('app/updateSkincarePlan', value)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onClose();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        if(err.message === 'Request failed with status code 500'){\r\n          Snackbar.show('No combination found', 'error');\r\n        }\r\n        else {\r\n          Snackbar.show(err.message, 'error');\r\n        }\r\n      });\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    const { _id, skin_type, current_climate, skin_irregular, skin_irregular_sub, skin_texture } = props.data\r\n    setInitialValue((prevState: any) => ({ ...prevState, id: _id, skin_type, current_climate, skin_irregular, skin_irregular_sub, skin_texture }))\r\n  }, [props.data]);\r\n\r\n  return (\r\n    <Card className={classes.editCardRoot}>\r\n      <Formik\r\n        innerRef={formikRef}\r\n        enableReinitialize\r\n        initialValues={initialValue}\r\n        validationSchema={\r\n          Yup.object().shape({\r\n            skin_type: Yup.string().trim().required('Skin Type is required'),\r\n            current_climate: Yup.string().trim().required('Current Climate is required'),\r\n            skin_irregular: Yup.string().trim().required('Skin Irregularites is required'),\r\n            skin_irregular_sub: Yup.string().trim().required('Sub Skin Irregularites is required'),\r\n            skin_texture: Yup.string().trim().required('Skin Texture is required'),\r\n          })\r\n        }\r\n        onSubmit={onSubmit}\r\n      >\r\n        {({ values, errors, touched, handleChange, handleBlur, setFieldValue, submitForm, isSubmitting }) => (\r\n          <>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={4}>\r\n\r\n                <Autocomplete\r\n                  options={SkinTypeDrop}\r\n                  value={SkinTypeDrop.find((data: any) => data.id == values.skin_type) || NoOption}\r\n                  getOptionLabel={(option: any) => option.name}\r\n                  getOptionSelected={(option) => option.id == values.skin_type}\r\n                  onChange={(event: any, newValue: any) => {\r\n                    setFieldValue('skin_type', newValue?.id || '');\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  renderInput={(params: any) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label='Skin Type'\r\n                      variant='outlined'\r\n                      error={Boolean(touched.skin_type && errors.skin_type)}\r\n                      helperText={touched.skin_type && errors.skin_type}\r\n                      inputProps={{\r\n                        ...params.inputProps,\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={4}>\r\n                <Autocomplete\r\n                  options={CurrentClimateDrop}\r\n                  value={CurrentClimateDrop.find((data: any) => data.id == values.current_climate) || NoOption}\r\n                  getOptionLabel={(option: any) => option.name}\r\n                  getOptionSelected={(option) => option.id == values.current_climate}\r\n                  onChange={(event: any, newValue: any) => {\r\n                    setFieldValue('current_climate', newValue?.id || '');\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  renderInput={(params: any) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label='Current Climate'\r\n                      variant='outlined'\r\n                      error={Boolean(touched.current_climate && errors.current_climate)}\r\n                      helperText={touched.current_climate && errors.current_climate}\r\n                      inputProps={{\r\n                        ...params.inputProps,\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={4}>\r\n                <Autocomplete\r\n                  options={SkinTextureDrop}\r\n                  value={SkinTextureDrop.find((data: any) => data.id == values.skin_texture) || NoOption}\r\n                  getOptionLabel={(option: any) => option.name}\r\n                  getOptionSelected={(option) => option.id == values.skin_texture}\r\n                  onChange={(event: any, newValue: any) => {\r\n                    setFieldValue('skin_texture', newValue?.id || '');\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  renderInput={(params: any) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label='Skin Texture'\r\n                      variant='outlined'\r\n                      error={Boolean(touched.skin_texture && errors.skin_texture)}\r\n                      helperText={touched.skin_texture && errors.skin_texture}\r\n                      inputProps={{\r\n                        ...params.inputProps,\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={6}>\r\n                <Autocomplete\r\n                  options={SkinIrregularDrop}\r\n                  value={SkinIrregularDrop.find((data: any) => data.id == values.skin_irregular) || NoOption}\r\n                  getOptionLabel={(option: any) => option.name}\r\n                  getOptionSelected={(option) => option.id == values.skin_irregular}\r\n                  onChange={(event: any, newValue: any) => {\r\n                    setFieldValue('skin_irregular', newValue?.id || '');\r\n                    setFieldValue('skin_irregular_sub', '');\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  renderInput={(params: any) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label='Skin Irregularites'\r\n                      variant='outlined'\r\n                      error={Boolean(touched.skin_irregular && errors.skin_irregular)}\r\n                      helperText={touched.skin_irregular && errors.skin_irregular}\r\n                      inputProps={{\r\n                        ...params.inputProps,\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={6}>\r\n                <Autocomplete\r\n                  options={getSubSkinIrregular(values.skin_irregular)}\r\n                  value={getSubSkinIrregular(values.skin_irregular).find((data: any) => data.id == values.skin_irregular_sub) || NoOption}\r\n                  getOptionLabel={(option: any) => option.name}\r\n                  getOptionSelected={(option) => option.id == values.skin_irregular_sub}\r\n                  onChange={(event: any, newValue: any) => {\r\n                    setFieldValue('skin_irregular_sub', newValue?.id || '');\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  renderInput={(params: any) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label='Sub Skin Irregularites'\r\n                      variant='outlined'\r\n                      error={Boolean(touched.skin_irregular_sub && errors.skin_irregular_sub)}\r\n                      helperText={touched.skin_irregular_sub && errors.skin_irregular_sub}\r\n                      inputProps={{\r\n                        ...params.inputProps,\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid className={classes.actionGrid} item xs={12}>\r\n                <Button onClick={() => onClose()} variant='outlined' color='secondary'>\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  className={clsx(classes.themeButton, classes.marginLeft1)}\r\n                  onClick={() => submitForm()}\r\n                  disabled={isSubmitting}\r\n                  variant='outlined'\r\n                >\r\n                  {isSubmitting ? (\r\n                    <CircularProgress size={24} style={{ color: 'white' }} />\r\n                  ) : 'Update'}\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst ViewCard = (props: any) => {\r\n  const classes = useStyles();\r\n\r\n  const { data } = props;\r\n  const [formData, setFormData] = useState<any>({});\r\n  useEffect(() => {\r\n    setFormData(data)\r\n  }, [props]);\r\n\r\n  return (\r\n    <Card>\r\n      <Table>\r\n        <TableBody>\r\n          <TableRow >\r\n            <TableCell>Skin Type</TableCell>\r\n            <TableCell>{getDropValues(SkinTypeDrop, formData?.skin_type)}</TableCell>\r\n          </TableRow>\r\n          <TableRow >\r\n            <TableCell>Current Climate</TableCell>\r\n            <TableCell>{getDropValues(CurrentClimateDrop, formData?.current_climate)}</TableCell>\r\n          </TableRow>\r\n          <TableRow >\r\n            <TableCell>Skin Irregularities</TableCell>\r\n            <TableCell>{getDropValues(SkinIrregularDrop, formData?.skin_irregular)}</TableCell>\r\n          </TableRow>\r\n          <TableRow >\r\n            <TableCell>Sub Skin Irregularities</TableCell>\r\n            <TableCell>{getDropValues(getSubSkinIrregular(formData?.skin_irregular), formData?.skin_irregular_sub)}</TableCell>\r\n          </TableRow>\r\n          <TableRow >\r\n            <TableCell>Skin Texture</TableCell>\r\n            <TableCell>{getDropValues(SkinTextureDrop, formData?.skin_texture)}</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </Card>\r\n  );\r\n};\r\n\r\n\r\nexport default AppNutrition;\r\n","import React, { memo, useEffect, useLayoutEffect, useRef, useState } from 'react';\r\nimport { Button, Card, CircularProgress, Grid, Table, TableBody, TableCell, TableRow, TextField } from '@material-ui/core';\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Formik } from 'formik';\r\nimport clsx from 'clsx';\r\nimport * as Yup from 'yup';\r\nimport getDropValues, { CurrentClimateDrop, DietTypeDrop, ExperienceDrop, FitnessGoalDrop, getSubSkinIrregular, InterestsDrop, LifeStyleDrop, NoOption, PreferredDrop, SkinIrregularDrop, SkinTextureDrop, SkinTypeDrop } from '../../utils/PlanDropdowns';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport useService from '../../hook/useService';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  editCardRoot: {\r\n    padding: theme.spacing(2)\r\n  },\r\n  marginLeft1: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  themeButton: {\r\n    color: theme.palette.white,\r\n\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n  },\r\n  actionGrid: {\r\n    display: 'flex',\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\"\r\n  },\r\n  editButtonDiv: {\r\n    display: 'flex',\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    paddingBottom: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst AppWorkout = (props: any) => {\r\n  const classes = useStyles();\r\n  const [isEdit, setIsEdit] = useState(false)\r\n  const { data, onRefresh } = props;\r\n  const [formData, setFormData] = useState<any>(data);\r\n  useEffect(() => {\r\n    setFormData(props.data)\r\n  }, [props.data]);\r\n\r\n  return (\r\n    <>\r\n      {!isEdit && <div className={classes.editButtonDiv}>\r\n        <Button onClick={() => setIsEdit(true)} className={classes.themeButton} variant='outlined'>\r\n          Edit\r\n        </Button>\r\n      </div>\r\n      }\r\n      {!isEdit && <ViewCard data={formData} />}\r\n      {isEdit && <EditCard data={formData} onClose={() => setIsEdit(false)} onSuccess={() => onRefresh()} />}\r\n    </>\r\n  );\r\n};\r\n\r\nconst EditCard = (props: any) => {\r\n  const classes = useStyles();\r\n  const { onClose, onSuccess } = props;\r\n  const formikRef = useRef<any>(null);\r\n  const Snackbar = useSnackbar();\r\n  const { Post } = useService();\r\n\r\n  const formInitialValue = {\r\n    id: \"\",\r\n    experience_level: \"\",\r\n    preferred_workout: \"\",\r\n    interests: \"\"\r\n  }\r\n\r\n  const [initialValue, setInitialValue] = useState<any>(formInitialValue);\r\n\r\n  const onSubmit = (value: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n\r\n    Post('app/updateWorkoutPlan', value)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onClose();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        if(err.message === 'Request failed with status code 500'){\r\n          Snackbar.show('No combination found', 'error');\r\n        }\r\n        else {\r\n          Snackbar.show(err.message, 'error');\r\n        }\r\n      });\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    const { _id, experience_level, preferred_workout, interests } = props.data\r\n    setInitialValue((prevState: any) => ({ ...prevState, id: _id, experience_level, preferred_workout, interests }))\r\n  }, [props.data]);\r\n\r\n  return (\r\n    <Card className={classes.editCardRoot}>\r\n      <Formik\r\n        innerRef={formikRef}\r\n        enableReinitialize\r\n        initialValues={initialValue}\r\n        validationSchema={\r\n          Yup.object().shape({\r\n            experience_level: Yup.string().trim().required('Experience level is required'),\r\n            preferred_workout: Yup.string().trim().required('Preferred workout is required'),\r\n            interests: Yup.string().trim().required('Interests is required'),\r\n          })\r\n        }\r\n        onSubmit={onSubmit}\r\n      >\r\n        {({ values, errors, touched, handleChange, handleBlur, setFieldValue, submitForm, isSubmitting }) => (\r\n          <>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={4}>\r\n\r\n                <Autocomplete\r\n                  options={ExperienceDrop}\r\n                  value={ExperienceDrop.find((data: any) => data.id == values.experience_level) || NoOption}\r\n                  getOptionLabel={(option: any) => option.name}\r\n                  getOptionSelected={(option) => option.id == values.experience_level}\r\n                  onChange={(event: any, newValue: any) => {\r\n                    setFieldValue('experience_level', newValue?.id || '');\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  renderInput={(params: any) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label='Experience Level'\r\n                      variant='outlined'\r\n                      error={Boolean(touched.experience_level && errors.experience_level)}\r\n                      helperText={touched.experience_level && errors.experience_level}\r\n                      inputProps={{\r\n                        ...params.inputProps,\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={4}>\r\n                <Autocomplete\r\n                  options={PreferredDrop}\r\n                  value={PreferredDrop.find((data: any) => data.id == values.preferred_workout) || NoOption}\r\n                  getOptionLabel={(option: any) => option.name}\r\n                  getOptionSelected={(option) => option.id == values.preferred_workout}\r\n                  onChange={(event: any, newValue: any) => {\r\n                    setFieldValue('preferred_workout', newValue?.id || '');\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  renderInput={(params: any) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label='Preferred Workout'\r\n                      variant='outlined'\r\n                      error={Boolean(touched.preferred_workout && errors.preferred_workout)}\r\n                      helperText={touched.preferred_workout && errors.preferred_workout}\r\n                      inputProps={{\r\n                        ...params.inputProps,\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={4}>\r\n                <Autocomplete\r\n                  options={InterestsDrop}\r\n                  value={InterestsDrop.find((data: any) => data.id == values.interests) || NoOption}\r\n                  getOptionLabel={(option: any) => option.name}\r\n                  getOptionSelected={(option) => option.id == values.interests}\r\n                  onChange={(event: any, newValue: any) => {\r\n                    setFieldValue('interests', newValue?.id || '');\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  renderInput={(params: any) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label='Interests'\r\n                      variant='outlined'\r\n                      error={Boolean(touched.interests && errors.interests)}\r\n                      helperText={touched.interests && errors.interests}\r\n                      inputProps={{\r\n                        ...params.inputProps,\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid className={classes.actionGrid} item xs={12}>\r\n                <Button onClick={() => onClose()} variant='outlined' color='secondary'>\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  className={clsx(classes.themeButton, classes.marginLeft1)}\r\n                  onClick={() => submitForm()}\r\n                  disabled={isSubmitting}\r\n                  variant='outlined'\r\n                >\r\n                  {isSubmitting ? (\r\n                    <CircularProgress size={24} style={{ color: 'white' }} />\r\n                  ) : 'Update'}\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst ViewCard = (props: any) => {\r\n  const classes = useStyles();\r\n\r\n  const { data } = props;\r\n  const [formData, setFormData] = useState<any>({});\r\n  useEffect(() => {\r\n    setFormData(data)\r\n  }, [props]);\r\n\r\n  return (\r\n    <Card>\r\n      <Table>\r\n        <TableBody>\r\n          <TableRow >\r\n            <TableCell>Experience Level</TableCell>\r\n            <TableCell>{getDropValues(ExperienceDrop, formData?.experience_level)}</TableCell>\r\n          </TableRow>\r\n          <TableRow >\r\n            <TableCell>Preferred Workout</TableCell>\r\n            <TableCell>{getDropValues(PreferredDrop, formData?.preferred_workout)}</TableCell>\r\n          </TableRow>\r\n          <TableRow >\r\n            <TableCell>Interests</TableCell>\r\n            <TableCell>{getDropValues(InterestsDrop, formData?.interests)}</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AppWorkout;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { makeStyles, Avatar, Card, CardActions, CardContent, Dialog, DialogActions, DialogContent, FormControl, FormHelperText, Grid, IconButton, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Tooltip, Typography, TextField, Button, CircularProgress, List, ListItem, ListItemAvatar, ListItemText, Tab, } from '@material-ui/core';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { Autocomplete, Pagination, TabContext, TabList, TabPanel } from '@material-ui/lab';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\r\nimport Page from '../../components/Page/Page';\r\nimport Loader, { TableLoader, TableNoData } from '../../components/Loader/Loader';\r\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\r\nimport useService from '../../hook/useService';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport useConfModel from '../../hook/useConfModel';\r\nimport { uploadNewImage } from '../../utils/CloudinaryUtils';\r\nimport AppUserDetails from './AppUserDetails';\r\nimport AppUserFeedback from './AppUserFeedback';\r\nimport AppUserCCPA from './AppUserCCPA';\r\nimport AppNutrition from './AppNutrition';\r\nimport SnackbarProvider from '../../hook/SnackbarProvider';\r\nimport { FitnessGoalDrop } from '../../utils/PlanDropdowns';\r\nimport AppSkinCare from './AppSkinCare';\r\nimport AppWorkout from './AppWorkout';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  root: {\r\n    width: theme.breakpoints.values.lg,\r\n    maxWidth: '100%',\r\n    margin: '0 auto',\r\n    padding: theme.spacing(3),\r\n  },\r\n  addIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  inner: {\r\n    minWidth: 700,\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(1),\r\n    justifyContent: 'center',\r\n  },\r\n  tabCard: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  sEvenly: {\r\n    display: 'flex',\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  iconPadd: {\r\n    padding: 5,\r\n  },\r\n  jCenter: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  imageView: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  themeButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n  },\r\n  lColor: {\r\n    color: 'white',\r\n  },\r\n  avatarRoot: {\r\n    borderRadius: 10,\r\n    marginRight: 15,\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10),\r\n  },\r\n  textPrimary: {\r\n    fontWeight: 'bold'\r\n  },\r\n  textSecondary: {\r\n    color: '#f0c100'\r\n  },\r\n  tabsRoot: {\r\n    backgroundColor: 'white'\r\n  },\r\n  tabIndicator: {\r\n    backgroundColor: theme.palette.green.main,\r\n  },\r\n  tabPanelRoot: {\r\n    padding: 0,\r\n    // paddingBottom: 0,\r\n    width: '100%'\r\n  },\r\n  tabPanelContent: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  dialogBackground: {\r\n    backgroundColor: '#f4f6f8'\r\n  }\r\n}));\r\n\r\nconst AppUsers = () => {\r\n  const classes = useStyles();\r\n  const { Post } = useService();\r\n  const Snackbar = useSnackbar();\r\n  const ConfModel = useConfModel();\r\n  const [stateData, setStateData] = useState({ page_no: 1, page_limit: 10, name: '' });\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const [dataList, setDataList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [addEditDialog, setAddEditDialog] = useState({\r\n    isOpen: false,\r\n    title: '',\r\n    okBtnText: '',\r\n    isEdit: false,\r\n    data: {},\r\n  });\r\n  const [viewDialog, setViewDialog] = useState({\r\n    isOpen: false,\r\n    title: '',\r\n    data: {},\r\n  });\r\n\r\n  const listAppUsers = async () => {\r\n    setLoading(true);\r\n    Post('app/listAppUser', stateData)\r\n      .then((res: any) => {\r\n        console.log('listAppUser', res);\r\n        setLoading(false);\r\n        if (!res.error) {\r\n          setDataList(res.data);\r\n          setPageCount(res.page_count);\r\n        } else {\r\n          Snackbar.show(res.message, 'error');\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        console.log('err', err);\r\n        setLoading(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const onPageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    setStateData((prevState: any) => ({ ...prevState, page_no: value }));\r\n  };\r\n\r\n  const searchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    event.persist()\r\n    const Name = event.target.name\r\n    const Value = event.target.value\r\n    setStateData((prevState: any) => ({ ...prevState, [Name]: Value }));\r\n  };\r\n\r\n  const setElipsis = (text: any) => {\r\n    return text.length >= 25 ? `${text.substring(0, 40)}...` : text;\r\n  };\r\n\r\n  const openAddDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      isEdit: false,\r\n      title: 'Add App User',\r\n      okBtnText: 'Save',\r\n    }));\r\n  };\r\n\r\n  const openEditDialog = (data: any) => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      isEdit: true,\r\n      data,\r\n      title: 'Edit App User',\r\n      okBtnText: 'Edit',\r\n    }));\r\n  };\r\n\r\n  const openViewDialog = (data: any) => {\r\n    setViewDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      data,\r\n      title: 'View App User',\r\n    }));\r\n  };\r\n\r\n  const onDelete = (data: any) => {\r\n    const { openModel, setLoading, closeModel } = ConfModel;\r\n    const submitFunction = () => {\r\n      setLoading(true);\r\n      Post('app/removeAppUserData', { id: data._id })\r\n        .then(async (res: any) => {\r\n          setLoading(false);\r\n          closeModel();\r\n          onSuccessAction();\r\n          Snackbar.show(res.message, 'success');\r\n        })\r\n        .catch((err: any) => {\r\n          setLoading(false);\r\n          Snackbar.show('Internal Server Error', 'error');\r\n        });\r\n    };\r\n    openModel(submitFunction);\r\n  };\r\n\r\n  const closeAddEditDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const closeViewDialog = () => {\r\n    setViewDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const onSuccessAction = () => {\r\n    listAppUsers();\r\n    closeAddEditDialog();\r\n  };\r\n\r\n  useEffect(() => {\r\n    listAppUsers();\r\n  }, [stateData]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Page title='App Users' />\r\n\r\n      {/* =======Header====== */}\r\n      <Grid alignItems='flex-end' container justify='space-between' spacing={3}>\r\n        <Grid item>\r\n          <Typography component='h1' variant='h3'>\r\n            App Users\r\n          </Typography>\r\n        </Grid>\r\n        {/* <Grid item>\r\n          <Button\r\n            variant='contained'\r\n            onClick={() => openAddDialog()}\r\n            className={classes.themeButton}\r\n            startIcon={<AddIcon />}\r\n          >\r\n            Add\r\n          </Button>\r\n        </Grid> */}\r\n      </Grid>\r\n\r\n      {/* =============Search======== */}\r\n      <Grid container spacing={3}>\r\n        <Grid item>\r\n          <Paper elevation={0}>\r\n            <TextField\r\n              fullWidth\r\n              size='small'\r\n              placeholder='Name'\r\n              variant='outlined'\r\n              name='name'\r\n              value={stateData.name}\r\n              onChange={searchChange}\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* ========Table With Pagination========= */}\r\n      <Card className={classes.tabCard}>\r\n        <CardContent className={classes.content}>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align='center'>#</TableCell>\r\n                  <TableCell align='center'>Name</TableCell>\r\n                  <TableCell align='center'>Country</TableCell>\r\n                  <TableCell align='center'>Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {!loading &&\r\n                  dataList.map((data: any, index: number) => (\r\n                    <TableRow hover key={index}>\r\n                      <TableCell align='center'>\r\n                        {stateData.page_limit * (stateData.page_no - 1) +\r\n                          index +\r\n                          1}\r\n                      </TableCell>\r\n\r\n                      <TableCell align='center'>{data?.firstName + ' ' + data?.lastName}</TableCell>\r\n                      <TableCell align='center'>{data?.country}</TableCell>\r\n\r\n                      <TableCell align='center'>\r\n                        <div className={classes.sEvenly}>\r\n                          <Tooltip title='View' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openViewDialog(data)}\r\n                            >\r\n                              <CenterFocusStrongIcon color='primary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          {/* {data?.is_delete &&\r\n                            <Tooltip title='Delete' arrow>\r\n                              <IconButton\r\n                                className={classes.iconPadd}\r\n                                onClick={() => onDelete(data)}\r\n                              >\r\n                                <DeleteIcon color='secondary' />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                          } */}\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                {loading && <TableLoader />}\r\n                {!loading && dataList.length == 0 && (\r\n                  <TableNoData>No Data Found</TableNoData>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </CardContent>\r\n\r\n        <CardActions className={classes.actions}>\r\n          <Pagination\r\n            count={pageCount}\r\n            page={stateData.page_no}\r\n            onChange={onPageChange}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n\r\n      {/* ============Add Edit Dialog========== */}\r\n      <AddEditDailog\r\n        {...addEditDialog}\r\n        onClose={closeAddEditDialog}\r\n        onSuccess={onSuccessAction}\r\n      />\r\n\r\n      {/* ============View Dialog========== */}\r\n      {viewDialog.isOpen && <ViewDailog {...viewDialog} onClose={closeViewDialog} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AddEditDailog = (props: any) => {\r\n  const {\r\n    isOpen,\r\n    title,\r\n    onClose,\r\n    isEdit,\r\n    data,\r\n    onSuccess,\r\n    okBtnText = 'Ok',\r\n  } = props;\r\n  const initialFormValue = {\r\n    name: '',\r\n    description: '',\r\n    image: { file: null, prevImage: '', isNew: null },\r\n  };\r\n\r\n  const classes = useStyles();\r\n  const formikRef = useRef<any>(null);\r\n  const imageRef = useRef<any>(null);\r\n  const Snackbar = useSnackbar();\r\n  const { Post } = useService();\r\n  const [initialValue, setInitialValue] = useState({ ...initialFormValue });\r\n\r\n  const onImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    e.persist();\r\n    const files = e.target.files;\r\n    if (files && files.length != 0) {\r\n      const reader = new FileReader();\r\n      const file = files[0];\r\n      reader.onloadend = () => {\r\n        formikRef.current.setFieldValue('image', {\r\n          file,\r\n          prevImage: reader.result,\r\n          isNew: true,\r\n        });\r\n      };\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      formikRef.current.setFieldValue('image', {\r\n        file: null,\r\n        prevImage: '',\r\n        isNew: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onSubmit = (value: any, helper: any) => {\r\n    try {\r\n      helper.setSubmitting(true);\r\n      const render = async () => {\r\n        const { image, ...rest } = value;\r\n        const PostData = rest;\r\n\r\n        PostData.image = await uploadNewImage(image);\r\n\r\n        !isEdit && addData(PostData, helper);\r\n        isEdit && editData(PostData, helper);\r\n      };\r\n      render();\r\n    } catch (err) {\r\n      Snackbar.show('Image Upload Failed', 'error');\r\n    }\r\n  };\r\n\r\n  const addData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n    Post('app/addSkinCareApp User', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const editData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n    Post('app/editSkinCareApp User', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isEdit) {\r\n      const { image, _id, ...rest } = data;\r\n      const EditData = { ...rest, id: _id };\r\n      EditData.image = { file: image, prevImage: image?.url, isNew: false };\r\n      setInitialValue(EditData);\r\n    } else {\r\n      setInitialValue(initialFormValue);\r\n    }\r\n  }, [props]);\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      fullWidth\r\n      maxWidth='md'\r\n      aria-labelledby='dialog-title'\r\n      open={isOpen}\r\n    >\r\n      <DialogTitle id='dialog-title' onClose={onClose}>\r\n        {title}\r\n      </DialogTitle>\r\n\r\n      <Formik\r\n        innerRef={formikRef}\r\n        enableReinitialize\r\n        initialValues={initialValue}\r\n        onSubmit={onSubmit}\r\n        validationSchema={Yup.object().shape({\r\n          name: Yup.string().trim().required('Name is required'),\r\n          description: Yup.string().trim().max(250, 'Must be 250 characters or less').notRequired(),\r\n          image: Yup.object({\r\n            file: Yup.mixed().required('A file is required'),\r\n          }),\r\n        })}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          submitForm,\r\n          isSubmitting,\r\n        }) => (\r\n          <>\r\n            <DialogContent dividers>\r\n              <Grid container spacing={3}>\r\n                <Grid item md={12} xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label='Name'\r\n                    name='name'\r\n                    variant='outlined'\r\n                    error={Boolean(touched.name && errors.name)}\r\n                    helperText={touched.name && errors.name}\r\n                    value={values.name}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item md={12} xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    multiline\r\n                    label='Description'\r\n                    name='description'\r\n                    variant='outlined'\r\n                    error={Boolean(touched.description && errors.description)}\r\n                    helperText={touched.description && errors.description}\r\n                    value={values.description}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item md={12} xs={12}>\r\n                  <input\r\n                    name='image'\r\n                    ref={imageRef}\r\n                    type='file'\r\n                    accept='.jpg,.png,jpeg'\r\n                    onChange={onImageChange}\r\n                    onBlur={handleBlur}\r\n                    hidden\r\n                  />\r\n                  <Button\r\n                    fullWidth\r\n                    className={classes.themeButton}\r\n                    variant='contained'\r\n                    color='default'\r\n                    onClick={() => imageRef.current.click()}\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Upload\r\n                  </Button>\r\n                  <FormControl\r\n                    error={Boolean(touched?.image?.file && errors?.image?.file)}\r\n                  >\r\n                    <FormHelperText>\r\n                      {touched?.image?.file && errors?.image?.file}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item md={12} xs={12}>\r\n                  {values.image?.prevImage && (\r\n                    <img\r\n                      className={classes.imageView}\r\n                      src={values.image?.prevImage}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n              <Button onClick={onClose} variant='outlined' color='secondary'>\r\n                Cancel\r\n              </Button>\r\n\r\n              <Button\r\n                className={classes.themeButton}\r\n                onClick={() => submitForm()}\r\n                disabled={isSubmitting}\r\n                variant='outlined'\r\n              >\r\n                {isSubmitting ? (\r\n                  <CircularProgress size={24} className={classes.lColor} />\r\n                ) : (\r\n                  okBtnText\r\n                )}\r\n              </Button>\r\n            </DialogActions>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst ViewDailog = (props: any) => {\r\n  const { isOpen, title, onClose, data } = props;\r\n  const classes = useStyles();\r\n  const [tabValue, setTabValue] = useState('details');\r\n  const [loading, setLoading] = useState(true);\r\n  const [formData, setFormData] = useState<any>(data);\r\n  const Snackbar = useSnackbar();\r\n  const { Post } = useService();\r\n\r\n  const getAppUserById = async (userData: any = formData) => {\r\n    setLoading(true);\r\n    Post('app/getAppUserById', { id: userData._id })\r\n      .then((res: any) => {\r\n        console.log('getAppUserById', res);\r\n        setLoading(false);\r\n        if (!res.error) {\r\n          setFormData(res.data);\r\n        } else {\r\n          Snackbar.show(res.message, 'error');\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        console.log('err', err);\r\n        setLoading(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const handleTabChange = (event: React.ChangeEvent<{}>, newValue: string) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  const tabs = [\r\n    { value: 'details', label: 'Details', component: <AppUserDetails data={formData} /> },\r\n    { value: 'feedback', label: 'Feedback', component: <AppUserFeedback data={formData} /> },\r\n    { value: 'ccpa', label: 'CCPA & GDPR', component: <AppUserCCPA data={formData} onRefresh={() => getAppUserById()}/> },\r\n    { value: 'nutrition', label: 'Nutrition', component: <AppNutrition data={formData} onRefresh={() => getAppUserById()} /> },\r\n    { value: 'skincare', label: 'Skincare', component: <AppSkinCare data={formData} onRefresh={() => getAppUserById()} /> },\r\n    { value: 'workout', label: 'Workout', component: <AppWorkout data={formData} onRefresh={() => getAppUserById()} /> },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    getAppUserById(props.data)\r\n  }, [props.data]);\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      fullScreen\r\n      fullWidth\r\n      maxWidth='md'\r\n      aria-labelledby='dialog-view-title'\r\n      open={isOpen}\r\n    >\r\n      <DialogTitle id='dialog-view-title' onClose={onClose}>\r\n        {title}\r\n      </DialogTitle>\r\n\r\n\r\n\r\n      {loading && <DialogContent dividers><Loader /></DialogContent>}\r\n\r\n      {!loading && <DialogContent dividers className={classes.dialogBackground}>\r\n        <List>\r\n          <ListItem disableGutters>\r\n            <ListItemAvatar>\r\n              <Avatar className={classes.avatarRoot} src={formData?.profilePic} />\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              classes={{\r\n                primary: classes.textPrimary,\r\n                secondary: classes.textSecondary\r\n              }}\r\n              primary={formData?.firstName + ' ' + formData?.lastName}\r\n            />\r\n          </ListItem>\r\n        </List>\r\n\r\n        <TabContext value={tabValue || ''}>\r\n          <TabList\r\n            className={classes.tabsRoot}\r\n            onChange={handleTabChange}\r\n            scrollButtons=\"auto\"\r\n            value={tabValue}\r\n            variant=\"scrollable\"\r\n            classes={{\r\n              indicator: classes.tabIndicator\r\n            }}\r\n          >\r\n            {tabs.map((tab: any) => (\r\n              <Tab\r\n                key={tab.value}\r\n                label={tab.label}\r\n                value={tab.value}\r\n              />\r\n            ))}\r\n          </TabList>\r\n\r\n          <SnackbarProvider>\r\n            {tabs.map((tab: any) => (\r\n              <TabPanel className={classes.tabPanelRoot} value={tab.value}>\r\n                <div className={classes.tabPanelContent}>\r\n                  {tab.component}\r\n                </div>\r\n              </TabPanel>\r\n            ))}\r\n          </SnackbarProvider>\r\n\r\n        </TabContext>\r\n      </DialogContent>\r\n      }\r\n\r\n      <DialogActions>\r\n        <Button onClick={onClose} variant='outlined' color='secondary'>\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog >\r\n  );\r\n};\r\n\r\nexport default AppUsers;\r\n"],"sourceRoot":""}