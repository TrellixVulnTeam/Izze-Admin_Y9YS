{"version":3,"sources":["utils/PlanDropdowns.tsx","../node_modules/@material-ui/icons/Check.js","hook/useCalories.tsx","../node_modules/@material-ui/icons/ChevronRight.js","../node_modules/@material-ui/icons/KeyboardArrowUp.js","../node_modules/@material-ui/core/esm/CardMedia/CardMedia.js","pages/MealPlan/FormikValues.tsx","pages/MealPlan/MealPlan.tsx"],"names":["DietTypeDrop","id","name","FitnessGoalDrop","FitnessGoalWomenDrop","LifeStyleDrop","ExperienceDrop","PreferredDrop","InterestsDrop","SkinTypeDrop","CurrentClimateDrop","SkinIrregularDrop","SubDrop","SkinTextureDrop","CcpaStatus","NoOption","getSubSkinIrregular","SkinIrregularValue","find","getDropValues","dropValues","value","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","React","_default","createElement","d","useCalories","caloriesData","i","sampleObject","toString","push","MEDIA_COMPONENTS","CardMedia","props","ref","children","classes","className","_props$component","component","Component","image","src","style","other","_objectWithoutProperties","isMediaComponent","indexOf","composedStyle","_extends","backgroundImage","concat","clsx","root","media","img","undefined","withStyles","display","backgroundSize","backgroundRepeat","backgroundPosition","width","objectFit","MealTime","isEdit","meal_time","order","recipe","initialFormValues","diet_type","calories","meal_days","Array","fill","map","day","meals","validation","Yup","shape","trim","required","of","min","useStyles","makeStyles","theme","breakpoints","values","lg","maxWidth","margin","padding","spacing","content","tabCard","marginTop","themeButton","color","palette","white","backgroundColor","green","main","dark","sEvenly","justifyContent","sBetween","iconPadd","jCenter","actions","tabRoot","minWidth","textTransform","tabIndicator","tabTextColorInherit","border","tabPanelRoot","listItemRoot","flexDisplay","paperRoot","paperRoot1","tablePanelRoot","largeAvatar","height","justPadding","borderRadius","tabBtnIcon","divTab","flexDirection","cardRoot","position","cardMediaRoot","cardContentRoot","paddingBottom","cardActionsRoot","paddingTop","ulRoot","listStyle","liRoot","paddingLeft","textIndent","colorProtein","colorFat","colorCarbs","dividerRoot","background","opacity","mealTimeText","nutritionTextDiv","top","left","nutritionText","fontSize","AddEditModel","isOpen","okBtnText","onClose","data","title","onSuccess","formikRef","useRef","getCaloriesData","Snackbar","useSnackbar","Post","useService","useState","tabValue","setTabValue","recipeList","setRecipeList","initialValue","setInitialValue","addData","setSubmitting","resetForm","then","res","show","message","catch","err","editData","useEffect","_id","rest","mealDays","MealDays","NewMeals","MealData","RecipeIds","NewRecipe","filter","includes","console","log","response","error","Dialog","open","disableBackdropClick","disableEscapeKeyDown","fullWidth","fullScreen","aria-labelledby","DialogTitle","innerRef","enableReinitialize","initialValues","validationSchema","onSubmit","helper","postData","errors","touched","handleBlur","handleChange","setFieldValue","submitForm","isSubmitting","DialogContent","dividers","Grid","container","item","xs","Autocomplete","options","getOptionLabel","option","getOptionSelected","onChange","event","newValue","onBlur","renderInput","params","TextField","label","variant","Boolean","helperText","inputProps","Typography","align","TabContext","TabList","indicator","e","orientation","mealDay","Tab","textColorInherit","TabPanel","index","DialogActions","Button","onClick","disabled","CircularProgress","size","ViewModel","formValue","setFormValue","Paper","Table","TableBody","TableRow","TableCell","mealData","recData","sm","md","Card","elevation","url","nutrition","CardContent","gutterBottom","CardActions","disableSpacing","protein","Divider","fat","carbs","MealTab","useFormikContext","FieldName","getArrayError","handleChangeTab","validateOnChange","remove","FieldNameSub","FieldTouched","getIn","FieldErrors","SelectedStyle","Number","borderRight","submitMealTime","editMealTime","FormHelperText","FormControl","addNewTab","endIcon","multiple","RecIds","MealPlan","ConfModel","useConfModel","loading","setLoading","page_no","page_limit","stateData","setStateData","pageCount","setPageCount","mealPlanList","setMealPlanList","addEditDialog","setAddEditDialog","viewDialog","setViewDialog","listMealPlan","a","page_count","closeAddEditDialog","prevState","onSuccessAction","Page","alignItems","justify","startIcon","TableContainer","TableHead","hover","Tooltip","arrow","IconButton","openViewDialog","openEditDialog","openModel","closeModel","onDelete","length","Pagination","count","page"],"mappings":"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","file":"static/js/11.40fc467c.chunk.js","sourcesContent":["//=====Meal Plan\r\nexport const DietTypeDrop = [\r\n  { id: 'VEG', name: 'Vegetarian' },\r\n  { id: 'NONVEG', name: 'Non-Vegetarian' },\r\n  { id: 'EGG', name: 'Eggetarian' },\r\n];\r\n\r\nexport const FitnessGoalDrop = [\r\n  { id: 'WEIGHTGAIN', name: 'Weight Gain' },\r\n  { id: 'WEIGHTLOSS', name: 'Weight Loss' },\r\n  { id: 'MAINTAINWEIGHT', name: 'Maintain Weight' },\r\n];\r\nexport const FitnessGoalWomenDrop = [\r\n  { id: 'WEIGHTGAIN', name: 'Weight Gain' },\r\n  { id: 'WEIGHTLOSS', name: 'Weight Loss' },\r\n  { id: 'MAINTAINWEIGHT', name: 'Maintain Weight' },\r\n  { id: 'WEIGHTGAINPOSTPARTUM', name: 'Weight Gain (Post-Partum)' },\r\n  { id: 'WEIGHTLOSSPOSTPARTUM', name: 'Weight Loss (Post-Partum)' },\r\n  { id: 'MAINTAINWEIGHTPOSTPARTUM', name: 'Maintain Weight (Post-Partum)' },\r\n];\r\nexport const LifeStyleDrop = [\r\n  { id: 'SEDENTARY', name: 'Sedentary' },\r\n  { id: 'LIGHTLYACTIVE', name: 'Lightly Active' },\r\n  { id: 'MODERATEACTIVE', name: 'Moderately Active' },\r\n  { id: 'VERYACTIVE', name: 'Very Active' },\r\n];\r\n\r\n//==========Workout Plan===========\r\nexport const ExperienceDrop = [\r\n  { id: 'BEGINNER', name: 'Beginner' },\r\n  { id: 'INTERMEDIATE', name: 'Intermediate' },\r\n  { id: 'PROFESSIONAL', name: 'Professional' },\r\n];\r\n\r\nexport const PreferredDrop = [\r\n  { id: 'STRENGTH', name: 'Strength Training' },\r\n  { id: 'HIIT', name: 'HIIT' },\r\n];\r\n\r\nexport const InterestsDrop = [\r\n  { id: 'HOME', name: 'Home Workout' },\r\n  { id: 'GYM', name: 'Gym Workout' },\r\n];\r\n\r\n//=========Skincare Plan============\r\nexport const SkinTypeDrop = [\r\n  { id: 'DRY', name: 'Dry' },\r\n  { id: 'OILY', name: 'Oily' },\r\n  { id: 'COMBINATION', name: 'Combination' },\r\n  { id: 'NORMAL', name: 'Normal' },\r\n];\r\n\r\nexport const CurrentClimateDrop = [\r\n  { id: 'HOT', name: 'Hot' },\r\n  { id: 'COLD', name: 'Cold' },\r\n  { id: 'HUMID', name: 'Humid' },\r\n  { id: 'DRY', name: 'Dry' },\r\n];\r\n\r\nexport const SkinIrregularDrop = [\r\n  {\r\n    id: 'ACNE', name: 'Acne', SubDrop: [\r\n      { id: 'PIMPLES', name: 'Pimples' },\r\n      { id: 'BLACKHEADS', name: 'Black Heads' },\r\n      { id: 'WHITEHEADS', name: 'White Heads' },\r\n    ]\r\n  },\r\n  {\r\n    id: 'RASHES', name: 'Rashes', SubDrop: [\r\n      { id: 'SCALY', name: 'Scaly' },\r\n      { id: 'ITCHY', name: 'Itchy' },\r\n      { id: 'BUMPY', name: 'Bumpy' },\r\n      { id: 'BOILS', name: 'Boils' },\r\n      { id: 'BLISTERS', name: 'Blisters' },\r\n    ]\r\n  },\r\n  {\r\n    id: 'DISCOLORATION', name: 'Discoloration', SubDrop: [\r\n      { id: 'BLACKISH', name: 'Blackish' },\r\n      { id: 'WHITISH', name: 'Whitish' },\r\n      { id: 'PINKISH', name: 'Pinkish' },\r\n      { id: 'REDDISH', name: 'Reddish' },\r\n      { id: 'SUNSPOTS', name: 'Sun Spots' },\r\n    ]\r\n  },\r\n];\r\n\r\nexport const SkinTextureDrop = [\r\n  { id: 'SAGGY', name: 'Saggy', },\r\n  { id: 'FINELINES', name: ' Fine Lines' },\r\n  { id: 'WRINKLES', name: 'Wrinkles' },\r\n  { id: 'NONE', name: 'None' },\r\n];\r\n\r\nexport const CcpaStatus = [\r\n  { id: '0', name: 'Pending', },\r\n  { id: '1', name: 'Success' },\r\n  { id: '2', name: 'Closed' },\r\n];\r\n\r\nexport const NoOption = { id: '', name: '' }\r\n\r\nexport const getSubSkinIrregular = (SkinIrregularValue: any) => {\r\n  return SkinIrregularDrop?.find(({ id }: any) => id == SkinIrregularValue)?.SubDrop || []\r\n}\r\n\r\nconst getDropValues = (dropValues: any, value: string) => {\r\n  return dropValues.find(({ id }: any) => id == value)?.name || ''\r\n};\r\n\r\nexport default getDropValues\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\n\nexports.default = _default;","function useCalories() {\r\n    let caloriesData = [];\r\n    for (let i = 900; i <= 3000; i += 100) {\r\n        let sampleObject: any = {};\r\n        sampleObject.id = i;\r\n        sampleObject.name = i.toString();\r\n        caloriesData.push(sampleObject)\r\n    }\r\n    return caloriesData;\r\n}\r\n\r\nexport default useCalories;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'ChevronRight');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z\"\n}), 'KeyboardArrowUp');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('Material-UI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);","import * as Yup from 'yup';\r\n\r\ninterface IntRecipe {\r\n  id: string\r\n}\r\n\r\ninterface IntMealTime {\r\n  isEdit: Boolean,\r\n  meal_time: string,\r\n  order: number,\r\n  recipe: IntRecipe[],\r\n}\r\n\r\ninterface IntMealDays {\r\n  day: number,\r\n  meals: any\r\n}\r\n\r\ninterface MealPlan {\r\n  diet_type: string,\r\n  calories: string,\r\n  meal_days: IntMealDays[]\r\n}\r\n\r\n\r\n\r\nexport const MealTime: IntMealTime = {\r\n  isEdit: true,\r\n  meal_time: '',\r\n  order: 0,\r\n  recipe: []\r\n}\r\n\r\nexport const initialFormValues: MealPlan = {\r\n  diet_type: '',\r\n  calories: '',\r\n  meal_days: Array(14).fill(null).map((d, i) => ({ day: i + 1, meals: [] }))\r\n};\r\n\r\nexport const validation = Yup.object().shape({\r\n  diet_type: Yup.string().trim().required('Diet type is required'),\r\n  calories: Yup.number().required('Calories is required'),\r\n  meal_days: Yup.array().of(\r\n    Yup.object().shape({\r\n      day: Yup.number().required('Day is required'),\r\n      meals: Yup.array().of(\r\n        Yup.object().shape({\r\n          recipe: Yup.array().of(\r\n            Yup.object().shape({\r\n              id: Yup.string().trim().required('Recipe is Required'),\r\n            })).min(1, 'Recipe is Required'),\r\n          meal_time: Yup.string().required('Name is required'),\r\n        })\r\n      )\r\n    })).min(10, 'Field is Required')\r\n})\r\n","import { Button, Card, CardActionArea, CardActions, CardContent, CardMedia, CircularProgress, Dialog, DialogActions, DialogContent, Divider, FormControl, FormHelperText, Grid, IconButton, makeStyles, Paper, Tab, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, Tooltip, Typography } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Pagination, TabContext, TabList, TabPanel } from '@material-ui/lab';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Formik, getIn, useFormikContext, FieldArray } from 'formik';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\r\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\r\nimport Page from '../../components/Page/Page';\r\nimport useConfModel from '../../hook/useConfModel';\r\nimport useService from '../../hook/useService';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport { initialFormValues, MealTime, validation } from './FormikValues';\r\nimport clsx from 'clsx';\r\nimport useCalories from '../../hook/useCalories';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport getDropValues, { DietTypeDrop } from '../../utils/PlanDropdowns';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  root: {\r\n    width: theme.breakpoints.values.lg,\r\n    maxWidth: '100%',\r\n    margin: '0 auto',\r\n    padding: theme.spacing(3),\r\n  },\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  tabCard: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  themeButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n  },\r\n  sEvenly: {\r\n    display: 'flex',\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  sBetween: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  iconPadd: {\r\n    padding: 5,\r\n  },\r\n  jCenter: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(1),\r\n    justifyContent: 'center',\r\n  },\r\n  tabRoot: {\r\n    minWidth: 0,\r\n    textTransform: 'none'\r\n    // margin: '10px 0px',\r\n  },\r\n  tabIndicator: {\r\n    backgroundColor: theme.palette.green.main,\r\n  },\r\n  tabTextColorInherit: {\r\n    backgroundColor: theme.palette.green.main,\r\n    color: 'white',\r\n    border: '1px solid white',\r\n  },\r\n  tabPanelRoot: {\r\n    padding: 0,\r\n    // paddingBottom: 0,\r\n    width: '100%',\r\n  },\r\n  listItemRoot: {\r\n    backgroundColor: '#7ac0af2b',\r\n    margin: '10px 0px',\r\n  },\r\n  flexDisplay: {\r\n    display: 'flex',\r\n  },\r\n  paperRoot: {\r\n    display: 'flex',\r\n    marginTop: '20px',\r\n  },\r\n  paperRoot1: {\r\n    display: 'flex',\r\n    marginTop: '20px',\r\n  },\r\n  tablePanelRoot: {\r\n    padding: '0px',\r\n  },\r\n  largeAvatar: {\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10)\r\n  },\r\n  justPadding: {\r\n    padding: 10,\r\n    borderRadius: 10\r\n  },\r\n  tabBtnIcon: {\r\n    height: '100%',\r\n    minWidth: 0,\r\n    textTransform: 'none'\r\n  },\r\n  divTab: {\r\n    flexDirection: 'column',\r\n    display: 'flex'\r\n  },\r\n  cardRoot: {\r\n    borderRadius: theme.spacing(3),\r\n    position: 'relative'\r\n  },\r\n  cardMediaRoot: {\r\n    height: theme.spacing(25)\r\n  },\r\n  cardContentRoot: {\r\n    backgroundColor: '#EFF1F3',\r\n    padding: theme.spacing(2),\r\n    paddingBottom: `${theme.spacing(2)}px !important`\r\n  },\r\n  cardActionsRoot: {\r\n    padding: 0,\r\n    paddingTop: theme.spacing(1)\r\n  },\r\n  ulRoot: {\r\n    listStyle: 'none',\r\n    padding: 0,\r\n    margin: 0,\r\n  },\r\n  liRoot: {\r\n    paddingLeft: '1em',\r\n    textIndent: '-.7em',\r\n  },\r\n  colorProtein: {\r\n    '&::before': {\r\n      content: \"'•  '\",\r\n      color: '#9A88FF',\r\n    }\r\n  },\r\n  colorFat: {\r\n    '&::before': {\r\n      content: \"'•  '\",\r\n      color: '#E57B91',\r\n    }\r\n  },\r\n  colorCarbs: {\r\n    '&::before': {\r\n      content: \"'•  '\",\r\n      color: '',\r\n    }\r\n  },\r\n  dividerRoot: {\r\n    background: ' #474749 0% 0% no-repeat padding-box',\r\n    opacity: '0.25',\r\n    height: theme.spacing(3)\r\n  },\r\n  mealTimeText: {\r\n    margin: theme.spacing(2, 0)\r\n  },\r\n  nutritionTextDiv: {\r\n    border: '1px solid #EFF1F3',\r\n    color: '#EFF1F3',\r\n    borderRadius: 20,\r\n    padding: theme.spacing(0.5, 1),\r\n    width: 'fit-content',\r\n    position: 'absolute',\r\n    top: theme.spacing(2),\r\n    left: theme.spacing(2),\r\n  },\r\n  nutritionText: {\r\n    fontSize: '0.5rem',\r\n  }\r\n}));\r\n\r\nconst MealPlan = () => {\r\n  const classes = useStyles();\r\n  const Snackbar = useSnackbar();\r\n  const { Post } = useService();\r\n  const ConfModel = useConfModel();\r\n  const [loading, setLoading] = useState(true);\r\n  const [stateData, setStateData] = useState({ page_no: 1, page_limit: 10 });\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const [mealPlanList, setMealPlanList] = useState([]);\r\n  const [addEditDialog, setAddEditDialog] = useState({\r\n    isOpen: false,\r\n    title: '',\r\n    okBtnText: '',\r\n    isEdit: false,\r\n    data: {},\r\n  });\r\n\r\n  const [viewDialog, setViewDialog] = useState({\r\n    isOpen: false,\r\n    title: '',\r\n    data: {},\r\n  });\r\n\r\n  const openAddDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      title: 'Add Meal Plan',\r\n      isEdit: false,\r\n      okBtnText: 'Save',\r\n    }));\r\n  };\r\n\r\n  const openEditDialog = (data: any) => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      isEdit: true,\r\n      data,\r\n      title: 'Edit Meal Plan',\r\n      okBtnText: 'Edit',\r\n    }));\r\n  };\r\n\r\n  const onDelete = (data: any) => {\r\n    const { openModel, setLoading, closeModel } = ConfModel;\r\n    const submitFunction = () => {\r\n      setLoading(true);\r\n      Post('app/deleteMealPlan', { id: data._id })\r\n        .then(async (res: any) => {\r\n          setLoading(false);\r\n          closeModel();\r\n          onSuccessAction();\r\n          Snackbar.show(res.message, 'success');\r\n        })\r\n        .catch((err: any) => {\r\n          setLoading(false);\r\n          Snackbar.show('Internal Server Error', 'error');\r\n        });\r\n    };\r\n    openModel(submitFunction);\r\n  };\r\n\r\n  const openViewDialog = (data: any) => {\r\n    setViewDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      data,\r\n      title: 'View Meal Plan',\r\n    }));\r\n  };\r\n\r\n  const listMealPlan = async () => {\r\n    setLoading(true);\r\n    Post('app/listMealPlan', stateData)\r\n      .then((res: any) => {\r\n        setLoading(false);\r\n        if (!res.error) {\r\n          setMealPlanList(res.data);\r\n          setPageCount(res.page_count);\r\n        } else {\r\n          Snackbar.show(res.message, 'error');\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        console.log('err', err);\r\n        setLoading(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const onPageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    setStateData((prevState: any) => ({ ...prevState, page_no: value }));\r\n  };\r\n\r\n  const closeAddEditDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const closeViewDialog = () => {\r\n    setViewDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const onSuccessAction = () => {\r\n    listMealPlan();\r\n    closeAddEditDialog();\r\n  };\r\n\r\n  useEffect(() => {\r\n    listMealPlan();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Page title='Meal Plan' />\r\n\r\n      <Grid alignItems='flex-end' container justify='space-between' spacing={3}>\r\n        <Grid item>\r\n          <Typography component='h1' variant='h3'>\r\n            Meal Plan\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant='contained'\r\n            onClick={() => openAddDialog()}\r\n            className={classes.themeButton}\r\n            startIcon={<AddIcon />}\r\n          >\r\n            Add\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* =============Search======== */}\r\n      {/* <Grid container spacing={3}>\r\n        <Grid item>\r\n          <Paper elevation={0}>\r\n            <TextField\r\n              fullWidth\r\n              size='small'\r\n              placeholder='Name'\r\n              variant='outlined'\r\n              name='state'\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid> */}\r\n\r\n      <Card className={classes.tabCard}>\r\n        <CardContent className={classes.content}>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align='center'>#</TableCell>\r\n                  <TableCell align='center'>Diet Type</TableCell>\r\n                  <TableCell align='center'>Calories</TableCell>\r\n                  <TableCell align='center'>Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {!loading &&\r\n                  mealPlanList.map((data: any, index: number) => (\r\n                    <TableRow hover key={index}>\r\n                      <TableCell align='center'>\r\n                        {stateData.page_limit * (stateData.page_no - 1) +\r\n                          index +\r\n                          1}\r\n                      </TableCell>\r\n                      <TableCell align='center'>{getDropValues(DietTypeDrop, data?.diet_type)}</TableCell>\r\n                      <TableCell align='center'>{data?.calories}</TableCell>\r\n                      <TableCell align='center'>\r\n                        <div className={classes.sEvenly}>\r\n                          <Tooltip title='View' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openViewDialog(data)}\r\n                            >\r\n                              <CenterFocusStrongIcon color='primary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Edit' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openEditDialog(data)}\r\n                            >\r\n                              <EditIcon color='action' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Delete' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => onDelete(data)}\r\n                            >\r\n                              <DeleteIcon color='secondary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                {loading && <TableLoader />}\r\n                {!loading && mealPlanList.length == 0 && (\r\n                  <TableNoData>No Data Found</TableNoData>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </CardContent>\r\n\r\n        <CardActions className={classes.actions}>\r\n          <Pagination\r\n            count={pageCount}\r\n            page={stateData.page_no}\r\n            onChange={onPageChange}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n\r\n      {addEditDialog.isOpen && <AddEditModel {...addEditDialog} onClose={closeAddEditDialog} onSuccess={onSuccessAction} />}\r\n      {viewDialog.isOpen && <ViewModel {...viewDialog} onClose={closeViewDialog} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const AddEditModel = (props: any) => {\r\n  const {\r\n    isEdit,\r\n    isOpen,\r\n    okBtnText = 'OK',\r\n    onClose,\r\n    data,\r\n    title,\r\n    onSuccess,\r\n  } = props;\r\n  const formikRef = useRef<any>(null);\r\n  const getCaloriesData = useCalories()\r\n  const classes = useStyles();\r\n  const Snackbar = useSnackbar();\r\n  const { Post } = useService();\r\n  const [tabValue, setTabValue] = useState('0');\r\n  const [recipeList, setRecipeList] = useState([])\r\n\r\n\r\n  const [initialValue, setInitialValue] = useState({\r\n    ...initialFormValues,\r\n  });\r\n\r\n  const onSubmit = (value: any, helper: any) => {\r\n    helper.setSubmitting(true);\r\n    const postData = { ...value };\r\n    !isEdit && addData(postData, helper);\r\n    isEdit && editData(postData, helper);\r\n  };\r\n\r\n  const addData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n    Post('app/addMealPlan', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const editData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n    Post('app/editMealPlan', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const handleChangeTab = (newValue: string) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  const listAllMealRecipe = () => {\r\n    Post('app/listAllMealRecipe', {})\r\n      .then((response: any) => {\r\n        if (!response.error) {\r\n          setRecipeList(response.data);\r\n        } else {\r\n          Snackbar.show(response.message, 'error');\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        Snackbar.show(error.message, 'error');\r\n      });\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (isEdit) {\r\n      const { _id, ...rest } = data;\r\n      const editData = { ...rest, id: _id };\r\n\r\n      let mealDays = editData.meal_days.map((MealDays: any) => {\r\n        const { meals, ...rest } = MealDays\r\n        let NewMeals = meals.map((MealData: any) => {\r\n          const { recipe, ...rest } = MealData\r\n          const RecipeIds = recipeList.map(({ _id }: any) => _id)\r\n          const NewRecipe = recipe.filter(({ _id }: any) => RecipeIds.includes(_id)).map(({ _id }: any) => ({ id: _id }));\r\n          return { ...rest, isEdit: false, recipe: NewRecipe }\r\n        })\r\n        return { ...rest, meals: NewMeals }\r\n      })\r\n      editData.meal_days = mealDays\r\n      console.log('editData', editData)\r\n      setInitialValue(editData);\r\n    } else {\r\n      setInitialValue(initialFormValues);\r\n    }\r\n  }, [props, recipeList]);\r\n\r\n  useEffect(() => {\r\n    listAllMealRecipe();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={isOpen}\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        fullWidth\r\n        fullScreen\r\n        maxWidth='lg'\r\n        aria-labelledby='dialog-title'\r\n      >\r\n        <DialogTitle id='dialog-title' onClose={onClose}>\r\n          {title}\r\n        </DialogTitle>\r\n        <Formik\r\n          innerRef={formikRef}\r\n          enableReinitialize\r\n          initialValues={initialValue}\r\n          validationSchema={validation}\r\n          onSubmit={onSubmit}\r\n        >\r\n          {({ values, errors, touched, handleChange, handleBlur, setFieldValue, submitForm, isSubmitting }) => (\r\n            <>\r\n              <DialogContent dividers>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <Autocomplete\r\n                      options={DietTypeDrop}\r\n                      value={DietTypeDrop.find((data: any) => data.id == values.diet_type)}\r\n                      getOptionLabel={(option: any) => option.name}\r\n                      getOptionSelected={(option) => option.id == values.diet_type}\r\n                      onChange={(event: any, newValue: any) => {\r\n                        setFieldValue('diet_type', newValue?.id || '');\r\n                      }}\r\n                      onBlur={handleBlur}\r\n                      renderInput={(params: any) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label='Diet Types'\r\n                          variant='outlined'\r\n                          error={Boolean(touched.diet_type && errors.diet_type)}\r\n                          helperText={touched.diet_type && errors.diet_type}\r\n                          inputProps={{\r\n                            ...params.inputProps,\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Autocomplete\r\n                      options={getCaloriesData}\r\n                      value={getCaloriesData.find((data: any) => data.id == values.calories)}\r\n                      getOptionLabel={(option: any) => option.name}\r\n                      getOptionSelected={(option) => option.id == values.calories}\r\n                      onChange={(event: any, newValue: any) => {\r\n                        setFieldValue('calories', newValue?.id || '');\r\n                      }}\r\n                      onBlur={handleBlur}\r\n                      renderInput={(params: any) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label='Calories'\r\n                          variant='outlined'\r\n                          error={Boolean(touched.calories && errors.calories)}\r\n                          helperText={touched.calories && errors.calories}\r\n                          inputProps={{\r\n                            ...params.inputProps,\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Typography variant='h4' align='center'><strong>Add Meal Plan</strong></Typography>\r\n                  </Grid>\r\n\r\n                  {/* <Paper className={classes.paperRoot}> */}\r\n\r\n                  <TabContext value={tabValue || ''}>\r\n                    <Grid item xs={2}>\r\n                      <TabList\r\n                        classes={{\r\n                          indicator: classes.tabIndicator\r\n                        }}\r\n                        onChange={(e, value) => handleChangeTab(value)}\r\n                        orientation=\"vertical\"\r\n                        variant=\"standard\"\r\n                      >\r\n                        {values?.meal_days.map((mealDay: any, i: number) => {\r\n                          const { day } = mealDay\r\n                          return (\r\n                            <Tab\r\n                              classes={{ root: classes.tabRoot, textColorInherit: classes.tabTextColorInherit }}\r\n                              label={`Day - ${day}`}\r\n                              value={day.toString()} />\r\n                          )\r\n                        }\r\n                        )}\r\n\r\n                      </TabList>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={10}>\r\n                      {values?.meal_days.map((mealDay: any, i: number) => {\r\n                        const { day, meals } = mealDay\r\n                        return (\r\n                          <TabPanel key={i} className={classes.tabPanelRoot} value={day.toString()}>\r\n                            <MealTab key={i} index={i} meals={meals} recipeList={recipeList} />\r\n                          </TabPanel>\r\n                        )\r\n                      })}\r\n                    </Grid>\r\n\r\n                  </TabContext>\r\n                  {/* </Paper> */}\r\n\r\n                </Grid>\r\n              </DialogContent>\r\n\r\n              <DialogActions>\r\n                <Button onClick={onClose} variant='outlined' color='secondary'>\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  className={classes.themeButton}\r\n                  onClick={() => submitForm()}\r\n                  disabled={isSubmitting}\r\n                  variant='outlined'\r\n                >\r\n                  {isSubmitting ? (\r\n                    <CircularProgress size={24} style={{ color: 'white' }} />\r\n                  ) : (\r\n                    okBtnText\r\n                  )}\r\n                </Button>\r\n              </DialogActions>\r\n            </>\r\n          )}\r\n        </Formik>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ViewModel = (props: any) => {\r\n  const { isOpen, title, onClose, data } = props;\r\n  const classes = useStyles();\r\n  const [formValue, setFormValue] = useState(data);\r\n  const [tabValue, setTabValue] = useState<any>('1');\r\n\r\n  const handleTabChange = (event: React.ChangeEvent<{}>, newValue: string) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFormValue(data);\r\n  }, [props]);\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      fullWidth\r\n      maxWidth='md'\r\n      aria-labelledby='dialog-view-title'\r\n      open={isOpen}\r\n    >\r\n      <DialogTitle id='dialog-view-title' onClose={onClose}>\r\n        {title}\r\n      </DialogTitle>\r\n\r\n      <DialogContent dividers>\r\n\r\n        <Paper >\r\n          <Table>\r\n            <TableBody>\r\n              <TableRow >\r\n                <TableCell>Diet Type</TableCell>\r\n                <TableCell><strong>{getDropValues(DietTypeDrop, formValue?.diet_type)}</strong></TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Calories</TableCell>\r\n                <TableCell><strong>{formValue?.calories}</strong></TableCell>\r\n              </TableRow>\r\n\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n\r\n        <Paper>\r\n          <TabContext value={tabValue || ''}>\r\n            <Grid item container xs={12} spacing={2}>\r\n              <Grid item xs={2}>\r\n                <TabList\r\n                  classes={{\r\n                    indicator: classes.tabIndicator\r\n                  }}\r\n                  onChange={handleTabChange}\r\n                  orientation=\"vertical\"\r\n                  variant=\"standard\"\r\n                >\r\n                  {formValue?.meal_days.map((mealDay: any, i: number) => {\r\n                    const { day } = mealDay\r\n                    return (\r\n                      <Tab\r\n                        classes={{ root: classes.tabRoot, textColorInherit: classes.tabTextColorInherit }}\r\n                        label={`Day - ${day}`}\r\n                        value={day.toString()} />\r\n                    )\r\n                  }\r\n                  )}\r\n\r\n                </TabList>\r\n              </Grid>\r\n\r\n              <Grid item xs={10}>\r\n                {formValue?.meal_days.map((mealDay: any, i: number) => {\r\n                  const { day, meals = [] } = mealDay\r\n                  return (\r\n                    <TabPanel key={i} className={classes.tabPanelRoot} value={day.toString()}>\r\n                      {meals.map((mealData: any, i: number) => {\r\n                        const { meal_time, recipe = [] } = mealData\r\n                        return (\r\n                          <>\r\n                            <Grid item xs={12} className={classes.mealTimeText}>\r\n                              <Typography variant='h5' >\r\n                                <strong>{meal_time}</strong>\r\n                              </Typography>\r\n                            </Grid>\r\n\r\n                            <Grid item container xs={12} spacing={2}>\r\n                              {recipe.map((recData: any, i: number) => {\r\n                                return (\r\n                                  <Grid item xs={12} sm={12} md={6}>\r\n                                    <Card elevation={0} className={classes.cardRoot}>\r\n                                      {/* <CardActionArea> */}\r\n                                      <CardMedia\r\n                                        className={classes.cardMediaRoot}\r\n                                        image={recData.image?.url}\r\n                                        title={recData.name}\r\n                                      />\r\n\r\n                                      <div className={classes.nutritionTextDiv}>\r\n                                        <div className={classes.nutritionText}> {recData.nutrition}</div>\r\n                                      </div>\r\n\r\n                                      <CardContent className={classes.cardContentRoot}>\r\n                                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                          {recData.name}\r\n                                        </Typography>\r\n                                        <CardActions disableSpacing className={classes.cardActionsRoot}>\r\n                                          <div>\r\n                                            <Typography variant=\"body2\" >\r\n                                              <ul className={classes.ulRoot}>\r\n                                                <li className={clsx(classes.liRoot, classes.colorProtein)}>Protein</li>\r\n                                              </ul>\r\n                                            </Typography>\r\n                                            <Typography variant=\"body1\" >\r\n                                              {recData.protein}\r\n                                            </Typography>\r\n                                          </div>\r\n                                          <Divider className={classes.dividerRoot} orientation=\"vertical\" variant='middle' />\r\n                                          <div>\r\n                                            <Typography variant=\"body2\" >\r\n                                              <ul className={classes.ulRoot}>\r\n                                                <li className={clsx(classes.liRoot, classes.colorFat)}>Fat</li>\r\n                                              </ul>\r\n                                            </Typography>\r\n                                            <Typography variant=\"body1\" >\r\n                                              {recData.fat}\r\n                                            </Typography>\r\n                                          </div>\r\n                                          <Divider className={classes.dividerRoot} orientation=\"vertical\" variant='middle' />\r\n                                          <div>\r\n                                            <Typography variant=\"body2\" >\r\n                                              <ul className={classes.ulRoot}>\r\n                                                <li className={clsx(classes.liRoot, classes.colorCarbs)}>Carbs</li>\r\n                                              </ul>\r\n                                            </Typography>\r\n                                            <Typography variant=\"body1\" >\r\n                                              {recData.carbs}\r\n                                            </Typography>\r\n                                          </div>\r\n                                        </CardActions>\r\n                                      </CardContent>\r\n\r\n                                      {/* </CardActionArea> */}\r\n\r\n                                    </Card>\r\n                                  </Grid>\r\n                                )\r\n                              })}\r\n                            </Grid>\r\n                          </>\r\n                        )\r\n                      })}\r\n                    </TabPanel>\r\n                  )\r\n                })}\r\n              </Grid>\r\n            </Grid>\r\n          </TabContext>\r\n        </Paper>\r\n\r\n\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={onClose} variant='outlined' color='secondary'>\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog >\r\n  );\r\n};\r\n\r\nconst MealTab = ({ meals, recipeList, index }: any) => {\r\n  const { values, touched, errors, setFieldValue, handleChange, handleBlur } = useFormikContext()\r\n  const classes = useStyles()\r\n  const [tabValue, setTabValue] = useState('0');\r\n  const FieldName = `meal_days[${index}]`\r\n\r\n  const getArrayError = (error: any) => {\r\n    return typeof error == 'string' ? error : ''\r\n  }\r\n\r\n  const handleChangeTab = (newValue: string) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  const addNewTab = (values: any, setFieldValue: any, push: any) => {\r\n    // const { meals } = getIn(values, FieldName)\r\n    push(MealTime)\r\n    // setFieldValue(`${FieldName}.meals`, meals)\r\n  }\r\n\r\n  const submitMealTime = (i: number, values: any, setFieldValue: any) => {\r\n    const { meals } = getIn(values, FieldName)\r\n    const NewMeals = { ...meals[i] }\r\n    NewMeals.isEdit = false\r\n    meals[i] = NewMeals\r\n    setFieldValue(`${FieldName}.meals`, meals)\r\n    handleChangeTab(i.toString())\r\n  }\r\n\r\n  const editMealTime = (i: number, values: any, setFieldValue: any) => {\r\n    const { meals } = getIn(values, FieldName)\r\n    const NewMeals = { ...meals[i] }\r\n    NewMeals.isEdit = true\r\n    meals[i] = NewMeals\r\n    setFieldValue(`${FieldName}.meals`, meals)\r\n    handleChangeTab(i.toString())\r\n  }\r\n\r\n  const deleteMealTime = (i: number, values: any, setFieldValue: any) => {\r\n    const { meals } = getIn(values, FieldName)\r\n    const NewMeals = meals.filter((d: any, index: number) => index != i)\r\n    setFieldValue(`${FieldName}.meals`, NewMeals)\r\n  }\r\n\r\n  return (\r\n    <TabContext value={tabValue || ''}>\r\n      <FieldArray name={`${FieldName}.meals`} validateOnChange>\r\n        {({push, remove})=>(\r\n          <Grid item container xs={12} spacing={2}>\r\n            <Grid item xs={4}>\r\n              <TabList\r\n                classes={{\r\n                  indicator: classes.tabIndicator\r\n                }}\r\n                orientation=\"vertical\"\r\n                variant=\"standard\"\r\n              >\r\n                {meals.map((mealData: any, i: number) => {\r\n                  let FieldNameSub: any = `${FieldName}.meals[${i}]`\r\n                  let FieldTouched: any = getIn(touched, FieldNameSub)\r\n                  let FieldErrors: any = getIn(errors, FieldNameSub)\r\n                  let FieldValues: any = getIn(values, FieldNameSub)\r\n                  const TabSelected = i == Number(tabValue)\r\n                  const SelectedStyle = TabSelected ? { borderRight: '2px solid #41a58d' } : { borderRight: '2px solid white' }\r\n                  return (\r\n                    <div className={classes.divTab}>\r\n                      <Grid item container xs={12} spacing={1} style={{ margin: 'inherit', ...SelectedStyle }}>\r\n                        <Grid item xs={mealData.isEdit ? 10 : 6}>\r\n                          {mealData.isEdit &&\r\n                            <TextField\r\n                              fullWidth\r\n                              size='small'\r\n                              label='Name'\r\n                              name={`${FieldNameSub}.meal_time`}\r\n                              variant='outlined'\r\n                              error={Boolean(FieldTouched?.meal_time && FieldErrors?.meal_time)}\r\n                              helperText={FieldTouched?.meal_time && FieldErrors?.meal_time}\r\n                              value={mealData?.meal_time}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          }\r\n                          {!mealData.isEdit &&\r\n                            <Button\r\n                              fullWidth\r\n                              className={!Boolean(FieldTouched?.meal_time && FieldErrors?.meal_time) ? classes.themeButton : ''}\r\n                              classes={{\r\n                                fullWidth: classes.tabBtnIcon\r\n                              }}\r\n                              variant='contained'\r\n                              color='secondary'\r\n                            >\r\n                              {!Boolean(FieldTouched?.meal_time && FieldErrors?.meal_time) ? mealData?.meal_time : FieldErrors?.meal_time}\r\n                            </Button>}\r\n                        </Grid>\r\n                        {mealData.isEdit &&\r\n                          <Grid item xs={2}>\r\n                            <Button\r\n                              fullWidth\r\n                              className={classes.themeButton}\r\n                              classes={{\r\n                                fullWidth: classes.tabBtnIcon\r\n                              }}\r\n                              variant='contained'\r\n                              color='secondary'\r\n                              onClick={() => submitMealTime(i, values, setFieldValue)}\r\n                            >\r\n                              <CheckIcon />\r\n                            </Button>\r\n                          </Grid>\r\n                        }\r\n                        {!mealData.isEdit && <Grid item xs={2} >\r\n                          <Button\r\n                            fullWidth\r\n                            classes={{\r\n                              fullWidth: classes.tabBtnIcon\r\n                            }}\r\n                            variant='contained'\r\n                            color='primary'\r\n                            onClick={(e) => handleChangeTab(i.toString())}\r\n                          >\r\n                            {tabValue === i.toString() ? <ChevronRightIcon /> : <KeyboardArrowUpIcon />}\r\n                          </Button>\r\n                        </Grid>\r\n                        }\r\n                        {!mealData.isEdit && <Grid item xs={2} >\r\n                          <Button\r\n                            fullWidth\r\n                            classes={{\r\n                              fullWidth: classes.tabBtnIcon\r\n                            }}\r\n                            variant='contained'\r\n                            color='primary'\r\n                            onClick={() => editMealTime(i, values, setFieldValue)}\r\n                          >\r\n                            <EditIcon />\r\n                          </Button>\r\n                        </Grid>\r\n                        }\r\n                        {!mealData.isEdit &&\r\n                          <Grid item xs={2}>\r\n                            <Button\r\n                              fullWidth\r\n                              classes={{\r\n                                fullWidth: classes.tabBtnIcon\r\n                              }}\r\n                              variant='contained'\r\n                              color='secondary'\r\n                              onClick={() => remove(i)}\r\n                            >\r\n                              <DeleteIcon />\r\n                            </Button>\r\n                          </Grid>\r\n                        }\r\n                        <FormHelperText>\r\n                          <Typography variant='caption' color='error'>{getIn(touched, `${FieldName}.meals[${i}].recipe`) && getArrayError(getIn(errors, `${FieldName}.meals[${i}].recipe`))}</Typography>\r\n                        </FormHelperText>\r\n                      </Grid>\r\n                    </div>\r\n                  )\r\n                }\r\n                )}\r\n                <div className={classes.divTab}>\r\n                  <Grid container xs={12} spacing={1} style={{ margin: 'inherit' }}>\r\n                    <Grid item xs={12}>\r\n                      <FormControl fullWidth\r\n                        error={Boolean(getIn(touched, `${FieldName}.meals`) && getArrayError(getIn(errors, `${FieldName}.meals`)))}\r\n                      >\r\n                        <Button\r\n                          fullWidth\r\n                          className={classes.themeButton}\r\n                          variant='contained'\r\n                          color='secondary'\r\n                          onClick={() => addNewTab(values, setFieldValue, push)}\r\n                          endIcon={<AddIcon />}\r\n                        >\r\n                          Add Meal Time\r\n                        </Button>\r\n\r\n                        <FormHelperText>\r\n                          {getIn(touched, 'nutrition') && getArrayError(getIn(errors, 'nutrition'))}\r\n                        </FormHelperText>\r\n                      </FormControl>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n              </TabList>\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n              {meals.map((mealData: any, i: number) => {\r\n                let FieldNameSub: any = `${FieldName}.meals[${i}]`\r\n                let FieldTouched: any = getIn(touched, FieldNameSub)\r\n                let FieldErrors: any = getIn(errors, FieldNameSub)\r\n                return (\r\n                  <TabPanel key={i} className={classes.tabPanelRoot} value={i.toString()}>\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={12}>\r\n                        <Typography variant='h5' align='center'>\r\n                          <strong>{mealData?.meal_time}</strong>\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item md={12} xs={12}>\r\n                        <Autocomplete\r\n                          multiple\r\n                          options={recipeList}\r\n                          value={recipeList.filter((data: any) => mealData.recipe.map(({ id }: any) => id).includes(data._id))}\r\n                          getOptionLabel={(option: any) => option.name}\r\n                          onChange={(event: any, newValue: any) => {\r\n                            let RecIds = newValue.map(({ _id }: any) => ({ id: _id }))\r\n                            setFieldValue(`${FieldNameSub}.recipe`, RecIds || []);\r\n                          }}\r\n                          onBlur={handleBlur}\r\n                          renderInput={(params: any) => (\r\n                            <TextField\r\n                              {...params}\r\n                              label='Recipe'\r\n                              variant='outlined'\r\n                              error={Boolean(FieldTouched?.recipe && FieldErrors?.recipe)}\r\n                              helperText={FieldTouched?.recipe && FieldErrors?.recipe}\r\n                              inputProps={{\r\n                                ...params.inputProps,\r\n                              }}\r\n                            />\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                  </Grid>\r\n                </TabPanel>\r\n              )\r\n            }\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n        )}\r\n      </FieldArray>\r\n          \r\n    </TabContext >\r\n  )\r\n}\r\n\r\nexport default MealPlan;\r\n"],"sourceRoot":""}