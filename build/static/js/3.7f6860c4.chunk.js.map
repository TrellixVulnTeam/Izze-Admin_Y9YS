{"version":3,"sources":["../node_modules/@material-ui/icons/ControlPoint.js","components/TipTapEditor/EditorButtons.tsx","components/TipTapEditor/TipTapEditor.tsx","../node_modules/@material-ui/core/esm/ListItemAvatar/ListItemAvatar.js","../node_modules/@material-ui/core/esm/ListItemText/ListItemText.js","../node_modules/@material-ui/icons/Timer.js","pages/SkinCareRecipe/SkinCareRecipe.tsx"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","useStyles","makeStyles","theme","inActive","borderRadius","color","palette","green","main","border","active","white","backgroundColor","dark","btnGroup","display","EditorButton","props","editor","classes","ButtonGroup","disableElevation","fullWidth","className","variant","size","IconButton","root","isActive","onClick","chain","focus","toggleBold","run","toggleItalic","toggleStrike","toggleCode","setParagraph","toggleBulletList","toggleOrderedList","TipTapEditor","onChange","onBlur","useEditor","extensions","StarterKit","content","onUpdate","getHTML","ListItemAvatar","ref","other","_objectWithoutProperties","context","ListContext","_extends","clsx","alignItems","alignItemsFlexStart","withStyles","minWidth","flexShrink","marginTop","name","ListItemText","children","_props$disableTypogra","disableTypography","_props$inset","inset","primaryProp","primary","primaryTypographyProps","secondaryProp","secondary","secondaryTypographyProps","dense","type","Typography","component","multiline","flex","marginBottom","paddingLeft","width","breakpoints","values","lg","maxWidth","margin","padding","spacing","addIcon","marginRight","inner","actions","justifyContent","tabCard","sEvenly","iconPadd","jCenter","imageView","height","themeButton","lColor","deleteButton","avatarRoot","textPrimary","fontWeight","textSecondary","ingrdientsGridMain","ingredientsAvatarRoot","timeText","htmlContentGrid","paddingRight","paddingTop","noIngredientsText","htmlContent","textAlign","AddEditDailog","isOpen","title","onClose","isEdit","data","onSuccess","okBtnText","formikRef","useRef","imageRef","Snackbar","useSnackbar","Post","useService","useState","ingredientList","setIngredientList","ingredient","id","quantity","initialFormValue","recipe_name","recipe_description","ingredients","preparation_time","preparation_description","recipe_image","file","prevImage","isNew","initialValue","setInitialValue","listIngredients","a","then","res","error","show","message","map","_id","console","log","catch","err","onImageChange","e","persist","files","target","length","reader","FileReader","onloadend","current","setFieldValue","result","readAsDataURL","addData","setSubmitting","resetForm","editData","useEffect","rest","EditData","IngredientIds","filter","includes","url","disableBackdropClick","disableEscapeKeyDown","aria-labelledby","open","innerRef","enableReinitialize","initialValues","onSubmit","helper","PostData","uploadNewImage","render","validationSchema","Yup","shape","trim","required","max","of","errors","touched","handleChange","handleBlur","setFieldTouched","submitForm","isSubmitting","dividers","container","item","md","xs","label","Boolean","helperText","rowsMax","validateOnChange","push","remove","unshift","addIngredients","endIcon","incValue","i","direction","options","find","getOptionLabel","option","getOptionSelected","event","newValue","renderInput","params","inputProps","accept","hidden","click","startIcon","src","disabled","ViewDailog","setFormValue","SkinCareRecipeViewContent","formValue","disableGutters","align","style","justify","index","image","fontSize","dangerouslySetInnerHTML","__html","SkinCareRecipe","ConfModel","useConfModel","page_no","page_limit","stateData","setStateData","pageCount","setPageCount","dataList","setDataList","loading","setLoading","addEditDialog","setAddEditDialog","viewDialog","setViewDialog","listSkinCare","page_count","closeAddEditDialog","prevState","onSuccessAction","text","hover","substring","arrow","openViewDialog","openEditDialog","openModel","closeModel","onDelete","count","page"],"mappings":"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","file":"static/js/3.7f6860c4.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.49 2 2 6.49 2 12s4.49 10 10 10 10-4.49 10-10S17.51 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'ControlPoint');\n\nexports.default = _default;","import React from 'react';\r\nimport { ButtonGroup, IconButton } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\r\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\r\nimport StrikethroughSIcon from '@material-ui/icons/StrikethroughS';\r\nimport CodeIcon from '@material-ui/icons/Code';//code\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';//highlite\r\n\r\nimport FormatTextdirectionLToRIcon from '@material-ui/icons/FormatTextdirectionLToR';//pragraph\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';//bullet list\r\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';// ordered list\r\nimport FormatQuoteIcon from '@material-ui/icons/FormatQuote'; //quote\r\nimport FormatClearIcon from '@material-ui/icons/FormatClear'; //clear text\r\n\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  inActive: {\r\n    borderRadius: 'unset',\r\n    color: theme.palette.green.main,\r\n    border: `1px solid ${theme.palette.green.main}`,\r\n  },\r\n  active: {\r\n    borderRadius: 'unset',\r\n    color: theme.palette.white,\r\n    border: `1px solid ${theme.palette.green.main}`,\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n  },\r\n  btnGroup: {\r\n    display: 'block'\r\n  }\r\n}));\r\n\r\n\r\n\r\nconst EditorButton = (props: any) => {\r\n  const { editor } = props\r\n  const classes = useStyles();\r\n  return (\r\n    <ButtonGroup disableElevation fullWidth className={classes.btnGroup} variant=\"contained\" size='small' >\r\n\r\n      {/* ===Bold=== */}\r\n      <IconButton size=\"small\"\r\n        classes={{ root: editor?.isActive('bold') ? classes.active : classes.inActive }}\r\n        onClick={() => editor?.chain().focus().toggleBold().run()}\r\n      >\r\n        <FormatBoldIcon />\r\n      </IconButton>\r\n\r\n      {/* ===italic=== */}\r\n      <IconButton size=\"small\"\r\n        classes={{ root: editor?.isActive('italic') ? classes.active : classes.inActive }}\r\n        onClick={() => editor?.chain().focus().toggleItalic().run()}\r\n      >\r\n        <FormatItalicIcon />\r\n      </IconButton>\r\n\r\n      {/* ===Strike=== */}\r\n      <IconButton size=\"small\"\r\n        classes={{ root: editor?.isActive('strike') ? classes.active : classes.inActive }}\r\n        onClick={() => editor?.chain().focus().toggleStrike().run()}\r\n      >\r\n        <StrikethroughSIcon />\r\n      </IconButton>\r\n\r\n      {/* ===Code=== */}\r\n      <IconButton size=\"small\"\r\n        classes={{ root: editor?.isActive('code') ? classes.active : classes.inActive }}\r\n        onClick={() => editor?.chain().focus().toggleCode().run()}\r\n      >\r\n        <CodeIcon />\r\n      </IconButton>\r\n\r\n      {/* ===Paragraph=== */}\r\n      <IconButton size=\"small\"\r\n        classes={{ root: editor?.isActive('paragraph') ? classes.active : classes.inActive }}\r\n        onClick={() => editor?.chain().focus().setParagraph().run()}\r\n      >\r\n        <FormatTextdirectionLToRIcon />\r\n      </IconButton>\r\n \r\n      {/* ===bullet list=== */}\r\n      <IconButton size=\"small\"\r\n        classes={{ root: editor?.isActive('bulletList') ? classes.active : classes.inActive }}\r\n        onClick={() => editor?.chain().focus().toggleBulletList().run()}\r\n      >\r\n        <FormatListBulletedIcon />\r\n      </IconButton>\r\n\r\n      {/* ===order list=== */}\r\n      <IconButton size=\"small\"\r\n        classes={{ root: editor?.isActive('orderedList') ? classes.active : classes.inActive }}\r\n        onClick={() => editor?.chain().focus().toggleOrderedList().run()}\r\n      >\r\n        <FormatListNumberedIcon />\r\n      </IconButton>\r\n\r\n\r\n    </ButtonGroup>\r\n  );\r\n}\r\n\r\nconst EditorIcon = (props: any) => {\r\n  const { children, active, click } = props\r\n  const classes = useStyles()\r\n  return (\r\n    <IconButton size=\"small\"\r\n      classes={{ root: active ? classes.active : classes.inActive }}\r\n      onClick={() => click()}\r\n    >\r\n      {children}\r\n    </IconButton>\r\n  )\r\n}\r\n\r\nexport default EditorButton;\r\n","import React, { useEffect } from \"react\"\r\nimport { EditorContent, useEditor } from \"@tiptap/react\"\r\nimport StarterKit from \"@tiptap/starter-kit\"\r\nimport EditorButton from \"./EditorButtons\"\r\n\r\nconst TipTapEditor = (props: any) => {\r\n    const { value, onChange, onBlur } = props\r\n    const editor = useEditor({\r\n      extensions: [\r\n        StarterKit,\r\n      ],\r\n      content: value,\r\n      onUpdate: ({ editor }): void => onChange(editor.getHTML()),\r\n      onBlur: ({ editor }): void => onBlur(),\r\n    })\r\n  \r\n    // useEffect(() => {\r\n    //   editor?.commands?.setContent(value)\r\n    // }, [value,editor])\r\n  \r\n    return (\r\n      <>\r\n        <EditorButton editor={editor} />\r\n        <EditorContent editor={editor} />\r\n      </>\r\n    )\r\n  }\r\n\r\nexport default TipTapEditor","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    minWidth: 56,\n    flexShrink: 0\n  },\n\n  /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    marginTop: 8\n  }\n};\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nvar ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component – normally `Avatar`.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemAvatar'\n})(ListItemAvatar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * If `true`, the children will be indented.\n   * This should be used if there is no left avatar or left icon.\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15 1H9v2h6V1zm-4 13h2V8h-2v6zm8.03-6.61l1.42-1.42c-.43-.51-.9-.99-1.41-1.41l-1.42 1.42C16.07 4.74 14.12 4 12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9 9-4.03 9-9c0-2.12-.74-4.07-1.97-5.61zM12 20c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\"\n}), 'Timer');\n\nexports.default = _default;","import {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  FormControl,\r\n  FormHelperText,\r\n  Grid,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  makeStyles,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Tooltip,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\r\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Autocomplete, Pagination } from '@material-ui/lab';\r\nimport { FieldArray, Formik } from 'formik';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport * as Yup from 'yup';\r\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\r\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\r\nimport Page from '../../components/Page/Page';\r\nimport TipTapEditor from '../../components/TipTapEditor/TipTapEditor';\r\nimport useConfModel from '../../hook/useConfModel';\r\nimport useService from '../../hook/useService';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport { imageUpload } from '../../utils/FirebaseUtils';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport { uploadNewImage } from '../../utils/CloudinaryUtils';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  root: {\r\n    width: theme.breakpoints.values.lg,\r\n    maxWidth: '100%',\r\n    margin: '0 auto',\r\n    padding: theme.spacing(3),\r\n  },\r\n  addIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  inner: {\r\n    minWidth: 700,\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(1),\r\n    justifyContent: 'center',\r\n  },\r\n  tabCard: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  sEvenly: {\r\n    display: 'flex',\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  iconPadd: {\r\n    padding: 5,\r\n  },\r\n  jCenter: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  imageView: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  themeButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n  },\r\n  lColor: {\r\n    color: 'white',\r\n  },\r\n  deleteButton: {\r\n    width: '100%',\r\n    height: '50px',\r\n  },\r\n  //\r\n  avatarRoot: {\r\n    borderRadius: 10,\r\n    marginRight: 15,\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10),\r\n  },\r\n  textPrimary: {\r\n    fontWeight: 'bold'\r\n  },\r\n  textSecondary: {\r\n  },\r\n  ingrdientsGridMain: {\r\n    marginTop: 10\r\n  },\r\n  ingredientsAvatarRoot: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n    margin: 'auto',\r\n  },\r\n  timeText: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  htmlContentGrid: {\r\n    paddingLeft: theme.spacing(3),\r\n    paddingRight: theme.spacing(3),\r\n    paddingTop: theme.spacing(1),\r\n  },\r\n  noIngredientsText: {\r\n    marginBottom: theme.spacing(3),\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  htmlContent: {\r\n    '& ul': {\r\n      paddingLeft: '1.2rem',\r\n    },\r\n    '& p': {\r\n      textAlign: 'justify',\r\n    }\r\n  }\r\n\r\n}));\r\n\r\nconst SkinCareRecipe = () => {\r\n  const classes = useStyles();\r\n  const { Post } = useService();\r\n  const Snackbar = useSnackbar();\r\n  const ConfModel = useConfModel();\r\n  const [stateData, setStateData] = useState({ page_no: 1, page_limit: 10 });\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const [dataList, setDataList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [addEditDialog, setAddEditDialog] = useState({\r\n    isOpen: false,\r\n    title: '',\r\n    okBtnText: '',\r\n    isEdit: false,\r\n    data: {},\r\n  });\r\n  const [viewDialog, setViewDialog] = useState({\r\n    isOpen: false,\r\n    title: '',\r\n    data: {},\r\n  });\r\n\r\n  const listSkinCare = async () => {\r\n    setLoading(true);\r\n    Post('app/listSkinCareRecipe', stateData)\r\n      .then((res: any) => {\r\n        console.log('listSkinCare', res);\r\n        setLoading(false);\r\n        if (!res.error) {\r\n          setDataList(res.data);\r\n          setPageCount(res.page_count);\r\n        } else {\r\n          Snackbar.show(res.message, 'error');\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        console.log('err', err);\r\n        setLoading(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const onPageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    setStateData((prevState: any) => ({ ...prevState, page_no: value }));\r\n  };\r\n\r\n  const setElipsis = (text: any) => {\r\n    return text.length >= 25 ? `${text.substring(0, 40)}...` : text;\r\n  };\r\n\r\n  const openAddDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      isEdit: false,\r\n      title: 'Add Recpie',\r\n      okBtnText: 'Save',\r\n    }));\r\n  };\r\n\r\n  const openEditDialog = (data: any) => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      isEdit: true,\r\n      data,\r\n      title: 'Edit Recpie',\r\n      okBtnText: 'Edit',\r\n    }));\r\n  };\r\n\r\n  const openViewDialog = (data: any) => {\r\n    setViewDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      data,\r\n      title: 'View Recpie',\r\n    }));\r\n  };\r\n\r\n  const onDelete = (data: any) => {\r\n    const { openModel, setLoading, closeModel } = ConfModel;\r\n    const submitFunction = () => {\r\n      setLoading(true);\r\n      Post('app/deleteSkinCareRecipe', { id: data._id })\r\n        .then(async (res: any) => {\r\n          setLoading(false);\r\n          closeModel();\r\n          onSuccessAction();\r\n          Snackbar.show(res.message, 'success');\r\n        })\r\n        .catch((err: any) => {\r\n          setLoading(false);\r\n          Snackbar.show('Internal Server Error', 'error');\r\n        });\r\n    };\r\n    openModel(submitFunction);\r\n  };\r\n\r\n  const closeAddEditDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const closeViewDialog = () => {\r\n    setViewDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const onSuccessAction = () => {\r\n    listSkinCare();\r\n    closeAddEditDialog();\r\n  };\r\n\r\n  useEffect(() => {\r\n    listSkinCare();\r\n  }, [stateData]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Page title='Skin Care Recipe' />\r\n\r\n      {/* =======Header====== */}\r\n      <Grid alignItems='flex-end' container justify='space-between' spacing={3}>\r\n        <Grid item>\r\n          <Typography component='h1' variant='h3'>\r\n            Skin Care Recipe\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant='contained'\r\n            onClick={() => openAddDialog()}\r\n            className={classes.themeButton}\r\n            startIcon={<AddIcon />}\r\n          >\r\n            Add\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* =============Search======== */}\r\n      {/* <Grid container spacing={3}>\r\n        <Grid item>\r\n          <Paper elevation={0}>\r\n            <TextField\r\n              fullWidth\r\n              size='small'\r\n              placeholder='Name'\r\n              variant='outlined'\r\n              name='state'\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid> */}\r\n\r\n      {/* ========Table With Pagination========= */}\r\n      <Card className={classes.tabCard}>\r\n        <CardContent className={classes.content}>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align='center'>#</TableCell>\r\n                  <TableCell align='center'>Image</TableCell>\r\n                  <TableCell align='center'>Name</TableCell>\r\n                  <TableCell align='center'>Description</TableCell>\r\n                  <TableCell align='center'>Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {!loading &&\r\n                  dataList.map((data: any, index: number) => (\r\n                    <TableRow hover key={index}>\r\n                      <TableCell align='center'>\r\n                        {stateData.page_limit * (stateData.page_no - 1) + index + 1}\r\n                      </TableCell>\r\n                      <TableCell align='center'>\r\n                        <div className={classes.jCenter}>\r\n                          <Avatar variant='square' src={data?.recipe_image?.url} />\r\n                        </div>\r\n                      </TableCell>\r\n                      <TableCell align='center'>{data?.recipe_name}</TableCell>\r\n                      <TableCell align='center'>\r\n                        <Tooltip title={data?.recipe_description}>\r\n                          <span>{setElipsis(data?.recipe_description)}</span>\r\n                        </Tooltip>\r\n                      </TableCell>\r\n                      <TableCell align='center'>\r\n                        <div className={classes.sEvenly}>\r\n                          <Tooltip title='View' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openViewDialog(data)}\r\n                            >\r\n                              <CenterFocusStrongIcon color='primary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Edit' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openEditDialog(data)}\r\n                            >\r\n                              <EditIcon color='action' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Delete' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => onDelete(data)}\r\n                            >\r\n                              <DeleteIcon color='secondary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                {loading && <TableLoader />}\r\n                {!loading && dataList.length == 0 && (\r\n                  <TableNoData>No Data Found</TableNoData>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </CardContent>\r\n\r\n        <CardActions className={classes.actions}>\r\n          <Pagination\r\n            count={pageCount}\r\n            page={stateData.page_no}\r\n            onChange={onPageChange}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n\r\n      {/* ============Add Edit Dialog========== */}\r\n      <AddEditDailog\r\n        {...addEditDialog}\r\n        onClose={closeAddEditDialog}\r\n        onSuccess={onSuccessAction}\r\n      />\r\n\r\n      {/* ============View Dialog========== */}\r\n      <ViewDailog {...viewDialog} onClose={closeViewDialog} />\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface Ingredient {\r\n  id: string;\r\n  quantity: string;\r\n}\r\n\r\ninterface Recpie {\r\n  recipe_name: string;\r\n  recipe_description: string;\r\n  ingredients: Ingredient[];\r\n  preparation_time: string;\r\n  preparation_description: string;\r\n  recipe_image: { file: null | any; prevImage: string; isNew: null | Boolean };\r\n}\r\n\r\nconst AddEditDailog = (props: any) => {\r\n  const {\r\n    isOpen,\r\n    title,\r\n    onClose,\r\n    isEdit,\r\n    data,\r\n    onSuccess,\r\n    okBtnText = 'Ok',\r\n  } = props;\r\n  const classes = useStyles();\r\n  const formikRef = useRef<any>(null);\r\n  const imageRef = useRef<any>(null);\r\n  const Snackbar = useSnackbar();\r\n  const { Post } = useService();\r\n  const [ingredientList, setIngredientList] = useState([]);\r\n\r\n  const ingredient: Ingredient = {\r\n    id: '',\r\n    quantity: '',\r\n  };\r\n\r\n  const initialFormValue: Recpie = {\r\n    recipe_name: '',\r\n    recipe_description: '',\r\n    ingredients: [ingredient],\r\n    preparation_time: '',\r\n    preparation_description: '',\r\n    recipe_image: { file: null, prevImage: '', isNew: null },\r\n  };\r\n\r\n  const [initialValue, setInitialValue] = useState({ ...initialFormValue });\r\n\r\n  const listIngredients = async () => {\r\n    Post('app/listAllSkinCareIngredient', {})\r\n      .then((res: any) => {\r\n        if (!res.error) {\r\n          let ingredients = res.data.map((data: any) => {\r\n            data.id = data._id;\r\n            return data;\r\n          });\r\n          console.log('listSkinCareIngredient', ingredients);\r\n          setIngredientList(ingredients);\r\n        } else {\r\n          Snackbar.show(res.message, 'error');\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        console.log('err', err);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const onImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    e.persist();\r\n    const files = e.target.files;\r\n    if (files && files.length != 0) {\r\n      const reader = new FileReader();\r\n      const file = files[0];\r\n      reader.onloadend = () => {\r\n        formikRef.current.setFieldValue('recipe_image', {\r\n          file,\r\n          prevImage: reader.result,\r\n          isNew: true,\r\n        });\r\n      };\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      formikRef.current.setFieldValue('recipe_image', {\r\n        file: null,\r\n        prevImage: '',\r\n        isNew: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onSubmit = (value: any, helper: any) => {\r\n    try {\r\n      helper.setSubmitting(true);\r\n      const render = async () => {\r\n        const { recipe_image, ...rest } = value;\r\n        const { file, isNew } = recipe_image;\r\n        const PostData = rest;\r\n\r\n        PostData.recipe_image = await uploadNewImage(recipe_image);\r\n\r\n        !isEdit && addData(PostData, helper);\r\n        isEdit && editData(PostData, helper);\r\n      };\r\n      render();\r\n    } catch (err) {\r\n      Snackbar.show('Image Upload Failed', 'error');\r\n    }\r\n  };\r\n\r\n  const addData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n    Post('app/addSkinCareRecipe', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const editData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n    Post('app/editSkinCareRecipe', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const addIngredients = (push: any) => {\r\n    push(ingredient);\r\n  };\r\n\r\n  const removeIngredients = (values: Recpie, i: number, setFieldValue: any) => {\r\n    let { ingredients } = values;\r\n    const TempIngredients = ingredients.filter(\r\n      (data: any, index: number) => index !== i\r\n    );\r\n    setFieldValue('ingredients', TempIngredients);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isEdit) {\r\n      const { recipe_image, ingredients, _id, ...rest } = data;\r\n      const EditData = { ...rest, id: _id };\r\n      const IngredientIds = ingredientList.map(({ _id }: any) => _id)\r\n      EditData.ingredients = ingredients.filter(({ _id }: any) => IngredientIds.includes(_id)).map(({ _id, ...rest }: any) => ({ id: _id, ...rest }));\r\n      EditData.recipe_image = {\r\n        file: recipe_image,\r\n        prevImage: recipe_image?.url,\r\n        isNew: false,\r\n      };\r\n      setInitialValue(EditData);\r\n    } else {\r\n      setInitialValue(initialFormValue);\r\n    }\r\n  }, [props]);\r\n\r\n  useEffect(() => {\r\n    listIngredients();\r\n  }, []);\r\n\r\n  const handleOnchangeTextEditor = (getData: any, setFieldValue: any) =>{\r\n    console.log(getData);\r\n    setFieldValue('preparation_description',getData)\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      fullWidth\r\n      maxWidth='md'\r\n      aria-labelledby='dialog-title'\r\n      open={isOpen}\r\n    >\r\n      <DialogTitle id='dialog-title' onClose={onClose}>\r\n        {title}\r\n      </DialogTitle>\r\n\r\n      <Formik\r\n        innerRef={formikRef}\r\n        enableReinitialize\r\n        initialValues={initialValue}\r\n        onSubmit={onSubmit}\r\n        validationSchema={Yup.object().shape({\r\n          recipe_name: Yup.string().trim().required('Recipe name is required'),\r\n          recipe_description: Yup.string().trim().max(250, 'Must be 250 characters or less').required('Recipe Description is required'),\r\n          preparation_time: Yup.string()\r\n            .trim()\r\n            .required('Preparation time is required'),\r\n          preparation_description: Yup.string()\r\n            .required('Preparation description is required'),\r\n          ingredients: Yup.array().of(\r\n            Yup.object().shape({\r\n              id: Yup.string().trim().required('Incredients is Required'),\r\n              quantity: Yup.string().trim().required('Quantity is Required'),\r\n            })\r\n          ),\r\n          recipe_image: Yup.object({\r\n            file: Yup.mixed().required('A file is required'),\r\n          }),\r\n        })}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          setFieldValue,\r\n          handleBlur,\r\n          setFieldTouched,\r\n          submitForm,\r\n          isSubmitting,\r\n        }) => (\r\n          <>\r\n            <DialogContent dividers>\r\n              <Grid container spacing={2}>\r\n                <Grid item md={12} xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label='Recipe Name'\r\n                    name='recipe_name'\r\n                    variant='outlined'\r\n                    error={Boolean(touched.recipe_name && errors.recipe_name)}\r\n                    helperText={touched.recipe_name && errors.recipe_name}\r\n                    value={values.recipe_name}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item md={12} xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    multiline\r\n                    rowsMax={250}\r\n                    label='Recipe Description'\r\n                    name='recipe_description'\r\n                    variant='outlined'\r\n                    error={Boolean(\r\n                      touched.recipe_description && errors.recipe_description\r\n                    )}\r\n                    helperText={\r\n                      touched.recipe_description && errors.recipe_description\r\n                    }\r\n                    value={values.recipe_description}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                </Grid>\r\n\r\n\r\n                <FieldArray name=\"ingredients\" validateOnChange>\r\n                  {({ push, unshift, remove }) => (\r\n                    <>\r\n                      <Grid item md={12} xs={12}>\r\n                        {/* <FormControl\r\n                    error={Boolean(touched?.ingredients && errors?.ingredients)}\r\n                  > */}\r\n                        <Button\r\n                          fullWidth\r\n                          className={classes.themeButton}\r\n                          variant='contained'\r\n                          color='default'\r\n                          onClick={() => addIngredients(push)}\r\n                          endIcon={<ControlPointIcon />}\r\n                        >\r\n                          Add Ingredients\r\n                        </Button>\r\n\r\n                        {/* <FormHelperText>\r\n                      {touched?.ingredients && errors?.ingredients}\r\n                    </FormHelperText>\r\n                  </FormControl> */}\r\n                      </Grid>\r\n                      {values?.ingredients?.map((incValue: any, i: number) => (\r\n                        <Grid\r\n                          key={i}\r\n                          item\r\n                          container\r\n                          md={12}\r\n                          xs={12}\r\n                          direction='row'\r\n                          spacing={2}\r\n                        >\r\n                          <Grid key={i} item md={5} xs={5}>\r\n                            <Autocomplete\r\n                              fullWidth\r\n                              options={ingredientList}\r\n                              value={ingredientList.find(\r\n                                (data: any) => data._id == incValue.id\r\n                              )}\r\n                              getOptionLabel={(option: any) => option.name}\r\n                              getOptionSelected={(option) =>\r\n                                option._id == incValue.id\r\n                              }\r\n                              onChange={(event: any, newValue: any) => {\r\n                                setFieldValue(\r\n                                  `ingredients[${i}].id`,\r\n                                  newValue?._id || ''\r\n                                );\r\n                              }}\r\n                              onBlur={handleBlur}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  label='Ingredients'\r\n                                  variant='outlined'\r\n                                  error={Boolean(\r\n                                    touched?.ingredients &&\r\n                                    touched?.ingredients[i]?.id &&\r\n                                    errors?.ingredients &&\r\n                                    (errors?.ingredients[i] as Ingredient)?.id\r\n                                  )}\r\n                                  helperText={\r\n                                    touched?.ingredients &&\r\n                                    touched?.ingredients[i]?.id &&\r\n                                    errors?.ingredients &&\r\n                                    (errors?.ingredients[i] as Ingredient)?.id\r\n                                  }\r\n                                  inputProps={{\r\n                                    ...params.inputProps,\r\n                                  }}\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Grid>\r\n\r\n                          <Grid key={i} item md={6} xs={6}>\r\n                            <TextField\r\n                              fullWidth\r\n                              label='Quantity'\r\n                              name={`ingredients[${i}].quantity`}\r\n                              variant='outlined'\r\n                              error={Boolean(\r\n                                touched?.ingredients &&\r\n                                touched?.ingredients[i]?.quantity &&\r\n                                errors?.ingredients &&\r\n                                (errors?.ingredients[i] as Ingredient)?.quantity\r\n                              )}\r\n                              helperText={\r\n                                touched?.ingredients &&\r\n                                touched?.ingredients[i]?.quantity &&\r\n                                errors?.ingredients &&\r\n                                (errors?.ingredients[i] as Ingredient)?.quantity\r\n                              }\r\n                              value={incValue.quantity}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </Grid>\r\n                          {values?.ingredients?.length > 1 && (\r\n                            <Grid key={i} item md={1} xs={1}>\r\n                              <Button\r\n                                fullWidth\r\n                                className={classes.deleteButton}\r\n                                variant='contained'\r\n                                color='secondary'\r\n                                onClick={() => remove(i)}\r\n                              >\r\n                                <DeleteIcon />\r\n                              </Button>\r\n                            </Grid>\r\n                          )}\r\n                        </Grid>\r\n                      ))}\r\n                    </>\r\n                  )}\r\n                </FieldArray>\r\n\r\n                <Grid item md={12} xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    multiline\r\n                    label='Preparation Time'\r\n                    name='preparation_time'\r\n                    variant='outlined'\r\n                    error={Boolean(\r\n                      touched.preparation_time && errors.preparation_time\r\n                    )}\r\n                    helperText={\r\n                      touched.preparation_time && errors.preparation_time\r\n                    }\r\n                    value={values.preparation_time}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item md={12} xs={12}>\r\n                  <FormControl\r\n                    fullWidth\r\n                    error={Boolean(\r\n                      touched?.preparation_description &&\r\n                      errors?.preparation_description\r\n                    )}\r\n                  >\r\n                    <TipTapEditor\r\n                      name = 'preparation_description'\r\n                      value={values.preparation_description}\r\n                      onChange={(value: any) =>\r\n                        setFieldValue('preparation_description', value)\r\n                      }\r\n                      onBlur={() =>\r\n                        setFieldTouched('preparation_description', true, true)\r\n                      }\r\n                    />\r\n\r\n                    <FormHelperText>\r\n                      {touched?.preparation_description &&\r\n                        errors?.preparation_description}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item md={12} xs={12}>\r\n                  <input\r\n                    name='recipe_image'\r\n                    ref={imageRef}\r\n                    type='file'\r\n                    accept='.jpg,.png,jpeg'\r\n                    onChange={onImageChange}\r\n                    onBlur={handleBlur}\r\n                    hidden\r\n                  />\r\n                  <Button\r\n                    fullWidth\r\n                    className={classes.themeButton}\r\n                    variant='contained'\r\n                    color='default'\r\n                    onClick={() => imageRef.current.click()}\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Recipe Image\r\n                  </Button>\r\n                  <FormControl\r\n                    error={Boolean(\r\n                      touched?.recipe_image?.file && errors?.recipe_image?.file\r\n                    )}\r\n                  >\r\n                    <FormHelperText>\r\n                      {touched?.recipe_image?.file &&\r\n                        errors?.recipe_image?.file}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item md={12} xs={12}>\r\n                  {values.recipe_image?.prevImage && (\r\n                    <img\r\n                      className={classes.imageView}\r\n                      src={values.recipe_image?.prevImage}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n              <Button onClick={onClose} variant='outlined' color='secondary'>\r\n                Cancel\r\n              </Button>\r\n\r\n              <Button\r\n                className={classes.themeButton}\r\n                onClick={() => submitForm()}\r\n                disabled={isSubmitting}\r\n                variant='outlined'\r\n              >\r\n                {isSubmitting ? (\r\n                  <CircularProgress size={24} className={classes.lColor} />\r\n                ) : (\r\n                  okBtnText\r\n                )}\r\n              </Button>\r\n            </DialogActions>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst ViewDailog = (props: any) => {\r\n  const { isOpen, title, onClose, data } = props;\r\n  const classes = useStyles();\r\n  const [formValue, setFormValue] = useState(data);\r\n\r\n  useEffect(() => {\r\n    setFormValue(data);\r\n  }, [props]);\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      fullWidth\r\n      maxWidth='sm'\r\n      aria-labelledby='dialog-view-title'\r\n      open={isOpen}\r\n    >\r\n      <DialogTitle id='dialog-view-title' onClose={onClose}>\r\n        {title}\r\n      </DialogTitle>\r\n\r\n      <DialogContent dividers>\r\n        <SkinCareRecipeViewContent {...props} />\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={onClose} variant='outlined' color='secondary'>\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport const SkinCareRecipeViewContent = (props: any) => {\r\n  const { isOpen, title, onClose, data } = props;\r\n  const classes = useStyles();\r\n  const [formValue, setFormValue] = useState(data);\r\n\r\n  useEffect(() => {\r\n    setFormValue(data);\r\n  }, [props]);\r\n  return (\r\n    <>\r\n      <List>\r\n        <ListItem disableGutters>\r\n          <ListItemAvatar>\r\n            <Avatar className={classes.avatarRoot} src={formValue?.recipe_image?.url} />\r\n          </ListItemAvatar>\r\n          <ListItemText\r\n            classes={{\r\n              primary: classes.textPrimary,\r\n              secondary: classes.textSecondary\r\n            }}\r\n            primary={formValue?.recipe_name}\r\n            secondary={formValue?.recipe_description}\r\n          />\r\n        </ListItem>\r\n      </List>\r\n\r\n      <Typography variant='h6' align='left' style={{ color: '#41A58D' }}>INGREDIENTS</Typography>\r\n\r\n      <Grid container spacing={2} className={classes.ingrdientsGridMain} justify='center'>\r\n        {formValue?.ingredients?.map((value: any, index: any) =>\r\n          <Grid key={index} item xs={4} md={3}>\r\n            <Avatar className={classes.ingredientsAvatarRoot} src={value?.image?.url} />\r\n            <Typography variant='h6' align='center'>{value?.name}</Typography>\r\n            <Typography variant='subtitle2' align='center'>{value?.quantity}</Typography>\r\n          </Grid>\r\n        )}\r\n        {formValue?.ingredients?.length == 0 &&\r\n          <Grid item xs={12} md={12} className={classes.noIngredientsText}>\r\n            <div>No Ingredients</div>\r\n          </Grid>\r\n        }\r\n      </Grid>\r\n\r\n      <Typography variant='h6' align='left' style={{ color: '#41A58D' }}>PREPARATION</Typography>\r\n      <Typography variant='body2' align='center' className={classes.timeText}>\r\n        <TimerIcon fontSize='inherit' />\r\n        <span>{formValue?.preparation_time}</span>\r\n      </Typography>\r\n\r\n      <Grid container >\r\n        <Grid item xs={12} md={12} className={classes.htmlContentGrid}>\r\n          <div className={classes.htmlContent} dangerouslySetInnerHTML={{ __html: formValue?.preparation_description }} />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SkinCareRecipe;\r\n"],"sourceRoot":""}