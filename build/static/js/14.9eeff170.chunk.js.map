{"version":3,"sources":["../node_modules/@material-ui/icons/ControlPoint.js","components/TipTapEditor/EditorButtons.tsx","components/TipTapEditor/TipTapEditor.tsx","pages/WorkoutExercise/WorkoutExercise.tsx"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","useStyles","makeStyles","theme","inActive","borderRadius","color","palette","green","main","border","active","white","backgroundColor","dark","btnGroup","display","EditorButton","props","editor","classes","ButtonGroup","disableElevation","fullWidth","className","variant","size","IconButton","root","isActive","onClick","chain","focus","toggleBold","run","toggleItalic","toggleStrike","toggleCode","setParagraph","toggleBulletList","toggleOrderedList","TipTapEditor","onChange","onBlur","useEditor","extensions","StarterKit","content","onUpdate","getHTML","width","breakpoints","values","lg","maxWidth","margin","padding","spacing","addIcon","marginRight","inner","minWidth","actions","justifyContent","tabCard","marginTop","sEvenly","iconPadd","jCenter","imageView","height","themeButton","lColor","workouttermsavatar","deleteButton","avatarStyles","ingredientsAvatarStyle","marginTopStyle","adjustmentTop","avatarRoot","textPrimary","fontWeight","textSecondary","ingrdientsGridMain","ingredientsAvatarRoot","htmlContentGrid","paddingLeft","paddingRight","paddingTop","noIngredientsText","marginBottom","htmlContent","textAlign","AddEditDailog","isOpen","title","onClose","isEdit","data","onSuccess","okBtnText","formikRef","useRef","imageRef","thumbnailImageRef","Snackbar","useSnackbar","Post","useService","useState","equipmentList","setEquipmentList","workoutTerms","name","image","file","prevImage","isNew","description","initialFormValue","workout_name","workout_image","workout_description","workout_thumbnail","workout_type","workout_terms","required_equipments","id","how_to_do","initialValue","setInitialValue","listIngredients","a","then","res","error","show","message","getequipmentList","map","_id","catch","err","onImageChange","e","persist","files","target","length","reader","FileReader","onloadend","current","setFieldValue","result","readAsDataURL","onThumbnailImageChange","addData","setSubmitting","resetForm","console","log","editData","handleEquipmentChange","event","newValue","sampleDatas","datas","useEffect","rest","EquipmentIds","filter","includes","item","url","disableBackdropClick","disableEscapeKeyDown","aria-labelledby","open","innerRef","enableReinitialize","initialValues","onSubmit","helper","postData","TermPromiseArray","Promise","all","uploadNewImage","ImgRes","ImgTumpRes","TermRes","render","validationSchema","Yup","shape","trim","required","max","of","errors","touched","handleChange","handleBlur","setFieldTouched","submitForm","isSubmitting","dividers","container","md","xs","label","Boolean","helperText","multiline","validateOnChange","push","remove","addIngredients","endIcon","workoutValues","index","WorkoutTerms","multiple","options","getOptionLabel","option","renderInput","params","inputProps","ref","type","accept","hidden","click","startIcon","src","disabled","FormikContext","useFormikContext","setFormikContext","imgRef","FieldName","FieldValue","getIn","FieldError","FieldTouched","direction","Terms","i","removeTerm","ViewDailog","formValue","setFormValue","alt","align","justify","substring","style","dangerouslySetInnerHTML","__html","WorkoutExercise","ConfModel","useConfModel","page_no","page_limit","stateData","setStateData","pageCount","setPageCount","dataList","setDataList","loading","setLoading","addEditDialog","setAddEditDialog","viewDialog","setViewDialog","listWorkOutExercise","page_count","closeAddEditDialog","prevState","onSuccessAction","alignItems","component","text","hover","arrow","openViewDialog","openEditDialog","openModel","closeModel","onDelete","count","page"],"mappings":"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","file":"static/js/14.9eeff170.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.49 2 2 6.49 2 12s4.49 10 10 10 10-4.49 10-10S17.51 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'ControlPoint');\n\nexports.default = _default;","import React from 'react';\r\nimport { ButtonGroup, IconButton } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\r\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\r\nimport StrikethroughSIcon from '@material-ui/icons/StrikethroughS';\r\nimport CodeIcon from '@material-ui/icons/Code';//code\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';//highlite\r\n\r\nimport FormatTextdirectionLToRIcon from '@material-ui/icons/FormatTextdirectionLToR';//pragraph\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';//bullet list\r\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';// ordered list\r\nimport FormatQuoteIcon from '@material-ui/icons/FormatQuote'; //quote\r\nimport FormatClearIcon from '@material-ui/icons/FormatClear'; //clear text\r\n\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  inActive: {\r\n    borderRadius: 'unset',\r\n    color: theme.palette.green.main,\r\n    border: `1px solid ${theme.palette.green.main}`,\r\n  },\r\n  active: {\r\n    borderRadius: 'unset',\r\n    color: theme.palette.white,\r\n    border: `1px solid ${theme.palette.green.main}`,\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n  },\r\n  btnGroup: {\r\n    display: 'block'\r\n  }\r\n}));\r\n\r\n\r\n\r\nconst EditorButton = (props: any) => {\r\n  const { editor } = props\r\n  const classes = useStyles();\r\n  return (\r\n    <ButtonGroup disableElevation fullWidth className={classes.btnGroup} variant=\"contained\" size='small' >\r\n\r\n      {/* ===Bold=== */}\r\n      <IconButton size=\"small\"\r\n        classes={{ root: editor?.isActive('bold') ? classes.active : classes.inActive }}\r\n        onClick={() => editor?.chain().focus().toggleBold().run()}\r\n      >\r\n        <FormatBoldIcon />\r\n      </IconButton>\r\n\r\n      {/* ===italic=== */}\r\n      <IconButton size=\"small\"\r\n        classes={{ root: editor?.isActive('italic') ? classes.active : classes.inActive }}\r\n        onClick={() => editor?.chain().focus().toggleItalic().run()}\r\n      >\r\n        <FormatItalicIcon />\r\n      </IconButton>\r\n\r\n      {/* ===Strike=== */}\r\n      <IconButton size=\"small\"\r\n        classes={{ root: editor?.isActive('strike') ? classes.active : classes.inActive }}\r\n        onClick={() => editor?.chain().focus().toggleStrike().run()}\r\n      >\r\n        <StrikethroughSIcon />\r\n      </IconButton>\r\n\r\n      {/* ===Code=== */}\r\n      <IconButton size=\"small\"\r\n        classes={{ root: editor?.isActive('code') ? classes.active : classes.inActive }}\r\n        onClick={() => editor?.chain().focus().toggleCode().run()}\r\n      >\r\n        <CodeIcon />\r\n      </IconButton>\r\n\r\n      {/* ===Paragraph=== */}\r\n      <IconButton size=\"small\"\r\n        classes={{ root: editor?.isActive('paragraph') ? classes.active : classes.inActive }}\r\n        onClick={() => editor?.chain().focus().setParagraph().run()}\r\n      >\r\n        <FormatTextdirectionLToRIcon />\r\n      </IconButton>\r\n \r\n      {/* ===bullet list=== */}\r\n      <IconButton size=\"small\"\r\n        classes={{ root: editor?.isActive('bulletList') ? classes.active : classes.inActive }}\r\n        onClick={() => editor?.chain().focus().toggleBulletList().run()}\r\n      >\r\n        <FormatListBulletedIcon />\r\n      </IconButton>\r\n\r\n      {/* ===order list=== */}\r\n      <IconButton size=\"small\"\r\n        classes={{ root: editor?.isActive('orderedList') ? classes.active : classes.inActive }}\r\n        onClick={() => editor?.chain().focus().toggleOrderedList().run()}\r\n      >\r\n        <FormatListNumberedIcon />\r\n      </IconButton>\r\n\r\n\r\n    </ButtonGroup>\r\n  );\r\n}\r\n\r\nconst EditorIcon = (props: any) => {\r\n  const { children, active, click } = props\r\n  const classes = useStyles()\r\n  return (\r\n    <IconButton size=\"small\"\r\n      classes={{ root: active ? classes.active : classes.inActive }}\r\n      onClick={() => click()}\r\n    >\r\n      {children}\r\n    </IconButton>\r\n  )\r\n}\r\n\r\nexport default EditorButton;\r\n","import React, { useEffect } from \"react\"\r\nimport { EditorContent, useEditor } from \"@tiptap/react\"\r\nimport StarterKit from \"@tiptap/starter-kit\"\r\nimport EditorButton from \"./EditorButtons\"\r\n\r\nconst TipTapEditor = (props: any) => {\r\n    const { value, onChange, onBlur } = props\r\n    const editor = useEditor({\r\n      extensions: [\r\n        StarterKit,\r\n      ],\r\n      content: value,\r\n      onUpdate: ({ editor }): void => onChange(editor.getHTML()),\r\n      onBlur: ({ editor }): void => onBlur(),\r\n    })\r\n  \r\n    // useEffect(() => {\r\n    //   editor?.commands?.setContent(value)\r\n    // }, [value,editor])\r\n  \r\n    return (\r\n      <>\r\n        <EditorButton editor={editor} />\r\n        <EditorContent editor={editor} />\r\n      </>\r\n    )\r\n  }\r\n\r\nexport default TipTapEditor","import {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  FormControl,\r\n  FormHelperText,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  IconButton,\r\n  makeStyles,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Tooltip,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\r\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Autocomplete, Pagination } from '@material-ui/lab';\r\nimport { Formik, getIn, useFormikContext, FieldArray } from 'formik';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport * as Yup from 'yup';\r\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\r\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\r\nimport Page from '../../components/Page/Page';\r\nimport TipTapEditor from '../../components/TipTapEditor/TipTapEditor';\r\nimport useConfModel from '../../hook/useConfModel';\r\nimport useService from '../../hook/useService';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport { uploadNewImage } from '../../utils/CloudinaryUtils';\r\nimport { imageUpload } from '../../utils/FirebaseUtils';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  root: {\r\n    width: theme.breakpoints.values.lg,\r\n    maxWidth: '100%',\r\n    margin: '0 auto',\r\n    padding: theme.spacing(3),\r\n  },\r\n  addIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  inner: {\r\n    minWidth: 700,\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(1),\r\n    justifyContent: 'center',\r\n  },\r\n  tabCard: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  sEvenly: {\r\n    display: 'flex',\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  iconPadd: {\r\n    padding: 5,\r\n  },\r\n  jCenter: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  imageView: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  themeButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n  },\r\n  lColor: {\r\n    color: 'white',\r\n  },\r\n  workouttermsavatar: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  deleteButton: {\r\n    width: '100%',\r\n    height: '50px',\r\n  },\r\n  avatarStyles: {\r\n    width: theme.spacing(15),\r\n    height: theme.spacing(15),\r\n    // margin: 'auto',\r\n  },\r\n  ingredientsAvatarStyle: {\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10),\r\n    margin: 'auto',\r\n  },\r\n  marginTopStyle: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  adjustmentTop: {\r\n    marginTop: '5px',\r\n  },\r\n  avatarRoot: {\r\n    borderRadius: 10,\r\n    marginRight: 15,\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10),\r\n  },\r\n  textPrimary: {\r\n    marginTop: 10,\r\n    fontWeight: 'bold',\r\n  },\r\n  textSecondary: {\r\n    marginTop: 10,\r\n  },\r\n  ingrdientsGridMain: {\r\n    marginTop: 10,\r\n  },\r\n  ingredientsAvatarRoot: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n    margin: 'auto',\r\n  },\r\n  htmlContentGrid: {\r\n    paddingLeft: theme.spacing(3),\r\n    paddingRight: theme.spacing(3),\r\n    paddingTop: theme.spacing(1),\r\n  },\r\n  noIngredientsText: {\r\n    marginBottom: theme.spacing(3),\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  htmlContent: {\r\n    '& ul': {\r\n      paddingLeft: '1.2rem',\r\n    },\r\n    '& p': {\r\n      textAlign: 'justify',\r\n    },\r\n  },\r\n}));\r\n\r\nconst WorkoutExercise = () => {\r\n  const classes = useStyles();\r\n  const { Post } = useService();\r\n  const Snackbar = useSnackbar();\r\n  const ConfModel = useConfModel();\r\n  const [stateData, setStateData] = useState({ page_no: 1, page_limit: 10 });\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const [dataList, setDataList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [addEditDialog, setAddEditDialog] = useState({\r\n    isOpen: false,\r\n    title: '',\r\n    okBtnText: '',\r\n    isEdit: false,\r\n    data: {},\r\n  });\r\n  const [viewDialog, setViewDialog] = useState({\r\n    isOpen: false,\r\n    title: '',\r\n    data: {},\r\n  });\r\n\r\n  const listWorkOutExercise = async () => {\r\n    setLoading(true);\r\n    Post('app/listWorkout', stateData)\r\n      .then((res: any) => {\r\n        setLoading(false);\r\n        if (!res.error) {\r\n          setDataList(res.data);\r\n          setPageCount(res.page_count);\r\n        } else {\r\n          Snackbar.show(res.message, 'error');\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        setLoading(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const onPageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    setStateData((prevState: any) => ({ ...prevState, page_no: value }));\r\n  };\r\n\r\n  const setElipsis = (text: any) => {\r\n    return text?.length >= 25 ? `${text.substring(0, 40)}...` : text;\r\n  };\r\n\r\n  const openAddDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      isEdit: false,\r\n      title: 'Add Exercise',\r\n      okBtnText: 'Save',\r\n    }));\r\n  };\r\n\r\n  const openEditDialog = (data: any) => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      isEdit: true,\r\n      data,\r\n      title: 'Edit Exercise',\r\n      okBtnText: 'Edit',\r\n    }));\r\n  };\r\n\r\n  const openViewDialog = (data: any) => {\r\n    setViewDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      data,\r\n      title: 'View Workout Exerice',\r\n    }));\r\n  };\r\n\r\n  const onDelete = (data: any) => {\r\n    const { openModel, setLoading, closeModel } = ConfModel;\r\n    const submitFunction = () => {\r\n      setLoading(true);\r\n      Post('app/deleteWorkout', { id: data._id })\r\n        .then(async (res: any) => {\r\n          setLoading(false);\r\n          closeModel();\r\n          onSuccessAction();\r\n          Snackbar.show(res.message, 'success');\r\n        })\r\n        .catch((err: any) => {\r\n          setLoading(false);\r\n          Snackbar.show('Internal Server Error', 'error');\r\n        });\r\n    };\r\n    openModel(submitFunction);\r\n  };\r\n\r\n  const closeAddEditDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const closeViewDialog = () => {\r\n    setViewDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const onSuccessAction = () => {\r\n    listWorkOutExercise();\r\n    closeAddEditDialog();\r\n  };\r\n\r\n  useEffect(() => {\r\n    listWorkOutExercise();\r\n  }, [stateData]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Page title='Workout Exercise' />\r\n\r\n      {/* =======Header====== */}\r\n      <Grid alignItems='flex-end' container justify='space-between' spacing={3}>\r\n        <Grid item>\r\n          <Typography component='h1' variant='h3'>\r\n            Workout Exercise\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant='contained'\r\n            onClick={() => openAddDialog()}\r\n            className={classes.themeButton}\r\n            startIcon={<AddIcon />}\r\n          >\r\n            Add\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* =============Search======== */}\r\n      {/* <Grid container spacing={3}>\r\n        <Grid item>\r\n          <Paper elevation={0}>\r\n            <TextField\r\n              fullWidth\r\n              size='small'\r\n              placeholder='Name'\r\n              variant='outlined'\r\n              name='state'\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid> */}\r\n\r\n      {/* ========Table With Pagination========= */}\r\n      <Card className={classes.tabCard}>\r\n        <CardContent className={classes.content}>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align='center'>#</TableCell>\r\n                  <TableCell align='center'>Workout Image</TableCell>\r\n                  <TableCell align='center'>Workout Name</TableCell>\r\n                  <TableCell align='center'>Workout Description</TableCell>\r\n                  <TableCell align='center'>Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {!loading &&\r\n                  dataList.map((data: any, index: number) => (\r\n                    <TableRow hover key={index}>\r\n                      <TableCell align='center'>\r\n                        {stateData.page_limit * (stateData.page_no - 1) +\r\n                          index +\r\n                          1}\r\n                      </TableCell>\r\n                      <TableCell align='center'>\r\n                        <div className={classes.jCenter}>\r\n                          <Avatar variant='square' src={data?.workout_image?.url} />\r\n                        </div>\r\n                      </TableCell>\r\n                      <TableCell align='center'>{data?.workout_name}</TableCell>\r\n                      <TableCell align='center'>\r\n                        <Tooltip title={data?.workout_description}>\r\n                          <span>{setElipsis(data?.workout_description)}</span>\r\n                        </Tooltip>\r\n                      </TableCell>\r\n                      <TableCell align='center'>\r\n                        <div className={classes.sEvenly}>\r\n                          <Tooltip title='View' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openViewDialog(data)}\r\n                            >\r\n                              <CenterFocusStrongIcon color='primary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Edit' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openEditDialog(data)}\r\n                            >\r\n                              <EditIcon color='action' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Delete' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => onDelete(data)}\r\n                            >\r\n                              <DeleteIcon color='secondary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                {loading && <TableLoader />}\r\n                {!loading && dataList.length == 0 && (\r\n                  <TableNoData>No Data Found</TableNoData>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </CardContent>\r\n\r\n        <CardActions className={classes.actions}>\r\n          <Pagination\r\n            count={pageCount}\r\n            page={stateData.page_no}\r\n            onChange={onPageChange}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n\r\n      {/* ============Add Edit Dialog========== */}\r\n      <AddEditDailog\r\n        {...addEditDialog}\r\n        onClose={closeAddEditDialog}\r\n        onSuccess={onSuccessAction}\r\n      />\r\n\r\n      {/* ============View Dialog========== */}\r\n      <ViewDailog {...viewDialog} onClose={closeViewDialog} />\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface Workoutterms {\r\n  name: string;\r\n  image: { file: null | any; prevImage: string | any; isNew: null | Boolean };\r\n  description: any;\r\n}\r\n\r\ninterface Equipments {\r\n  id: string | any;\r\n}\r\n\r\ninterface Exercise {\r\n  workout_name: string;\r\n  workout_image: { file: null | any; prevImage: string; isNew: null | Boolean };\r\n  workout_description: string;\r\n  workout_thumbnail: {\r\n    file: null | any;\r\n    prevImage: string;\r\n    isNew: null | Boolean;\r\n  };\r\n  workout_type: string;\r\n  workout_terms: Workoutterms[];\r\n  required_equipments: Equipments[];\r\n  how_to_do: string;\r\n}\r\n\r\nconst AddEditDailog = (props: any) => {\r\n  const {\r\n    isOpen,\r\n    title,\r\n    onClose,\r\n    isEdit,\r\n    data,\r\n    onSuccess,\r\n    okBtnText = 'Ok',\r\n  } = props;\r\n  const classes = useStyles();\r\n  const formikRef = useRef<any>(null);\r\n  const imageRef = useRef<any>(null);\r\n  const thumbnailImageRef = useRef<any>(null);\r\n  const Snackbar = useSnackbar();\r\n  const { Post } = useService();\r\n  const [equipmentList, setEquipmentList] = useState<any>([]);\r\n\r\n  const workoutTerms: Workoutterms = {\r\n    name: '',\r\n    image: { file: null, prevImage: '', isNew: null },\r\n    description: '',\r\n  };\r\n\r\n  const equipments: Equipments = {\r\n    id: '',\r\n  };\r\n\r\n  const initialFormValue: Exercise = {\r\n    workout_name: '',\r\n    workout_image: { file: null, prevImage: '', isNew: null },\r\n    workout_description: '',\r\n    workout_thumbnail: { file: null, prevImage: '', isNew: null },\r\n    workout_type: '',\r\n    workout_terms: [workoutTerms],\r\n    required_equipments: [equipments],\r\n    how_to_do: '',\r\n  };\r\n\r\n  const [initialValue, setInitialValue] = useState({ ...initialFormValue });\r\n\r\n  const listIngredients = async () => {\r\n    Post('app/listAllEquipment', {})\r\n      .then((res: any) => {\r\n        if (!res.error) {\r\n          let getequipmentList = res.data.map((data: any) => {\r\n            data.id = data._id;\r\n            return data;\r\n          });\r\n          setEquipmentList(getequipmentList);\r\n        } else {\r\n          Snackbar.show(res.message, 'error');\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const onImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    e.persist();\r\n    const files = e.target.files;\r\n    if (files && files.length != 0) {\r\n      const reader = new FileReader();\r\n      const file = files[0];\r\n      reader.onloadend = () => {\r\n        formikRef.current.setFieldValue('workout_image', {\r\n          file,\r\n          prevImage: reader.result,\r\n          isNew: true,\r\n        });\r\n      };\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      formikRef.current.setFieldValue('workout_image', {\r\n        file: null,\r\n        prevImage: '',\r\n        isNew: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onThumbnailImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    e.persist();\r\n    const files = e.target.files;\r\n    if (files && files.length != 0) {\r\n      const reader = new FileReader();\r\n      const file = files[0];\r\n      reader.onloadend = () => {\r\n        formikRef.current.setFieldValue('workout_thumbnail', {\r\n          file,\r\n          prevImage: reader.result,\r\n          isNew: true,\r\n        });\r\n      };\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      formikRef.current.setFieldValue('workout_thumbnail', {\r\n        file: null,\r\n        prevImage: '',\r\n        isNew: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onSubmit = (value: any, helper: any) => {\r\n    try {\r\n      helper.setSubmitting(true);\r\n\r\n      const render = async () => {\r\n        const { workout_image, workout_thumbnail, workout_terms, ...rest } = value;\r\n\r\n        const postData = rest;\r\n        const TermPromiseArray = Promise.all(workout_terms.map(({ image, ...rest }: any) => uploadNewImage(image).then((ImgRes: any) => ({ image: ImgRes, ...rest }))))\r\n\r\n        const [ImgRes, ImgTumpRes, TermRes] = await Promise.all([uploadNewImage(workout_image), uploadNewImage(workout_thumbnail), TermPromiseArray])\r\n\r\n        postData.workout_image = ImgRes\r\n        postData.workout_thumbnail = ImgTumpRes\r\n        postData.workout_terms = TermRes\r\n\r\n        !isEdit && addData(postData, helper);\r\n        isEdit && editData(postData, helper);\r\n\r\n      };\r\n      render();\r\n    } catch (err) {\r\n      Snackbar.show('Image Upload Failed', 'error');\r\n    }\r\n  };\r\n\r\n  const addData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    console.log(data)\r\n    setSubmitting(true);\r\n    Post('app/addWorkout', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const editData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n    Post('app/editWorkout', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const handleEquipmentChange = (event: any, newValue: any) => {\r\n    let sampleDatas = newValue.map((datas: any) => {\r\n      return {\r\n        id: datas._id,\r\n      };\r\n    });\r\n    formikRef.current.setFieldValue('required_equipments', sampleDatas);\r\n  };\r\n\r\n  const addIngredients = (values: Exercise, push: any) => {\r\n    let { workout_terms } = values;\r\n    push(workoutTerms);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isEdit) {\r\n      const { required_equipments, workout_terms, _id, workout_thumbnail, workout_image, ...rest } = data;\r\n      const editData = { ...rest, id: _id };\r\n      editData.required_equipments = required_equipments.map((data: any) => {\r\n        // data.id = data._id;\r\n        return {\r\n          id: data._id,\r\n        };\r\n      });\r\n\r\n      const EquipmentIds = equipmentList.map(({ _id }: any) => _id)\r\n      editData.required_equipments = required_equipments.filter(({ _id }: any) => EquipmentIds.includes(_id)).map(({ _id }: any) => ({ id: _id }));\r\n      editData.workout_terms = workout_terms.map((item: any) => {\r\n        return {\r\n          name: item.name,\r\n          image: { file: item.image, prevImage: item.image?.url, isNew: false },\r\n          description: item.description,\r\n        };\r\n      });\r\n      editData.workout_thumbnail = {\r\n        file: workout_thumbnail,\r\n        prevImage: workout_thumbnail?.url,\r\n        isNew: false,\r\n      };\r\n      editData.workout_image = {\r\n        file: workout_image,\r\n        prevImage: workout_image?.url,\r\n        isNew: false,\r\n      };\r\n      setInitialValue(editData);\r\n    } else {\r\n      setInitialValue(initialFormValue);\r\n    }\r\n  }, [props]);\r\n\r\n  useEffect(() => {\r\n    listIngredients();\r\n  }, []);\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      fullWidth\r\n      maxWidth='md'\r\n      aria-labelledby='dialog-title'\r\n      open={isOpen}\r\n    >\r\n      <DialogTitle id='dialog-title' onClose={onClose}>\r\n        {title}\r\n      </DialogTitle>\r\n\r\n      <Formik\r\n        innerRef={formikRef}\r\n        enableReinitialize\r\n        initialValues={initialValue}\r\n        onSubmit={onSubmit}\r\n        validationSchema={Yup.object().shape({\r\n          workout_name: Yup.string()\r\n            .trim()\r\n            .required('Workout name is required'),\r\n          workout_image: Yup.object({\r\n            file: Yup.mixed().required('A file is required'),\r\n          }),\r\n          workout_description: Yup.string()\r\n            .trim()\r\n            .max(250, 'Must be 250 characters or less')\r\n            .required('Workout description is required'),\r\n          workout_thumbnail: Yup.object({\r\n            file: Yup.mixed().required('A file is required'),\r\n          }),\r\n          workout_type: Yup.string()\r\n            .trim()\r\n            .required('Workout type is required'),\r\n          workout_terms: Yup.array().of(\r\n            Yup.object().shape({\r\n              name: Yup.string()\r\n                .trim()\r\n                .required('Workout term name is Required'),\r\n              image: Yup.object({\r\n                file: Yup.mixed().required('required'),\r\n              }),\r\n              description: Yup.string()\r\n                .max(250, 'Must be 250 characters or less')\r\n                .required('Workout description is Required'),\r\n            })\r\n          ),\r\n          required_equipments: Yup.array().of(\r\n            Yup.object().shape({\r\n              id: Yup.string().trim().required(' Equipments is Required'),\r\n            })\r\n          ),\r\n          how_to_do: Yup.string().trim().required('Steps is required'),\r\n        })}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          setFieldValue,\r\n          handleBlur,\r\n          setFieldTouched,\r\n          submitForm,\r\n          isSubmitting,\r\n        }) => (\r\n          <>\r\n            <DialogContent dividers>\r\n              <Grid container spacing={3}>\r\n                <Grid item md={12} xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label='Workout name'\r\n                    name='workout_name'\r\n                    variant='outlined'\r\n                    error={Boolean(touched.workout_name && errors.workout_name)}\r\n                    helperText={touched.workout_name && errors.workout_name}\r\n                    value={values.workout_name}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item md={12} xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    multiline\r\n                    label='Workout description'\r\n                    name='workout_description'\r\n                    variant='outlined'\r\n                    error={Boolean(\r\n                      touched.workout_description && errors.workout_description\r\n                    )}\r\n                    helperText={\r\n                      touched.workout_description && errors.workout_description\r\n                    }\r\n                    value={values.workout_description}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item md={12} xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    multiline\r\n                    label='Workout type'\r\n                    name='workout_type'\r\n                    variant='outlined'\r\n                    error={Boolean(touched.workout_type && errors.workout_type)}\r\n                    helperText={touched.workout_type && errors.workout_type}\r\n                    value={values.workout_type}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                </Grid>\r\n\r\n                <FieldArray name='workout_terms' validateOnChange>\r\n                  {({push, remove})=>(\r\n                    <>\r\n                      <Grid item md={12} xs={12}>\r\n                        <Button\r\n                          fullWidth\r\n                          className={classes.themeButton}\r\n                          variant='contained'\r\n                          color='default'\r\n                          onClick={() => addIngredients(values, push)}\r\n                          endIcon={<ControlPointIcon />}\r\n                        >\r\n                          Add workout terms\r\n                        </Button>\r\n                      </Grid>\r\n                    {values?.workout_terms?.map((workoutValues: any, index: any) => <WorkoutTerms key={index} index={index} />)}\r\n                    </>\r\n                  )}\r\n                </FieldArray>\r\n                <Grid item md={12} xs={12}>\r\n                  <Autocomplete\r\n                    multiple\r\n                    id='combo-box-demo'\r\n                    options={equipmentList}\r\n                    value={equipmentList.filter((data: any) =>\r\n                      values.required_equipments\r\n                        .map(({ id }: any) => id)\r\n                        .includes(data._id)\r\n                    )}\r\n                    onChange={handleEquipmentChange}\r\n                    getOptionLabel={(option: any) => option.name}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        label='Equipments'\r\n                        name='required_equipments'\r\n                        variant='outlined'\r\n                        error={Boolean(\r\n                          touched?.required_equipments &&\r\n                          touched?.required_equipments[0]?.id &&\r\n                          errors?.required_equipments &&\r\n                          (errors?.required_equipments[0] as any)?.id\r\n                        )}\r\n                        helperText={\r\n                          touched?.required_equipments &&\r\n                          touched?.required_equipments[0]?.id &&\r\n                          errors?.required_equipments &&\r\n                          (errors?.required_equipments[0] as any)?.id\r\n                        }\r\n                        inputProps={{\r\n                          ...params.inputProps,\r\n                        }}\r\n                      />\r\n                    )}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item md={12} xs={12}>\r\n                  <FormControl\r\n                    fullWidth\r\n                    error={Boolean(touched?.how_to_do && errors?.how_to_do)}\r\n                  >\r\n                    <TipTapEditor\r\n                      value={values.how_to_do}\r\n                      onChange={(value: any) =>\r\n                        setFieldValue('how_to_do', value)\r\n                      }\r\n                      onBlur={() => setFieldTouched('how_to_do', true, true)}\r\n                    />\r\n\r\n                    <FormHelperText>\r\n                      {touched?.how_to_do && errors?.how_to_do}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item md={6} xs={6}>\r\n                  <input\r\n                    name='recipe_image'\r\n                    ref={imageRef}\r\n                    type='file'\r\n                    accept='.jpg,.png,jpeg'\r\n                    onChange={onImageChange}\r\n                    onBlur={handleBlur}\r\n                    hidden\r\n                  />\r\n                  <Button\r\n                    fullWidth\r\n                    className={classes.themeButton}\r\n                    variant='contained'\r\n                    color='default'\r\n                    onClick={() => imageRef.current.click()}\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Workout image\r\n                  </Button>\r\n                  <FormControl\r\n                    error={Boolean(\r\n                      touched?.workout_image?.file &&\r\n                      errors?.workout_image?.file\r\n                    )}\r\n                  >\r\n                    <FormHelperText>\r\n                      {touched?.workout_image?.file &&\r\n                        errors?.workout_image?.file}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item md={6} xs={6}>\r\n                  <input\r\n                    name='recipe_image'\r\n                    ref={thumbnailImageRef}\r\n                    type='file'\r\n                    accept='.jpg,.png,jpeg'\r\n                    onChange={onThumbnailImageChange}\r\n                    onBlur={handleBlur}\r\n                    hidden\r\n                  />\r\n                  <Button\r\n                    fullWidth\r\n                    className={classes.themeButton}\r\n                    variant='contained'\r\n                    color='default'\r\n                    onClick={() => thumbnailImageRef.current.click()}\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Workout Thumbnail\r\n                  </Button>\r\n                  <FormControl\r\n                    error={Boolean(\r\n                      touched?.workout_thumbnail?.file &&\r\n                      errors?.workout_thumbnail?.file\r\n                    )}\r\n                  >\r\n                    <FormHelperText>\r\n                      {touched?.workout_thumbnail?.file &&\r\n                        errors?.workout_thumbnail?.file}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item md={6} xs={6}>\r\n                  {values.workout_image?.prevImage && (\r\n                    <img\r\n                      className={classes.imageView}\r\n                      src={values.workout_image?.prevImage}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n\r\n                <Grid item md={6} xs={6}>\r\n                  {values.workout_thumbnail?.prevImage && (\r\n                    <img\r\n                      className={classes.imageView}\r\n                      src={values.workout_thumbnail?.prevImage}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n              <Button onClick={onClose} variant='outlined' color='secondary'>\r\n                Cancel\r\n              </Button>\r\n\r\n              <Button\r\n                className={classes.themeButton}\r\n                onClick={() => submitForm()}\r\n                disabled={isSubmitting}\r\n                variant='outlined'\r\n              >\r\n                {isSubmitting ? (\r\n                  <CircularProgress size={24} className={classes.lColor} />\r\n                ) : (\r\n                  okBtnText\r\n                )}\r\n              </Button>\r\n            </DialogActions>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst WorkoutTerms = (props: any) => {\r\n  const classes = useStyles();\r\n  const FormikContext = useFormikContext();\r\n  const [{ values, errors, touched, setFieldValue, handleBlur, handleChange }, setFormikContext] = useState<any>(FormikContext);\r\n  const { index } = props;\r\n  const imgRef = useRef<any>(null)\r\n  const FieldName = `workout_terms[${index}]`;\r\n  const FieldValue = getIn(values, `workout_terms[${index}]`);\r\n  const FieldError = getIn(errors, `workout_terms[${index}]`);\r\n  const FieldTouched = getIn(touched, `workout_terms[${index}]`);\r\n\r\n  const onImageChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    event.persist();\r\n    const files = event.target.files;\r\n    if (files && files.length != 0) {\r\n      const reader = new FileReader();\r\n      const file = files[0];\r\n      reader.onloadend = () => {\r\n        setFieldValue(`${FieldName}.image`, { file, prevImage: reader.result, isNew: true, });\r\n      };\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      setFieldValue(`${FieldName}.image`, { file: null, prevImage: '', isNew: null });\r\n    }\r\n  }\r\n\r\n  const removeTerm = () => {\r\n    const OldTerms = getIn(values, 'workout_terms');\r\n    const Terms = OldTerms.filter((d: any, i: number) => i != index);\r\n    setFieldValue('workout_terms', Terms);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setFormikContext(FormikContext)\r\n  }, [FormikContext])\r\n\r\n  return (\r\n    <Grid\r\n      item\r\n      container\r\n      md={12}\r\n      xs={12}\r\n      direction='row'\r\n      spacing={2}\r\n    >\r\n      <Grid item md={1} xs={12}>\r\n        <input\r\n          name={`${FieldName}.image`}\r\n          ref={imgRef}\r\n          type='file'\r\n          accept='.jpg,.png,jpeg'\r\n          onChange={(e) => onImageChange(e)}\r\n          onBlur={handleBlur}\r\n          hidden\r\n        />\r\n        <Avatar\r\n          className={classes.workouttermsavatar}\r\n          variant='square'\r\n          onClick={() => imgRef?.current?.click()}\r\n          src={FieldValue?.image?.prevImage}\r\n        />\r\n        <FormControl error={Boolean(FieldTouched?.image?.file && FieldError?.image?.file)}>\r\n          <FormHelperText>{FieldTouched?.image?.file && FieldError?.image?.file}</FormHelperText>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item md={5} xs={12}>\r\n        <TextField\r\n          fullWidth\r\n          multiline\r\n          label='Workout terms name'\r\n          name={`${FieldName}.name`}\r\n          variant='outlined'\r\n          error={Boolean(FieldTouched?.name && FieldError?.name)}\r\n          helperText={FieldTouched?.name && FieldError?.name}\r\n          value={FieldValue.name}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n      <Grid item md={5} xs={8}>\r\n        <TextField\r\n          fullWidth\r\n          multiline\r\n          label='Workout terms description'\r\n          name={`${FieldName}.description`}\r\n          variant='outlined'\r\n          error={Boolean(FieldTouched?.description && FieldError?.description)}\r\n          helperText={FieldTouched?.description && FieldError?.description}\r\n          value={FieldValue.description}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item md={1} xs={4}>\r\n        {values?.workout_terms.length > 1 && (\r\n          <Button\r\n            fullWidth\r\n            className={classes.deleteButton}\r\n            variant='contained'\r\n            color='secondary'\r\n            onClick={() => removeTerm()}\r\n          >\r\n            <DeleteIcon />\r\n          </Button>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst ViewDailog = (props: any) => {\r\n  const { isOpen, title, onClose, data } = props;\r\n  const classes = useStyles();\r\n  const [formValue, setFormValue] = useState(data);\r\n\r\n  useEffect(() => {\r\n    setFormValue(data);\r\n  }, [props]);\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      fullWidth\r\n      maxWidth='sm'\r\n      aria-labelledby='dialog-view-title'\r\n      open={isOpen}\r\n    >\r\n      <DialogTitle id='dialog-view-title' onClose={onClose}>\r\n        {title}\r\n      </DialogTitle>\r\n\r\n      <DialogContent dividers>\r\n        <div>\r\n          <img\r\n            src={formValue?.workout_image?.url}\r\n            alt={'Workout image'}\r\n            className={classes.imageView}\r\n          />\r\n        </div>\r\n        <Typography variant='h5' align='left' className={classes.textPrimary}>{formValue?.workout_name}</Typography>\r\n\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          className={classes.ingrdientsGridMain}\r\n          justify='center'\r\n        >\r\n          {formValue?.workout_terms?.map((value: any, index: any) => (\r\n            <Grid key={index} item xs={4} md={3}>\r\n              <Avatar\r\n                className={classes.ingredientsAvatarRoot}\r\n                src={value?.image?.url}\r\n              />\r\n              <Typography variant='h6' align='center'>\r\n                {value?.name}\r\n              </Typography>\r\n              <Typography variant='subtitle2' align='center'>\r\n                {value.description.length >= 25\r\n                  ? `${value.description.substring(0, 30)}...`\r\n                  : value.description}\r\n              </Typography>\r\n            </Grid>\r\n          ))}\r\n          {formValue?.workout_terms?.length == 0 && (\r\n            <Grid item xs={12} md={12} className={classes.noIngredientsText}>\r\n              <div>No workout terms added</div>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n        <Typography variant='h6' align='left' className={classes.textSecondary}>{formValue?.workout_description}</Typography>\r\n\r\n\r\n\r\n        <Typography variant='h5' align='left' style={{ color: '#41A58D' }} className={classes.textPrimary}>\r\n          Equipments\r\n        </Typography>\r\n\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          className={classes.ingrdientsGridMain}\r\n          justify='center'\r\n        >\r\n          {formValue?.required_equipments?.map((value: any, index: any) => (\r\n            <Grid key={index} item xs={4} md={3}>\r\n              <Avatar\r\n                className={classes.ingredientsAvatarRoot}\r\n                src={value?.image?.url}\r\n              />\r\n              <Typography variant='h6' align='center'>\r\n                {value?.name}\r\n              </Typography>\r\n              {/* <Typography variant='subtitle2' align='center'>\r\n                {value.description.length >= 25\r\n                  ? `${value.description.substring(0, 30)}...`\r\n                  : value.description}\r\n              </Typography> */}\r\n            </Grid>\r\n          ))}\r\n          {formValue?.required_equipments?.length == 0 && (\r\n            <Grid item xs={12} md={12} className={classes.noIngredientsText}>\r\n              <div>No Equipments Added</div>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n\r\n        <Typography variant='h6' align='left' style={{ color: '#41A58D' }}>\r\n          How to do\r\n        </Typography>\r\n\r\n        <Grid container>\r\n          <Grid item xs={12} md={12} className={classes.htmlContentGrid}>\r\n            <div\r\n              className={classes.htmlContent}\r\n              dangerouslySetInnerHTML={{ __html: formValue?.how_to_do }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={onClose} variant='outlined' color='secondary'>\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default WorkoutExercise;\r\n"],"sourceRoot":""}