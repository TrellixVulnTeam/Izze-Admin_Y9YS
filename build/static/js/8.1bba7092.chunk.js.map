{"version":3,"sources":["../node_modules/@material-ui/icons/ControlPoint.js","components/UnitSelect/UnitSelect.tsx","utils/MetricUnits.tsx","../node_modules/@material-ui/icons/Check.js","../node_modules/@material-ui/core/esm/ListItemAvatar/ListItemAvatar.js","../node_modules/@material-ui/core/esm/ListItemText/ListItemText.js","hook/useCalories.tsx","../node_modules/@material-ui/icons/ChevronRight.js","../node_modules/@material-ui/icons/KeyboardArrowUp.js","../node_modules/@material-ui/core/esm/MenuItem/MenuItem.js","../node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","pages/NutritionPlan/FormikValues.tsx","pages/NutritionPlan/NutritionPlan.tsx"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","useStyles","makeStyles","theme","selectRoot","borderColor","selectIcon","right","formControlRoot","minWidth","UnitSelect","props","useState","name","id","option","placeholder","onChange","Function","onBlur","setProps","classes","useEffect","variant","className","shrink","labelId","icon","map","i","UnitDropdown","ListItemAvatar","ref","other","_objectWithoutProperties","context","ListContext","_extends","clsx","root","alignItems","alignItemsFlexStart","withStyles","flexShrink","marginTop","ListItemText","children","_props$disableTypogra","disableTypography","_props$inset","inset","primaryProp","primary","primaryTypographyProps","secondaryProp","secondary","secondaryTypographyProps","dense","type","Typography","component","display","color","multiline","flex","marginBottom","paddingLeft","useCalories","caloriesData","sampleObject","toString","push","MenuItem","tabIndex","_props$component","_props$disableGutters","disableGutters","ListItemClasses","_props$role","role","selected","tabIndexProp","disabled","undefined","ListItem","button","gutters","typography","body1","_defineProperty","minHeight","paddingTop","paddingBottom","boxSizing","width","overflow","whiteSpace","breakpoints","up","body2","CardHeader","action","avatar","Component","subheaderProp","subheader","subheaderTypographyProps","titleProp","title","titleTypographyProps","content","padding","marginRight","alignSelf","NutQuantity","macros","gram","calories","NutMealTime","isEdit","meal_time","order","meals","NutMeal","ingredients","quantity","quantity_unit","protein","fat","carbs","initialFormValues","diet_type","nutrition","ValNut","Yup","typeError","required","validation","shape","trim","of","min","values","lg","maxWidth","margin","spacing","tabCard","themeButton","palette","white","backgroundColor","green","main","dark","sEvenly","justifyContent","sBetween","iconPadd","jCenter","actions","tabRoot","textTransform","tabIndicator","tabTextColorInherit","border","tabPanelRoot","listItemRoot","flexDisplay","paperRoot","paperRoot1","tablePanelRoot","largeAvatar","height","justPadding","borderRadius","tabBtnIcon","divTab","flexDirection","avatarRoot","textPrimary","fontWeight","textSecondary","noPadding","benefitsList","fontSize","cardRoot","position","cardMediaRoot","cardContentRoot","cardActionsRoot","cardActionsBenifitsRoot","ulRoot","listStyle","liRoot","textIndent","ulTypo","marginLeft","colorProtein","colorFat","colorCarbs","dividerRoot","background","mealTimeText","benefitsText","nutritionTextDiv","top","left","nutritionText","nutCard","nutCardRoot","nutCardTitle","textAlign","nutCardAction","circleBottom","circleTop","textareaAdornedEnd","paddingRight","DietTypeDrop","AddEditModel","isOpen","okBtnText","onClose","data","onSuccess","formikRef","useRef","Snackbar","useSnackbar","Post","useService","getCaloriesData","tabValue","setTabValue","ingredientList","setIngredientList","initialValue","setInitialValue","addData","setSubmitting","resetForm","then","res","show","message","catch","err","editData","handleChangeTab","newValue","getArrayError","error","_id","rest","NutData","NewMeals","MealData","IngredientIds","NewInc","filter","includes","console","log","response","Dialog","open","disableBackdropClick","disableEscapeKeyDown","fullWidth","fullScreen","aria-labelledby","DialogTitle","innerRef","enableReinitialize","initialValues","validationSchema","onSubmit","helper","postData","errors","touched","handleChange","handleBlur","setFieldValue","submitForm","isSubmitting","DialogContent","dividers","Grid","container","item","xs","Autocomplete","options","find","getOptionLabel","getOptionSelected","event","renderInput","params","TextField","label","Boolean","helperText","inputProps","key","style","align","subData","index","SubKey","FieldName","getIn","TabContext","validateOnChange","remove","TabList","indicator","orientation","nutData","FieldTouched","FieldErrors","SelectedStyle","Number","borderRight","size","Button","onClick","NewNutrition","submitMealTime","e","editMealTime","FormHelperText","FormControl","addNewTab","endIcon","FieldMainName","TabPanel","mealData","removeMeals","md","multiple","IngIds","InputProps","adornedEnd","endAdornment","DialogActions","CircularProgress","ViewNutritionModel","formValue","setFormValue","Paper","Table","TableBody","TableRow","TableCell","dropValues","getDropValues","Card","CardActions","Tab","textColorInherit","incData","benfits","sm","elevation","CardContent","List","Avatar","src","image","url","disableSpacing","Divider","benfData","CircularProgressWithLabel","Box","thickness","bottom","Math","round","NutritionData","setData","setTitle","NutritionPlan","ConfModel","useConfModel","loading","setLoading","page_no","page_limit","stateData","setStateData","pageCount","setPageCount","nutritionPlanList","setNutritionPlanList","addEditDialog","setAddEditDialog","viewDialog","setViewDialog","listNutritionPlan","a","page_count","closeAddEditDialog","prevState","onSuccessAction","Page","justify","startIcon","TableContainer","TableHead","hover","Tooltip","arrow","IconButton","openViewDialog","openEditDialog","openModel","closeModel","onDelete","length","Pagination","count","page"],"mappings":"gHAEA,IAAIA,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAQN,EAAwBD,EAAQ,IAIxCQ,GAAW,EAFMT,EAAuBC,EAAQ,KAElBM,SAAuBC,EAAME,cAAc,OAAQ,CACnFC,EAAG,mKACD,gBAEJN,EAAQE,QAAUE,G,wGChBZG,EAAYC,aAAW,SAACC,GAAD,MAAiB,CAC5CC,WAAY,CACV,qCAAsC,CACpCC,YAAa,qBAGjBC,WAAY,CACVC,MAAO,GAETC,gBAAiB,CACfC,SAAU,aA0CCC,IAtCI,SAACC,GAClB,MAQeC,mBAASD,GARxB,8BACEhB,aADF,MACU,GADV,MAEEkB,YAFF,MAES,GAFT,MAGEC,UAHF,MAGO,SAHP,MAIEC,cAJF,MAIW,GAJX,MAKEC,mBALF,MAKgB,OALhB,MAMEC,gBANF,MAMa,IAAIC,SANjB,MAOEC,cAPF,MAOW,IAAID,SAPf,EAQGE,EARH,KAUMC,EAAUpB,IAKhB,OAJAqB,qBAAU,WACRF,EAAST,KACR,CAACA,IAGF,eAAC,IAAD,CAAaY,QAAQ,WAAWC,UAAWH,EAAQb,gBAAnD,UACE,cAAC,IAAD,CAAYM,GAAIA,EAAIW,QAAQ,EAA5B,SACY,IAAT9B,GAAeqB,IAElB,cAAC,IAAD,CACEU,QAASZ,EACTD,KAAMA,EACNlB,MAAOA,EACPsB,SAAUA,EACVE,OAAQA,EACRK,UAAWH,EAAQjB,WACnBiB,QAAS,CACPM,KAAMN,EAAQf,YARlB,SAWGS,EAAOa,KAAI,WAAoBC,GAApB,IAAGf,EAAH,EAAGA,GAAID,EAAP,EAAOA,KAAP,OAA+B,cAAC,IAAD,CAAkBlB,MAAOmB,EAAzB,SAA8BD,GAAfgB,a,iCCxCnDC,IATM,CACjB,CAAEhB,GAAI,OAAQD,KAAM,QACpB,CAAEC,GAAI,IAAKD,KAAM,KAGjB,CAAEC,GAAI,KAAMD,KAAM,MAClB,CAAEC,GAAI,MAAOD,KAAM,OACnB,CAAEC,GAAI,OAAQD,KAAM,U,iCCLxB,IAAIxB,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAQN,EAAwBD,EAAQ,IAIxCQ,GAAW,EAFMT,EAAuBC,EAAQ,KAElBM,SAAuBC,EAAME,cAAc,OAAQ,CACnFC,EAAG,sDACD,SAEJN,EAAQE,QAAUE,G,iCCnBlB,sDAuBIiC,EAA8BlC,cAAiB,SAAwBc,EAAOqB,GAChF,IAAIX,EAAUV,EAAMU,QAChBG,EAAYb,EAAMa,UAClBS,EAAQC,YAAyBvB,EAAO,CAAC,UAAW,cAEpDwB,EAAUtC,aAAiBuC,KAC/B,OAAoBvC,gBAAoB,MAAOwC,YAAS,CACtDb,UAAWc,YAAKjB,EAAQkB,KAAMf,EAAkC,eAAvBW,EAAQK,YAA+BnB,EAAQoB,qBACxFT,IAAKA,GACJC,OAwBUS,gBAjDK,CAElBH,KAAM,CACJ9B,SAAU,GACVkC,WAAY,GAIdF,oBAAqB,CACnBG,UAAW,IAwCmB,CAChC/B,KAAM,qBADO6B,CAEZX,I,iCC1DH,+DAqCIc,EAA4BhD,cAAiB,SAAsBc,EAAOqB,GAC5E,IAAIc,EAAWnC,EAAMmC,SACjBzB,EAAUV,EAAMU,QAChBG,EAAYb,EAAMa,UAClBuB,EAAwBpC,EAAMqC,kBAC9BA,OAA8C,IAA1BD,GAA2CA,EAC/DE,EAAetC,EAAMuC,MACrBA,OAAyB,IAAjBD,GAAkCA,EAC1CE,EAAcxC,EAAMyC,QACpBC,EAAyB1C,EAAM0C,uBAC/BC,EAAgB3C,EAAM4C,UACtBC,EAA2B7C,EAAM6C,yBACjCvB,EAAQC,YAAyBvB,EAAO,CAAC,WAAY,UAAW,YAAa,oBAAqB,QAAS,UAAW,yBAA0B,YAAa,6BAG7J8C,EADoB5D,aAAiBuC,KACXqB,MAE1BL,EAAyB,MAAfD,EAAsBA,EAAcL,EAEnC,MAAXM,GAAmBA,EAAQM,OAASC,KAAeX,IACrDI,EAAuBvD,gBAAoB8D,IAAYtB,YAAS,CAC9Dd,QAASkC,EAAQ,QAAU,QAC3BjC,UAAWH,EAAQ+B,QACnBQ,UAAW,OACXC,QAAS,SACRR,GAAyBD,IAG9B,IAAIG,EAAYD,EAWhB,OATiB,MAAbC,GAAqBA,EAAUG,OAASC,KAAeX,IACzDO,EAAyB1D,gBAAoB8D,IAAYtB,YAAS,CAChEd,QAAS,QACTC,UAAWH,EAAQkC,UACnBO,MAAO,gBACPD,QAAS,SACRL,GAA2BD,IAGZ1D,gBAAoB,MAAOwC,YAAS,CACtDb,UAAWc,YAAKjB,EAAQkB,KAAMf,EAAWiC,GAASpC,EAAQoC,MAAOP,GAAS7B,EAAQ6B,MAAOE,GAAWG,GAAalC,EAAQ0C,WACzH/B,IAAKA,GACJC,GAAQmB,EAASG,MA4DPb,gBAnIK,CAElBH,KAAM,CACJyB,KAAM,WACNvD,SAAU,EACVmC,UAAW,EACXqB,aAAc,GAIhBF,UAAW,CACTnB,UAAW,EACXqB,aAAc,GAIhBR,MAAO,GAGPP,MAAO,CACLgB,YAAa,IAIfd,QAAS,GAGTG,UAAW,IAwGqB,CAChC1C,KAAM,mBADO6B,CAEZG,I,iCClIYsB,IAXf,WAEI,IADA,IAAIC,EAAe,GACVvC,EAAI,IAAKA,GAAK,IAAMA,GAAK,IAAK,CACnC,IAAIwC,EAAoB,GACxBA,EAAavD,GAAKe,EAClBwC,EAAaxD,KAAOgB,EAAEyC,WACtBF,EAAaG,KAAKF,GAEtB,OAAOD,I,iCCNX,IAAI/E,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAQN,EAAwBD,EAAQ,IAIxCQ,GAAW,EAFMT,EAAuBC,EAAQ,KAElBM,SAAuBC,EAAME,cAAc,OAAQ,CACnFC,EAAG,mDACD,gBAEJN,EAAQE,QAAUE,G,iCCjBlB,IAAIT,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAQN,EAAwBD,EAAQ,IAIxCQ,GAAW,EAFMT,EAAuBC,EAAQ,KAElBM,SAAuBC,EAAME,cAAc,OAAQ,CACnFC,EAAG,mDACD,mBAEJN,EAAQE,QAAUE,G,iCCnBlB,+DAoCI0E,EAAwB3E,cAAiB,SAAkBc,EAAOqB,GACpE,IAaIyC,EAbApD,EAAUV,EAAMU,QAChBG,EAAYb,EAAMa,UAClBkD,EAAmB/D,EAAMiD,UACzBA,OAAiC,IAArBc,EAA8B,KAAOA,EACjDC,EAAwBhE,EAAMiE,eAC9BA,OAA2C,IAA1BD,GAA2CA,EAC5DE,EAAkBlE,EAAMkE,gBACxBC,EAAcnE,EAAMoE,KACpBA,OAAuB,IAAhBD,EAAyB,WAAaA,EAC7CE,EAAWrE,EAAMqE,SACjBC,EAAetE,EAAM8D,SACrBxC,EAAQC,YAAyBvB,EAAO,CAAC,UAAW,YAAa,YAAa,iBAAkB,kBAAmB,OAAQ,WAAY,aAQ3I,OAJKA,EAAMuE,WACTT,OAA4BU,IAAjBF,EAA6BA,GAAgB,GAGtCpF,gBAAoBuF,IAAU/C,YAAS,CACzDgD,QAAQ,EACRN,KAAMA,EACNN,SAAUA,EACVb,UAAWA,EACXoB,SAAUA,EACVJ,eAAgBA,EAChBvD,QAASgB,YAAS,CAChBoB,MAAOpC,EAAQoC,OACdoB,GACHrD,UAAWc,YAAKjB,EAAQkB,KAAMf,EAAWwD,GAAY3D,EAAQ2D,UAAWJ,GAAkBvD,EAAQiE,SAClGtD,IAAKA,GACJC,OA8DUS,iBA1HK,SAAgBvC,GAClC,MAAO,CAELoC,KAAMF,YAAS,GAAIlC,EAAMoF,WAAWC,MAAOC,YAAgB,CACzDC,UAAW,GACXC,WAAY,EACZC,cAAe,EACfC,UAAW,aACXC,MAAO,OACPC,SAAU,SACVC,WAAY,UACX7F,EAAM8F,YAAYC,GAAG,MAAO,CAC7BR,UAAW,UAKbJ,QAAS,GAGTN,SAAU,GAGVvB,MAAOpB,YAAS,GAAIlC,EAAMoF,WAAWY,MAAO,CAC1CT,UAAW,YAkGiB,CAChC7E,KAAM,eADO6B,CAEZ8B,I,iCCpIH,uDAwCI4B,EAA0BvG,cAAiB,SAAoBc,EAAOqB,GACxE,IAAIqE,EAAS1F,EAAM0F,OACfC,EAAS3F,EAAM2F,OACfjF,EAAUV,EAAMU,QAChBG,EAAYb,EAAMa,UAClBkD,EAAmB/D,EAAMiD,UACzB2C,OAAiC,IAArB7B,EAA8B,MAAQA,EAClD3B,EAAwBpC,EAAMqC,kBAC9BA,OAA8C,IAA1BD,GAA2CA,EAC/DyD,EAAgB7F,EAAM8F,UACtBC,EAA2B/F,EAAM+F,yBACjCC,EAAYhG,EAAMiG,MAClBC,EAAuBlG,EAAMkG,qBAC7B5E,EAAQC,YAAyBvB,EAAO,CAAC,SAAU,SAAU,UAAW,YAAa,YAAa,oBAAqB,YAAa,2BAA4B,QAAS,yBAEzKiG,EAAQD,EAEC,MAATC,GAAiBA,EAAMlD,OAASC,KAAeX,IACjD4D,EAAqB/G,gBAAoB8D,IAAYtB,YAAS,CAC5Dd,QAAS+E,EAAS,QAAU,KAC5B9E,UAAWH,EAAQuF,MACnBhD,UAAW,OACXC,QAAS,SACRgD,GAAuBD,IAG5B,IAAIH,EAAYD,EAYhB,OAViB,MAAbC,GAAqBA,EAAU/C,OAASC,KAAeX,IACzDyD,EAAyB5G,gBAAoB8D,IAAYtB,YAAS,CAChEd,QAAS+E,EAAS,QAAU,QAC5B9E,UAAWH,EAAQoF,UACnB3C,MAAO,gBACPF,UAAW,OACXC,QAAS,SACR6C,GAA2BD,IAGZ5G,gBAAoB0G,EAAWlE,YAAS,CAC1Db,UAAWc,YAAKjB,EAAQkB,KAAMf,GAC9BQ,IAAKA,GACJC,GAAQqE,GAAuBzG,gBAAoB,MAAO,CAC3D2B,UAAWH,EAAQiF,QAClBA,GAAsBzG,gBAAoB,MAAO,CAClD2B,UAAWH,EAAQyF,SAClBF,EAAOH,GAAYJ,GAAuBxG,gBAAoB,MAAO,CACtE2B,UAAWH,EAAQgF,QAClBA,OAwEU3D,gBAxJK,CAElBH,KAAM,CACJsB,QAAS,OACTrB,WAAY,SACZuE,QAAS,IAIXT,OAAQ,CACNtC,KAAM,WACNgD,YAAa,IAIfX,OAAQ,CACNrC,KAAM,WACNiD,UAAW,aACXrE,WAAY,EACZoE,aAAc,GAIhBF,QAAS,CACP9C,KAAM,YAIR4C,MAAO,GAGPH,UAAW,IAyHqB,CAChC5F,KAAM,iBADO6B,CAEZ0D,I,0rBC3HUc,GAAiC,CAC5CC,OAAQ,GACRC,KAAM,GACNC,SAAU,IAGCC,GAA2B,CACtCC,QAAQ,EACRC,UAAW,GACXC,MAAO,EACPC,MAAO,IAGIC,GAAmB,CAC9BC,YAAa,GACbC,SAAU,GACVC,cAAe,GACfC,QAAS,GACTC,IAAK,GACLC,MAAO,GACPZ,SAAU,IAICa,GAAmC,CAC9CC,UAAW,GACXd,SAAU,GACVU,QAASb,GACTc,IAAKd,GACLe,MAAOf,GACPkB,UAAW,IAGPC,GAASC,KAAW,CACxBnB,OAAQmB,OAAaC,UAAU,4BAA4BC,SAAS,sBACpEpB,KAAMkB,OAAaC,UAAU,0BAA0BC,SAAS,oBAChEnB,SAAUiB,OAAaC,UAAU,8BAA8BC,SAAS,0BAG7DC,GAAaH,OAAaI,MAAM,CAC3CP,UAAWG,OAAaK,OAAOH,SAAS,yBACxCnB,SAAUiB,OAAaE,SAAS,wBAChCT,QAASM,GACTL,IAAKK,GACLJ,MAAOI,GACPD,UAAWE,OAAYM,GACrBN,OAAaI,MAAM,CACjBlB,UAAWc,OAAaK,OAAOH,SAAS,oBACxCd,MAAOY,OAAYM,GACjBN,OAAaI,MAAM,CACjBd,YAAaU,OAAYM,GACvBN,OAAaI,MAAM,CACjB5H,GAAIwH,OAAaK,OAAOH,SAAS,iCAC/BK,IAAI,EAAG,2BACbhB,SAAUS,OAAaC,UAAU,8BAA8BC,SAAS,wBACxEV,cAAeQ,OAAaK,OAAOH,SAAS,6BAC5CT,QAASO,OAAaC,UAAU,6BAA6BC,SAAS,uBACtER,IAAKM,OAAaC,UAAU,yBAAyBC,SAAS,mBAC9DP,MAAOK,OAAaC,UAAU,2BAA2BC,SAAS,qBAClEnB,SAAUiB,OAAaC,UAAU,8BAA8BC,SAAS,2BAE1EK,IAAI,EAAG,uBACPA,IAAI,EAAG,uB,oEC7CT5I,GAAYC,aAAW,SAACC,GAAD,MAAiB,CAC5CoC,KAAM,CACJuD,MAAO3F,EAAM8F,YAAY6C,OAAOC,GAChCC,SAAU,OACVC,OAAQ,SACRlC,QAAS5G,EAAM+I,QAAQ,IAEzBpC,QAAS,CACPC,QAAS,GAEXoC,QAAS,CACPvG,UAAWzC,EAAM+I,QAAQ,IAE3BE,YAAa,CACXtF,MAAO3D,EAAMkJ,QAAQC,MACrBC,gBAAiBpJ,EAAMkJ,QAAQG,MAAMC,KACrC,UAAW,CACTF,gBAAiBpJ,EAAMkJ,QAAQG,MAAME,OAGzCC,QAAS,CACP9F,QAAS,OACT+F,eAAgB,gBAElBC,SAAU,CACRhG,QAAS,OACT+F,eAAgB,iBAElBE,SAAU,CACR/C,QAAS,GAEXgD,QAAS,CACPlG,QAAS,OACT+F,eAAgB,UAElBI,QAAS,CACPjD,QAAS5G,EAAM+I,QAAQ,GACvBU,eAAgB,UAElBK,QAAS,CACPxJ,SAAU,EACVyJ,cAAe,QAGjBC,aAAc,CACZZ,gBAAiBpJ,EAAMkJ,QAAQG,MAAMC,MAEvCW,oBAAqB,CACnBb,gBAAiBpJ,EAAMkJ,QAAQG,MAAMC,KACrC3F,MAAO,QACPuG,OAAQ,mBAEVC,aAAc,CACZ3E,WAAY,EACZC,cAAe,EACfE,MAAO,QAETyE,aAAc,CACZhB,gBAAiB,YACjBN,OAAQ,YAEVuB,YAAa,CACX3G,QAAS,QAEX4G,UAAW,CACT5G,QAAS,OACTjB,UAAW,QAEb8H,WAAY,CACV7G,QAAS,OACTjB,UAAW,QAEb+H,eAAgB,CACd5D,QAAS,OAEX6D,YAAa,CACX9E,MAAO3F,EAAM+I,QAAQ,IACrB2B,OAAQ1K,EAAM+I,QAAQ,KAExB4B,YAAa,CACX/D,QAAS,GACTgE,aAAc,IAEhBC,WAAY,CACVH,OAAQ,OACRpK,SAAU,EACVyJ,cAAe,QAEjBe,OAAQ,CACNC,cAAe,SACfrH,QAAS,QAIXsH,WAAY,CACVJ,aAAc,GACd/D,YAAa,IAIfoE,YAAa,CACXC,WAAY,QAEdC,cAAe,CACbxH,MAAO,WAETyH,UAAW,CACTxE,QAAS,GAEXyE,aAAc,CACZC,SAAU,SACV,YAAa,CACX3E,QAAS,aACThD,MAAO,UAGX4H,SAAU,CACRX,aAAc5K,EAAM+I,QAAQ,GAC5ByC,SAAU,YAEZC,cAAe,CACbf,OAAQ1K,EAAM+I,QAAQ,KAExB2C,gBAAiB,CACftC,gBAAiB,UACjBxC,QAAS5G,EAAM+I,QAAQ,GACvBtD,cAAc,GAAD,OAAKzF,EAAM+I,QAAQ,GAAnB,kBAEf4C,gBAAiB,CACf/E,QAAS,EACTpB,WAAYxF,EAAM+I,QAAQ,GAC1BU,eAAgB,iBAElBmC,wBAAyB,CACvBhF,QAAS,EACTpB,WAAYxF,EAAM+I,QAAQ,GAC1BrF,QAAS,SAEXmI,OAAQ,CACNC,UAAW,OACXpI,QAAS,OACTkD,QAAS,EACTkC,OAAQ,GAEViD,OAAQ,CACNhI,YAAa,MACbiI,WAAY,SAEdC,OAAQ,CACNC,WAAYlM,EAAM+I,QAAQ,KAE5BoD,aAAc,CACZ,YAAa,CACXxF,QAAS,aACThD,MAAO,YAGXyI,SAAU,CACR,YAAa,CACXzF,QAAS,aACThD,MAAO,YAGX0I,WAAY,CACV,YAAa,CACX1F,QAAS,aACThD,MAAO,KAGX2I,YAAa,CACXC,WAAY,QACZzD,OAAQ9I,EAAM+I,QAAQ,GAAI,IAE5ByD,aAAc,CACZ1D,OAAQ9I,EAAM+I,QAAQ,EAAG,IAE3B0D,aAAc,CACZ9I,MAAO,WAET+I,iBAAkB,CAChBxC,OAAQ,oBACRvG,MAAO,UACPiH,aAAc,GACdhE,QAAS5G,EAAM+I,QAAQ,GAAK,GAC5BpD,MAAO,cACP6F,SAAU,WACVmB,IAAK3M,EAAM+I,QAAQ,GACnB6D,KAAM5M,EAAM+I,QAAQ,IAEtB8D,cAAe,CACbvB,SAAU,UAEZwB,QAAS,CACPlC,aAAc5K,EAAM+I,QAAQ,GAC5BD,OAAQ9I,EAAM+I,QAAQ,EAAG,IAE3BgE,YAAa,CACX3D,gBAAiB,UACjBzF,MAAO,SAETqJ,aAAc,CACZC,UAAW,SACXtJ,MAAO,WAETuJ,cAAe,CACb9D,gBAAiB,UACjBzF,MAAO,QACP8F,eAAgB,gBAElB0D,aAAc,CACZxJ,MAAO,aAETyJ,UAAW,CACT5B,SAAU,WACVoB,KAAM,GAERS,mBAAoB,CAClBC,aAAc,OAIZC,GAAe,CACnB,CAAE5M,GAAI,MAAOD,KAAM,cACnB,CAAEC,GAAI,SAAUD,KAAM,kBACtB,CAAEC,GAAI,MAAOD,KAAM,eA0PR8M,GAAe,SAAChN,GAC3B,IACE4G,EAOE5G,EAPF4G,OACAqG,EAMEjN,EANFiN,OAFF,EAQIjN,EALFkN,iBAHF,MAGc,KAHd,EAIEC,EAIEnN,EAJFmN,QACAC,EAGEpN,EAHFoN,KACAnH,EAEEjG,EAFFiG,MACAoH,EACErN,EADFqN,UAEIC,EAAYC,kBAAY,MACxB7M,EAAUpB,KACVkO,EAAWC,eACTC,EAASC,eAATD,KACFE,EAAkBpK,eACxB,EAAgCtE,KAAMe,SAAS,QAA/C,mBAAO4N,EAAP,KAAiBC,EAAjB,KACA,EAA4C7N,oBAAS,IAArD,mBAAO8N,EAAP,KAAuBC,EAAvB,KACA,EAAwC9O,KAAMe,SAAN,eAAoBsH,KAA5D,mBAAO0G,EAAP,KAAqBC,EAArB,KASMC,EAAU,SAACf,EAAD,GAAmD,IAArCgB,EAAoC,EAApCA,cAAeC,EAAqB,EAArBA,UAC3CD,GAAc,GACdV,EAAK,uBAAwBN,GAC1BkB,MAAK,SAACC,GACLf,EAASgB,KAAKD,EAAIE,QAAS,WAC3BL,GAAc,GACdC,IACAhB,OAEDqB,OAAM,SAACC,GACNP,GAAc,GACdZ,EAASgB,KAAKG,EAAIF,QAAS,aAI3BG,EAAW,SAACxB,EAAD,GAAmD,IAArCgB,EAAoC,EAApCA,cAAeC,EAAqB,EAArBA,UAC5CD,GAAc,GACdV,EAAK,wBAAyBN,GAC3BkB,MAAK,SAACC,GACLf,EAASgB,KAAKD,EAAIE,QAAS,WAC3BL,GAAc,GACdC,IACAhB,OAEDqB,OAAM,SAACC,GACNP,GAAc,GACdZ,EAASgB,KAAKG,EAAIF,QAAS,aAM3BI,EAAkB,SAACC,GACvBhB,EAAYgB,IAwDRC,EAAgB,SAACC,GACrB,MAAuB,iBAATA,EAAoBA,EAAQ,IAoC5C,OA1BArO,sBAAU,WACR,GAAIiG,EAAQ,CACV,IAAQqI,EAAiB7B,EAAjB6B,IAAQC,EAAhB,YAAyB9B,EAAzB,SACMwB,EAAQ,2BAAQM,GAAR,IAAc/O,GAAI8O,IAC5BxH,EAAYmH,EAASnH,UAAUxG,KAAI,SAACkO,GACtC,IAAQpI,EAAmBoI,EAAnBpI,MAAUmI,EAAlB,YAA2BC,EAA3B,WACIC,EAAWrI,EAAM9F,KAAI,SAACoO,GACxB,IAAQpI,EAAyBoI,EAAzBpI,YAAgBiI,EAAxB,YAAiCG,EAAjC,iBACMC,EAAgBvB,EAAe9M,KAAI,qBAAGgO,OACtCM,EAAStI,EAAYuI,QAAO,gBAAGP,EAAH,EAAGA,IAAH,OAAkBK,EAAcG,SAASR,MAAMhO,KAAI,kBAAmB,CAAEd,GAArB,EAAG8O,QACxF,OAAO,2BAAKC,GAAZ,IAAkBjI,YAAasI,OAEjC,OAAO,2BAAKL,GAAZ,IAAkBtI,QAAQ,EAAOG,MAAOqI,OAE1CR,EAASnH,UAAYA,EACrBiI,QAAQC,IAAI,WAAYf,GACxBV,EAAgBU,QAEhBV,EAAgB3G,MAEjB,CAACvH,EAAO+N,IAEXpN,sBAAU,WA9CR+M,EAAK,4BAA6B,IAC/BY,MAAK,SAACsB,GACAA,EAASZ,MAGZxB,EAASgB,KAAKoB,EAASnB,QAAS,SAFhCT,EAAkB4B,EAASxC,SAK9BsB,OAAM,SAACM,GACNxB,EAASgB,KAAKQ,EAAMP,QAAS,cAuChC,IAGD,qCACE,gBAACoB,EAAA,EAAD,CACEC,KAAM7C,EACN8C,sBAAoB,EACpBC,sBAAoB,EACpBC,WAAS,EACTC,YAAU,EACV7H,SAAS,KACT8H,kBAAgB,eAPlB,UASE,eAACC,GAAA,EAAD,CAAajQ,GAAG,eAAegN,QAASA,EAAxC,SACGlH,IAEH,eAAC,KAAD,CACEoK,SAAU/C,EACVgD,oBAAkB,EAClBC,cAAetC,EACfuC,iBAAkB1I,GAClB2I,SAxJS,SAACzR,EAAY0R,GAC5BA,EAAOtC,eAAc,GACrB,IAAMuC,EAAQ,eAAQ3R,IACrB4H,GAAUuH,EAAQwC,EAAUD,GAC7B9J,GAAUgI,EAAS+B,EAAUD,IA+IzB,SAOG,gBAAGvI,EAAH,EAAGA,OAAQyI,EAAX,EAAWA,OAAQC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,aAAcC,EAA1C,EAA0CA,WAAYC,EAAtD,EAAsDA,cAAeC,EAArE,EAAqEA,WAAYC,EAAjF,EAAiFA,aAAjF,OACC,uCACE,eAACC,EAAA,EAAD,CAAeC,UAAQ,EAAvB,SACE,gBAACC,EAAA,EAAD,CAAMC,WAAS,EAAC/I,QAAS,EAAzB,UACE,eAAC8I,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,eAACC,GAAA,EAAD,CACEC,QAAS3E,GACT/N,MAAO+N,GAAa4E,MAAK,SAACvE,GAAD,OAAeA,EAAKjN,IAAMgI,EAAOX,aAC1DoK,eAAgB,SAACxR,GAAD,OAAiBA,EAAOF,MACxC2R,kBAAmB,SAACzR,GAAD,OAAYA,EAAOD,IAAMgI,EAAOX,WACnDlH,SAAU,SAACwR,EAAYhD,GACrBkC,EAAc,aAAqB,OAARlC,QAAQ,IAARA,OAAA,EAAAA,EAAU3O,KAAM,KAE7CK,OAAQuQ,EACRgB,YAAa,SAACC,GAAD,OACX,eAACC,EAAA,EAAD,2BACMD,GADN,IAEEE,MAAM,aACNtR,QAAQ,WACRoO,MAAOmD,QAAQtB,EAAQrJ,WAAaoJ,EAAOpJ,WAC3C4K,WAAYvB,EAAQrJ,WAAaoJ,EAAOpJ,UACxC6K,WAAU,eACLL,EAAOK,oBAMpB,eAAChB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,eAACC,GAAA,EAAD,CACEC,QAAS9D,EACT5O,MAAO4O,EAAgB+D,MAAK,SAACvE,GAAD,OAAeA,EAAKjN,IAAMgI,EAAOzB,YAC7DkL,eAAgB,SAACxR,GAAD,OAAiBA,EAAOF,MACxC2R,kBAAmB,SAACzR,GAAD,OAAYA,EAAOD,IAAMgI,EAAOzB,UACnDpG,SAAU,SAACwR,EAAYhD,GACrBkC,EAAc,YAAoB,OAARlC,QAAQ,IAARA,OAAA,EAAAA,EAAU3O,KAAM,KAE5CK,OAAQuQ,EACRgB,YAAa,SAACC,GAAD,OACX,eAACC,EAAA,EAAD,2BACMD,GADN,IAEEE,MAAM,WACNtR,QAAQ,WACRoO,MAAOmD,QAAQtB,EAAQnK,UAAYkK,EAAOlK,UAC1C0L,WAAYvB,EAAQnK,UAAYkK,EAAOlK,SACvC2L,WAAU,eACLL,EAAOK,oBAOnB,CAAC,CAAEH,MAAO,UAAWI,IAAK,WAAa,CAAEJ,MAAO,MAAOI,IAAK,OAAS,CAAEJ,MAAO,QAASI,IAAK,UAAWrR,KAAI,gBAAGiR,EAAH,EAAGA,MAAOI,EAAV,EAAUA,IAAV,OAC1G,uCACE,eAACjB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,eAACxO,EAAA,EAAD,CAAYuP,MAAO,CAAEnM,QAAS,QAAUxF,QAAQ,KAAK4R,MAAM,OAA3D,SACE,kCAASN,QAIZ,CAAC,CAAEA,MAAO,gBAAiBI,IAAK,UAAY,CAAEJ,MAAO,cAAeI,IAAK,QAAU,CAAEJ,MAAO,qBAAsBI,IAAK,aAAcrR,KAAI,SAACwR,EAAcC,GACvJ,IAAMC,EAASF,EAAQH,IACjBM,EAAS,UAAMN,EAAN,YAAaK,GAC5B,OACE,eAACtB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,eAACS,EAAA,EAAD,CACEhC,WAAS,EACTiC,MAAOO,EAAQP,MACfhS,KAAM0S,EACNhS,QAAQ,WACRoO,MAAOmD,QAAQU,aAAMhC,EAAS+B,IAAcC,aAAMjC,EAAQgC,IAC1DR,WAAYS,aAAMhC,EAAS+B,IAAcC,aAAMjC,EAAQgC,GACvD5T,MAAO6T,aAAM1K,EAAQyK,GACrBtS,SAAUwQ,EACVtQ,OAAQuQ,eAUpB,gBAAC+B,GAAA,EAAD,CAAY9T,MAAO6O,GAAY,GAA/B,UACE,eAAC,KAAD,CAAY3N,KAAK,YAAY6S,kBAAgB,EAA7C,SACG,gBAAGnP,EAAH,EAAGA,KAAMoP,EAAT,EAASA,OAAT,OACC,eAAC3B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,gBAACyB,GAAA,EAAD,CACEvS,QAAS,CACPwS,UAAWxS,EAAQ8I,cAErB2J,YAAY,WACZvS,QAAQ,WALV,iBAOGuH,QAPH,IAOGA,OAPH,EAOGA,EAAQV,UAAUxG,KAAI,SAACmS,EAAclS,GACpC,IAAI0R,EAAiB,oBAAgB1R,EAAhB,KACjBmS,EAAoBR,aAAMhC,EAAS+B,GACnCU,EAAmBT,aAAMjC,EAAQgC,GAG/BW,GAFiBV,aAAM1K,EAAQyK,GACjB1R,GAAKsS,OAAO3F,GACI,CAAE4F,YAAa,qBAAwB,CAAEA,YAAa,oBAC1F,OACE,uBAAK5S,UAAWH,EAAQ4J,OAAxB,UACE,gBAAC+G,EAAA,EAAD,CAAME,MAAI,EAACD,WAAS,EAACE,GAAI,GAAIjJ,QAAS,EAAGgK,MAAK,aAAIjK,OAAQ,WAAciL,GAAxE,UACE,gBAAClC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI4B,EAAQxM,OAAS,GAAK,EAArC,UAEGwM,EAAQxM,QAAU,eAACqL,EAAA,EAAD,CACjBhC,WAAS,EACTyD,KAAK,QACLxB,MAAM,OACNhS,KAAI,UAAK0S,EAAL,cACJhS,QAAQ,WACRoO,MAAOmD,SAAoB,OAAZkB,QAAY,IAAZA,OAAA,EAAAA,EAAcxM,aAAd,OAA2ByM,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAazM,YACvDuL,YAAwB,OAAZiB,QAAY,IAAZA,OAAA,EAAAA,EAAcxM,aAAd,OAA2ByM,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAazM,WACpD7H,MAAK,OAAEoU,QAAF,IAAEA,OAAF,EAAEA,EAASvM,UAChBvG,SAAUwQ,EACVtQ,OAAQuQ,IAGTrB,QAAQC,IAAR,OAAY0D,QAAZ,IAAYA,OAAZ,EAAYA,EAActM,MAA1B,OAAiCsM,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAcxM,YAC9CuM,EAAQxM,QACR,qCACE,eAAC+M,EAAA,EAAD,CACE1D,WAAS,EACTpP,UAAYsR,SAAoB,OAAZkB,QAAY,IAAZA,OAAA,EAAAA,EAAcxM,aAAd,OAA2ByM,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAazM,YAAmC,GAAtBnG,EAAQ+H,YACjF/H,QAAS,CACPuP,UAAWvP,EAAQ2J,YAErBzJ,QAAQ,YACRuC,MAAM,YAPR,SASIgP,SAAoB,OAAZkB,QAAY,IAAZA,OAAA,EAAAA,EAAcxM,aAAd,OAA2ByM,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAazM,YAAjD,OAAmFyM,QAAnF,IAAmFA,OAAnF,EAAmFA,EAAazM,UAAhG,OAA8DuM,QAA9D,IAA8DA,OAA9D,EAA8DA,EAASvM,iBAM/EuM,EAAQxM,QACP,eAACyK,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,eAACmC,EAAA,EAAD,CACE1D,WAAS,EACTpP,UAAWH,EAAQ+H,YACnB/H,QAAS,CACPuP,UAAWvP,EAAQ2J,YAErBzJ,QAAQ,YACRuC,MAAM,YACNyQ,QAAS,kBAhQ1B,SAAC1S,EAAWiH,EAAa6I,GAE9C,IAAQvJ,EAAcU,EAAdV,UACFoM,EAAY,eAAQpM,EAAUvG,IACpC2S,EAAajN,QAAS,EACtBa,EAAUvG,GAAK2S,EACf7C,EAAc,YAAavJ,GAC3BoH,EAAgB3N,EAAEyC,YAyPmCmQ,CAAe5S,EAAGiH,EAAQ6I,IAR3C,SAUE,eAAC,IAAD,SAKJoC,EAAQxM,QAAU,eAACyK,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SAClB,eAACmC,EAAA,EAAD,CACE1D,WAAS,EACTvP,QAAS,CACPuP,UAAWvP,EAAQ2J,YAErBzJ,QAAQ,YACRuC,MAAM,UACNyQ,QAAS,SAACG,GAAD,OAAOlF,EAAgB3N,EAAEyC,aAPpC,SASGkK,IAAa3M,EAAEyC,WAAa,eAAC,KAAD,IAAuB,eAAC,KAAD,SAKtDyP,EAAQxM,QAAU,eAACyK,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SAClB,eAACmC,EAAA,EAAD,CACE1D,WAAS,EACTvP,QAAS,CACPuP,UAAWvP,EAAQ2J,YAErBzJ,QAAQ,YACRuC,MAAM,UACNyQ,QAAS,kBApR1B,SAAC1S,EAAWiH,EAAa6I,GAC5C,IAAQvJ,EAAcU,EAAdV,UACFoM,EAAY,eAAQpM,EAAUvG,IACpC2S,EAAajN,QAAS,EACtBa,EAAUvG,GAAK2S,EACf7C,EAAc,YAAavJ,GAC3BoH,EAAgB3N,EAAEyC,YA8QiCqQ,CAAa9S,EAAGiH,EAAQ6I,IAPzC,SASE,eAAC,IAAD,SAKFoC,EAAQxM,QACR,eAACyK,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,eAACmC,EAAA,EAAD,CACE1D,WAAS,EACTvP,QAAS,CACPuP,UAAWvP,EAAQ2J,YAErBzJ,QAAQ,YACRuC,MAAM,YACNyQ,QAAS,kBAAMZ,EAAO9R,IAPxB,SASE,eAAC,IAAD,WAKR,eAAC+S,EAAA,EAAD,UACE,eAACjR,EAAA,EAAD,CAAYpC,QAAQ,UAAUuC,MAAM,QAApC,SAA6C0P,aAAMhC,EAAD,UAAa+B,EAAb,YAAmC7D,EAAc8D,aAAMjC,EAAD,UAAYgC,EAAZ,sBAMhH,sBAAK/R,UAAWH,EAAQ4J,OAAxB,SACE,eAAC+G,EAAA,EAAD,CAAMC,WAAS,EAACE,GAAI,GAAIjJ,QAAS,EAAGgK,MAAO,CAAEjK,OAAQ,WAArD,SACE,eAAC+I,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,gBAAC0C,EAAA,EAAD,CAAajE,WAAS,EACpBjB,MAAOmD,QAAQU,aAAMhC,EAAS,cAAgB9B,EAAc8D,aAAMjC,EAAQ,eAD5E,UAGE,eAAC+C,EAAA,EAAD,CACE1D,WAAS,EACTpP,UAAWH,EAAQ+H,YACnB7H,QAAQ,YACRuC,MAAM,YACNyQ,QAAS,kBA3U3B,SAACzL,EAAa6I,EAAoBpN,GAClDA,EAAK+C,IA0U4CwN,CAAUhM,EAAQ6I,EAAepN,IAChDwQ,QAAS,eAAC,IAAD,IANX,2BAWA,eAACH,EAAA,EAAD,UACGpB,aAAMhC,EAAS,cAAgB9B,EAAc8D,aAAMjC,EAAQ,iCAa9E,eAACS,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,gBACGrJ,QADH,IACGA,OADH,EACGA,EAAQV,UAAUxG,KAAI,SAACmS,EAAclS,GACpC,IAAImT,EAAqB,oBAAgBnT,EAAhB,KACzB,OACE,eAAC,KAAD,CAAYhB,KAAI,UAAKmU,EAAL,UAAhB,SACG,gBAAGzQ,EAAH,EAAGA,KAAMoP,EAAT,EAASA,OAAT,OACC,qCACE,eAACsB,GAAA,EAAD,CAAkBzT,UAAWH,EAAQiJ,aAAc3K,MAAOkC,EAAEyC,WAA5D,SAEE,gBAAC0N,EAAA,EAAD,CAAMC,WAAS,EAAC/I,QAAS,EAAzB,UACE,eAAC8I,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,eAACxO,EAAA,EAAD,CAAYpC,QAAQ,KAAK4R,MAAM,SAA/B,SACE,yCAASY,QAAT,IAASA,OAAT,EAASA,EAASvM,gBAHxB,OAOGuM,QAPH,IAOGA,OAPH,EAOGA,EAASrM,MAAM9F,KAAI,SAACsT,EAAerT,GAClC,IAAI0R,EAAiB,UAAMyB,EAAN,kBAA6BnT,EAA7B,KACjBmS,EAAoBR,aAAMhC,EAAS+B,GACnCU,EAAmBT,aAAMjC,EAAQgC,GACdC,aAAM1K,EAAQyK,GACrC,OACE,uCACE,eAACvB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,eAACxO,EAAA,EAAD,CAAYpC,QAAQ,KAAK4R,MAAM,SAA/B,SACE,wDAAwBtR,EAAI,SAIhC,eAACmQ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,eAACmC,EAAA,EAAD,CACE1D,WAAS,EACTvP,QAAS,CACPuP,UAAWvP,EAAQ2J,YAErBzJ,QAAQ,YACRuC,MAAM,YACNyQ,QAAS,kBA3UjC,SAAC1S,EAAW0R,EAAmBzK,EAAa6I,EAAoBgC,GAIlFA,EAAO9R,GAuUkDsT,CAAYtT,EAAGmT,EAAelM,EAAQ6I,EAAegC,IAPtE,SASE,eAAC,IAAD,QAIJ,eAAC3B,EAAA,EAAD,CAAME,MAAI,EAACkD,GAAI,GAAIjD,GAAI,GAAvB,SACE,eAACC,GAAA,EAAD,CACEiD,UAAQ,EACRhD,QAAS3D,EACT/O,MAAO+O,EAAeyB,QAAO,SAACpC,GAAD,oBAAemH,QAAf,IAAeA,GAAf,UAAeA,EAAUtN,mBAAzB,aAAe,EAAuBhG,KAAI,qBAAGd,MAAkBsP,SAASrC,EAAK6B,QAC1G2C,eAAgB,SAACxR,GAAD,OAAiBA,EAAOF,MACxCI,SAAU,SAACwR,EAAYhD,GACrB,IAAI6F,EAAS7F,EAAS7N,KAAI,kBAAmB,CAAEd,GAArB,EAAG8O,QAC7B+B,EAAc,GAAD,OAAI4B,EAAJ,gBAA6B+B,GAAU,KAEtDnU,OAAQuQ,EACRgB,YAAa,SAACC,GAAD,OACX,eAACC,EAAA,EAAD,2BACMD,GADN,IAEEE,MAAM,aACNtR,QAAQ,WACRoO,MAAOmD,SAAoB,OAAZkB,QAAY,IAAZA,OAAA,EAAAA,EAAcpM,eAAd,OAA6BqM,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAarM,cACzDmL,YAAwB,OAAZiB,QAAY,IAAZA,OAAA,EAAAA,EAAcpM,eAAd,OAA6BqM,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAarM,aACtDoL,WAAU,eACLL,EAAOK,oBAMpB,eAAChB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,eAACS,EAAA,EAAD,CACEhC,WAAS,EACTiC,MAAM,WACNhS,KAAI,UAAK0S,EAAL,aACJhS,QAAQ,WACRoO,MAAOmD,SAAoB,OAAZkB,QAAY,IAAZA,OAAA,EAAAA,EAAcnM,YAAd,OAA0BoM,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAapM,YAAaiL,SAAoB,OAAZkB,QAAY,IAAZA,OAAA,EAAAA,EAAclM,iBAAd,OAA+BmM,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAanM,gBACvHiL,YAAwB,OAAZiB,QAAY,IAAZA,OAAA,EAAAA,EAAcnM,YAAd,OAA0BoM,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAapM,YAAyB,OAAZmM,QAAY,IAAZA,OAAA,EAAAA,EAAclM,iBAAd,OAA+BmM,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAanM,eAC5GnI,MAAOuV,EAASrN,SAChB5G,SAAUwQ,EACVtQ,OAAQuQ,EACR6D,WAAY,CACVlU,QAAS,CACPmU,WAAYnU,EAAQmM,oBAEtBiI,aAAc,eAAC/U,GAAA,EAAD,CAAYI,GAAG,gBAAgBC,OAAQe,KAAcjB,KAAI,UAAK0S,EAAL,kBAAgC5T,MAAOuV,EAASpN,cAAe7G,SAAUwQ,EAActQ,OAAQuQ,SAK5K,eAACM,EAAA,EAAD,CAAME,MAAI,EAACkD,GAAI,EAAGjD,GAAI,EAAtB,SACE,eAACS,EAAA,EAAD,CACEhC,WAAS,EACT7M,WAAS,EACT8O,MAAM,gBACNhS,KAAI,UAAK0S,EAAL,YACJhS,QAAQ,WACRoO,MAAOmD,SAAoB,OAAZkB,QAAY,IAAZA,OAAA,EAAAA,EAAcjM,WAAd,OAAyBkM,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAalM,UACrDgL,YAAwB,OAAZiB,QAAY,IAAZA,OAAA,EAAAA,EAAcjM,WAAd,OAAyBkM,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAalM,SAClDpI,MAAOuV,EAASnN,QAChB9G,SAAUwQ,EACVtQ,OAAQuQ,MAIZ,eAACM,EAAA,EAAD,CAAME,MAAI,EAACkD,GAAI,EAAGjD,GAAI,EAAtB,SACE,eAACS,EAAA,EAAD,CACEhC,WAAS,EACT7M,WAAS,EACT8O,MAAM,YACNhS,KAAI,UAAK0S,EAAL,QACJhS,QAAQ,WACRoO,MAAOmD,SAAoB,OAAZkB,QAAY,IAAZA,OAAA,EAAAA,EAAchM,OAAd,OAAqBiM,QAArB,IAAqBA,OAArB,EAAqBA,EAAajM,MACjD+K,YAAwB,OAAZiB,QAAY,IAAZA,OAAA,EAAAA,EAAchM,OAAd,OAAqBiM,QAArB,IAAqBA,OAArB,EAAqBA,EAAajM,KAC9CrI,MAAOuV,EAASlN,IAChB/G,SAAUwQ,EACVtQ,OAAQuQ,MAIZ,eAACM,EAAA,EAAD,CAAME,MAAI,EAACkD,GAAI,EAAGjD,GAAI,EAAtB,SACE,eAACS,EAAA,EAAD,CACEhC,WAAS,EACT7M,WAAS,EACT8O,MAAM,cACNhS,KAAI,UAAK0S,EAAL,UACJhS,QAAQ,WACRoO,MAAOmD,SAAoB,OAAZkB,QAAY,IAAZA,OAAA,EAAAA,EAAc/L,SAAd,OAAuBgM,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAahM,QACnD8K,YAAwB,OAAZiB,QAAY,IAAZA,OAAA,EAAAA,EAAc/L,SAAd,OAAuBgM,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAahM,OAChDtI,MAAOuV,EAASjN,MAChBhH,SAAUwQ,EACVtQ,OAAQuQ,MAIZ,eAACM,EAAA,EAAD,CAAME,MAAI,EAACkD,GAAI,EAAGjD,GAAI,EAAtB,SACE,eAACS,EAAA,EAAD,CACEhC,WAAS,EACT7M,WAAS,EACT8O,MAAM,oBACNhS,KAAI,UAAK0S,EAAL,aACJhS,QAAQ,WACRoO,MAAOmD,SAAoB,OAAZkB,QAAY,IAAZA,OAAA,EAAAA,EAAc3M,YAAd,OAA0B4M,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAa5M,WACtD0L,YAAwB,OAAZiB,QAAY,IAAZA,OAAA,EAAAA,EAAc3M,YAAd,OAA0B4M,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAa5M,UACnD1H,MAAOuV,EAAS7N,SAChBpG,SAAUwQ,EACVtQ,OAAQuQ,YAOlB,eAACM,EAAA,EAAD,CAAME,MAAI,EAACkD,GAAI,GAAIjD,GAAI,GAAvB,SACE,gBAAC0C,EAAA,EAAD,CAAajE,WAAS,EACpBjB,MAAOmD,QAAQU,aAAMhC,EAAD,UAAawD,EAAb,YAAuCtF,EAAc8D,aAAMjC,EAAD,UAAYyD,EAAZ,aADhF,UAGE,eAACV,EAAA,EAAD,CACE1D,WAAS,EACTpP,UAAWH,EAAQ+H,YACnB7H,QAAQ,YACRuC,MAAM,UACNyQ,QAAS,WAAyChQ,EA9d9EoD,KA+d4BoN,QAAS,eAAC,IAAD,IANX,6BAWA,eAACH,EAAA,EAAD,UACGpB,aAAMhC,EAAD,UAAawD,EAAb,YAAuCtF,EAAc8D,aAAMjC,EAAD,UAAYyD,EAAZ,uBAhK3DnT,qBAsLjC,gBAAC6T,EAAA,EAAD,WACE,eAACpB,EAAA,EAAD,CAAQC,QAASzG,EAASvM,QAAQ,WAAWuC,MAAM,YAAnD,oBAGA,eAACwQ,EAAA,EAAD,CACE9S,UAAWH,EAAQ+H,YACnBmL,QAAS,kBAAM3C,KACf1M,SAAU2M,EACVtQ,QAAQ,WAJV,SAMGsQ,EACC,eAAC8D,EAAA,EAAD,CAAkBtB,KAAM,GAAInB,MAAO,CAAEpP,MAAO,WAE5C+J,mBAYd+H,GAAqB,SAACjV,GAC1B,IAAQiN,EAAiCjN,EAAjCiN,OAAQhH,EAAyBjG,EAAzBiG,MAAOkH,EAAkBnN,EAAlBmN,QAASC,EAASpN,EAAToN,KAC1B1M,EAAUpB,KAChB,EAAkCW,oBAASmN,GAA3C,mBAAO8H,EAAP,KAAkBC,EAAlB,KACA,EAAgCjW,KAAMe,SAAc,KAApD,mBAAO4N,EAAP,KAAiBC,EAAjB,KACA,EAA8B5O,KAAMe,SAAS,iBAA7C,6BAgBA,OANAU,sBAAU,WACRwU,EAAa/H,KACZ,CAACpN,IAEJ0P,QAAQC,IAAIuF,GAGV,gBAACrF,EAAA,EAAD,CACEE,sBAAoB,EACpBC,sBAAoB,EACpBC,WAAS,EACT5H,SAAS,KACT8H,kBAAgB,oBAChBL,KAAM7C,EANR,UAQE,eAACmD,GAAA,EAAD,CAAajQ,GAAG,oBAAoBgN,QAASA,EAA7C,SACGlH,IAGH,gBAACkL,EAAA,EAAD,CAAeC,UAAQ,EAAvB,UAEE,eAACgE,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,UACE,gBAACC,EAAA,EAAD,WACE,gBAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,wBACA,eAACA,EAAA,EAAD,UAAW,kCA9BH,SAACC,EAAiBzW,GAAmB,IAAD,EACxD,OAAO,UAAAyW,EAAW9D,MAAK,qBAAGxR,IAAoBnB,YAAvC,eAA+CkB,OAAQ,GA6B9BwV,CAAc3I,GAAD,OAAemI,QAAf,IAAeA,OAAf,EAAeA,EAAW1N,kBAE7D,gBAAC+N,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,uBACA,eAACA,EAAA,EAAD,UAAW,2CAASN,QAAT,IAASA,OAAT,EAASA,EAAWxO,SAApB,uBAOnB,gBAACiP,EAAA,EAAD,CAAM9U,UAAWH,EAAQ4L,QAAzB,UACE,eAAC7G,EAAA,EAAD,CACE/E,QAAS,CACPkB,KAAMlB,EAAQ6L,YACdtG,MAAOvF,EAAQ8L,cAEjBvG,MAAK,iBAAKiP,QAAL,IAAKA,OAAL,EAAKA,EAAWxO,SAAhB,WAEP,gBAACkP,EAAA,EAAD,CAAa/U,UAAWH,EAAQgM,cAAhC,UACE,eAAC,GAAD,CAAezG,MAAM,UAAUmH,KAAI,OAAE8H,QAAF,IAAEA,OAAF,EAAEA,EAAW9N,UAChD,eAAC,GAAD,CAAenB,MAAM,MAAMmH,KAAI,OAAE8H,QAAF,IAAEA,OAAF,EAAEA,EAAW7N,MAC5C,eAAC,GAAD,CAAepB,MAAM,QAAQmH,KAAI,OAAE8H,QAAF,IAAEA,OAAF,EAAEA,EAAW5N,cAIlD,eAAC8N,EAAA,EAAD,UACE,eAACtC,GAAA,EAAD,CAAY9T,MAAO6O,GAAY,GAA/B,SACE,gBAACwD,EAAA,EAAD,CAAME,MAAI,EAACD,WAAS,EAACE,GAAI,GAAIjJ,QAAS,EAAtC,UACE,eAAC8I,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,eAACyB,GAAA,EAAD,CACEvS,QAAS,CACPwS,UAAWxS,EAAQ8I,cAErBlJ,SApEQ,SAACwR,EAA8BhD,GACrDhB,EAAYgB,IAoEEqE,YAAY,WACZvS,QAAQ,WANV,gBAQGsU,QARH,IAQGA,OARH,EAQGA,EAAWzN,UAAUxG,KAAI,SAACmS,EAAclS,GACvC,IAAQ2F,EAAcuM,EAAdvM,UACR,OACE,eAACgP,EAAA,EAAD,CACEnV,QAAS,CAAEkB,KAAMlB,EAAQ4I,QAASwM,iBAAkBpV,EAAQ+I,qBAC5DyI,MAAOrL,EACP7H,MAAOkC,EAAEyC,oBAQnB,eAAC0N,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,gBACG0D,QADH,IACGA,OADH,EACGA,EAAWzN,UAAUxG,KAAI,SAACmS,EAAclS,GACvC,MAAuBkS,EAAfrM,aAAR,MAAgB,GAAhB,EACA,OACE,eAACuN,GAAA,EAAD,CAAkBzT,UAAWH,EAAQiJ,aAAc3K,MAAOkC,EAAEyC,WAA5D,SACGoD,EAAM9F,KAAI,SAACsT,EAAerT,GACzB,MAA6BqT,EAArBtN,mBAAR,MAAsB,GAAtB,EACA,OACE,uCACE,eAACoK,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI3Q,UAAWH,EAAQsL,aAAtC,SACE,eAAChJ,EAAA,EAAD,CAAYpC,QAAQ,KAAK4R,MAAM,SAA/B,SACE,wDAAwBtR,EAAI,SAGhC,eAACmQ,EAAA,EAAD,CAAME,MAAI,EAACD,WAAS,EAACE,GAAI,GAAIjJ,QAAS,EAAtC,SACGtB,EAAYhG,KAAI,SAAC8U,EAAc7U,GAAe,IAAD,EAC5C,EAAyB6U,EAAjBC,eAAR,MAAkB,GAAlB,EACA,OAEE,eAAC3E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIyE,GAAI,GAAIxB,GAAI,EAA/B,SACE,eAACkB,EAAA,EAAD,CAAMO,UAAW,EAAGrV,UAAWH,EAAQqK,SAAvC,SACE,gBAACoL,EAAA,EAAD,CAAatV,UAAWH,EAAQwK,gBAAhC,UACE,eAACkL,EAAA,EAAD,CAAMvV,UAAWH,EAAQkK,UAAzB,SACE,gBAACnG,EAAA,EAAD,CAAUR,gBAAc,EAACpD,UAAWH,EAAQkK,UAA5C,UACE,eAACxJ,EAAA,EAAD,UACE,eAACiV,EAAA,EAAD,CAAQxV,UAAWH,EAAQ8J,WAAY8L,IAAG,UAAEP,EAAQQ,aAAV,aAAE,EAAeC,QAE7D,eAACtU,EAAA,EAAD,CACExB,QAAS,CACP+B,QAAS/B,EAAQ+J,YACjB7H,UAAWlC,EAAQiK,eAErBlI,QAASsT,EAAQ7V,KACjB0C,UAAS,UAAK2R,EAASrN,SAAd,aAA2BqN,EAASpN,sBAKnD,gBAACyO,EAAA,EAAD,CAAaa,gBAAc,EAAC5V,UAAWH,EAAQyK,gBAA/C,UACE,+BACE,eAACnI,EAAA,EAAD,CAAYpC,QAAQ,QAApB,SACE,sBAAIC,UAAWH,EAAQ2K,OAAvB,UACE,qBAAIxK,UAAWc,aAAKjB,EAAQ6K,OAAQ7K,EAAQiL,cAA5C,qBACA,eAAC3I,EAAA,EAAD,CAAYnC,UAAWH,EAAQ+K,OAAQ7K,QAAQ,QAA/C,SAAyD2T,EAASnN,iBAMxE,+BACE,eAACpE,EAAA,EAAD,CAAYpC,QAAQ,QAApB,SACE,sBAAIC,UAAWH,EAAQ2K,OAAvB,UACE,qBAAIxK,UAAWc,aAAKjB,EAAQ6K,OAAQ7K,EAAQkL,UAA5C,iBACA,eAAC5I,EAAA,EAAD,CAAYnC,UAAWH,EAAQ+K,OAAQ7K,QAAQ,QAA/C,SAAyD2T,EAASlN,aAMxE,+BACE,eAACrE,EAAA,EAAD,CAAYpC,QAAQ,QAApB,SACE,sBAAIC,UAAWH,EAAQ2K,OAAvB,UACE,qBAAIxK,UAAWc,aAAKjB,EAAQ6K,OAAQ7K,EAAQmL,YAA5C,mBACA,eAAC7I,EAAA,EAAD,CAAYnC,UAAWH,EAAQ+K,OAAQ7K,QAAQ,QAA/C,SAAyD2T,EAASjN,kBAO1E,eAACoP,EAAA,EAAD,CAAS7V,UAAWH,EAAQoL,cAC5B,gBAAC8J,EAAA,EAAD,CAAaa,gBAAc,EAAC5V,UAAWH,EAAQ0K,wBAA/C,UACE,eAACiG,EAAA,EAAD,CAAME,MAAI,EAACD,WAAS,EAACE,GAAI,GAAI3Q,UAAWH,EAAQuL,aAAhD,SACE,eAACjJ,EAAA,EAAD,CAAYpC,QAAQ,QAAQuC,MAAM,UAAlC,SACE,oDAGJ,eAACkO,EAAA,EAAD,CAAME,MAAI,EAACD,WAAS,EAACE,GAAI,GAAzB,SAEGwE,EAAQ/U,KAAI,SAAC0V,EAAezV,GAAhB,OACX,eAACmQ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIyE,GAAI,EAAvB,SACE,qBAAIpV,UAAWH,EAAQ2K,OAAvB,SACE,qBAAIxK,UAAWc,aAAKjB,EAAQ6K,OAAQ7K,EAAQmK,cAA5C,SAA4D8L,mCA9E3EzV,kBA4G7B,eAAC6T,EAAA,EAAD,UACE,eAACpB,EAAA,EAAD,CAAQC,QAASzG,EAASvM,QAAQ,WAAWuC,MAAM,YAAnD,yBAQFyT,GAA4B,SAAC5W,GACjC,IAAMU,EAAUpB,KAChB,OACE,gBAACuX,EAAA,EAAD,CAAK7L,SAAS,WAAW9H,QAAQ,cAAcC,MAAM,UAAUtB,WAAW,SAA1E,UACE,eAACmT,EAAA,EAAD,yBACEpU,QAAQ,cACRC,UAAWH,EAAQiM,aACnB+G,KAAM,GACNoD,UAAW,GACP9W,GALN,IAMEhB,MAAO,OAET,eAACgW,EAAA,EAAD,aAAkBtB,KAAM,GAAI7S,UAAWH,EAAQkM,UAAWzJ,MAAM,UAAUvC,QAAQ,eAAkBZ,IACpG,eAAC6W,EAAA,EAAD,CACE1T,MAAM,UACNgJ,IAAK,EACLC,KAAM,EACN2K,OAAQ,EACRnX,MAAO,EACPoL,SAAS,WACT9H,QAAQ,OACRrB,WAAW,SACXoH,eAAe,SATjB,SAWE,eAACjG,EAAA,EAAD,CAAYG,MAAM,UAAUvC,QAAQ,UAAUqC,UAAU,MAAxD,mBAAmE+T,KAAKC,MACtEjX,EAAMhB,OADR,aAQFkY,GAAgB,SAAClX,GACrB,MAAwBC,oBAASD,EAAMoN,MAAvC,mBAAOA,EAAP,KAAa+J,EAAb,KACA,EAA0BlX,oBAASD,EAAMiG,OAAzC,mBAAOA,EAAP,KAAcmR,EAAd,KAMA,OAJAzW,sBAAU,WACRwW,EAAQnX,EAAMoN,MACdgK,EAASpX,EAAMiG,SACd,CAACjG,IAEF,iCACE,eAACgD,EAAA,EAAD,CAAYG,MAAM,UAAUqP,MAAM,SAAlC,SACE,eAAC,GAAD,CAA2BxT,OAAW,OAAJoO,QAAI,IAAJA,OAAA,EAAAA,EAAM5G,SAAU,MAEpD,eAACxD,EAAA,EAAD,CAAYG,MAAM,UAAUvC,QAAQ,KAAK4R,MAAM,SAA/C,SACE,kCAASvM,MAEX,eAACjD,EAAA,EAAD,CAAYG,MAAM,UAAUvC,QAAQ,QAAQ4R,MAAM,SAAlD,0BACMpF,QADN,IACMA,OADN,EACMA,EAAM3G,KADZ,QAGA,eAACzD,EAAA,EAAD,CAAYG,MAAM,UAAUvC,QAAQ,QAAQ4R,MAAM,SAAlD,0BACMpF,QADN,IACMA,OADN,EACMA,EAAM1G,SADZ,YAOS2Q,UAnnCO,WACpB,IAAM3W,EAAUpB,KACVkO,EAAWC,eACTC,EAASC,eAATD,KACF4J,EAAYC,eAClB,EAA8BtX,qBAAS,GAAvC,mBAAOuX,EAAP,KAAgBC,EAAhB,KACA,EAAkCxX,oBAAS,CAAEyX,QAAS,EAAGC,WAAY,KAArE,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkC5X,oBAAS,GAA3C,mBAAO6X,EAAP,KAAkBC,EAAlB,KACA,EAAkD9X,oBAAS,IAA3D,mBAAO+X,EAAP,KAA0BC,EAA1B,KACA,EAA0ChY,oBAAS,CACjDgN,QAAQ,EACRhH,MAAO,GACPiH,UAAW,GACXtG,QAAQ,EACRwG,KAAM,KALR,mBAAO8K,EAAP,KAAsBC,EAAtB,KAQA,EAAoClY,oBAAS,CAC3CgN,QAAQ,EACRhH,MAAO,GACPmH,KAAM,KAHR,mBAAOgL,EAAP,KAAmBC,EAAnB,KAuDMC,EAAiB,uCAAG,sBAAAC,EAAA,sDACxBd,GAAW,GACX/J,EAAK,wBAAyBkK,GAC3BtJ,MAAK,SAACC,GACLkJ,GAAW,GACNlJ,EAAIS,MAIPxB,EAASgB,KAAKD,EAAIE,QAAS,UAH3BwJ,EAAqB1J,EAAInB,MACzB2K,EAAaxJ,EAAIiK,gBAKpB9J,OAAM,SAACC,GACNe,QAAQC,IAAI,MAAOhB,GACnB8I,GAAW,GACXjK,EAASgB,KAAKG,EAAIF,QAAS,YAfP,2CAAH,qDAuBjBgK,EAAqB,WACzBN,GAAiB,SAACO,GAAD,mBAAC,eAAyBA,GAA1B,IAAqCzL,QAAQ,QAO1D0L,EAAkB,WACtBL,IACAG,KAGI/C,GAAgB,SAACD,EAAiBzW,GAAmB,IAAD,EACxD,OAAO,UAAAyW,EAAW9D,MAAK,qBAAGxR,IAAoBnB,YAAvC,eAA+CkB,OAAQ,IAOhE,OAJAhB,KAAMyB,WAAU,WACd2X,MACC,IAGD,uBAAKzX,UAAWH,EAAQkB,KAAxB,UACE,eAACgX,GAAA,EAAD,CAAM3S,MAAM,mBAEZ,gBAACoL,EAAA,EAAD,CAAMxP,WAAW,WAAWyP,WAAS,EAACuH,QAAQ,gBAAgBtQ,QAAS,EAAvE,UACE,eAAC8I,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,eAACvO,EAAA,EAAD,CAAYC,UAAU,KAAKrC,QAAQ,KAAnC,8BAIF,eAACyQ,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,eAACoC,EAAA,EAAD,CACE/S,QAAQ,YACRgT,QAAS,WAzGjBuE,GAAiB,SAACO,GAAD,mBAAC,eACbA,GADY,IAEfzL,QAAQ,EACRhH,MAAO,qBACPW,QAAQ,EACRsG,UAAW,aAqGLrM,UAAWH,EAAQ+H,YACnBqQ,UAAW,eAAC,IAAD,IAJb,sBA0BJ,gBAACnD,EAAA,EAAD,CAAM9U,UAAWH,EAAQ8H,QAAzB,UACE,eAAC2N,EAAA,EAAD,CAAatV,UAAWH,EAAQyF,QAAhC,SACE,eAAC4S,EAAA,EAAD,UACE,gBAAC1D,EAAA,EAAD,WACE,eAAC2D,EAAA,EAAD,UACE,gBAACzD,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAWhD,MAAM,SAAjB,eACA,eAACgD,EAAA,EAAD,CAAWhD,MAAM,SAAjB,uBACA,eAACgD,EAAA,EAAD,CAAWhD,MAAM,SAAjB,sBACA,eAACgD,EAAA,EAAD,CAAWhD,MAAM,SAAjB,0BAGJ,gBAAC8C,EAAA,EAAD,YACIkC,GACAQ,EAAkB/W,KAAI,SAACmM,EAAWsF,GAAZ,OACpB,gBAAC6C,EAAA,EAAD,CAAU0D,OAAK,EAAf,UACE,eAACzD,EAAA,EAAD,CAAWhD,MAAM,SAAjB,SACGoF,EAAUD,YAAcC,EAAUF,QAAU,GAC3ChF,EACA,IAEJ,eAAC8C,EAAA,EAAD,CAAWhD,MAAM,SAAjB,SAA2BkD,GAAc3I,GAAD,OAAeK,QAAf,IAAeA,OAAf,EAAeA,EAAM5F,aAC7D,eAACgO,EAAA,EAAD,CAAWhD,MAAM,SAAjB,gBAA2BpF,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAM1G,WACjC,eAAC8O,EAAA,EAAD,CAAWhD,MAAM,SAAjB,SACE,uBAAK3R,UAAWH,EAAQsI,QAAxB,UACE,eAACkQ,EAAA,EAAD,CAASjT,MAAM,OAAOkT,OAAK,EAA3B,SACE,eAACC,EAAA,EAAD,CACEvY,UAAWH,EAAQyI,SACnByK,QAAS,kBAtHd,SAACxG,GACtBiL,GAAc,SAACK,GAAD,mBAAC,eACVA,GADS,IAEZzL,QAAQ,EACRG,OACAnH,MAAO,2BAiHgCoT,CAAejM,IAFhC,SAIE,eAAC,IAAD,CAAuBjK,MAAM,gBAGjC,eAAC+V,EAAA,EAAD,CAASjT,MAAM,OAAOkT,OAAK,EAA3B,SACE,eAACC,EAAA,EAAD,CACEvY,UAAWH,EAAQyI,SACnByK,QAAS,kBA5Jd,SAACxG,GACtB+K,GAAiB,SAACO,GAAD,mBAAC,eACbA,GADY,IAEfzL,QAAQ,EACRrG,QAAQ,EACRwG,OACAnH,MAAO,sBACPiH,UAAW,YAqJ4BoM,CAAelM,IAFhC,SAIE,eAAC,IAAD,CAAUjK,MAAM,eAGpB,eAAC+V,EAAA,EAAD,CAASjT,MAAM,SAASkT,OAAK,EAA7B,SACE,eAACC,EAAA,EAAD,CACEvY,UAAWH,EAAQyI,SACnByK,QAAS,kBAzJpB,SAACxG,GAChB,IAAQmM,EAAsCjC,EAAtCiC,UAAW9B,EAA2BH,EAA3BG,WAAY+B,EAAelC,EAAfkC,WAe/BD,GAduB,WACrB9B,GAAW,GACX/J,EAAK,0BAA2B,CAAEvN,GAAIiN,EAAK6B,MACxCX,KADH,uCACQ,WAAOC,GAAP,SAAAgK,EAAA,sDACJd,GAAW,GACX+B,IACAb,IACAnL,EAASgB,KAAKD,EAAIE,QAAS,WAJvB,2CADR,uDAOGC,OAAM,SAACC,GACN8I,GAAW,GACXjK,EAASgB,KAAK,wBAAyB,eA4IJiL,CAASrM,IAF1B,SAIE,eAAC,IAAD,CAAYjK,MAAM,yBA/BPuP,MAsCxB8E,GAAW,eAAC,KAAD,KACVA,GAAuC,GAA5BQ,EAAkB0B,QAC7B,eAAC,KAAD,sCAOV,eAAC9D,EAAA,EAAD,CAAa/U,UAAWH,EAAQ2I,QAAhC,SACE,eAACsQ,EAAA,EAAD,CACEC,MAAO9B,EACP+B,KAAMjC,EAAUF,QAChBpX,SAhIW,SAACwR,EAAmC9S,GACvD6Y,GAAa,SAACa,GAAD,mBAAC,eAAyBA,GAA1B,IAAqChB,QAAS1Y,eAoIzD,eAAC,GAAD,2BACMkZ,GADN,IAEE/K,QAASsL,EACTpL,UAAWsL,KAEZP,EAAWnL,QACV,eAAC,GAAD,2BAAwBmL,GAAxB,IAAoCjL,QAnIlB,WACtBkL,GAAc,SAACK,GAAD,mBAAC,eAAyBA,GAA1B,IAAqCzL,QAAQ","file":"static/js/8.1bba7092.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.49 2 2 6.49 2 12s4.49 10 10 10 10-4.49 10-10S17.51 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'ControlPoint');\n\nexports.default = _default;","import React, { useState, useEffect } from 'react';\r\nimport { FormControl, InputLabel, makeStyles, MenuItem, Select } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  selectRoot: {\r\n    '& .MuiOutlinedInput-notchedOutline': {\r\n      borderColor: 'white !important'\r\n    }\r\n  },\r\n  selectIcon: {\r\n    right: 0\r\n  },\r\n  formControlRoot: {\r\n    minWidth: 'unset'\r\n  }\r\n}));\r\n\r\nconst UnitSelect = (props: any) => {\r\n  const [{\r\n    value = '',\r\n    name = '',\r\n    id = 'tempID',\r\n    option = [],\r\n    placeholder = 'Unit',\r\n    onChange = new Function,\r\n    onBlur = new Function,\r\n  }, setProps] = useState(props)\r\n\r\n  const classes = useStyles()\r\n  useEffect(() => {\r\n    setProps(props)\r\n  }, [props])\r\n\r\n  return (\r\n    <FormControl variant=\"outlined\" className={classes.formControlRoot}>\r\n      <InputLabel id={id} shrink={false} >\r\n        {value == '' && placeholder}\r\n      </InputLabel>\r\n      <Select\r\n        labelId={id}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        className={classes.selectRoot}\r\n        classes={{\r\n          icon: classes.selectIcon\r\n        }}\r\n      >\r\n        {option.map(({ id, name }: any, i: any) => <MenuItem key={i} value={id}>{name}</MenuItem>)}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default UnitSelect;\r\n\r\n\r\n\r\n","const UnitDropdown = [\r\n    { id: 'None', name: 'None' },\r\n    { id: 'g', name: 'g' },\r\n    // { id: 'KG', name: 'kg' },\r\n    // { id: 'L', name: 'liter' },\r\n    { id: 'ml', name: 'ml' },\r\n    { id: 'tsp', name: 'tsp' },\r\n    { id: 'tbsp', name: 'tbsp' },\r\n]\r\nexport default UnitDropdown;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    minWidth: 56,\n    flexShrink: 0\n  },\n\n  /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    marginTop: 8\n  }\n};\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nvar ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component – normally `Avatar`.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemAvatar'\n})(ListItemAvatar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * If `true`, the children will be indented.\n   * This should be used if there is no left avatar or left icon.\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);","function useCalories() {\r\n    let caloriesData = [];\r\n    for (let i = 900; i <= 3000; i += 100) {\r\n        let sampleObject: any = {};\r\n        sampleObject.id = i;\r\n        sampleObject.name = i.toString();\r\n        caloriesData.push(sampleObject)\r\n    }\r\n    return caloriesData;\r\n}\r\n\r\nexport default useCalories;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'ChevronRight');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z\"\n}), 'KeyboardArrowUp');\n\nexports.default = _default;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListItem from '../ListItem';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body1, _defineProperty({\n      minHeight: 48,\n      paddingTop: 6,\n      paddingBottom: 6,\n      boxSizing: 'border-box',\n      width: 'auto',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    }, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    })),\n    // TODO v5: remove\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: {},\n\n    /* Styles applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the root element if dense. */\n    dense: _extends({}, theme.typography.body2, {\n      minHeight: 'auto'\n    })\n  };\n};\nvar MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      ListItemClasses = props.ListItemClasses,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'menuitem' : _props$role,\n      selected = props.selected,\n      tabIndexProp = props.tabIndex,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"ListItemClasses\", \"role\", \"selected\", \"tabIndex\"]);\n\n  var tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/React.createElement(ListItem, _extends({\n    button: true,\n    role: role,\n    tabIndex: tabIndex,\n    component: component,\n    selected: selected,\n    disableGutters: disableGutters,\n    classes: _extends({\n      dense: classes.dense\n    }, ListItemClasses),\n    className: clsx(classes.root, className, selected && classes.selected, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes = {\n  /**\n   * Menu item contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * `classes` prop applied to the [`ListItem`](/api/list-item/) element.\n   */\n  ListItemClasses: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenuItem'\n})(MenuItem);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import * as Yup from 'yup';\r\n\r\ninterface NutritionQuantity {\r\n  macros: string,\r\n  gram: string,\r\n  calories: string,\r\n}\r\n\r\ninterface IntMealTime {\r\n  isEdit: Boolean,\r\n  meal_time: string,\r\n  order: number,\r\n  meals: IntMeal[],\r\n}\r\n\r\ninterface IntIngredients {\r\n  id: string\r\n}\r\n\r\ninterface IntMeal {\r\n  ingredients: IntIngredients[],\r\n  quantity: string,\r\n  quantity_unit: string,\r\n  protein: string,\r\n  fat: string,\r\n  carbs: string,\r\n  calories: string,\r\n}\r\n\r\ninterface NutritionPlan {\r\n  diet_type: string,\r\n  calories: string,\r\n  protein: NutritionQuantity,\r\n  fat: NutritionQuantity,\r\n  carbs: NutritionQuantity\r\n  nutrition: IntMealTime[]\r\n}\r\n\r\nexport const NutQuantity: NutritionQuantity = {\r\n  macros: '',\r\n  gram: '',\r\n  calories: '',\r\n}\r\n\r\nexport const NutMealTime: IntMealTime = {\r\n  isEdit: true,\r\n  meal_time: '',\r\n  order: 0,\r\n  meals: []\r\n}\r\n\r\nexport const NutMeal: IntMeal = {\r\n  ingredients: [],\r\n  quantity: '',\r\n  quantity_unit: '',\r\n  protein: '',\r\n  fat: '',\r\n  carbs: '',\r\n  calories: '',\r\n}\r\n\r\n\r\nexport const initialFormValues: NutritionPlan = {\r\n  diet_type: '',\r\n  calories: '',\r\n  protein: NutQuantity,\r\n  fat: NutQuantity,\r\n  carbs: NutQuantity,\r\n  nutrition: []\r\n};\r\n\r\nconst ValNut = Yup.object({\r\n  macros: Yup.number().typeError('Macros must be in number').required('Macros is required'),\r\n  gram: Yup.number().typeError('Gram must be in number').required('Gram is required'),\r\n  calories: Yup.number().typeError('Calories must be in number').required('Calories is required'),\r\n})\r\n\r\nexport const validation = Yup.object().shape({\r\n  diet_type: Yup.string().trim().required('Diet type is required'),\r\n  calories: Yup.number().required('Calories is required'),\r\n  protein: ValNut,\r\n  fat: ValNut,\r\n  carbs: ValNut,\r\n  nutrition: Yup.array().of(\r\n    Yup.object().shape({\r\n      meal_time: Yup.string().trim().required('Name is required'),\r\n      meals: Yup.array().of(\r\n        Yup.object().shape({\r\n          ingredients: Yup.array().of(\r\n            Yup.object().shape({\r\n              id: Yup.string().trim().required('Before Workout is Required'),\r\n            })).min(1, 'Ingredients is Required'),\r\n          quantity: Yup.number().typeError('Quantity must be in number').required('Quantity is required'),\r\n          quantity_unit: Yup.string().trim().required('Quantity unit is required'),\r\n          protein: Yup.number().typeError('Protein must be in number').required('Protein is required'),\r\n          fat: Yup.number().typeError('Fat must be in number').required('Fat is required'),\r\n          carbs: Yup.number().typeError('Carbs must be in number').required('Carbs is required'),\r\n          calories: Yup.number().typeError('Calories must be in number').required('Calories is required'),\r\n        })\r\n      ).min(1, 'Meal is Required')\r\n    })).min(1, 'Field is Required')\r\n})\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  CardMedia,\r\n  CircularProgress,\r\n  CircularProgressProps,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent, Divider, FormControl,\r\n  FormHelperText, Grid,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  makeStyles,\r\n  Paper,\r\n  Tab,\r\n  Table,\r\n  TableBody, TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Tooltip, Typography\r\n} from '@material-ui/core';\r\nimport List from '@material-ui/core/List';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Pagination, TabContext, TabList, TabPanel } from '@material-ui/lab';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Formik, getIn, FieldArray } from 'formik';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\r\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\r\nimport Page from '../../components/Page/Page';\r\nimport useConfModel from '../../hook/useConfModel';\r\nimport useService from '../../hook/useService';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport UnitSelect from '../../components/UnitSelect/UnitSelect';\r\nimport UnitDropdown from '../../utils/MetricUnits';\r\nimport { initialFormValues, NutMeal, NutMealTime, validation } from './FormikValues';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport clsx from 'clsx';\r\nimport useCalories from '../../hook/useCalories';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  root: {\r\n    width: theme.breakpoints.values.lg,\r\n    maxWidth: '100%',\r\n    margin: '0 auto',\r\n    padding: theme.spacing(3),\r\n  },\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  tabCard: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  themeButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n  },\r\n  sEvenly: {\r\n    display: 'flex',\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  sBetween: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  iconPadd: {\r\n    padding: 5,\r\n  },\r\n  jCenter: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(1),\r\n    justifyContent: 'center',\r\n  },\r\n  tabRoot: {\r\n    minWidth: 0,\r\n    textTransform: 'none'\r\n    // margin: '10px 0px',\r\n  },\r\n  tabIndicator: {\r\n    backgroundColor: theme.palette.green.main,\r\n  },\r\n  tabTextColorInherit: {\r\n    backgroundColor: theme.palette.green.main,\r\n    color: 'white',\r\n    border: '1px solid white',\r\n  },\r\n  tabPanelRoot: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n    width: '100%',\r\n  },\r\n  listItemRoot: {\r\n    backgroundColor: '#7ac0af2b',\r\n    margin: '10px 0px',\r\n  },\r\n  flexDisplay: {\r\n    display: 'flex',\r\n  },\r\n  paperRoot: {\r\n    display: 'flex',\r\n    marginTop: '20px',\r\n  },\r\n  paperRoot1: {\r\n    display: 'flex',\r\n    marginTop: '20px',\r\n  },\r\n  tablePanelRoot: {\r\n    padding: '0px',\r\n  },\r\n  largeAvatar: {\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10)\r\n  },\r\n  justPadding: {\r\n    padding: 10,\r\n    borderRadius: 10\r\n  },\r\n  tabBtnIcon: {\r\n    height: '100%',\r\n    minWidth: 0,\r\n    textTransform: 'none'\r\n  },\r\n  divTab: {\r\n    flexDirection: 'column',\r\n    display: 'flex'\r\n  },\r\n  //=========\r\n\r\n  avatarRoot: {\r\n    borderRadius: 10,\r\n    marginRight: 15,\r\n    // width: theme.spacing(10),\r\n    // height: theme.spacing(10),\r\n  },\r\n  textPrimary: {\r\n    fontWeight: 'bold'\r\n  },\r\n  textSecondary: {\r\n    color: '#A0A6B2'\r\n  },\r\n  noPadding: {\r\n    padding: 0\r\n  },\r\n  benefitsList: {\r\n    fontSize: '0.7rem',\r\n    '&::before': {\r\n      content: \"'•  '\",\r\n      color: 'black',\r\n    }\r\n  },\r\n  cardRoot: {\r\n    borderRadius: theme.spacing(3),\r\n    position: 'relative'\r\n  },\r\n  cardMediaRoot: {\r\n    height: theme.spacing(25)\r\n  },\r\n  cardContentRoot: {\r\n    backgroundColor: '#EFF1F3',\r\n    padding: theme.spacing(2),\r\n    paddingBottom: `${theme.spacing(2)}px !important`\r\n  },\r\n  cardActionsRoot: {\r\n    padding: 0,\r\n    paddingTop: theme.spacing(1),\r\n    justifyContent: 'space-between'\r\n  },\r\n  cardActionsBenifitsRoot: {\r\n    padding: 0,\r\n    paddingTop: theme.spacing(1),\r\n    display: 'block'\r\n  },\r\n  ulRoot: {\r\n    listStyle: 'none',\r\n    display: 'flex',\r\n    padding: 0,\r\n    margin: 0,\r\n  },\r\n  liRoot: {\r\n    paddingLeft: '1em',\r\n    textIndent: '-.7em',\r\n  },\r\n  ulTypo: {\r\n    marginLeft: theme.spacing(0.5)\r\n  },\r\n  colorProtein: {\r\n    '&::before': {\r\n      content: \"'•  '\",\r\n      color: '#9A88FF',\r\n    }\r\n  },\r\n  colorFat: {\r\n    '&::before': {\r\n      content: \"'•  '\",\r\n      color: '#E57B91',\r\n    }\r\n  },\r\n  colorCarbs: {\r\n    '&::before': {\r\n      content: \"'•  '\",\r\n      color: '',\r\n    }\r\n  },\r\n  dividerRoot: {\r\n    background: 'white',\r\n    margin: theme.spacing(1, -2)\r\n  },\r\n  mealTimeText: {\r\n    margin: theme.spacing(2, 0)\r\n  },\r\n  benefitsText: {\r\n    color: '#41A58D'\r\n  },\r\n  nutritionTextDiv: {\r\n    border: '1px solid #EFF1F3',\r\n    color: '#EFF1F3',\r\n    borderRadius: 20,\r\n    padding: theme.spacing(0.5, 1),\r\n    width: 'fit-content',\r\n    position: 'absolute',\r\n    top: theme.spacing(2),\r\n    left: theme.spacing(2),\r\n  },\r\n  nutritionText: {\r\n    fontSize: '0.5rem',\r\n  },\r\n  nutCard: {\r\n    borderRadius: theme.spacing(3),\r\n    margin: theme.spacing(2, 0)\r\n  },\r\n  nutCardRoot: {\r\n    backgroundColor: '#41A58D',\r\n    color: 'white'\r\n  },\r\n  nutCardTitle: {\r\n    textAlign: 'center',\r\n    color: 'inherit'\r\n  },\r\n  nutCardAction: {\r\n    backgroundColor: '#276955',\r\n    color: 'white',\r\n    justifyContent: 'space-evenly'\r\n  },\r\n  circleBottom: {\r\n    color: '#eeeeee42',\r\n  },\r\n  circleTop: {\r\n    position: 'absolute',\r\n    left: 0,\r\n  },\r\n  textareaAdornedEnd: {\r\n    paddingRight: 0\r\n  },\r\n}));\r\n\r\nconst DietTypeDrop = [\r\n  { id: 'VEG', name: 'Vegetarian' },\r\n  { id: 'NONVEG', name: 'Non-Vegetarian' },\r\n  { id: 'EGG', name: 'Eggetarian' },\r\n];\r\n\r\nconst CaloriesDrop = [\r\n  { id: '2000', name: '2000' },\r\n  { id: '2100', name: '2100' },\r\n  { id: '2200', name: '2200' },\r\n  { id: '2300', name: '2300' },\r\n];\r\n\r\nconst NutritionPlan = () => {\r\n  const classes = useStyles();\r\n  const Snackbar = useSnackbar();\r\n  const { Post } = useService();\r\n  const ConfModel = useConfModel();\r\n  const [loading, setLoading] = useState(true);\r\n  const [stateData, setStateData] = useState({ page_no: 1, page_limit: 10 });\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const [nutritionPlanList, setNutritionPlanList] = useState([]);\r\n  const [addEditDialog, setAddEditDialog] = useState({\r\n    isOpen: false,\r\n    title: '',\r\n    okBtnText: '',\r\n    isEdit: false,\r\n    data: {},\r\n  });\r\n\r\n  const [viewDialog, setViewDialog] = useState({\r\n    isOpen: false,\r\n    title: '',\r\n    data: {},\r\n  });\r\n\r\n  const openAddDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      title: 'Add Nutrition Plan',\r\n      isEdit: false,\r\n      okBtnText: 'Save',\r\n    }));\r\n  };\r\n\r\n  const openEditDialog = (data: any) => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      isEdit: true,\r\n      data,\r\n      title: 'Edit Nutrition Plan',\r\n      okBtnText: 'Edit',\r\n    }));\r\n  };\r\n\r\n  const onDelete = (data: any) => {\r\n    const { openModel, setLoading, closeModel } = ConfModel;\r\n    const submitFunction = () => {\r\n      setLoading(true);\r\n      Post('app/deleteNutritionPlan', { id: data._id })\r\n        .then(async (res: any) => {\r\n          setLoading(false);\r\n          closeModel();\r\n          onSuccessAction();\r\n          Snackbar.show(res.message, 'success');\r\n        })\r\n        .catch((err: any) => {\r\n          setLoading(false);\r\n          Snackbar.show('Internal Server Error', 'error');\r\n        });\r\n    };\r\n    openModel(submitFunction);\r\n  };\r\n\r\n  const openViewDialog = (data: any) => {\r\n    setViewDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      data,\r\n      title: 'View Nutrition Plan',\r\n    }));\r\n  };\r\n\r\n  const listNutritionPlan = async () => {\r\n    setLoading(true);\r\n    Post('app/listNutritionPlan', stateData)\r\n      .then((res: any) => {\r\n        setLoading(false);\r\n        if (!res.error) {\r\n          setNutritionPlanList(res.data);\r\n          setPageCount(res.page_count);\r\n        } else {\r\n          Snackbar.show(res.message, 'error');\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        console.log('err', err);\r\n        setLoading(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const onPageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    setStateData((prevState: any) => ({ ...prevState, page_no: value }));\r\n  };\r\n\r\n  const closeAddEditDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const closeViewDialog = () => {\r\n    setViewDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const onSuccessAction = () => {\r\n    listNutritionPlan();\r\n    closeAddEditDialog();\r\n  };\r\n\r\n  const getDropValues = (dropValues: any, value: string) => {\r\n    return dropValues.find(({ id }: any) => id == value)?.name || ''\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    listNutritionPlan();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Page title='Nutrition Plan' />\r\n\r\n      <Grid alignItems='flex-end' container justify='space-between' spacing={3}>\r\n        <Grid item>\r\n          <Typography component='h1' variant='h3'>\r\n            Nutrition Plan\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant='contained'\r\n            onClick={() => openAddDialog()}\r\n            className={classes.themeButton}\r\n            startIcon={<AddIcon />}\r\n          >\r\n            Add\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* =============Search======== */}\r\n      {/* <Grid container spacing={3}>\r\n        <Grid item>\r\n          <Paper elevation={0}>\r\n            <TextField\r\n              fullWidth\r\n              size='small'\r\n              placeholder='Name'\r\n              variant='outlined'\r\n              name='state'\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid> */}\r\n\r\n      <Card className={classes.tabCard}>\r\n        <CardContent className={classes.content}>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align='center'>#</TableCell>\r\n                  <TableCell align='center'>Diet Type</TableCell>\r\n                  <TableCell align='center'>Calories</TableCell>\r\n                  <TableCell align='center'>Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {!loading &&\r\n                  nutritionPlanList.map((data: any, index: number) => (\r\n                    <TableRow hover key={index}>\r\n                      <TableCell align='center'>\r\n                        {stateData.page_limit * (stateData.page_no - 1) +\r\n                          index +\r\n                          1}\r\n                      </TableCell>\r\n                      <TableCell align='center'>{getDropValues(DietTypeDrop, data?.diet_type)}</TableCell>\r\n                      <TableCell align='center'>{data?.calories}</TableCell>\r\n                      <TableCell align='center'>\r\n                        <div className={classes.sEvenly}>\r\n                          <Tooltip title='View' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openViewDialog(data)}\r\n                            >\r\n                              <CenterFocusStrongIcon color='primary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Edit' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openEditDialog(data)}\r\n                            >\r\n                              <EditIcon color='action' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Delete' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => onDelete(data)}\r\n                            >\r\n                              <DeleteIcon color='secondary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                {loading && <TableLoader />}\r\n                {!loading && nutritionPlanList.length == 0 && (\r\n                  <TableNoData>No Data Found</TableNoData>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </CardContent>\r\n\r\n        <CardActions className={classes.actions}>\r\n          <Pagination\r\n            count={pageCount}\r\n            page={stateData.page_no}\r\n            onChange={onPageChange}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n\r\n      <AddEditModel\r\n        {...addEditDialog}\r\n        onClose={closeAddEditDialog}\r\n        onSuccess={onSuccessAction}\r\n      />\r\n      {viewDialog.isOpen && (\r\n        <ViewNutritionModel {...viewDialog} onClose={closeViewDialog} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const AddEditModel = (props: any) => {\r\n  const {\r\n    isEdit,\r\n    isOpen,\r\n    okBtnText = 'OK',\r\n    onClose,\r\n    data,\r\n    title,\r\n    onSuccess,\r\n  } = props;\r\n  const formikRef = useRef<any>(null);\r\n  const classes = useStyles();\r\n  const Snackbar = useSnackbar();\r\n  const { Post } = useService();\r\n  const getCaloriesData = useCalories()\r\n  const [tabValue, setTabValue] = React.useState('none');\r\n  const [ingredientList, setIngredientList] = useState([])\r\n  const [initialValue, setInitialValue] = React.useState({ ...initialFormValues });\r\n\r\n  const onSubmit = (value: any, helper: any) => {\r\n    helper.setSubmitting(true);\r\n    const postData = { ...value };\r\n    !isEdit && addData(postData, helper);\r\n    isEdit && editData(postData, helper);\r\n  };\r\n\r\n  const addData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n    Post('app/addNutritionPlan', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const editData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n    Post('app/editNutritionPlan', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n\r\n\r\n  const handleChangeTab = (newValue: string) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  const addNewTab = (values: any, setFieldValue: any, push: any) => {\r\n    push(NutMealTime)\r\n  }\r\n\r\n  const submitMealTime = (i: number, values: any, setFieldValue: any) => {\r\n\r\n    const { nutrition } = values\r\n    const NewNutrition = { ...nutrition[i] }\r\n    NewNutrition.isEdit = false\r\n    nutrition[i] = NewNutrition\r\n    setFieldValue('nutrition', nutrition)\r\n    handleChangeTab(i.toString())\r\n  }\r\n\r\n  const editMealTime = (i: number, values: any, setFieldValue: any) => {\r\n    const { nutrition } = values\r\n    const NewNutrition = { ...nutrition[i] }\r\n    NewNutrition.isEdit = true\r\n    nutrition[i] = NewNutrition\r\n    setFieldValue('nutrition', nutrition)\r\n    handleChangeTab(i.toString())\r\n  }\r\n\r\n  const deleteMealTime = (i: number, values: any, setFieldValue: any) => {\r\n    const { nutrition } = values\r\n    const NewNutrition = nutrition.filter((d: any, index: number) => index != i)\r\n    setFieldValue('nutrition', NewNutrition)\r\n  }\r\n\r\n  const addMeals = (values: any, i: number, setFieldValue: any, pushvalue: any) => {\r\n    // const FormKey = `nutrition[${i}].meals`\r\n    // const { nutrition } = values\r\n    // const meals = [...nutrition[i].meals]\r\n    pushvalue(NutMeal)\r\n    // setFieldValue(FormKey, meals)\r\n  }\r\n\r\n\r\n\r\n  const listAllMealIngredient = () => {\r\n    Post('app/listAllMealIngredient', {})\r\n      .then((response: any) => {\r\n        if (!response.error) {\r\n          setIngredientList(response.data);\r\n        } else {\r\n          Snackbar.show(response.message, 'error');\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        Snackbar.show(error.message, 'error');\r\n      });\r\n  };\r\n\r\n  const getArrayError = (error: any) => {\r\n    return typeof error == 'string' ? error : ''\r\n  }\r\n\r\n  const removeMeals = (i: number, FieldName: string, values: any, setFieldValue: any, remove: any) => {\r\n    // const MealValue = getIn(values, `${FieldName}.meals`)\r\n    // const FinelMealValue = MealValue.filter((d: any, index: number) => i != index)\r\n    // setFieldValue(`${FieldName}.meals`, FinelMealValue)\r\n    remove(i)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isEdit) {\r\n      const { _id, ...rest } = data;\r\n      const editData = { ...rest, id: _id };\r\n      let nutrition = editData.nutrition.map((NutData: any) => {\r\n        const { meals, ...rest } = NutData\r\n        let NewMeals = meals.map((MealData: any) => {\r\n          const { ingredients, ...rest } = MealData\r\n          const IngredientIds = ingredientList.map(({ _id }: any) => _id)\r\n          const NewInc = ingredients.filter(({ _id }: any) => IngredientIds.includes(_id)).map(({ _id }: any) => ({ id: _id }));\r\n          return { ...rest, ingredients: NewInc }\r\n        })\r\n        return { ...rest, isEdit: false, meals: NewMeals }\r\n      })\r\n      editData.nutrition = nutrition\r\n      console.log('editData', editData)\r\n      setInitialValue(editData);\r\n    } else {\r\n      setInitialValue(initialFormValues);\r\n    }\r\n  }, [props, ingredientList]);\r\n\r\n  useEffect(() => {\r\n    listAllMealIngredient();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={isOpen}\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        fullWidth\r\n        fullScreen\r\n        maxWidth='lg'\r\n        aria-labelledby='dialog-title'\r\n      >\r\n        <DialogTitle id='dialog-title' onClose={onClose}>\r\n          {title}\r\n        </DialogTitle>\r\n        <Formik\r\n          innerRef={formikRef}\r\n          enableReinitialize\r\n          initialValues={initialValue}\r\n          validationSchema={validation}\r\n          onSubmit={onSubmit}\r\n        >\r\n          {({ values, errors, touched, handleChange, handleBlur, setFieldValue, submitForm, isSubmitting }) => (\r\n            <>\r\n              <DialogContent dividers>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <Autocomplete\r\n                      options={DietTypeDrop}\r\n                      value={DietTypeDrop.find((data: any) => data.id == values.diet_type)}\r\n                      getOptionLabel={(option: any) => option.name}\r\n                      getOptionSelected={(option) => option.id == values.diet_type}\r\n                      onChange={(event: any, newValue: any) => {\r\n                        setFieldValue('diet_type', newValue?.id || '');\r\n                      }}\r\n                      onBlur={handleBlur}\r\n                      renderInput={(params: any) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label='Diet Types'\r\n                          variant='outlined'\r\n                          error={Boolean(touched.diet_type && errors.diet_type)}\r\n                          helperText={touched.diet_type && errors.diet_type}\r\n                          inputProps={{\r\n                            ...params.inputProps,\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Autocomplete\r\n                      options={getCaloriesData}\r\n                      value={getCaloriesData.find((data: any) => data.id == values.calories)}\r\n                      getOptionLabel={(option: any) => option.name}\r\n                      getOptionSelected={(option) => option.id == values.calories}\r\n                      onChange={(event: any, newValue: any) => {\r\n                        setFieldValue('calories', newValue?.id || '');\r\n                      }}\r\n                      onBlur={handleBlur}\r\n                      renderInput={(params: any) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label='Calories'\r\n                          variant='outlined'\r\n                          error={Boolean(touched.calories && errors.calories)}\r\n                          helperText={touched.calories && errors.calories}\r\n                          inputProps={{\r\n                            ...params.inputProps,\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n\r\n                  {[{ label: 'Protein', key: 'protein' }, { label: 'Fat', key: 'fat' }, { label: 'Carbs', key: 'carbs' }].map(({ label, key }) =>\r\n                    <>\r\n                      <Grid item xs={2}>\r\n                        <Typography style={{ padding: '20px' }} variant='h5' align='left'>\r\n                          <strong>{label}</strong>\r\n                        </Typography>\r\n                      </Grid>\r\n\r\n                      {[{ label: 'Macros  ( % )', key: 'macros' }, { label: 'Gram  ( g )', key: 'gram' }, { label: 'Calories  ( Kcal )', key: 'calories' }].map((subData: any, index: any) => {\r\n                        const SubKey = subData.key;\r\n                        const FieldName = `${key}.${SubKey}`;\r\n                        return (\r\n                          <Grid item xs={3}>\r\n                            <TextField\r\n                              fullWidth\r\n                              label={subData.label}\r\n                              name={FieldName}\r\n                              variant='outlined'\r\n                              error={Boolean(getIn(touched, FieldName) && getIn(errors, FieldName))}\r\n                              helperText={getIn(touched, FieldName) && getIn(errors, FieldName)}\r\n                              value={getIn(values, FieldName)}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </Grid>\r\n                        )\r\n                      })}\r\n                    </>\r\n                  )}\r\n\r\n                  {/* <Paper className={classes.paperRoot}> */}\r\n\r\n                  <TabContext value={tabValue || ''}>\r\n                    <FieldArray name='nutrition' validateOnChange>\r\n                      {({ push, remove }) => (\r\n                        <Grid item xs={4}>\r\n                          <TabList\r\n                            classes={{\r\n                              indicator: classes.tabIndicator\r\n                            }}\r\n                            orientation=\"vertical\"\r\n                            variant=\"standard\"\r\n                          >\r\n                            {values?.nutrition.map((nutData: any, i: number) => {\r\n                              let FieldName: string = `nutrition[${i}]`\r\n                              let FieldTouched: any = getIn(touched, FieldName)\r\n                              let FieldErrors: any = getIn(errors, FieldName)\r\n                              let FieldValues: any = getIn(values, FieldName)\r\n                              const TabSelected = i == Number(tabValue)\r\n                              const SelectedStyle = TabSelected ? { borderRight: '2px solid #41a58d' } : { borderRight: '2px solid white' }\r\n                              return (\r\n                                <div className={classes.divTab}>\r\n                                  <Grid item container xs={12} spacing={1} style={{ margin: 'inherit', ...SelectedStyle }}>\r\n                                    <Grid item xs={nutData.isEdit ? 10 : 6}>\r\n\r\n                                      {nutData.isEdit && <TextField\r\n                                        fullWidth\r\n                                        size='small'\r\n                                        label='Name'\r\n                                        name={`${FieldName}.meal_time`}\r\n                                        variant='outlined'\r\n                                        error={Boolean(FieldTouched?.meal_time && FieldErrors?.meal_time)}\r\n                                        helperText={FieldTouched?.meal_time && FieldErrors?.meal_time}\r\n                                        value={nutData?.meal_time}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                      />\r\n                                      }\r\n                                      {console.log(FieldTouched?.meals, FieldTouched?.meal_time)}\r\n                                      {!nutData.isEdit &&\r\n                                        <>\r\n                                          <Button\r\n                                            fullWidth\r\n                                            className={!Boolean(FieldTouched?.meal_time && FieldErrors?.meal_time) ? classes.themeButton : ''}\r\n                                            classes={{\r\n                                              fullWidth: classes.tabBtnIcon\r\n                                            }}\r\n                                            variant='contained'\r\n                                            color='secondary'\r\n                                          >\r\n                                            {!Boolean(FieldTouched?.meal_time && FieldErrors?.meal_time) ? nutData?.meal_time : FieldErrors?.meal_time}\r\n                                          </Button>\r\n                                        </>\r\n                                      }\r\n                                    </Grid>\r\n\r\n                                    {nutData.isEdit &&\r\n                                      <Grid item xs={2}>\r\n                                        <Button\r\n                                          fullWidth\r\n                                          className={classes.themeButton}\r\n                                          classes={{\r\n                                            fullWidth: classes.tabBtnIcon\r\n                                          }}\r\n                                          variant='contained'\r\n                                          color='secondary'\r\n                                          onClick={() => submitMealTime(i, values, setFieldValue)}\r\n                                        >\r\n                                          <CheckIcon />\r\n                                        </Button>\r\n                                      </Grid>\r\n                                    }\r\n\r\n                                    {!nutData.isEdit && <Grid item xs={2} >\r\n                                      <Button\r\n                                        fullWidth\r\n                                        classes={{\r\n                                          fullWidth: classes.tabBtnIcon\r\n                                        }}\r\n                                        variant='contained'\r\n                                        color='primary'\r\n                                        onClick={(e) => handleChangeTab(i.toString())}\r\n                                      >\r\n                                        {tabValue === i.toString() ? <ChevronRightIcon /> : <KeyboardArrowUpIcon />}\r\n                                      </Button>\r\n                                    </Grid>\r\n                                    }\r\n\r\n                                    {!nutData.isEdit && <Grid item xs={2} >\r\n                                      <Button\r\n                                        fullWidth\r\n                                        classes={{\r\n                                          fullWidth: classes.tabBtnIcon\r\n                                        }}\r\n                                        variant='contained'\r\n                                        color='primary'\r\n                                        onClick={() => editMealTime(i, values, setFieldValue)}\r\n                                      >\r\n                                        <EditIcon />\r\n                                      </Button>\r\n                                    </Grid>\r\n                                    }\r\n\r\n                                    {!nutData.isEdit &&\r\n                                      <Grid item xs={2}>\r\n                                        <Button\r\n                                          fullWidth\r\n                                          classes={{\r\n                                            fullWidth: classes.tabBtnIcon\r\n                                          }}\r\n                                          variant='contained'\r\n                                          color='secondary'\r\n                                          onClick={() => remove(i)}\r\n                                        >\r\n                                          <DeleteIcon />\r\n                                        </Button>\r\n                                      </Grid>\r\n                                    }\r\n                                  </Grid>\r\n                                  <FormHelperText>\r\n                                    <Typography variant='caption' color='error'>{getIn(touched, `${FieldName}.meals`) && getArrayError(getIn(errors, `${FieldName}.meals`))}</Typography>\r\n                                  </FormHelperText>\r\n                                </div>\r\n                              )\r\n                            }\r\n                            )}\r\n                            <div className={classes.divTab}>\r\n                              <Grid container xs={12} spacing={1} style={{ margin: 'inherit' }}>\r\n                                <Grid item xs={12}>\r\n                                  <FormControl fullWidth\r\n                                    error={Boolean(getIn(touched, 'nutrition') && getArrayError(getIn(errors, 'nutrition')))}\r\n                                  >\r\n                                    <Button\r\n                                      fullWidth\r\n                                      className={classes.themeButton}\r\n                                      variant='contained'\r\n                                      color='secondary'\r\n                                      onClick={() => addNewTab(values, setFieldValue, push)}\r\n                                      endIcon={<AddIcon />}\r\n                                    >\r\n                                      Add Meal Time\r\n                                    </Button>\r\n\r\n                                    <FormHelperText>\r\n                                      {getIn(touched, 'nutrition') && getArrayError(getIn(errors, 'nutrition'))}\r\n                                    </FormHelperText>\r\n                                  </FormControl>\r\n                                </Grid>\r\n                              </Grid>\r\n                            </div>\r\n\r\n                          </TabList>\r\n                        </Grid>\r\n                      )}\r\n                    </FieldArray>\r\n\r\n\r\n                    <Grid item xs={8}>\r\n                      {values?.nutrition.map((nutData: any, i: number) => {\r\n                        let FieldMainName: string = `nutrition[${i}]`\r\n                        return (\r\n                          <FieldArray name={`${FieldMainName}.meals`}>\r\n                            {({ push, remove }) => (\r\n                              <>\r\n                                <TabPanel key={i} className={classes.tabPanelRoot} value={i.toString()}>\r\n\r\n                                  <Grid container spacing={2}>\r\n                                    <Grid item xs={12}>\r\n                                      <Typography variant='h5' align='center'>\r\n                                        <strong>{nutData?.meal_time}</strong>\r\n                                      </Typography>\r\n                                    </Grid>\r\n\r\n                                    {nutData?.meals.map((mealData: any, i: number) => {\r\n                                      let FieldName: string = `${FieldMainName}.meals[${i}]`\r\n                                      let FieldTouched: any = getIn(touched, FieldName)\r\n                                      let FieldErrors: any = getIn(errors, FieldName)\r\n                                      let FieldValues: any = getIn(values, FieldName)\r\n                                      return (\r\n                                        <>\r\n                                          <Grid item xs={11}>\r\n                                            <Typography variant='h5' align='center' >\r\n                                              <strong>{`Ingredient #${i + 1}`}</strong>\r\n                                            </Typography>\r\n                                          </Grid>\r\n\r\n                                          <Grid item xs={1}>\r\n                                            <Button\r\n                                              fullWidth\r\n                                              classes={{\r\n                                                fullWidth: classes.tabBtnIcon\r\n                                              }}\r\n                                              variant='contained'\r\n                                              color='secondary'\r\n                                              onClick={() => removeMeals(i, FieldMainName, values, setFieldValue, remove)}\r\n                                            >\r\n                                              <DeleteIcon />\r\n                                            </Button>\r\n                                          </Grid>\r\n\r\n                                          <Grid item md={12} xs={12}>\r\n                                            <Autocomplete\r\n                                              multiple\r\n                                              options={ingredientList}\r\n                                              value={ingredientList.filter((data: any) => mealData?.ingredients?.map(({ id }: any) => id).includes(data._id))}\r\n                                              getOptionLabel={(option: any) => option.name}\r\n                                              onChange={(event: any, newValue: any) => {\r\n                                                let IngIds = newValue.map(({ _id }: any) => ({ id: _id }))\r\n                                                setFieldValue(`${FieldName}.ingredients`, IngIds || []);\r\n                                              }}\r\n                                              onBlur={handleBlur}\r\n                                              renderInput={(params: any) => (\r\n                                                <TextField\r\n                                                  {...params}\r\n                                                  label='Ingredient'\r\n                                                  variant='outlined'\r\n                                                  error={Boolean(FieldTouched?.ingredients && FieldErrors?.ingredients)}\r\n                                                  helperText={FieldTouched?.ingredients && FieldErrors?.ingredients}\r\n                                                  inputProps={{\r\n                                                    ...params.inputProps,\r\n                                                  }}\r\n                                                />\r\n                                              )}\r\n                                            />\r\n                                          </Grid>\r\n                                          <Grid item xs={12}>\r\n                                            <TextField\r\n                                              fullWidth\r\n                                              label='Quantity'\r\n                                              name={`${FieldName}.quantity`}\r\n                                              variant='outlined'\r\n                                              error={Boolean(FieldTouched?.quantity && FieldErrors?.quantity) || Boolean(FieldTouched?.quantity_unit && FieldErrors?.quantity_unit)}\r\n                                              helperText={FieldTouched?.quantity && FieldErrors?.quantity || (FieldTouched?.quantity_unit && FieldErrors?.quantity_unit)}\r\n                                              value={mealData.quantity}\r\n                                              onChange={handleChange}\r\n                                              onBlur={handleBlur}\r\n                                              InputProps={{\r\n                                                classes: {\r\n                                                  adornedEnd: classes.textareaAdornedEnd\r\n                                                },\r\n                                                endAdornment: <UnitSelect id='quantity_unit' option={UnitDropdown} name={`${FieldName}.quantity_unit`} value={mealData.quantity_unit} onChange={handleChange} onBlur={handleBlur} />\r\n                                              }}\r\n                                            />\r\n                                          </Grid>\r\n\r\n                                          <Grid item md={6} xs={6}>\r\n                                            <TextField\r\n                                              fullWidth\r\n                                              multiline\r\n                                              label='Protein ( g )'\r\n                                              name={`${FieldName}.protein`}\r\n                                              variant='outlined'\r\n                                              error={Boolean(FieldTouched?.protein && FieldErrors?.protein)}\r\n                                              helperText={FieldTouched?.protein && FieldErrors?.protein}\r\n                                              value={mealData.protein}\r\n                                              onChange={handleChange}\r\n                                              onBlur={handleBlur}\r\n                                            />\r\n                                          </Grid>\r\n\r\n                                          <Grid item md={6} xs={6}>\r\n                                            <TextField\r\n                                              fullWidth\r\n                                              multiline\r\n                                              label='Fat ( g )'\r\n                                              name={`${FieldName}.fat`}\r\n                                              variant='outlined'\r\n                                              error={Boolean(FieldTouched?.fat && FieldErrors?.fat)}\r\n                                              helperText={FieldTouched?.fat && FieldErrors?.fat}\r\n                                              value={mealData.fat}\r\n                                              onChange={handleChange}\r\n                                              onBlur={handleBlur}\r\n                                            />\r\n                                          </Grid>\r\n\r\n                                          <Grid item md={6} xs={6}>\r\n                                            <TextField\r\n                                              fullWidth\r\n                                              multiline\r\n                                              label='Carbs ( g )'\r\n                                              name={`${FieldName}.carbs`}\r\n                                              variant='outlined'\r\n                                              error={Boolean(FieldTouched?.carbs && FieldErrors?.carbs)}\r\n                                              helperText={FieldTouched?.carbs && FieldErrors?.carbs}\r\n                                              value={mealData.carbs}\r\n                                              onChange={handleChange}\r\n                                              onBlur={handleBlur}\r\n                                            />\r\n                                          </Grid>\r\n\r\n                                          <Grid item md={6} xs={6}>\r\n                                            <TextField\r\n                                              fullWidth\r\n                                              multiline\r\n                                              label='calories ( kcal )'\r\n                                              name={`${FieldName}.calories`}\r\n                                              variant='outlined'\r\n                                              error={Boolean(FieldTouched?.calories && FieldErrors?.calories)}\r\n                                              helperText={FieldTouched?.calories && FieldErrors?.calories}\r\n                                              value={mealData.calories}\r\n                                              onChange={handleChange}\r\n                                              onBlur={handleBlur}\r\n                                            />\r\n                                          </Grid>\r\n                                        </>\r\n                                      )\r\n                                    })}\r\n\r\n                                    <Grid item md={12} xs={12}>\r\n                                      <FormControl fullWidth\r\n                                        error={Boolean(getIn(touched, `${FieldMainName}.meals`) && getArrayError(getIn(errors, `${FieldMainName}.meals`)))}\r\n                                      >\r\n                                        <Button\r\n                                          fullWidth\r\n                                          className={classes.themeButton}\r\n                                          variant='contained'\r\n                                          color='default'\r\n                                          onClick={() => addMeals(values, i, setFieldValue, push)}\r\n                                          endIcon={<ControlPointIcon />}\r\n                                        >\r\n                                          Add Ingredients\r\n                                        </Button>\r\n\r\n                                        <FormHelperText>\r\n                                          {getIn(touched, `${FieldMainName}.meals`) && getArrayError(getIn(errors, `${FieldMainName}.meals`))}\r\n                                        </FormHelperText>\r\n                                      </FormControl>\r\n                                    </Grid>\r\n\r\n                                  </Grid>\r\n\r\n                                </TabPanel>\r\n                              </>\r\n                            )}\r\n                          </FieldArray>\r\n                        )\r\n                      }\r\n                      )}\r\n\r\n                    </Grid>\r\n                  </TabContext>\r\n                  {/* </Paper> */}\r\n\r\n                </Grid>\r\n              </DialogContent>\r\n\r\n              <DialogActions>\r\n                <Button onClick={onClose} variant='outlined' color='secondary'>\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  className={classes.themeButton}\r\n                  onClick={() => submitForm()}\r\n                  disabled={isSubmitting}\r\n                  variant='outlined'\r\n                >\r\n                  {isSubmitting ? (\r\n                    <CircularProgress size={24} style={{ color: 'white' }} />\r\n                  ) : (\r\n                    okBtnText\r\n                  )}\r\n                </Button>\r\n              </DialogActions>\r\n            </>\r\n          )}\r\n        </Formik>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ViewNutritionModel = (props: any) => {\r\n  const { isOpen, title, onClose, data } = props;\r\n  const classes = useStyles();\r\n  const [formValue, setFormValue] = useState(data);\r\n  const [tabValue, setTabValue] = React.useState<any>('0');\r\n  const [timings, setTimings] = React.useState('Early-Morning');\r\n\r\n  const handleTabChange = (event: React.ChangeEvent<{}>, newValue: string) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  const getDropValues = (dropValues: any, value: string) => {\r\n    return dropValues.find(({ id }: any) => id == value)?.name || ''\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFormValue(data);\r\n  }, [props]);\r\n\r\n  console.log(formValue)\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      fullWidth\r\n      maxWidth='md'\r\n      aria-labelledby='dialog-view-title'\r\n      open={isOpen}\r\n    >\r\n      <DialogTitle id='dialog-view-title' onClose={onClose}>\r\n        {title}\r\n      </DialogTitle>\r\n\r\n      <DialogContent dividers>\r\n\r\n        <Paper >\r\n          <Table>\r\n            <TableBody>\r\n              <TableRow >\r\n                <TableCell>Diet Type</TableCell>\r\n                <TableCell><strong>{getDropValues(DietTypeDrop, formValue?.diet_type)}</strong></TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Calories</TableCell>\r\n                <TableCell><strong>{formValue?.calories} Kcal</strong></TableCell>\r\n              </TableRow>\r\n\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n\r\n        <Card className={classes.nutCard}>\r\n          <CardHeader\r\n            classes={{\r\n              root: classes.nutCardRoot,\r\n              title: classes.nutCardTitle\r\n            }}\r\n            title={`${formValue?.calories} Kcal`}\r\n          />\r\n          <CardActions className={classes.nutCardAction}>\r\n            <NutritionData title='Protein' data={formValue?.protein} />\r\n            <NutritionData title='Fat' data={formValue?.fat} />\r\n            <NutritionData title='Carbs' data={formValue?.carbs} />\r\n          </CardActions>\r\n        </Card>\r\n\r\n        <Paper>\r\n          <TabContext value={tabValue || ''}>\r\n            <Grid item container xs={12} spacing={2}>\r\n              <Grid item xs={3}>\r\n                <TabList\r\n                  classes={{\r\n                    indicator: classes.tabIndicator\r\n                  }}\r\n                  onChange={handleTabChange}\r\n                  orientation=\"vertical\"\r\n                  variant=\"standard\"\r\n                >\r\n                  {formValue?.nutrition.map((nutData: any, i: number) => {\r\n                    const { meal_time } = nutData\r\n                    return (\r\n                      <Tab\r\n                        classes={{ root: classes.tabRoot, textColorInherit: classes.tabTextColorInherit }}\r\n                        label={meal_time}\r\n                        value={i.toString()} />\r\n                    )\r\n                  }\r\n                  )}\r\n\r\n                </TabList>\r\n              </Grid>\r\n\r\n              <Grid item xs={9}>\r\n                {formValue?.nutrition.map((nutData: any, i: number) => {\r\n                  const { meals = [] } = nutData\r\n                  return (\r\n                    <TabPanel key={i} className={classes.tabPanelRoot} value={i.toString()}>\r\n                      {meals.map((mealData: any, i: number) => {\r\n                        const { ingredients = [] } = mealData\r\n                        return (\r\n                          <>\r\n                            <Grid item xs={12} className={classes.mealTimeText}>\r\n                              <Typography variant='h5' align='center'>\r\n                                <strong>{`Ingredient #${i + 1}`}</strong>\r\n                              </Typography>\r\n                            </Grid>\r\n                            <Grid item container xs={12} spacing={2}>\r\n                              {ingredients.map((incData: any, i: number) => {\r\n                                const { benfits = [] } = incData\r\n                                return (\r\n\r\n                                  <Grid item xs={12} sm={12} md={6}>\r\n                                    <Card elevation={0} className={classes.cardRoot}>\r\n                                      <CardContent className={classes.cardContentRoot}>\r\n                                        <List className={classes.noPadding}>\r\n                                          <ListItem disableGutters className={classes.noPadding}>\r\n                                            <ListItemAvatar>\r\n                                              <Avatar className={classes.avatarRoot} src={incData.image?.url} />\r\n                                            </ListItemAvatar>\r\n                                            <ListItemText\r\n                                              classes={{\r\n                                                primary: classes.textPrimary,\r\n                                                secondary: classes.textSecondary\r\n                                              }}\r\n                                              primary={incData.name}\r\n                                              secondary={`${mealData.quantity}  ${mealData.quantity_unit}`}\r\n                                            />\r\n                                          </ListItem>\r\n                                        </List>\r\n\r\n                                        <CardActions disableSpacing className={classes.cardActionsRoot}>\r\n                                          <div>\r\n                                            <Typography variant=\"body2\" >\r\n                                              <ul className={classes.ulRoot}>\r\n                                                <li className={clsx(classes.liRoot, classes.colorProtein)}>Protein</li>\r\n                                                <Typography className={classes.ulTypo} variant=\"body1\" >{mealData.protein}</Typography>\r\n                                              </ul>\r\n                                            </Typography>\r\n\r\n                                          </div>\r\n\r\n                                          <div>\r\n                                            <Typography variant=\"body2\" >\r\n                                              <ul className={classes.ulRoot}>\r\n                                                <li className={clsx(classes.liRoot, classes.colorFat)}>Fat</li>\r\n                                                <Typography className={classes.ulTypo} variant=\"body1\" >{mealData.fat}</Typography>\r\n                                              </ul>\r\n                                            </Typography>\r\n\r\n                                          </div>\r\n\r\n                                          <div>\r\n                                            <Typography variant=\"body2\" >\r\n                                              <ul className={classes.ulRoot}>\r\n                                                <li className={clsx(classes.liRoot, classes.colorCarbs)}>Carbs</li>\r\n                                                <Typography className={classes.ulTypo} variant=\"body1\" >{mealData.carbs}</Typography>\r\n                                              </ul>\r\n                                            </Typography>\r\n\r\n                                          </div>\r\n                                        </CardActions>\r\n\r\n                                        <Divider className={classes.dividerRoot} />\r\n                                        <CardActions disableSpacing className={classes.cardActionsBenifitsRoot}>\r\n                                          <Grid item container xs={12} className={classes.benefitsText}>\r\n                                            <Typography variant='body2' color='inherit'>\r\n                                              <strong>Benefits:</strong>\r\n                                            </Typography>\r\n                                          </Grid>\r\n                                          <Grid item container xs={12}>\r\n\r\n                                            {benfits.map((benfData: any, i: number) =>\r\n                                              <Grid item xs={12} sm={6} >\r\n                                                <ul className={classes.ulRoot}>\r\n                                                  <li className={clsx(classes.liRoot, classes.benefitsList)}>{benfData}</li>\r\n\r\n                                                </ul>\r\n                                              </Grid>)}\r\n\r\n                                          </Grid>\r\n                                        </CardActions>\r\n\r\n                                      </CardContent>\r\n                                    </Card>\r\n                                  </Grid>\r\n                                )\r\n                              })}\r\n                            </Grid>\r\n                          </>\r\n                        )\r\n                      })}\r\n                    </TabPanel>\r\n                  )\r\n                })}\r\n              </Grid>\r\n\r\n            </Grid>\r\n\r\n          </TabContext>\r\n        </Paper>\r\n\r\n\r\n      </DialogContent >\r\n\r\n      <DialogActions>\r\n        <Button onClick={onClose} variant='outlined' color='secondary'>\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog >\r\n  );\r\n};\r\n\r\nconst CircularProgressWithLabel = (props: CircularProgressProps & { value: number }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box position=\"relative\" display=\"inline-flex\" color='inherit' alignItems=\"center\">\r\n      <CircularProgress\r\n        variant=\"determinate\"\r\n        className={classes.circleBottom}\r\n        size={50}\r\n        thickness={3}\r\n        {...props}\r\n        value={100}\r\n      />\r\n      <CircularProgress size={50} className={classes.circleTop} color='inherit' variant=\"determinate\" {...props} />\r\n      <Box\r\n        color='inherit'\r\n        top={0}\r\n        left={0}\r\n        bottom={0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Typography color='inherit' variant=\"caption\" component=\"div\" >{`${Math.round(\r\n          props.value,\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst NutritionData = (props: any) => {\r\n  const [data, setData] = useState(props.data)\r\n  const [title, setTitle] = useState(props.title)\r\n\r\n  useEffect(() => {\r\n    setData(props.data)\r\n    setTitle(props.title)\r\n  }, [props])\r\n  return (\r\n    <div >\r\n      <Typography color='inherit' align='center'>\r\n        <CircularProgressWithLabel value={data?.macros || 0} />\r\n      </Typography>\r\n      <Typography color='inherit' variant='h6' align='center'>\r\n        <strong>{title}</strong>\r\n      </Typography>\r\n      <Typography color='inherit' variant='body2' align='center'>\r\n        {`${data?.gram} g`}\r\n      </Typography>\r\n      <Typography color='inherit' variant='body2' align='center'>\r\n        {`${data?.calories} c`}\r\n      </Typography>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NutritionPlan;\r\n"],"sourceRoot":""}