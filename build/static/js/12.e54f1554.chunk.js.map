{"version":3,"sources":["../node_modules/@material-ui/icons/ControlPoint.js","components/UnitSelect/UnitSelect.tsx","utils/MetricUnits.tsx","components/TipTapEditor/EditorButtons.tsx","components/TipTapEditor/TipTapEditor.tsx","../node_modules/@material-ui/icons/Timer.js","../node_modules/@material-ui/core/esm/MenuItem/MenuItem.js","../node_modules/@material-ui/core/esm/ListItemAvatar/ListItemAvatar.js","../node_modules/@material-ui/core/esm/ListItemText/ListItemText.js","pages/SkinCareRecipe/SkinCareRecipe.tsx"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","useStyles","makeStyles","theme","selectRoot","borderColor","selectIcon","right","formControlRoot","minWidth","UnitSelect","props","useState","name","id","option","placeholder","onChange","Function","onBlur","setProps","classes","useEffect","variant","className","shrink","labelId","icon","map","i","UnitDropdown","inActive","borderRadius","color","palette","green","main","border","active","white","backgroundColor","dark","btnGroup","display","EditorButton","editor","ButtonGroup","disableElevation","fullWidth","size","IconButton","root","isActive","onClick","chain","focus","toggleBold","run","toggleItalic","toggleStrike","toggleCode","setParagraph","toggleBulletList","toggleOrderedList","TipTapEditor","useEditor","extensions","StarterKit","Link","content","onUpdate","getHTML","MenuItem","ref","tabIndex","_props$component","component","_props$disableGutters","disableGutters","ListItemClasses","_props$role","role","selected","tabIndexProp","other","_objectWithoutProperties","disabled","undefined","ListItem","_extends","button","dense","clsx","gutters","withStyles","typography","body1","_defineProperty","minHeight","paddingTop","paddingBottom","boxSizing","width","overflow","whiteSpace","breakpoints","up","body2","ListItemAvatar","context","ListContext","alignItems","alignItemsFlexStart","flexShrink","marginTop","ListItemText","children","_props$disableTypogra","disableTypography","_props$inset","inset","primaryProp","primary","primaryTypographyProps","secondaryProp","secondary","secondaryTypographyProps","type","Typography","multiline","flex","marginBottom","paddingLeft","values","lg","maxWidth","margin","padding","spacing","addIcon","marginRight","inner","actions","justifyContent","tabCard","sEvenly","iconPadd","jCenter","imageView","height","themeButton","lColor","deleteButton","avatarRoot","textPrimary","fontWeight","textSecondary","ingrdientsGridMain","ingredientsAvatarRoot","timeText","htmlContentGrid","paddingRight","noIngredientsText","textareaAdornedEnd","htmlContent","textAlign","AddEditDailog","isOpen","title","onClose","isEdit","data","onSuccess","okBtnText","formikRef","useRef","imageRef","Snackbar","useSnackbar","Post","useService","ingredientList","setIngredientList","ingredient","quantity","quantity_unit","initialFormValue","recipe_name","recipe_description","ingredients","preparation_time","preparation_description","recipe_image","file","prevImage","isNew","initialValue","setInitialValue","listIngredients","a","then","res","error","show","message","_id","console","log","catch","err","onImageChange","e","persist","files","target","length","reader","FileReader","onloadend","current","setFieldValue","result","readAsDataURL","addData","setSubmitting","resetForm","editData","rest","EditData","IngredientIds","filter","includes","url","disableBackdropClick","disableEscapeKeyDown","aria-labelledby","open","innerRef","enableReinitialize","initialValues","onSubmit","helper","PostData","uploadNewImage","render","validationSchema","Yup","shape","trim","required","max","of","when","is","otherwise","typeError","errors","touched","handleChange","handleBlur","setFieldTouched","submitForm","isSubmitting","dividers","container","item","md","xs","label","Boolean","helperText","rowsMax","validateOnChange","push","remove","unshift","addIngredients","endIcon","incValue","direction","options","find","getOptionLabel","getOptionSelected","event","newValue","renderInput","params","inputProps","InputProps","adornedEnd","endAdornment","accept","hidden","click","startIcon","src","ViewDailog","setFormValue","SkinCareRecipeViewContent","formValue","align","style","justify","index","image","fontSize","dangerouslySetInnerHTML","__html","SkinCareRecipe","ConfModel","useConfModel","page_no","page_limit","stateData","setStateData","pageCount","setPageCount","dataList","setDataList","loading","setLoading","addEditDialog","setAddEditDialog","viewDialog","setViewDialog","listSkinCare","page_count","closeAddEditDialog","prevState","onSuccessAction","text","hover","substring","arrow","openViewDialog","openEditDialog","openModel","closeModel","onDelete","count","page"],"mappings":"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","file":"static/js/12.e54f1554.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.49 2 2 6.49 2 12s4.49 10 10 10 10-4.49 10-10S17.51 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'ControlPoint');\n\nexports.default = _default;","import React, { useState, useEffect } from 'react';\r\nimport { FormControl, InputLabel, makeStyles, MenuItem, Select } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  selectRoot: {\r\n    '& .MuiOutlinedInput-notchedOutline': {\r\n      borderColor: 'white !important'\r\n    }\r\n  },\r\n  selectIcon: {\r\n    right: 0\r\n  },\r\n  formControlRoot: {\r\n    minWidth: 'unset'\r\n  }\r\n}));\r\n\r\nconst UnitSelect = (props: any) => {\r\n  const [{\r\n    value = '',\r\n    name = '',\r\n    id = 'tempID',\r\n    option = [],\r\n    placeholder = 'Unit',\r\n    onChange = new Function,\r\n    onBlur = new Function,\r\n  }, setProps] = useState(props)\r\n\r\n  const classes = useStyles()\r\n  useEffect(() => {\r\n    setProps(props)\r\n  }, [props])\r\n\r\n  return (\r\n    <FormControl variant=\"outlined\" className={classes.formControlRoot}>\r\n      <InputLabel id={id} shrink={false} >\r\n        {value == '' && placeholder}\r\n      </InputLabel>\r\n      <Select\r\n        labelId={id}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        className={classes.selectRoot}\r\n        classes={{\r\n          icon: classes.selectIcon\r\n        }}\r\n      >\r\n        {option.map(({ id, name }: any, i: any) => <MenuItem key={i} value={id}>{name}</MenuItem>)}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default UnitSelect;\r\n\r\n\r\n\r\n","const UnitDropdown = [\r\n    { id: 'None', name: 'None' },\r\n    { id: 'g', name: 'g' },\r\n    // { id: 'KG', name: 'kg' },\r\n    // { id: 'L', name: 'liter' },\r\n    { id: 'ml', name: 'ml' },\r\n    { id: 'tsp', name: 'tsp' },\r\n    { id: 'tbsp', name: 'tbsp' },\r\n]\r\nexport default UnitDropdown;","import React from 'react';\r\nimport { ButtonGroup, IconButton } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\r\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\r\nimport StrikethroughSIcon from '@material-ui/icons/StrikethroughS';\r\nimport CodeIcon from '@material-ui/icons/Code';//code\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';//highlite\r\nimport LinkIcon from '@material-ui/icons/Link';//link\r\nimport FormatTextdirectionLToRIcon from '@material-ui/icons/FormatTextdirectionLToR';//pragraph\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';//bullet list\r\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';// ordered list\r\nimport FormatQuoteIcon from '@material-ui/icons/FormatQuote'; //quote\r\nimport FormatClearIcon from '@material-ui/icons/FormatClear'; //clear text\r\n\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  inActive: {\r\n    borderRadius: 'unset',\r\n    color: theme.palette.green.main,\r\n    border: `1px solid ${theme.palette.green.main}`,\r\n  },\r\n  active: {\r\n    borderRadius: 'unset',\r\n    color: theme.palette.white,\r\n    border: `1px solid ${theme.palette.green.main}`,\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n  },\r\n  btnGroup: {\r\n    display: 'block'\r\n  }\r\n}));\r\n\r\n\r\n\r\nconst EditorButton = (props: any) => {\r\n  const { editor } = props\r\n  const classes = useStyles();\r\n  return (\r\n    <ButtonGroup disableElevation fullWidth className={classes.btnGroup} variant=\"contained\" size='small' >\r\n\r\n      {/* ===Bold=== */}\r\n      <IconButton size=\"small\"\r\n        classes={{ root: editor?.isActive('bold') ? classes.active : classes.inActive }}\r\n        onClick={() => editor?.chain().focus().toggleBold().run()}\r\n      >\r\n        <FormatBoldIcon />\r\n      </IconButton>\r\n\r\n      {/* ===italic=== */}\r\n      <IconButton size=\"small\"\r\n        classes={{ root: editor?.isActive('italic') ? classes.active : classes.inActive }}\r\n        onClick={() => editor?.chain().focus().toggleItalic().run()}\r\n      >\r\n        <FormatItalicIcon />\r\n      </IconButton>\r\n\r\n      {/* ===Strike=== */}\r\n      <IconButton size=\"small\"\r\n        classes={{ root: editor?.isActive('strike') ? classes.active : classes.inActive }}\r\n        onClick={() => editor?.chain().focus().toggleStrike().run()}\r\n      >\r\n        <StrikethroughSIcon />\r\n      </IconButton>\r\n\r\n      {/* ===Code=== */}\r\n      <IconButton size=\"small\"\r\n        classes={{ root: editor?.isActive('code') ? classes.active : classes.inActive }}\r\n        onClick={() => editor?.chain().focus().toggleCode().run()}\r\n      >\r\n        <CodeIcon />\r\n      </IconButton>\r\n\r\n      {/* ===Paragraph=== */}\r\n      <IconButton size=\"small\"\r\n        classes={{ root: editor?.isActive('paragraph') ? classes.active : classes.inActive }}\r\n        onClick={() => editor?.chain().focus().setParagraph().run()}\r\n      >\r\n        <FormatTextdirectionLToRIcon />\r\n      </IconButton>\r\n \r\n      {/* ===bullet list=== */}\r\n      <IconButton size=\"small\"\r\n        classes={{ root: editor?.isActive('bulletList') ? classes.active : classes.inActive }}\r\n        onClick={() => editor?.chain().focus().toggleBulletList().run()}\r\n      >\r\n        <FormatListBulletedIcon />\r\n      </IconButton>\r\n\r\n      {/* ===order list=== */}\r\n      <IconButton size=\"small\"\r\n        classes={{ root: editor?.isActive('orderedList') ? classes.active : classes.inActive }}\r\n        onClick={() => editor?.chain().focus().toggleOrderedList().run()}\r\n      >\r\n        <FormatListNumberedIcon />\r\n      </IconButton>\r\n\r\n\r\n    </ButtonGroup>\r\n  );\r\n}\r\n\r\nconst EditorIcon = (props: any) => {\r\n  const { children, active, click } = props\r\n  const classes = useStyles()\r\n  return (\r\n    <IconButton size=\"small\"\r\n      classes={{ root: active ? classes.active : classes.inActive }}\r\n      onClick={() => click()}\r\n    >\r\n      {children}\r\n    </IconButton>\r\n  )\r\n}\r\n\r\nexport default EditorButton;\r\n","import React, { useEffect } from \"react\"\r\nimport { EditorContent, useEditor } from \"@tiptap/react\"\r\nimport StarterKit from \"@tiptap/starter-kit\"\r\nimport Link from '@tiptap/extension-link'\r\nimport EditorButton from \"./EditorButtons\"\r\n\r\nconst TipTapEditor = (props: any) => {\r\n    const { value, onChange, onBlur } = props\r\n    const editor = useEditor({\r\n      extensions: [\r\n        StarterKit,\r\n        Link,\r\n      ],\r\n      content: value,\r\n      onUpdate: ({ editor }): void => onChange(editor.getHTML()),\r\n      onBlur: ({ editor }): void => onBlur(),\r\n    })\r\n  \r\n    // useEffect(() => {\r\n    //   editor?.commands?.setContent(value)\r\n    // }, [value,editor])\r\n  \r\n    return (\r\n      <>\r\n        <EditorButton editor={editor} />\r\n        <EditorContent editor={editor} />\r\n      </>\r\n    )\r\n  }\r\n\r\nexport default TipTapEditor","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15 1H9v2h6V1zm-4 13h2V8h-2v6zm8.03-6.61l1.42-1.42c-.43-.51-.9-.99-1.41-1.41l-1.42 1.42C16.07 4.74 14.12 4 12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9 9-4.03 9-9c0-2.12-.74-4.07-1.97-5.61zM12 20c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\"\n}), 'Timer');\n\nexports.default = _default;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListItem from '../ListItem';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body1, _defineProperty({\n      minHeight: 48,\n      paddingTop: 6,\n      paddingBottom: 6,\n      boxSizing: 'border-box',\n      width: 'auto',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    }, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    })),\n    // TODO v5: remove\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: {},\n\n    /* Styles applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the root element if dense. */\n    dense: _extends({}, theme.typography.body2, {\n      minHeight: 'auto'\n    })\n  };\n};\nvar MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      ListItemClasses = props.ListItemClasses,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'menuitem' : _props$role,\n      selected = props.selected,\n      tabIndexProp = props.tabIndex,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"ListItemClasses\", \"role\", \"selected\", \"tabIndex\"]);\n\n  var tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/React.createElement(ListItem, _extends({\n    button: true,\n    role: role,\n    tabIndex: tabIndex,\n    component: component,\n    selected: selected,\n    disableGutters: disableGutters,\n    classes: _extends({\n      dense: classes.dense\n    }, ListItemClasses),\n    className: clsx(classes.root, className, selected && classes.selected, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes = {\n  /**\n   * Menu item contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * `classes` prop applied to the [`ListItem`](/api/list-item/) element.\n   */\n  ListItemClasses: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenuItem'\n})(MenuItem);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    minWidth: 56,\n    flexShrink: 0\n  },\n\n  /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    marginTop: 8\n  }\n};\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nvar ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component – normally `Avatar`.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemAvatar'\n})(ListItemAvatar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * If `true`, the children will be indented.\n   * This should be used if there is no left avatar or left icon.\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);","import {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  FormControl,\r\n  FormHelperText,\r\n  Grid,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  makeStyles,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Tooltip,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\r\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Autocomplete, Pagination } from '@material-ui/lab';\r\nimport { FieldArray, Formik, getIn } from 'formik';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport * as Yup from 'yup';\r\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\r\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\r\nimport Page from '../../components/Page/Page';\r\nimport TipTapEditor from '../../components/TipTapEditor/TipTapEditor';\r\nimport useConfModel from '../../hook/useConfModel';\r\nimport useService from '../../hook/useService';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport { imageUpload } from '../../utils/FirebaseUtils';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport { uploadNewImage } from '../../utils/CloudinaryUtils';\r\nimport UnitSelect from '../../components/UnitSelect/UnitSelect';\r\nimport UnitDropdown from '../../utils/MetricUnits';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  root: {\r\n    width: theme.breakpoints.values.lg,\r\n    maxWidth: '100%',\r\n    margin: '0 auto',\r\n    padding: theme.spacing(3),\r\n  },\r\n  addIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  inner: {\r\n    minWidth: 700,\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(1),\r\n    justifyContent: 'center',\r\n  },\r\n  tabCard: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  sEvenly: {\r\n    display: 'flex',\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  iconPadd: {\r\n    padding: 5,\r\n  },\r\n  jCenter: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  imageView: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  themeButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n  },\r\n  lColor: {\r\n    color: 'white',\r\n  },\r\n  deleteButton: {\r\n    width: '100%',\r\n    height: '50px',\r\n  },\r\n  //\r\n  avatarRoot: {\r\n    borderRadius: 10,\r\n    marginRight: 15,\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10),\r\n  },\r\n  textPrimary: {\r\n    fontWeight: 'bold'\r\n  },\r\n  textSecondary: {\r\n  },\r\n  ingrdientsGridMain: {\r\n    marginTop: 10\r\n  },\r\n  ingredientsAvatarRoot: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n    margin: 'auto',\r\n  },\r\n  timeText: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  htmlContentGrid: {\r\n    paddingLeft: theme.spacing(3),\r\n    paddingRight: theme.spacing(3),\r\n    paddingTop: theme.spacing(1),\r\n  },\r\n  noIngredientsText: {\r\n    marginBottom: theme.spacing(3),\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  textareaAdornedEnd: {\r\n    paddingRight: 0\r\n  },\r\n  htmlContent: {\r\n    '& ul': {\r\n      paddingLeft: '1.2rem',\r\n    },\r\n    '& p': {\r\n      textAlign: 'justify',\r\n    }\r\n  }\r\n\r\n}));\r\n\r\nconst SkinCareRecipe = () => {\r\n  const classes = useStyles();\r\n  const { Post } = useService();\r\n  const Snackbar = useSnackbar();\r\n  const ConfModel = useConfModel();\r\n  const [stateData, setStateData] = useState({ page_no: 1, page_limit: 10 });\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const [dataList, setDataList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [addEditDialog, setAddEditDialog] = useState({\r\n    isOpen: false,\r\n    title: '',\r\n    okBtnText: '',\r\n    isEdit: false,\r\n    data: {},\r\n  });\r\n  const [viewDialog, setViewDialog] = useState({\r\n    isOpen: false,\r\n    title: '',\r\n    data: {},\r\n  });\r\n\r\n  const listSkinCare = async () => {\r\n    setLoading(true);\r\n    Post('app/listSkinCareRecipe', stateData)\r\n      .then((res: any) => {\r\n        console.log('listSkinCare', res);\r\n        setLoading(false);\r\n        if (!res.error) {\r\n          setDataList(res.data);\r\n          setPageCount(res.page_count);\r\n        } else {\r\n          Snackbar.show(res.message, 'error');\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        console.log('err', err);\r\n        setLoading(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const onPageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    setStateData((prevState: any) => ({ ...prevState, page_no: value }));\r\n  };\r\n\r\n  const setElipsis = (text: any) => {\r\n    return text.length >= 25 ? `${text.substring(0, 40)}...` : text;\r\n  };\r\n\r\n  const openAddDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      isEdit: false,\r\n      title: 'Add Recpie',\r\n      okBtnText: 'Save',\r\n    }));\r\n  };\r\n\r\n  const openEditDialog = (data: any) => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      isEdit: true,\r\n      data,\r\n      title: 'Edit Recpie',\r\n      okBtnText: 'Edit',\r\n    }));\r\n  };\r\n\r\n  const openViewDialog = (data: any) => {\r\n    setViewDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      data,\r\n      title: 'View Recpie',\r\n    }));\r\n  };\r\n\r\n  const onDelete = (data: any) => {\r\n    const { openModel, setLoading, closeModel } = ConfModel;\r\n    const submitFunction = () => {\r\n      setLoading(true);\r\n      Post('app/deleteSkinCareRecipe', { id: data._id })\r\n        .then(async (res: any) => {\r\n          setLoading(false);\r\n          closeModel();\r\n          onSuccessAction();\r\n          Snackbar.show(res.message, 'success');\r\n        })\r\n        .catch((err: any) => {\r\n          setLoading(false);\r\n          Snackbar.show('Internal Server Error', 'error');\r\n        });\r\n    };\r\n    openModel(submitFunction);\r\n  };\r\n\r\n  const closeAddEditDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const closeViewDialog = () => {\r\n    setViewDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const onSuccessAction = () => {\r\n    listSkinCare();\r\n    closeAddEditDialog();\r\n  };\r\n\r\n  useEffect(() => {\r\n    listSkinCare();\r\n  }, [stateData]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Page title='Skin Care Recipe' />\r\n\r\n      {/* =======Header====== */}\r\n      <Grid alignItems='flex-end' container justify='space-between' spacing={3}>\r\n        <Grid item>\r\n          <Typography component='h1' variant='h3'>\r\n            Skin Care Recipe\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant='contained'\r\n            onClick={() => openAddDialog()}\r\n            className={classes.themeButton}\r\n            startIcon={<AddIcon />}\r\n          >\r\n            Add\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* =============Search======== */}\r\n      {/* <Grid container spacing={3}>\r\n        <Grid item>\r\n          <Paper elevation={0}>\r\n            <TextField\r\n              fullWidth\r\n              size='small'\r\n              placeholder='Name'\r\n              variant='outlined'\r\n              name='state'\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid> */}\r\n\r\n      {/* ========Table With Pagination========= */}\r\n      <Card className={classes.tabCard}>\r\n        <CardContent className={classes.content}>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align='center'>#</TableCell>\r\n                  <TableCell align='center'>Image</TableCell>\r\n                  <TableCell align='center'>Name</TableCell>\r\n                  <TableCell align='center'>Description</TableCell>\r\n                  <TableCell align='center'>Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {!loading &&\r\n                  dataList.map((data: any, index: number) => (\r\n                    <TableRow hover key={index}>\r\n                      <TableCell align='center'>\r\n                        {stateData.page_limit * (stateData.page_no - 1) + index + 1}\r\n                      </TableCell>\r\n                      <TableCell align='center'>\r\n                        <div className={classes.jCenter}>\r\n                          <Avatar variant='square' src={data?.recipe_image?.url} />\r\n                        </div>\r\n                      </TableCell>\r\n                      <TableCell align='center'>{data?.recipe_name}</TableCell>\r\n                      <TableCell align='center'>\r\n                        <Tooltip title={data?.recipe_description}>\r\n                          <span>{setElipsis(data?.recipe_description)}</span>\r\n                        </Tooltip>\r\n                      </TableCell>\r\n                      <TableCell align='center'>\r\n                        <div className={classes.sEvenly}>\r\n                          <Tooltip title='View' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openViewDialog(data)}\r\n                            >\r\n                              <CenterFocusStrongIcon color='primary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Edit' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openEditDialog(data)}\r\n                            >\r\n                              <EditIcon color='action' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Delete' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => onDelete(data)}\r\n                            >\r\n                              <DeleteIcon color='secondary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                {loading && <TableLoader />}\r\n                {!loading && dataList.length == 0 && (\r\n                  <TableNoData>No Data Found</TableNoData>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </CardContent>\r\n\r\n        <CardActions className={classes.actions}>\r\n          <Pagination\r\n            count={pageCount}\r\n            page={stateData.page_no}\r\n            onChange={onPageChange}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n\r\n      {/* ============Add Edit Dialog========== */}\r\n      <AddEditDailog\r\n        {...addEditDialog}\r\n        onClose={closeAddEditDialog}\r\n        onSuccess={onSuccessAction}\r\n      />\r\n\r\n      {/* ============View Dialog========== */}\r\n      <ViewDailog {...viewDialog} onClose={closeViewDialog} />\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface Ingredient {\r\n  id: string;\r\n  quantity: string;\r\n  quantity_unit: string;\r\n}\r\n\r\ninterface Recpie {\r\n  recipe_name: string;\r\n  recipe_description: string;\r\n  ingredients: Ingredient[];\r\n  preparation_time: string;\r\n  preparation_description: string;\r\n  recipe_image: { file: null | any; prevImage: string; isNew: null | Boolean };\r\n}\r\n\r\nconst AddEditDailog = (props: any) => {\r\n  const {\r\n    isOpen,\r\n    title,\r\n    onClose,\r\n    isEdit,\r\n    data,\r\n    onSuccess,\r\n    okBtnText = 'Ok',\r\n  } = props;\r\n  const classes = useStyles();\r\n  const formikRef = useRef<any>(null);\r\n  const imageRef = useRef<any>(null);\r\n  const Snackbar = useSnackbar();\r\n  const { Post } = useService();\r\n  const [ingredientList, setIngredientList] = useState([]);\r\n\r\n  const ingredient: Ingredient = {\r\n    id: '',\r\n    quantity: '',\r\n    quantity_unit: ''\r\n  };\r\n\r\n  const initialFormValue: Recpie = {\r\n    recipe_name: '',\r\n    recipe_description: '',\r\n    ingredients: [ingredient],\r\n    preparation_time: '',\r\n    preparation_description: '',\r\n    recipe_image: { file: null, prevImage: '', isNew: null },\r\n  };\r\n\r\n  const [initialValue, setInitialValue] = useState({ ...initialFormValue });\r\n\r\n  const listIngredients = async () => {\r\n    Post('app/listAllSkinCareIngredient', {})\r\n      .then((res: any) => {\r\n        if (!res.error) {\r\n          let ingredients = res.data.map((data: any) => {\r\n            data.id = data._id;\r\n            return data;\r\n          });\r\n          console.log('listSkinCareIngredient', ingredients);\r\n          setIngredientList(ingredients);\r\n        } else {\r\n          Snackbar.show(res.message, 'error');\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        console.log('err', err);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const onImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    e.persist();\r\n    const files = e.target.files;\r\n    if (files && files.length != 0) {\r\n      const reader = new FileReader();\r\n      const file = files[0];\r\n      reader.onloadend = () => {\r\n        formikRef.current.setFieldValue('recipe_image', {\r\n          file,\r\n          prevImage: reader.result,\r\n          isNew: true,\r\n        });\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n    // else {\r\n    //   formikRef.current.setFieldValue('recipe_image', {\r\n    //     file: null,\r\n    //     prevImage: '',\r\n    //     isNew: null,\r\n    //   });\r\n    // }\r\n  };\r\n\r\n  const onSubmit = (value: any, helper: any) => {\r\n    try {\r\n      helper.setSubmitting(true);\r\n      const render = async () => {\r\n        const { recipe_image, ...rest } = value;\r\n        const { file, isNew } = recipe_image;\r\n        const PostData = rest;\r\n\r\n        PostData.recipe_image = await uploadNewImage(recipe_image);\r\n\r\n        !isEdit && addData(PostData, helper);\r\n        isEdit && editData(PostData, helper);\r\n      };\r\n      render();\r\n    } catch (err) {\r\n      Snackbar.show('Image Upload Failed', 'error');\r\n    }\r\n  };\r\n\r\n  const addData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n    Post('app/addSkinCareRecipe', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const editData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n    Post('app/editSkinCareRecipe', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const addIngredients = (push: any) => {\r\n    push(ingredient);\r\n  };\r\n\r\n  const removeIngredients = (values: Recpie, i: number, setFieldValue: any) => {\r\n    let { ingredients } = values;\r\n    const TempIngredients = ingredients.filter(\r\n      (data: any, index: number) => index !== i\r\n    );\r\n    setFieldValue('ingredients', TempIngredients);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isEdit) {\r\n      const { recipe_image, ingredients, _id, ...rest } = data;\r\n      const EditData = { ...rest, id: _id };\r\n      const IngredientIds = ingredientList.map(({ _id }: any) => _id)\r\n      EditData.ingredients = ingredients.filter(({ _id }: any) => IngredientIds.includes(_id)).map(({ _id, ...rest }: any) => ({ id: _id, ...rest }));\r\n      EditData.recipe_image = {\r\n        file: recipe_image,\r\n        prevImage: recipe_image?.url,\r\n        isNew: false,\r\n      };\r\n      setInitialValue(EditData);\r\n    } else {\r\n      setInitialValue(initialFormValue);\r\n    }\r\n  }, [props]);\r\n\r\n  useEffect(() => {\r\n    listIngredients();\r\n  }, []);\r\n\r\n  const handleOnchangeTextEditor = (getData: any, setFieldValue: any) => {\r\n    console.log(getData);\r\n    setFieldValue('preparation_description', getData)\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      fullWidth\r\n      maxWidth='md'\r\n      aria-labelledby='dialog-title'\r\n      open={isOpen}\r\n    >\r\n      <DialogTitle id='dialog-title' onClose={onClose}>\r\n        {title}\r\n      </DialogTitle>\r\n\r\n      <Formik\r\n        innerRef={formikRef}\r\n        enableReinitialize\r\n        initialValues={initialValue}\r\n        onSubmit={onSubmit}\r\n        validationSchema={Yup.object().shape({\r\n          recipe_name: Yup.string().trim().required('Recipe name is required'),\r\n          recipe_description: Yup.string().trim().max(250, 'Must be 250 characters or less').required('Recipe Description is required'),\r\n          preparation_time: Yup.string()\r\n            .trim()\r\n            .required('Preparation time is required'),\r\n          preparation_description: Yup.string()\r\n            .required('Preparation description is required'),\r\n          ingredients: Yup.array().of(\r\n            Yup.object().shape({\r\n              id: Yup.string().trim().required('Incredients is Required'),\r\n              quantity: Yup.mixed().required('Quality is required').when('quantity_unit', {\r\n                is: 'None',\r\n                then: Yup.string(),\r\n                otherwise: Yup.number().typeError('Quantity must be in number')\r\n              }),\r\n              quantity_unit: Yup.string().trim().required('Quantity unit is required'),\r\n            })\r\n          ),\r\n          recipe_image: Yup.object({\r\n            file: Yup.mixed().required('A file is required'),\r\n          }),\r\n        })}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          setFieldValue,\r\n          handleBlur,\r\n          setFieldTouched,\r\n          submitForm,\r\n          isSubmitting,\r\n        }) => (\r\n          <>\r\n            <DialogContent dividers>\r\n              <Grid container spacing={2}>\r\n                <Grid item md={12} xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label='Recipe Name'\r\n                    name='recipe_name'\r\n                    variant='outlined'\r\n                    error={Boolean(touched.recipe_name && errors.recipe_name)}\r\n                    helperText={touched.recipe_name && errors.recipe_name}\r\n                    value={values.recipe_name}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item md={12} xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    multiline\r\n                    rowsMax={250}\r\n                    label='Recipe Description'\r\n                    name='recipe_description'\r\n                    variant='outlined'\r\n                    error={Boolean(\r\n                      touched.recipe_description && errors.recipe_description\r\n                    )}\r\n                    helperText={\r\n                      touched.recipe_description && errors.recipe_description\r\n                    }\r\n                    value={values.recipe_description}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                </Grid>\r\n\r\n\r\n                <FieldArray name=\"ingredients\" validateOnChange>\r\n                  {({ push, unshift, remove }) => (\r\n                    <>\r\n                      <Grid item md={12} xs={12}>\r\n                        {/* <FormControl\r\n                    error={Boolean(touched?.ingredients && errors?.ingredients)}\r\n                  > */}\r\n                        <Button\r\n                          fullWidth\r\n                          className={classes.themeButton}\r\n                          variant='contained'\r\n                          color='default'\r\n                          onClick={() => addIngredients(push)}\r\n                          endIcon={<ControlPointIcon />}\r\n                        >\r\n                          Add Ingredients\r\n                        </Button>\r\n\r\n                        {/* <FormHelperText>\r\n                      {touched?.ingredients && errors?.ingredients}\r\n                    </FormHelperText>\r\n                  </FormControl> */}\r\n                      </Grid>\r\n                      {values?.ingredients?.map((incValue: any, i: number) => (\r\n                        <Grid key={i} item container md={12} xs={12} direction='row' spacing={2}>\r\n                          <Grid item md={5} xs={5}>\r\n                            <Autocomplete\r\n                              fullWidth\r\n                              options={ingredientList}\r\n                              value={ingredientList.find(\r\n                                (data: any) => data._id == incValue.id\r\n                              )}\r\n                              getOptionLabel={(option: any) => option.name}\r\n                              getOptionSelected={(option) =>\r\n                                option._id == incValue.id\r\n                              }\r\n                              onChange={(event: any, newValue: any) => {\r\n                                setFieldValue(\r\n                                  `ingredients[${i}].id`,\r\n                                  newValue?._id || ''\r\n                                );\r\n                              }}\r\n                              onBlur={handleBlur}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  label='Ingredients'\r\n                                  variant='outlined'\r\n                                  error={Boolean(\r\n                                    touched?.ingredients &&\r\n                                    touched?.ingredients[i]?.id &&\r\n                                    errors?.ingredients &&\r\n                                    (errors?.ingredients[i] as Ingredient)?.id\r\n                                  )}\r\n                                  helperText={\r\n                                    touched?.ingredients &&\r\n                                    touched?.ingredients[i]?.id &&\r\n                                    errors?.ingredients &&\r\n                                    (errors?.ingredients[i] as Ingredient)?.id\r\n                                  }\r\n                                  inputProps={{\r\n                                    ...params.inputProps,\r\n                                  }}\r\n\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Grid>\r\n\r\n                          <Grid item md={6} xs={6}>\r\n                            <TextField\r\n                              fullWidth\r\n                              label='Quantity'\r\n                              name={`ingredients[${i}].quantity`}\r\n                              variant='outlined'\r\n                              error={Boolean(\r\n                                touched?.ingredients && touched?.ingredients[i]?.quantity && errors?.ingredients && (errors?.ingredients[i] as Ingredient)?.quantity ||\r\n                                touched?.ingredients && touched?.ingredients[i]?.quantity_unit && errors?.ingredients && (errors?.ingredients[i] as Ingredient)?.quantity_unit\r\n                              )}\r\n                              helperText={\r\n                                touched?.ingredients && touched?.ingredients[i]?.quantity && errors?.ingredients && (errors?.ingredients[i] as Ingredient)?.quantity ||\r\n                                touched?.ingredients && touched?.ingredients[i]?.quantity_unit && errors?.ingredients && (errors?.ingredients[i] as Ingredient)?.quantity_unit\r\n                              }\r\n                              value={incValue.quantity}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                              InputProps={{\r\n                                classes: {\r\n                                  adornedEnd: classes.textareaAdornedEnd\r\n                                },\r\n                                endAdornment: <UnitSelect id='quantity_unit' option={UnitDropdown} name={`ingredients[${i}].quantity_unit`} value={incValue.quantity_unit} onChange={handleChange} onBlur={handleBlur} />\r\n                              }}\r\n                            />\r\n                          </Grid>\r\n                          {values?.ingredients?.length > 1 && (\r\n                            <Grid item md={1} xs={1}>\r\n                              <Button\r\n                                fullWidth\r\n                                className={classes.deleteButton}\r\n                                variant='contained'\r\n                                color='secondary'\r\n                                onClick={() => remove(i)}\r\n                              >\r\n                                <DeleteIcon />\r\n                              </Button>\r\n                            </Grid>\r\n                          )}\r\n                        </Grid>\r\n                      ))}\r\n                    </>\r\n                  )}\r\n                </FieldArray>\r\n\r\n                <Grid item md={12} xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    multiline\r\n                    label='Preparation Time'\r\n                    name='preparation_time'\r\n                    variant='outlined'\r\n                    error={Boolean(\r\n                      touched.preparation_time && errors.preparation_time\r\n                    )}\r\n                    helperText={\r\n                      touched.preparation_time && errors.preparation_time\r\n                    }\r\n                    value={values.preparation_time}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item md={12} xs={12}>\r\n                  <FormControl\r\n                    fullWidth\r\n                    error={Boolean(\r\n                      touched?.preparation_description &&\r\n                      errors?.preparation_description\r\n                    )}\r\n                  >\r\n                    <TipTapEditor\r\n                      name='preparation_description'\r\n                      value={values.preparation_description}\r\n                      onChange={(value: any) =>\r\n                        setFieldValue('preparation_description', value)\r\n                      }\r\n                      onBlur={() =>\r\n                        setFieldTouched('preparation_description', true, true)\r\n                      }\r\n                    />\r\n\r\n                    <FormHelperText>\r\n                      {touched?.preparation_description &&\r\n                        errors?.preparation_description}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item md={12} xs={12}>\r\n                  <input\r\n                    name='recipe_image'\r\n                    ref={imageRef}\r\n                    type='file'\r\n                    accept='.jpg,.png,jpeg'\r\n                    onChange={onImageChange}\r\n                    onBlur={handleBlur}\r\n                    hidden\r\n                  />\r\n                  <Button\r\n                    fullWidth\r\n                    className={classes.themeButton}\r\n                    variant='contained'\r\n                    color='default'\r\n                    onClick={() => imageRef.current.click()}\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Recipe Image\r\n                  </Button>\r\n                  <FormControl\r\n                    error={Boolean(\r\n                      touched?.recipe_image?.file && errors?.recipe_image?.file\r\n                    )}\r\n                  >\r\n                    <FormHelperText>\r\n                      {touched?.recipe_image?.file &&\r\n                        errors?.recipe_image?.file}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item md={12} xs={12}>\r\n                  {values.recipe_image?.prevImage && (\r\n                    <img\r\n                      className={classes.imageView}\r\n                      src={values.recipe_image?.prevImage}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n              <Button onClick={onClose} variant='outlined' color='secondary'>\r\n                Cancel\r\n              </Button>\r\n\r\n              <Button\r\n                className={classes.themeButton}\r\n                onClick={() => submitForm()}\r\n                disabled={isSubmitting}\r\n                variant='outlined'\r\n              >\r\n                {isSubmitting ? (\r\n                  <CircularProgress size={24} className={classes.lColor} />\r\n                ) : (\r\n                  okBtnText\r\n                )}\r\n              </Button>\r\n            </DialogActions>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst ViewDailog = (props: any) => {\r\n  const { isOpen, title, onClose, data } = props;\r\n  const classes = useStyles();\r\n  const [formValue, setFormValue] = useState(data);\r\n\r\n  useEffect(() => {\r\n    setFormValue(data);\r\n  }, [props]);\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      fullWidth\r\n      maxWidth='sm'\r\n      aria-labelledby='dialog-view-title'\r\n      open={isOpen}\r\n    >\r\n      <DialogTitle id='dialog-view-title' onClose={onClose}>\r\n        {title}\r\n      </DialogTitle>\r\n\r\n      <DialogContent dividers>\r\n        <SkinCareRecipeViewContent {...props} />\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={onClose} variant='outlined' color='secondary'>\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport const SkinCareRecipeViewContent = (props: any) => {\r\n  const { isOpen, title, onClose, data } = props;\r\n  const classes = useStyles();\r\n  const [formValue, setFormValue] = useState(data);\r\n\r\n  useEffect(() => {\r\n    setFormValue(data);\r\n  }, [props]);\r\n  return (\r\n    <>\r\n      <List>\r\n        <ListItem disableGutters>\r\n          <ListItemAvatar>\r\n            <Avatar className={classes.avatarRoot} src={formValue?.recipe_image?.url} />\r\n          </ListItemAvatar>\r\n          <ListItemText\r\n            classes={{\r\n              primary: classes.textPrimary,\r\n              secondary: classes.textSecondary\r\n            }}\r\n            primary={formValue?.recipe_name}\r\n            secondary={formValue?.recipe_description}\r\n          />\r\n        </ListItem>\r\n      </List>\r\n\r\n      <Typography variant='h6' align='left' style={{ color: '#41A58D' }}>INGREDIENTS</Typography>\r\n\r\n      <Grid container spacing={2} className={classes.ingrdientsGridMain} justify='center'>\r\n        {formValue?.ingredients?.map((value: any, index: any) =>\r\n          <Grid key={index} item xs={4} md={3}>\r\n            <Avatar className={classes.ingredientsAvatarRoot} src={value?.image?.url} />\r\n            <Typography variant='h6' align='center'>{value?.name}</Typography>\r\n            <Typography variant='subtitle2' align='center'>{value?.quantity} {value?.quantity_unit !== 'None' && value?.quantity_unit}</Typography>\r\n          </Grid>\r\n        )}\r\n        {formValue?.ingredients?.length == 0 &&\r\n          <Grid item xs={12} md={12} className={classes.noIngredientsText}>\r\n            <div>No Ingredients</div>\r\n          </Grid>\r\n        }\r\n      </Grid>\r\n\r\n      <Typography variant='h6' align='left' style={{ color: '#41A58D' }}>PREPARATION</Typography>\r\n      <Typography variant='body2' align='center' className={classes.timeText}>\r\n        <TimerIcon fontSize='inherit' />\r\n        <span>{formValue?.preparation_time}</span>\r\n      </Typography>\r\n\r\n      <Grid container >\r\n        <Grid item xs={12} md={12} className={classes.htmlContentGrid}>\r\n          <div className={classes.htmlContent} dangerouslySetInnerHTML={{ __html: formValue?.preparation_description }} />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SkinCareRecipe;\r\n"],"sourceRoot":""}