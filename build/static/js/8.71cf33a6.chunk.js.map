{"version":3,"sources":["utils/PlanDropdowns.tsx","../node_modules/@material-ui/icons/ControlPoint.js","components/UnitSelect/UnitSelect.tsx","utils/MetricUnits.tsx","../node_modules/@material-ui/icons/FileCopy.js","../node_modules/@material-ui/icons/Check.js","../node_modules/@material-ui/core/esm/MenuItem/MenuItem.js","../node_modules/@material-ui/core/esm/ListItemAvatar/ListItemAvatar.js","../node_modules/@material-ui/core/esm/ListItemText/ListItemText.js","hook/useCalories.tsx","../node_modules/@material-ui/icons/ChevronRight.js","../node_modules/@material-ui/icons/KeyboardArrowUp.js","../node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","pages/NutritionPlan/FormikValues.tsx","pages/NutritionPlan/NutritionPlan.tsx"],"names":["DietTypeDrop","id","name","FitnessGoalDrop","FitnessGoalWomenDrop","LifeStyleDrop","ExperienceDrop","PreferredDrop","InterestsDrop","SkinTypeDrop","CurrentClimateDrop","SkinIrregularDrop","SubDrop","SkinTextureDrop","CcpaStatus","NoOption","getSubSkinIrregular","SkinIrregularValue","find","getDropValues","dropValues","value","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","React","_default","createElement","d","useStyles","makeStyles","theme","selectRoot","borderColor","selectIcon","right","formControlRoot","minWidth","UnitSelect","props","useState","option","placeholder","onChange","Function","onBlur","setProps","classes","useEffect","variant","className","shrink","labelId","icon","map","i","UnitDropdown","MenuItem","ref","tabIndex","_props$component","component","_props$disableGutters","disableGutters","ListItemClasses","_props$role","role","selected","tabIndexProp","other","_objectWithoutProperties","disabled","undefined","ListItem","_extends","button","dense","clsx","root","gutters","withStyles","typography","body1","_defineProperty","minHeight","paddingTop","paddingBottom","boxSizing","width","overflow","whiteSpace","breakpoints","up","body2","ListItemAvatar","context","ListContext","alignItems","alignItemsFlexStart","flexShrink","marginTop","ListItemText","children","_props$disableTypogra","disableTypography","_props$inset","inset","primaryProp","primary","primaryTypographyProps","secondaryProp","secondary","secondaryTypographyProps","type","Typography","display","color","multiline","flex","marginBottom","paddingLeft","useCalories","caloriesData","sampleObject","toString","push","CardHeader","action","avatar","Component","subheaderProp","subheader","subheaderTypographyProps","titleProp","title","titleTypographyProps","content","padding","marginRight","alignSelf","NutQuantity","macros","gram","calories","NutMealTime","isEdit","meal_time","order","meals","NutMeal","quantity","quantity_unit","protein","fat","carbs","initialFormValues","diet_type","nutrition","ValNut","Yup","typeError","required","validation","shape","trim","of","when","is","then","otherwise","min","values","lg","maxWidth","margin","spacing","tabCard","themeButton","palette","white","backgroundColor","green","main","dark","sEvenly","justifyContent","sBetween","iconPadd","jCenter","actions","tabRoot","textTransform","tabIndicator","tabTextColorInherit","border","tabPanelRoot","listItemRoot","flexDisplay","paperRoot","paperRoot1","tablePanelRoot","largeAvatar","height","justPadding","borderRadius","tabBtnIcon","divTab","flexDirection","avatarRoot","textPrimary","fontWeight","textSecondary","noPadding","benefitsList","fontSize","cardRoot","position","cardMediaRoot","cardContentRoot","cardActionsRoot","cardActionsBenifitsRoot","ulRoot","listStyle","liRoot","textIndent","ulTypo","marginLeft","colorProtein","colorFat","colorCarbs","dividerRoot","background","mealTimeText","benefitsText","nutritionTextDiv","top","left","nutritionText","nutCard","nutCardRoot","nutCardTitle","textAlign","nutCardAction","circleBottom","circleTop","textareaAdornedEnd","paddingRight","AddEditModel","isOpen","isDuplicate","okBtnText","onClose","data","onSuccess","formikRef","useRef","Snackbar","useSnackbar","Post","useService","getCaloriesData","tabValue","setTabValue","ingredientList","setIngredientList","initialValue","setInitialValue","addData","setSubmitting","resetForm","res","show","message","catch","err","editData","handleChangeTab","newValue","getArrayError","error","_id","rest","NutData","NewMeals","MealSet","MealData","ingredient","NewInc","includes","console","log","response","Dialog","open","disableBackdropClick","disableEscapeKeyDown","fullWidth","fullScreen","aria-labelledby","DialogTitle","innerRef","enableReinitialize","initialValues","validationSchema","onSubmit","helper","postData","errors","touched","handleChange","handleBlur","setFieldValue","submitForm","isSubmitting","DialogContent","dividers","Grid","container","item","xs","Autocomplete","options","getOptionLabel","getOptionSelected","event","renderInput","params","TextField","label","Boolean","helperText","inputProps","key","style","align","subData","index","SubKey","FieldName","getIn","TabContext","validateOnChange","remove","TabList","indicator","orientation","nutData","FieldTouched","FieldErrors","SelectedStyle","Number","borderRight","size","Button","onClick","NewNutrition","submitMealTime","e","editMealTime","FormHelperText","FormControl","addNewTab","endIcon","FieldMainName","mainRemove","TabPanel","mealSet","IncSetIndex","FieldSetName","mealData","removeMeals","md","InputProps","adornedEnd","endAdornment","DialogActions","CircularProgress","ViewNutritionModel","formValue","setFormValue","Paper","Table","TableBody","TableRow","TableCell","Card","CardActions","Tab","textColorInherit","incData","benfits","sm","elevation","CardContent","List","Avatar","src","image","url","disableSpacing","Divider","benfData","CircularProgressWithLabel","Box","thickness","bottom","Math","round","NutritionData","setData","setTitle","NutritionPlan","ConfModel","useConfModel","loading","setLoading","page_no","page_limit","stateData","setStateData","pageCount","setPageCount","nutritionPlanList","setNutritionPlanList","addEditDialog","setAddEditDialog","viewDialog","setViewDialog","listNutritionPlan","a","page_count","closeAddEditDialog","prevState","onSuccessAction","Page","justify","startIcon","TableContainer","TableHead","hover","Tooltip","arrow","IconButton","openViewDialog","openEditDialog","openDuplicateDialog","openModel","closeModel","onDelete","length","Pagination","count","page"],"mappings":"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","file":"static/js/8.71cf33a6.chunk.js","sourcesContent":["//=====Meal Plan\r\nexport const DietTypeDrop = [\r\n  { id: 'VEG', name: 'Vegetarian' },\r\n  { id: 'NONVEG', name: 'Non-Vegetarian' },\r\n  { id: 'EGG', name: 'Eggetarian' },\r\n  { id: 'VEGAN', name: 'Vegan' },\r\n];\r\n\r\nexport const FitnessGoalDrop = [\r\n  { id: 'WEIGHTGAIN', name: 'Weight Gain' },\r\n  { id: 'WEIGHTLOSS', name: 'Weight Loss' },\r\n  { id: 'MAINTAINWEIGHT', name: 'Maintain Weight' },\r\n];\r\nexport const FitnessGoalWomenDrop = [\r\n  { id: 'WEIGHTGAIN', name: 'Weight Gain' },\r\n  { id: 'WEIGHTLOSS', name: 'Weight Loss' },\r\n  { id: 'MAINTAINWEIGHT', name: 'Maintain Weight' },\r\n  { id: 'WEIGHTGAINPOSTPARTUM', name: 'Weight Gain (Post-Partum)' },\r\n  { id: 'WEIGHTLOSSPOSTPARTUM', name: 'Weight Loss (Post-Partum)' },\r\n  { id: 'MAINTAINWEIGHTPOSTPARTUM', name: 'Maintain Weight (Post-Partum)' },\r\n];\r\nexport const LifeStyleDrop = [\r\n  { id: 'SEDENTARY', name: 'Sedentary' },\r\n  { id: 'LIGHTLYACTIVE', name: 'Lightly Active' },\r\n  { id: 'MODERATEACTIVE', name: 'Moderately Active' },\r\n  { id: 'VERYACTIVE', name: 'Very Active' },\r\n];\r\n\r\n//==========Workout Plan===========\r\nexport const ExperienceDrop = [\r\n  { id: 'BEGINNER', name: 'Beginner' },\r\n  { id: 'INTERMEDIATE', name: 'Intermediate' },\r\n  { id: 'PROFESSIONAL', name: 'Professional' },\r\n];\r\n\r\nexport const PreferredDrop = [\r\n  { id: 'STRENGTH', name: 'Strength Training' },\r\n  { id: 'HIIT', name: 'HIIT' },\r\n];\r\n\r\nexport const InterestsDrop = [\r\n  { id: 'HOME', name: 'Home Workout' },\r\n  { id: 'GYM', name: 'Gym Workout' },\r\n];\r\n\r\n//=========Skincare Plan============\r\nexport const SkinTypeDrop = [\r\n  { id: 'DRY', name: 'Dry' },\r\n  { id: 'OILY', name: 'Oily' },\r\n  { id: 'COMBINATION', name: 'Combination' },\r\n  { id: 'NORMAL', name: 'Normal' },\r\n];\r\n\r\nexport const CurrentClimateDrop = [\r\n  { id: 'HOT', name: 'Hot' },\r\n  { id: 'COLD', name: 'Cold' },\r\n  { id: 'HUMID', name: 'Humid' },\r\n  { id: 'DRY', name: 'Dry' },\r\n];\r\n\r\nexport const SkinIrregularDrop = [\r\n  {\r\n    id: 'ACNE', name: 'Acne', SubDrop: [\r\n      { id: 'PIMPLES', name: 'Pimples' },\r\n      { id: 'BLACKHEADS', name: 'Black Heads' },\r\n      { id: 'WHITEHEADS', name: 'White Heads' },\r\n    ]\r\n  },\r\n  {\r\n    id: 'RASHES', name: 'Rashes', SubDrop: [\r\n      { id: 'SCALY', name: 'Scaly' },\r\n      { id: 'ITCHY', name: 'Itchy' },\r\n      { id: 'BUMPY', name: 'Bumpy' },\r\n      { id: 'BOILS', name: 'Boils' },\r\n      { id: 'BLISTERS', name: 'Blisters' },\r\n    ]\r\n  },\r\n  {\r\n    id: 'DISCOLORATION', name: 'Discoloration', SubDrop: [\r\n      { id: 'BLACKISH', name: 'Blackish' },\r\n      { id: 'WHITISH', name: 'Whitish' },\r\n      { id: 'PINKISH', name: 'Pinkish' },\r\n      { id: 'REDDISH', name: 'Reddish' },\r\n      { id: 'SUNSPOTS', name: 'Sun Spots' },\r\n    ]\r\n  },\r\n];\r\n\r\nexport const SkinTextureDrop = [\r\n  { id: 'SAGGY', name: 'Saggy', },\r\n  { id: 'FINELINES', name: ' Fine Lines' },\r\n  { id: 'WRINKLES', name: 'Wrinkles' },\r\n  { id: 'NONE', name: 'None' },\r\n];\r\n\r\nexport const CcpaStatus = [\r\n  { id: '0', name: 'Pending', },\r\n  { id: '1', name: 'Processing' },\r\n  { id: '2', name: 'Closed' },\r\n];\r\n\r\nexport const NoOption = { id: '', name: '' }\r\n\r\nexport const getSubSkinIrregular = (SkinIrregularValue: any) => {\r\n  return SkinIrregularDrop?.find(({ id }: any) => id == SkinIrregularValue)?.SubDrop || []\r\n}\r\n\r\nconst getDropValues = (dropValues: any, value: string) => {\r\n  return dropValues.find(({ id }: any) => id == value)?.name || ''\r\n};\r\n\r\nexport default getDropValues\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.49 2 2 6.49 2 12s4.49 10 10 10 10-4.49 10-10S17.51 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'ControlPoint');\n\nexports.default = _default;","import React, { useState, useEffect } from 'react';\r\nimport { FormControl, InputLabel, makeStyles, MenuItem, Select } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  selectRoot: {\r\n    '& .MuiOutlinedInput-notchedOutline': {\r\n      borderColor: 'white !important'\r\n    }\r\n  },\r\n  selectIcon: {\r\n    right: 0\r\n  },\r\n  formControlRoot: {\r\n    minWidth: 'unset'\r\n  }\r\n}));\r\n\r\nconst UnitSelect = (props: any) => {\r\n  const [{\r\n    value = '',\r\n    name = '',\r\n    id = 'tempID',\r\n    option = [],\r\n    placeholder = 'Unit',\r\n    onChange = new Function,\r\n    onBlur = new Function,\r\n  }, setProps] = useState(props)\r\n\r\n  const classes = useStyles()\r\n  useEffect(() => {\r\n    setProps(props)\r\n  }, [props])\r\n\r\n  return (\r\n    <FormControl variant=\"outlined\" className={classes.formControlRoot}>\r\n      <InputLabel id={id} shrink={false} >\r\n        {value == '' && placeholder}\r\n      </InputLabel>\r\n      <Select\r\n        labelId={id}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        className={classes.selectRoot}\r\n        classes={{\r\n          icon: classes.selectIcon\r\n        }}\r\n      >\r\n        {option.map(({ id, name }: any, i: any) => <MenuItem key={i} value={id}>{name}</MenuItem>)}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default UnitSelect;\r\n\r\n\r\n\r\n","const UnitDropdown = [\r\n    { id: 'None', name: 'None' },\r\n    { id: 'g', name: 'g' },\r\n    // { id: 'KG', name: 'kg' },\r\n    // { id: 'L', name: 'liter' },\r\n    { id: 'ml', name: 'ml' },\r\n    { id: 'tsp', name: 'tsp' },\r\n    { id: 'tbsp', name: 'tbsp' },\r\n]\r\nexport default UnitDropdown;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z\"\n}), 'FileCopy');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\n\nexports.default = _default;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListItem from '../ListItem';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body1, _defineProperty({\n      minHeight: 48,\n      paddingTop: 6,\n      paddingBottom: 6,\n      boxSizing: 'border-box',\n      width: 'auto',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    }, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    })),\n    // TODO v5: remove\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: {},\n\n    /* Styles applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the root element if dense. */\n    dense: _extends({}, theme.typography.body2, {\n      minHeight: 'auto'\n    })\n  };\n};\nvar MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      ListItemClasses = props.ListItemClasses,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'menuitem' : _props$role,\n      selected = props.selected,\n      tabIndexProp = props.tabIndex,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"ListItemClasses\", \"role\", \"selected\", \"tabIndex\"]);\n\n  var tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/React.createElement(ListItem, _extends({\n    button: true,\n    role: role,\n    tabIndex: tabIndex,\n    component: component,\n    selected: selected,\n    disableGutters: disableGutters,\n    classes: _extends({\n      dense: classes.dense\n    }, ListItemClasses),\n    className: clsx(classes.root, className, selected && classes.selected, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes = {\n  /**\n   * Menu item contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * `classes` prop applied to the [`ListItem`](/api/list-item/) element.\n   */\n  ListItemClasses: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenuItem'\n})(MenuItem);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    minWidth: 56,\n    flexShrink: 0\n  },\n\n  /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    marginTop: 8\n  }\n};\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nvar ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component – normally `Avatar`.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemAvatar'\n})(ListItemAvatar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * If `true`, the children will be indented.\n   * This should be used if there is no left avatar or left icon.\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);","function useCalories() {\r\n    let caloriesData = [];\r\n    for (let i = 900; i <= 4100; i += 100) {\r\n        let sampleObject: any = {};\r\n        sampleObject.id = i;\r\n        sampleObject.name = i.toString();\r\n        caloriesData.push(sampleObject)\r\n    }\r\n    return caloriesData;\r\n}\r\n\r\nexport default useCalories;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'ChevronRight');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z\"\n}), 'KeyboardArrowUp');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import * as Yup from 'yup';\r\n\r\ninterface NutritionQuantity {\r\n  macros: string,\r\n  gram: string,\r\n  calories: string,\r\n}\r\n\r\ninterface IntMealTime {\r\n  isEdit: Boolean,\r\n  meal_time: string,\r\n  order: number,\r\n  meals: IntMeal[][],\r\n}\r\n\r\ninterface IntMeal {\r\n  id: string,\r\n  quantity: string,\r\n  quantity_unit: string,\r\n  protein: string,\r\n  fat: string,\r\n  carbs: string,\r\n  calories: string,\r\n}\r\n\r\ninterface NutritionPlan {\r\n  diet_type: string,\r\n  calories: string,\r\n  protein: NutritionQuantity,\r\n  fat: NutritionQuantity,\r\n  carbs: NutritionQuantity\r\n  nutrition: IntMealTime[]\r\n}\r\n\r\nexport const NutQuantity: NutritionQuantity = {\r\n  macros: '',\r\n  gram: '',\r\n  calories: '',\r\n}\r\n\r\nexport const NutMealTime: IntMealTime = {\r\n  isEdit: true,\r\n  meal_time: '',\r\n  order: 0,\r\n  meals: []\r\n}\r\n\r\nexport const NutMeal: IntMeal = {\r\n  id: '',\r\n  quantity: '',\r\n  quantity_unit: '',\r\n  protein: '',\r\n  fat: '',\r\n  carbs: '',\r\n  calories: '',\r\n}\r\n\r\n\r\nexport const initialFormValues: NutritionPlan = {\r\n  diet_type: '',\r\n  calories: '',\r\n  protein: NutQuantity,\r\n  fat: NutQuantity,\r\n  carbs: NutQuantity,\r\n  nutrition: []\r\n};\r\n\r\nconst ValNut = Yup.object({\r\n  macros: Yup.number().typeError('Macros must be in number').required('Macros is required'),\r\n  gram: Yup.number().typeError('Gram must be in number').required('Gram is required'),\r\n  calories: Yup.number().typeError('Calories must be in number').required('Calories is required'),\r\n})\r\n\r\nexport const validation = Yup.object().shape({\r\n  diet_type: Yup.string().trim().required('Diet type is required'),\r\n  calories: Yup.number().required('Calories is required'),\r\n  protein: ValNut,\r\n  fat: ValNut,\r\n  carbs: ValNut,\r\n  nutrition: Yup.array().of(\r\n    Yup.object().shape({\r\n      meal_time: Yup.string().trim().required('Name is required'),\r\n      meals: Yup.array().of(\r\n        Yup.array().of(\r\n          Yup.object().shape({\r\n            id: Yup.string().trim().required('Ingredients is Required'),\r\n            quantity: Yup.mixed().required('Quality is required').when('quantity_unit', {\r\n              is: 'None',\r\n              then: Yup.string(),\r\n              otherwise: Yup.number().typeError('Quantity must be in number')\r\n            }),\r\n            quantity_unit: Yup.string().trim().required('Quantity unit is required'),\r\n            protein: Yup.number().typeError('Protein must be in number').required('Protein is required'),\r\n            fat: Yup.number().typeError('Fat must be in number').required('Fat is required'),\r\n            carbs: Yup.number().typeError('Carbs must be in number').required('Carbs is required'),\r\n            calories: Yup.number().typeError('Calories must be in number').required('Calories is required'),\r\n          })\r\n        )\r\n      ).min(1, 'Meal is Required')\r\n    })).min(1, 'Field is Required')\r\n})\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  CardMedia,\r\n  CircularProgress,\r\n  CircularProgressProps,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent, Divider, FormControl,\r\n  FormHelperText, Grid,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  makeStyles,\r\n  Paper,\r\n  Tab,\r\n  Table,\r\n  TableBody, TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Tooltip, Typography\r\n} from '@material-ui/core';\r\nimport List from '@material-ui/core/List';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Pagination, TabContext, TabList, TabPanel } from '@material-ui/lab';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Formik, getIn, FieldArray } from 'formik';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\r\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\r\nimport Page from '../../components/Page/Page';\r\nimport useConfModel from '../../hook/useConfModel';\r\nimport useService from '../../hook/useService';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport UnitSelect from '../../components/UnitSelect/UnitSelect';\r\nimport UnitDropdown from '../../utils/MetricUnits';\r\nimport { initialFormValues, NutMeal, NutMealTime, validation } from './FormikValues';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport clsx from 'clsx';\r\nimport useCalories from '../../hook/useCalories';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport { NoOption } from '../../utils/PlanDropdowns';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  root: {\r\n    width: theme.breakpoints.values.lg,\r\n    maxWidth: '100%',\r\n    margin: '0 auto',\r\n    padding: theme.spacing(3),\r\n  },\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  tabCard: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  themeButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n  },\r\n  sEvenly: {\r\n    display: 'flex',\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  sBetween: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  iconPadd: {\r\n    padding: 5,\r\n  },\r\n  jCenter: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(1),\r\n    justifyContent: 'center',\r\n  },\r\n  tabRoot: {\r\n    minWidth: 0,\r\n    textTransform: 'none'\r\n    // margin: '10px 0px',\r\n  },\r\n  tabIndicator: {\r\n    backgroundColor: theme.palette.green.main,\r\n  },\r\n  tabTextColorInherit: {\r\n    backgroundColor: theme.palette.green.main,\r\n    color: 'white',\r\n    border: '1px solid white',\r\n  },\r\n  tabPanelRoot: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n    width: '100%',\r\n  },\r\n  listItemRoot: {\r\n    backgroundColor: '#7ac0af2b',\r\n    margin: '10px 0px',\r\n  },\r\n  flexDisplay: {\r\n    display: 'flex',\r\n  },\r\n  paperRoot: {\r\n    display: 'flex',\r\n    marginTop: '20px',\r\n  },\r\n  paperRoot1: {\r\n    display: 'flex',\r\n    marginTop: '20px',\r\n  },\r\n  tablePanelRoot: {\r\n    padding: '0px',\r\n  },\r\n  largeAvatar: {\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10)\r\n  },\r\n  justPadding: {\r\n    padding: 10,\r\n    borderRadius: 10\r\n  },\r\n  tabBtnIcon: {\r\n    height: '100%',\r\n    minWidth: 0,\r\n    textTransform: 'none'\r\n  },\r\n  divTab: {\r\n    flexDirection: 'column',\r\n    display: 'flex'\r\n  },\r\n  //=========\r\n\r\n  avatarRoot: {\r\n    borderRadius: 10,\r\n    marginRight: 15,\r\n    // width: theme.spacing(10),\r\n    // height: theme.spacing(10),\r\n  },\r\n  textPrimary: {\r\n    fontWeight: 'bold'\r\n  },\r\n  textSecondary: {\r\n    color: '#A0A6B2'\r\n  },\r\n  noPadding: {\r\n    padding: 0\r\n  },\r\n  benefitsList: {\r\n    fontSize: '0.7rem',\r\n    '&::before': {\r\n      content: \"'•  '\",\r\n      color: 'black',\r\n    }\r\n  },\r\n  cardRoot: {\r\n    borderRadius: theme.spacing(3),\r\n    position: 'relative'\r\n  },\r\n  cardMediaRoot: {\r\n    height: theme.spacing(25)\r\n  },\r\n  cardContentRoot: {\r\n    backgroundColor: '#EFF1F3',\r\n    padding: theme.spacing(2),\r\n    paddingBottom: `${theme.spacing(2)}px !important`\r\n  },\r\n  cardActionsRoot: {\r\n    padding: 0,\r\n    paddingTop: theme.spacing(1),\r\n    justifyContent: 'space-between'\r\n  },\r\n  cardActionsBenifitsRoot: {\r\n    padding: 0,\r\n    paddingTop: theme.spacing(1),\r\n    display: 'block'\r\n  },\r\n  ulRoot: {\r\n    listStyle: 'none',\r\n    display: 'flex',\r\n    padding: 0,\r\n    margin: 0,\r\n  },\r\n  liRoot: {\r\n    paddingLeft: '1em',\r\n    textIndent: '-.7em',\r\n  },\r\n  ulTypo: {\r\n    marginLeft: theme.spacing(0.5)\r\n  },\r\n  colorProtein: {\r\n    '&::before': {\r\n      content: \"'•  '\",\r\n      color: '#9A88FF',\r\n    }\r\n  },\r\n  colorFat: {\r\n    '&::before': {\r\n      content: \"'•  '\",\r\n      color: '#E57B91',\r\n    }\r\n  },\r\n  colorCarbs: {\r\n    '&::before': {\r\n      content: \"'•  '\",\r\n      color: '',\r\n    }\r\n  },\r\n  dividerRoot: {\r\n    background: 'white',\r\n    margin: theme.spacing(1, -2)\r\n  },\r\n  mealTimeText: {\r\n    margin: theme.spacing(2, 0)\r\n  },\r\n  benefitsText: {\r\n    color: '#41A58D'\r\n  },\r\n  nutritionTextDiv: {\r\n    border: '1px solid #EFF1F3',\r\n    color: '#EFF1F3',\r\n    borderRadius: 20,\r\n    padding: theme.spacing(0.5, 1),\r\n    width: 'fit-content',\r\n    position: 'absolute',\r\n    top: theme.spacing(2),\r\n    left: theme.spacing(2),\r\n  },\r\n  nutritionText: {\r\n    fontSize: '0.5rem',\r\n  },\r\n  nutCard: {\r\n    borderRadius: theme.spacing(3),\r\n    margin: theme.spacing(2, 0)\r\n  },\r\n  nutCardRoot: {\r\n    backgroundColor: '#41A58D',\r\n    color: 'white'\r\n  },\r\n  nutCardTitle: {\r\n    textAlign: 'center',\r\n    color: 'inherit'\r\n  },\r\n  nutCardAction: {\r\n    backgroundColor: '#276955',\r\n    color: 'white',\r\n    justifyContent: 'space-evenly'\r\n  },\r\n  circleBottom: {\r\n    color: '#eeeeee42',\r\n  },\r\n  circleTop: {\r\n    position: 'absolute',\r\n    left: 0,\r\n  },\r\n  textareaAdornedEnd: {\r\n    paddingRight: 0\r\n  },\r\n}));\r\n\r\nconst DietTypeDrop = [\r\n  { id: 'VEG', name: 'Vegetarian' },\r\n  { id: 'NONVEG', name: 'Non-Vegetarian' },\r\n  { id: 'EGG', name: 'Eggetarian' },\r\n  { id: 'VEGAN', name: 'Vegan' },\r\n];\r\n\r\nconst CaloriesDrop = [\r\n  { id: '2000', name: '2000' },\r\n  { id: '2100', name: '2100' },\r\n  { id: '2200', name: '2200' },\r\n  { id: '2300', name: '2300' },\r\n];\r\n\r\nconst NutritionPlan = () => {\r\n  const classes = useStyles();\r\n  const Snackbar = useSnackbar();\r\n  const { Post } = useService();\r\n  const ConfModel = useConfModel();\r\n  const [loading, setLoading] = useState(true);\r\n  const [stateData, setStateData] = useState({ page_no: 1, page_limit: 10 });\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const [nutritionPlanList, setNutritionPlanList] = useState([]);\r\n\r\n  const [addEditDialog, setAddEditDialog] = useState({\r\n    isOpen: false,\r\n    isDuplicate: false,\r\n    title: '',\r\n    okBtnText: '',\r\n    isEdit: false,\r\n    data: {},\r\n  });\r\n\r\n  const [viewDialog, setViewDialog] = useState({\r\n    isOpen: false,\r\n    title: '',\r\n    data: {},\r\n  });\r\n\r\n  const openAddDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      title: 'Add Nutrition Plan',\r\n      isEdit: false,\r\n      okBtnText: 'Save',\r\n    }));\r\n  };\r\n\r\n  const openDuplicateDialog = (data: any) => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isDuplicate: true,\r\n      isOpen: true,\r\n      isEdit: false,\r\n      data,\r\n      title: 'Duplicate Nutrition Plan',\r\n      okBtnText: 'Duplicate',\r\n    }));\r\n  };\r\n\r\n  const openEditDialog = (data: any) => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      isEdit: true,\r\n      data,\r\n      title: 'Edit Nutrition Plan',\r\n      okBtnText: 'Edit',\r\n    }));\r\n  };\r\n\r\n  const onDelete = (data: any) => {\r\n    const { openModel, setLoading, closeModel } = ConfModel;\r\n    const submitFunction = () => {\r\n      setLoading(true);\r\n      Post('app/deleteNutritionPlan', { id: data._id })\r\n        .then(async (res: any) => {\r\n          setLoading(false);\r\n          closeModel();\r\n          onSuccessAction();\r\n          Snackbar.show(res.message, 'success');\r\n        })\r\n        .catch((err: any) => {\r\n          setLoading(false);\r\n          Snackbar.show('Internal Server Error', 'error');\r\n        });\r\n    };\r\n    openModel(submitFunction);\r\n  };\r\n\r\n  const openViewDialog = (data: any) => {\r\n    setViewDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      data,\r\n      title: 'View Nutrition Plan',\r\n    }));\r\n  };\r\n\r\n  const listNutritionPlan = async () => {\r\n    setLoading(true);\r\n    Post('app/listNutritionPlan', stateData)\r\n      .then((res: any) => {\r\n        setLoading(false);\r\n        if (!res.error) {\r\n          setNutritionPlanList(res.data);\r\n          setPageCount(res.page_count);\r\n        } else {\r\n          Snackbar.show(res.message, 'error');\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        console.log('err', err);\r\n        setLoading(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const onPageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    console.log()\r\n    setStateData((prevState: any) => ({ ...prevState, page_no: value }));\r\n  };\r\n\r\n  const closeAddEditDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({ ...prevState, isOpen: false, isDuplicate: false }));\r\n  };\r\n\r\n  const closeViewDialog = () => {\r\n    setViewDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const onSuccessAction = () => {\r\n    listNutritionPlan();\r\n    closeAddEditDialog();\r\n  };\r\n\r\n  const getDropValues = (dropValues: any, value: string) => {\r\n    return dropValues.find(({ id }: any) => id == value)?.name || ''\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    listNutritionPlan();\r\n  }, [stateData]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Page title='Nutrition Plan' />\r\n\r\n      <Grid alignItems='flex-end' container justify='space-between' spacing={3}>\r\n        <Grid item>\r\n          <Typography component='h1' variant='h3'>\r\n            Nutrition Plan\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant='contained'\r\n            onClick={() => openAddDialog()}\r\n            className={classes.themeButton}\r\n            startIcon={<AddIcon />}\r\n          >\r\n            Add\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* =============Search======== */}\r\n      {/* <Grid container spacing={3}>\r\n        <Grid item>\r\n          <Paper elevation={0}>\r\n            <TextField\r\n              fullWidth\r\n              size='small'\r\n              placeholder='Name'\r\n              variant='outlined'\r\n              name='state'\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid> */}\r\n\r\n      <Card className={classes.tabCard}>\r\n        <CardContent className={classes.content}>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align='center'>#</TableCell>\r\n                  <TableCell align='center'>Diet Type</TableCell>\r\n                  <TableCell align='center'>Calories</TableCell>\r\n                  <TableCell align='center'>Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {!loading &&\r\n                  nutritionPlanList.map((data: any, index: number) => (\r\n                    <TableRow hover key={index}>\r\n                      <TableCell align='center'>\r\n                        {stateData.page_limit * (stateData.page_no - 1) +\r\n                          index +\r\n                          1}\r\n                      </TableCell>\r\n                      <TableCell align='center'>{getDropValues(DietTypeDrop, data?.diet_type)}</TableCell>\r\n                      <TableCell align='center'>{data?.calories}</TableCell>\r\n                      <TableCell align='center'>\r\n                        <div className={classes.sEvenly}>\r\n                          <Tooltip title='View' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openViewDialog(data)}\r\n                            >\r\n                              <CenterFocusStrongIcon color='primary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Edit' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openEditDialog(data)}\r\n                            >\r\n                              <EditIcon color='action' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Delete' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openDuplicateDialog(data)}\r\n                            >\r\n                              <FileCopyIcon color='action' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Delete' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => onDelete(data)}\r\n                            >\r\n                              <DeleteIcon color='secondary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                {loading && <TableLoader />}\r\n                {!loading && nutritionPlanList.length == 0 && (\r\n                  <TableNoData>No Data Found</TableNoData>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </CardContent>\r\n\r\n        <CardActions className={classes.actions}>\r\n          <Pagination\r\n            count={pageCount}\r\n            page={stateData.page_no}\r\n            onChange={onPageChange}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n\r\n      <AddEditModel\r\n        {...addEditDialog}\r\n        onClose={closeAddEditDialog}\r\n        onSuccess={onSuccessAction}\r\n      />\r\n      {viewDialog.isOpen && (\r\n        <ViewNutritionModel {...viewDialog} onClose={closeViewDialog} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const AddEditModel = (props: any) => {\r\n  const {\r\n    isEdit,\r\n    isOpen,\r\n    isDuplicate,\r\n    okBtnText = 'OK',\r\n    onClose,\r\n    data,\r\n    title,\r\n    onSuccess,\r\n  } = props;\r\n  const formikRef = useRef<any>(null);\r\n  const classes = useStyles();\r\n  const Snackbar = useSnackbar();\r\n  const { Post } = useService();\r\n  const getCaloriesData = useCalories()\r\n  const [tabValue, setTabValue] = React.useState('none');\r\n  const [ingredientList, setIngredientList] = useState([])\r\n  const [initialValue, setInitialValue] = React.useState({ ...initialFormValues });\r\n\r\n  const onSubmit = (value: any, helper: any) => {\r\n    helper.setSubmitting(true);\r\n    const postData = { ...value };\r\n    !isEdit || isDuplicate ? addData(postData, helper) : '';\r\n    isEdit && editData(postData, helper);\r\n  };\r\n\r\n  const addData = (data: any, { setSubmitting, resetForm }: any) => {\r\n\r\n    setSubmitting(true);\r\n    Post('app/addNutritionPlan', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const editData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n    Post('app/editNutritionPlan', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n\r\n\r\n  const handleChangeTab = (newValue: string) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  const addNewTab = (values: any, setFieldValue: any, push: any) => {\r\n    push(NutMealTime)\r\n  }\r\n\r\n  const submitMealTime = (i: number, values: any, setFieldValue: any) => {\r\n\r\n    const { nutrition } = values\r\n    const NewNutrition = { ...nutrition[i] }\r\n    NewNutrition.isEdit = false\r\n    nutrition[i] = NewNutrition\r\n    setFieldValue('nutrition', nutrition)\r\n    handleChangeTab(i.toString())\r\n  }\r\n\r\n  const editMealTime = (i: number, values: any, setFieldValue: any) => {\r\n    const { nutrition } = values\r\n    const NewNutrition = { ...nutrition[i] }\r\n    NewNutrition.isEdit = true\r\n    nutrition[i] = NewNutrition\r\n    setFieldValue('nutrition', nutrition)\r\n    handleChangeTab(i.toString())\r\n  }\r\n\r\n  const addMeals = (pushvalue: any) => {\r\n    pushvalue(NutMeal)\r\n  }\r\n\r\n\r\n\r\n  const listAllMealIngredient = () => {\r\n    Post('app/listAllMealIngredient', {})\r\n      .then((response: any) => {\r\n        if (!response.error) {\r\n          setIngredientList(response.data);\r\n        } else {\r\n          Snackbar.show(response.message, 'error');\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        Snackbar.show(error.message, 'error');\r\n      });\r\n  };\r\n\r\n  const getArrayError = (error: any) => {\r\n    return typeof error == 'string' ? error : ''\r\n  }\r\n\r\n  const removeMeals = (i: number, FieldName: string, values: any, setFieldValue: any, remove: any) => {\r\n    // const MealValue = getIn(values, `${FieldName}.meals`)\r\n    // const FinelMealValue = MealValue.filter((d: any, index: number) => i != index)\r\n    // setFieldValue(`${FieldName}.meals`, FinelMealValue)\r\n    remove(i)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isEdit || isDuplicate) {\r\n      const { _id, ...rest } = data;\r\n      const editData = { ...rest, id: _id };\r\n      let nutrition = editData.nutrition.map((NutData: any) => {\r\n        const { meals, ...rest } = NutData\r\n        let NewMeals = meals.map((MealSet: any) => {\r\n          let NewMealSet = MealSet.map((MealData: any) => {\r\n            const { ingredient, ...rest } = MealData\r\n            const IngredientIds = ingredientList.map(({ _id }: any) => _id)\r\n            // const NewInc = ingredient.find(({ _id }: any) => IngredientIds.includes(_id)).map(({ _id }: any) => ({ id: _id }));\r\n            const NewInc = IngredientIds.includes(ingredient._id) ? ingredient._id : ''\r\n            return { ...rest, id: NewInc }\r\n          })\r\n          return NewMealSet\r\n        })\r\n        return { ...rest, isEdit: false, meals: NewMeals }\r\n      })\r\n      editData.nutrition = nutrition\r\n      console.log('editData', editData)\r\n      setInitialValue(editData);\r\n    } else {\r\n      setInitialValue(initialFormValues);\r\n    }\r\n  }, [props, ingredientList]);\r\n\r\n  useEffect(() => {\r\n    listAllMealIngredient();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={isOpen}\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        fullWidth\r\n        fullScreen\r\n        maxWidth='lg'\r\n        aria-labelledby='dialog-title'\r\n      >\r\n        <DialogTitle id='dialog-title' onClose={onClose}>\r\n          {title}\r\n        </DialogTitle>\r\n        <Formik\r\n          innerRef={formikRef}\r\n          enableReinitialize\r\n          initialValues={initialValue}\r\n          validationSchema={validation}\r\n          onSubmit={onSubmit}\r\n        >\r\n          {({ values, errors, touched, handleChange, handleBlur, setFieldValue, submitForm, isSubmitting }) => (\r\n            <>\r\n              <DialogContent dividers>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <Autocomplete\r\n                      options={DietTypeDrop}\r\n                      value={DietTypeDrop.find((data: any) => data.id == values.diet_type)}\r\n                      getOptionLabel={(option: any) => option.name}\r\n                      getOptionSelected={(option) => option.id == values.diet_type}\r\n                      onChange={(event: any, newValue: any) => {\r\n                        setFieldValue('diet_type', newValue?.id || '');\r\n                      }}\r\n                      onBlur={handleBlur}\r\n                      renderInput={(params: any) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label='Diet Types'\r\n                          variant='outlined'\r\n                          error={Boolean(touched.diet_type && errors.diet_type)}\r\n                          helperText={touched.diet_type && errors.diet_type}\r\n                          inputProps={{\r\n                            ...params.inputProps,\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Autocomplete\r\n                      options={getCaloriesData}\r\n                      value={getCaloriesData.find((data: any) => data.id == values.calories)}\r\n                      getOptionLabel={(option: any) => option.name}\r\n                      getOptionSelected={(option) => option.id == values.calories}\r\n                      onChange={(event: any, newValue: any) => {\r\n                        setFieldValue('calories', newValue?.id || '');\r\n                      }}\r\n                      onBlur={handleBlur}\r\n                      renderInput={(params: any) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label='Calories'\r\n                          variant='outlined'\r\n                          error={Boolean(touched.calories && errors.calories)}\r\n                          helperText={touched.calories && errors.calories}\r\n                          inputProps={{\r\n                            ...params.inputProps,\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n\r\n                  {[{ label: 'Protein', key: 'protein' }, { label: 'Fat', key: 'fat' }, { label: 'Carbs', key: 'carbs' }].map(({ label, key }) =>\r\n                    <>\r\n                      <Grid item xs={2}>\r\n                        <Typography style={{ padding: '20px' }} variant='h5' align='left'>\r\n                          <strong>{label}</strong>\r\n                        </Typography>\r\n                      </Grid>\r\n\r\n                      {[{ label: 'Macros  ( % )', key: 'macros' }, { label: 'Gram  ( g )', key: 'gram' }, { label: 'Calories  ( Kcal )', key: 'calories' }].map((subData: any, index: any) => {\r\n                        const SubKey = subData.key;\r\n                        const FieldName = `${key}.${SubKey}`;\r\n                        return (\r\n                          <Grid item xs={3}>\r\n                            <TextField\r\n                              fullWidth\r\n                              label={subData.label}\r\n                              name={FieldName}\r\n                              variant='outlined'\r\n                              error={Boolean(getIn(touched, FieldName) && getIn(errors, FieldName))}\r\n                              helperText={getIn(touched, FieldName) && getIn(errors, FieldName)}\r\n                              value={getIn(values, FieldName)}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </Grid>\r\n                        )\r\n                      })}\r\n                    </>\r\n                  )}\r\n\r\n                  {/* <Paper className={classes.paperRoot}> */}\r\n\r\n                  <TabContext value={tabValue || ''}>\r\n                    <FieldArray name='nutrition' validateOnChange>\r\n                      {({ push, remove }) => (\r\n                        <Grid item xs={4}>\r\n                          <TabList\r\n                            classes={{\r\n                              indicator: classes.tabIndicator\r\n                            }}\r\n                            orientation=\"vertical\"\r\n                            variant=\"standard\"\r\n                          >\r\n                            {values?.nutrition.map((nutData: any, i: number) => {\r\n                              let FieldName: string = `nutrition[${i}]`\r\n                              let FieldTouched: any = getIn(touched, FieldName)\r\n                              let FieldErrors: any = getIn(errors, FieldName)\r\n                              let FieldValues: any = getIn(values, FieldName)\r\n                              const TabSelected = i == Number(tabValue)\r\n                              const SelectedStyle = TabSelected ? { borderRight: '2px solid #41a58d' } : { borderRight: '2px solid white' }\r\n                              return (\r\n                                <div className={classes.divTab}>\r\n                                  <Grid item container xs={12} spacing={1} style={{ margin: 'inherit', ...SelectedStyle }}>\r\n                                    <Grid item xs={nutData.isEdit ? 10 : 6}>\r\n\r\n                                      {nutData.isEdit && <TextField\r\n                                        fullWidth\r\n                                        size='small'\r\n                                        label='Name'\r\n                                        name={`${FieldName}.meal_time`}\r\n                                        variant='outlined'\r\n                                        error={Boolean(FieldTouched?.meal_time && FieldErrors?.meal_time)}\r\n                                        helperText={FieldTouched?.meal_time && FieldErrors?.meal_time}\r\n                                        value={nutData?.meal_time}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                      />\r\n                                      }\r\n                                      {!nutData.isEdit &&\r\n                                        <>\r\n                                          <Button\r\n                                            fullWidth\r\n                                            className={!Boolean(FieldTouched?.meal_time && FieldErrors?.meal_time) ? classes.themeButton : ''}\r\n                                            classes={{\r\n                                              fullWidth: classes.tabBtnIcon\r\n                                            }}\r\n                                            variant='contained'\r\n                                            color='secondary'\r\n                                          >\r\n                                            {!Boolean(FieldTouched?.meal_time && FieldErrors?.meal_time) ? nutData?.meal_time : FieldErrors?.meal_time}\r\n                                          </Button>\r\n                                        </>\r\n                                      }\r\n                                    </Grid>\r\n\r\n                                    {nutData.isEdit &&\r\n                                      <Grid item xs={2}>\r\n                                        <Button\r\n                                          fullWidth\r\n                                          className={classes.themeButton}\r\n                                          classes={{\r\n                                            fullWidth: classes.tabBtnIcon\r\n                                          }}\r\n                                          variant='contained'\r\n                                          color='secondary'\r\n                                          onClick={() => submitMealTime(i, values, setFieldValue)}\r\n                                        >\r\n                                          <CheckIcon />\r\n                                        </Button>\r\n                                      </Grid>\r\n                                    }\r\n\r\n                                    {!nutData.isEdit && <Grid item xs={2} >\r\n                                      <Button\r\n                                        fullWidth\r\n                                        classes={{\r\n                                          fullWidth: classes.tabBtnIcon\r\n                                        }}\r\n                                        variant='contained'\r\n                                        color='primary'\r\n                                        onClick={(e) => handleChangeTab(i.toString())}\r\n                                      >\r\n                                        {tabValue === i.toString() ? <ChevronRightIcon /> : <KeyboardArrowUpIcon />}\r\n                                      </Button>\r\n                                    </Grid>\r\n                                    }\r\n\r\n                                    {!nutData.isEdit && <Grid item xs={2} >\r\n                                      <Button\r\n                                        fullWidth\r\n                                        classes={{\r\n                                          fullWidth: classes.tabBtnIcon\r\n                                        }}\r\n                                        variant='contained'\r\n                                        color='primary'\r\n                                        onClick={() => editMealTime(i, values, setFieldValue)}\r\n                                      >\r\n                                        <EditIcon />\r\n                                      </Button>\r\n                                    </Grid>\r\n                                    }\r\n\r\n                                    {!nutData.isEdit &&\r\n                                      <Grid item xs={2}>\r\n                                        <Button\r\n                                          fullWidth\r\n                                          classes={{\r\n                                            fullWidth: classes.tabBtnIcon\r\n                                          }}\r\n                                          variant='contained'\r\n                                          color='secondary'\r\n                                          onClick={() => remove(i)}\r\n                                        >\r\n                                          <DeleteIcon />\r\n                                        </Button>\r\n                                      </Grid>\r\n                                    }\r\n                                  </Grid>\r\n                                  <FormHelperText>\r\n                                    <Typography variant='caption' color='error'>{getIn(touched, `${FieldName}.meals`) && getArrayError(getIn(errors, `${FieldName}.meals`))}</Typography>\r\n                                  </FormHelperText>\r\n                                </div>\r\n                              )\r\n                            }\r\n                            )}\r\n                            <div className={classes.divTab}>\r\n                              <Grid container xs={12} spacing={1} style={{ margin: 'inherit' }}>\r\n                                <Grid item xs={12}>\r\n                                  <FormControl fullWidth\r\n                                    error={Boolean(getIn(touched, 'nutrition') && getArrayError(getIn(errors, 'nutrition')))}\r\n                                  >\r\n                                    <Button\r\n                                      fullWidth\r\n                                      className={classes.themeButton}\r\n                                      variant='contained'\r\n                                      color='secondary'\r\n                                      onClick={() => addNewTab(values, setFieldValue, push)}\r\n                                      endIcon={<AddIcon />}\r\n                                    >\r\n                                      Add Meal Time\r\n                                    </Button>\r\n\r\n                                    <FormHelperText>\r\n                                      {getIn(touched, 'nutrition') && getArrayError(getIn(errors, 'nutrition'))}\r\n                                    </FormHelperText>\r\n                                  </FormControl>\r\n                                </Grid>\r\n                              </Grid>\r\n                            </div>\r\n\r\n                          </TabList>\r\n                        </Grid>\r\n                      )}\r\n                    </FieldArray>\r\n\r\n\r\n                    <Grid item xs={8}>\r\n                      {values?.nutrition.map((nutData: any, i: number) => {\r\n                        let FieldMainName: string = `nutrition[${i}]`\r\n                        return (\r\n                          <FieldArray name={`${FieldMainName}.meals`}>\r\n                            {({ push, remove: mainRemove }) => (\r\n                              <>\r\n                                <TabPanel key={i} className={classes.tabPanelRoot} value={i.toString()}>\r\n\r\n                                  <Grid container spacing={2}>\r\n                                    <Grid item xs={12}>\r\n                                      <Typography variant='h5' align='center'>\r\n                                        <strong>{nutData?.meal_time}</strong>\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    {nutData?.meals.map((mealSet: any, IncSetIndex: number) => {\r\n                                      let FieldSetName: string = `${FieldMainName}.meals[${IncSetIndex}]`\r\n                                      return (\r\n                                        <FieldArray name={FieldSetName}>\r\n                                          {({ push, remove }) => (\r\n                                            <>\r\n                                              <Grid item xs={10}>\r\n                                                <Typography variant='h5' align='center' >\r\n                                                  <strong>{`Ingredient set #${IncSetIndex + 1}`}</strong>\r\n                                                </Typography>\r\n                                              </Grid>\r\n                                              <Grid item xs={1}>\r\n                                                <Button\r\n                                                  fullWidth\r\n                                                  classes={{\r\n                                                    root: classes.themeButton,\r\n                                                    fullWidth: classes.tabBtnIcon\r\n                                                  }}\r\n                                                  variant='contained'\r\n                                                  color='secondary'\r\n                                                  onClick={() => addMeals(push)}\r\n                                                >\r\n                                                  <AddIcon />\r\n                                                </Button>\r\n                                              </Grid>\r\n                                              <Grid item xs={1}>\r\n                                                <Button\r\n                                                  fullWidth\r\n                                                  classes={{\r\n                                                    fullWidth: classes.tabBtnIcon\r\n                                                  }}\r\n                                                  variant='contained'\r\n                                                  color='secondary'\r\n                                                  onClick={() => mainRemove(IncSetIndex)}\r\n                                                >\r\n                                                  <DeleteIcon />\r\n                                                </Button>\r\n                                              </Grid>\r\n                                              {mealSet.map((mealData: any, i: number) => {\r\n                                                let FieldName: string = `${FieldSetName}[${i}]`\r\n                                                let FieldTouched: any = getIn(touched, FieldName)\r\n                                                let FieldErrors: any = getIn(errors, FieldName)\r\n                                                let FieldValues: any = getIn(values, FieldName)\r\n                                                return (\r\n                                                  <FieldArray name={FieldName}>\r\n                                                    {({ push }) => (\r\n                                                      <>\r\n                                                        <Grid item xs={11}>\r\n                                                          <Typography variant='h5' align='center' >\r\n                                                            <strong>{`Ingredient #${IncSetIndex + 1}.${i + 1}`}</strong>\r\n                                                          </Typography>\r\n                                                        </Grid>\r\n\r\n                                                        <Grid item xs={1}>\r\n                                                          <Button\r\n                                                            fullWidth\r\n                                                            classes={{\r\n                                                              fullWidth: classes.tabBtnIcon\r\n                                                            }}\r\n                                                            variant='contained'\r\n                                                            color='secondary'\r\n                                                            onClick={() => removeMeals(i, FieldMainName, values, setFieldValue, remove)}\r\n                                                          >\r\n                                                            <DeleteIcon />\r\n                                                          </Button>\r\n                                                        </Grid>\r\n\r\n                                                        <Grid item md={12} xs={12}>\r\n                                                          <Autocomplete\r\n                                                            options={ingredientList}\r\n                                                            value={ingredientList.find(({ _id }: any) => _id == mealData?.id) || NoOption}\r\n                                                            getOptionLabel={(option: any) => option.name}\r\n                                                            onChange={(event: any, newValue: any) => {\r\n                                                              setFieldValue(`${FieldName}.id`, newValue?._id || '');\r\n                                                            }}\r\n                                                            onBlur={handleBlur}\r\n                                                            renderInput={(params: any) => (\r\n                                                              <TextField\r\n                                                                {...params}\r\n                                                                label='Ingredient'\r\n                                                                variant='outlined'\r\n                                                                error={Boolean(FieldTouched?.id && FieldErrors?.id)}\r\n                                                                helperText={FieldTouched?.id && FieldErrors?.id}\r\n                                                                inputProps={{\r\n                                                                  ...params.inputProps,\r\n                                                                }}\r\n                                                              />\r\n                                                            )}\r\n                                                          />\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12}>\r\n                                                          <TextField\r\n                                                            fullWidth\r\n                                                            label='Quantity'\r\n                                                            name={`${FieldName}.quantity`}\r\n                                                            variant='outlined'\r\n                                                            error={Boolean(FieldTouched?.quantity && FieldErrors?.quantity) || Boolean(FieldTouched?.quantity_unit && FieldErrors?.quantity_unit)}\r\n                                                            helperText={FieldTouched?.quantity && FieldErrors?.quantity || (FieldTouched?.quantity_unit && FieldErrors?.quantity_unit)}\r\n                                                            value={mealData.quantity}\r\n                                                            onChange={handleChange}\r\n                                                            onBlur={handleBlur}\r\n                                                            InputProps={{\r\n                                                              classes: {\r\n                                                                adornedEnd: classes.textareaAdornedEnd\r\n                                                              },\r\n                                                              endAdornment: <UnitSelect id='quantity_unit' option={UnitDropdown} name={`${FieldName}.quantity_unit`} value={mealData.quantity_unit} onChange={handleChange} onBlur={handleBlur} />\r\n                                                            }}\r\n                                                          />\r\n                                                        </Grid>\r\n\r\n                                                        <Grid item md={6} xs={6}>\r\n                                                          <TextField\r\n                                                            fullWidth\r\n                                                            multiline\r\n                                                            label='Protein ( g )'\r\n                                                            name={`${FieldName}.protein`}\r\n                                                            variant='outlined'\r\n                                                            error={Boolean(FieldTouched?.protein && FieldErrors?.protein)}\r\n                                                            helperText={FieldTouched?.protein && FieldErrors?.protein}\r\n                                                            value={mealData.protein}\r\n                                                            onChange={handleChange}\r\n                                                            onBlur={handleBlur}\r\n                                                          />\r\n                                                        </Grid>\r\n\r\n                                                        <Grid item md={6} xs={6}>\r\n                                                          <TextField\r\n                                                            fullWidth\r\n                                                            multiline\r\n                                                            label='Fat ( g )'\r\n                                                            name={`${FieldName}.fat`}\r\n                                                            variant='outlined'\r\n                                                            error={Boolean(FieldTouched?.fat && FieldErrors?.fat)}\r\n                                                            helperText={FieldTouched?.fat && FieldErrors?.fat}\r\n                                                            value={mealData.fat}\r\n                                                            onChange={handleChange}\r\n                                                            onBlur={handleBlur}\r\n                                                          />\r\n                                                        </Grid>\r\n\r\n                                                        <Grid item md={6} xs={6}>\r\n                                                          <TextField\r\n                                                            fullWidth\r\n                                                            multiline\r\n                                                            label='Carbs ( g )'\r\n                                                            name={`${FieldName}.carbs`}\r\n                                                            variant='outlined'\r\n                                                            error={Boolean(FieldTouched?.carbs && FieldErrors?.carbs)}\r\n                                                            helperText={FieldTouched?.carbs && FieldErrors?.carbs}\r\n                                                            value={mealData.carbs}\r\n                                                            onChange={handleChange}\r\n                                                            onBlur={handleBlur}\r\n                                                          />\r\n                                                        </Grid>\r\n\r\n                                                        <Grid item md={6} xs={6}>\r\n                                                          <TextField\r\n                                                            fullWidth\r\n                                                            multiline\r\n                                                            label='calories ( kcal )'\r\n                                                            name={`${FieldName}.calories`}\r\n                                                            variant='outlined'\r\n                                                            error={Boolean(FieldTouched?.calories && FieldErrors?.calories)}\r\n                                                            helperText={FieldTouched?.calories && FieldErrors?.calories}\r\n                                                            value={mealData.calories}\r\n                                                            onChange={handleChange}\r\n                                                            onBlur={handleBlur}\r\n                                                          />\r\n                                                        </Grid>\r\n                                                      </>\r\n                                                    )}\r\n                                                  </FieldArray>\r\n                                                )\r\n                                              })}\r\n                                            </>\r\n                                          )}\r\n                                        </FieldArray>\r\n                                      )\r\n                                    }\r\n\r\n                                    )\r\n                                    }\r\n\r\n                                    <Grid item md={12} xs={12}>\r\n                                      <FormControl fullWidth\r\n                                        error={Boolean(getIn(touched, `${FieldMainName}.meals`) && getArrayError(getIn(errors, `${FieldMainName}.meals`)))}\r\n                                      >\r\n                                        <Button\r\n                                          fullWidth\r\n                                          className={classes.themeButton}\r\n                                          variant='contained'\r\n                                          color='default'\r\n                                          onClick={() => push([])}\r\n                                          endIcon={<ControlPointIcon />}\r\n                                        >\r\n                                          Add Ingredients\r\n                                        </Button>\r\n\r\n                                        <FormHelperText>\r\n                                          {getIn(touched, `${FieldMainName}.meals`) && getArrayError(getIn(errors, `${FieldMainName}.meals`))}\r\n                                        </FormHelperText>\r\n                                      </FormControl>\r\n                                    </Grid>\r\n\r\n                                  </Grid>\r\n\r\n                                </TabPanel>\r\n                              </>\r\n                            )}\r\n                          </FieldArray>\r\n                        )\r\n                      }\r\n                      )}\r\n\r\n                    </Grid>\r\n                  </TabContext>\r\n                  {/* </Paper> */}\r\n\r\n                </Grid>\r\n              </DialogContent>\r\n\r\n              <DialogActions>\r\n                <Button onClick={onClose} variant='outlined' color='secondary'>\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  className={classes.themeButton}\r\n                  onClick={() => submitForm()}\r\n                  disabled={isSubmitting}\r\n                  variant='outlined'\r\n                >\r\n                  {isSubmitting ? (\r\n                    <CircularProgress size={24} style={{ color: 'white' }} />\r\n                  ) : (\r\n                    okBtnText\r\n                  )}\r\n                </Button>\r\n              </DialogActions>\r\n            </>\r\n          )}\r\n        </Formik>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ViewNutritionModel = (props: any) => {\r\n  const { isOpen, title, onClose, data } = props;\r\n  const classes = useStyles();\r\n  const [formValue, setFormValue] = useState(data);\r\n  const [tabValue, setTabValue] = React.useState<any>('0');\r\n  const [timings, setTimings] = React.useState('Early-Morning');\r\n\r\n  const handleTabChange = (event: React.ChangeEvent<{}>, newValue: string) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  const getDropValues = (dropValues: any, value: string) => {\r\n    return dropValues.find(({ id }: any) => id == value)?.name || ''\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFormValue(data);\r\n  }, [props]);\r\n\r\n  console.log(formValue)\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      fullWidth\r\n      maxWidth='md'\r\n      aria-labelledby='dialog-view-title'\r\n      open={isOpen}\r\n    >\r\n      <DialogTitle id='dialog-view-title' onClose={onClose}>\r\n        {title}\r\n      </DialogTitle>\r\n\r\n      <DialogContent dividers>\r\n\r\n        <Paper >\r\n          <Table>\r\n            <TableBody>\r\n              <TableRow >\r\n                <TableCell>Diet Type</TableCell>\r\n                <TableCell><strong>{getDropValues(DietTypeDrop, formValue?.diet_type)}</strong></TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Calories</TableCell>\r\n                <TableCell><strong>{formValue?.calories} Kcal</strong></TableCell>\r\n              </TableRow>\r\n\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n\r\n        <Card className={classes.nutCard}>\r\n          <CardHeader\r\n            classes={{\r\n              root: classes.nutCardRoot,\r\n              title: classes.nutCardTitle\r\n            }}\r\n            title={`${formValue?.calories} Kcal`}\r\n          />\r\n          <CardActions className={classes.nutCardAction}>\r\n            <NutritionData title='Protein' data={formValue?.protein} />\r\n            <NutritionData title='Fat' data={formValue?.fat} />\r\n            <NutritionData title='Carbs' data={formValue?.carbs} />\r\n          </CardActions>\r\n        </Card>\r\n\r\n        <Paper>\r\n          <TabContext value={tabValue || ''}>\r\n            <Grid item container xs={12} spacing={2}>\r\n              <Grid item xs={3}>\r\n                <TabList\r\n                  classes={{\r\n                    indicator: classes.tabIndicator\r\n                  }}\r\n                  onChange={handleTabChange}\r\n                  orientation=\"vertical\"\r\n                  variant=\"standard\"\r\n                >\r\n                  {formValue?.nutrition.map((nutData: any, i: number) => {\r\n                    const { meal_time } = nutData\r\n                    return (\r\n                      <Tab\r\n                        classes={{ root: classes.tabRoot, textColorInherit: classes.tabTextColorInherit }}\r\n                        label={meal_time}\r\n                        value={i.toString()} />\r\n                    )\r\n                  }\r\n                  )}\r\n\r\n                </TabList>\r\n              </Grid>\r\n\r\n              <Grid item xs={9}>\r\n                {formValue?.nutrition.map((nutData: any, i: number) => {\r\n                  const { meals = [] } = nutData\r\n                  return (\r\n                    <TabPanel key={i} className={classes.tabPanelRoot} value={i.toString()}>\r\n                      {meals.map((mealSet: any, i: number) => {\r\n                        {\r\n                          return (\r\n                            <>\r\n                              <Grid item xs={12} className={classes.mealTimeText}>\r\n                                <Typography variant='h5' align='center'>\r\n                                  <strong>{`Ingredient #${i + 1}`}</strong>\r\n                                </Typography>\r\n                              </Grid>\r\n                              {mealSet.map((mealData: any, i: number) => {\r\n                                const { ingredient: incData = {}, } = mealData\r\n                                const { benfits = [] } = incData\r\n                                return (\r\n                                  <>\r\n                                    <Grid item container xs={12} spacing={2}>\r\n                                      <Grid item xs={12} sm={12} md={6}>\r\n                                        <Card elevation={0} className={classes.cardRoot}>\r\n                                          <CardContent className={classes.cardContentRoot}>\r\n                                            <List className={classes.noPadding}>\r\n                                              <ListItem disableGutters className={classes.noPadding}>\r\n                                                <ListItemAvatar>\r\n                                                  <Avatar className={classes.avatarRoot} src={incData.image?.url} />\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText\r\n                                                  classes={{\r\n                                                    primary: classes.textPrimary,\r\n                                                    secondary: classes.textSecondary\r\n                                                  }}\r\n                                                  primary={incData.name}\r\n                                                  secondary={`${mealData.quantity}  ${mealData.quantity_unit}`}\r\n                                                />\r\n                                              </ListItem>\r\n                                            </List>\r\n\r\n                                            <CardActions disableSpacing className={classes.cardActionsRoot}>\r\n                                              <div>\r\n                                                <Typography variant=\"body2\" >\r\n                                                  <ul className={classes.ulRoot}>\r\n                                                    <li className={clsx(classes.liRoot, classes.colorProtein)}>Protein</li>\r\n                                                    <Typography className={classes.ulTypo} variant=\"body1\" >{mealData.protein}</Typography>\r\n                                                  </ul>\r\n                                                </Typography>\r\n\r\n                                              </div>\r\n\r\n                                              <div>\r\n                                                <Typography variant=\"body2\" >\r\n                                                  <ul className={classes.ulRoot}>\r\n                                                    <li className={clsx(classes.liRoot, classes.colorFat)}>Fat</li>\r\n                                                    <Typography className={classes.ulTypo} variant=\"body1\" >{mealData.fat}</Typography>\r\n                                                  </ul>\r\n                                                </Typography>\r\n\r\n                                              </div>\r\n\r\n                                              <div>\r\n                                                <Typography variant=\"body2\" >\r\n                                                  <ul className={classes.ulRoot}>\r\n                                                    <li className={clsx(classes.liRoot, classes.colorCarbs)}>Carbs</li>\r\n                                                    <Typography className={classes.ulTypo} variant=\"body1\" >{mealData.carbs}</Typography>\r\n                                                  </ul>\r\n                                                </Typography>\r\n\r\n                                              </div>\r\n                                            </CardActions>\r\n\r\n                                            <Divider className={classes.dividerRoot} />\r\n                                            <CardActions disableSpacing className={classes.cardActionsBenifitsRoot}>\r\n                                              <Grid item container xs={12} className={classes.benefitsText}>\r\n                                                <Typography variant='body2' color='inherit'>\r\n                                                  <strong>Benefits:</strong>\r\n                                                </Typography>\r\n                                              </Grid>\r\n                                              <Grid item container xs={12}>\r\n\r\n                                                {benfits.map((benfData: any, i: number) =>\r\n                                                  <Grid item xs={12} sm={6} >\r\n                                                    <ul className={classes.ulRoot}>\r\n                                                      <li className={clsx(classes.liRoot, classes.benefitsList)}>{benfData}</li>\r\n\r\n                                                    </ul>\r\n                                                  </Grid>)}\r\n\r\n                                              </Grid>\r\n                                            </CardActions>\r\n\r\n                                          </CardContent>\r\n                                        </Card>\r\n                                      </Grid>\r\n                                    </Grid>\r\n                                  </>\r\n                                )\r\n                              })\r\n                              }\r\n                            </>\r\n                          )\r\n                        }\r\n                      })}\r\n                    </TabPanel>\r\n                  )\r\n                })}\r\n              </Grid>\r\n\r\n            </Grid>\r\n\r\n          </TabContext>\r\n        </Paper>\r\n\r\n\r\n      </DialogContent >\r\n\r\n      <DialogActions>\r\n        <Button onClick={onClose} variant='outlined' color='secondary'>\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog >\r\n  );\r\n};\r\n\r\nconst CircularProgressWithLabel = (props: CircularProgressProps & { value: number }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box position=\"relative\" display=\"inline-flex\" color='inherit' alignItems=\"center\">\r\n      <CircularProgress\r\n        variant=\"determinate\"\r\n        className={classes.circleBottom}\r\n        size={50}\r\n        thickness={3}\r\n        {...props}\r\n        value={100}\r\n      />\r\n      <CircularProgress size={50} className={classes.circleTop} color='inherit' variant=\"determinate\" {...props} />\r\n      <Box\r\n        color='inherit'\r\n        top={0}\r\n        left={0}\r\n        bottom={0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Typography color='inherit' variant=\"caption\" component=\"div\" >{`${Math.round(\r\n          props.value,\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst NutritionData = (props: any) => {\r\n  const [data, setData] = useState(props.data)\r\n  const [title, setTitle] = useState(props.title)\r\n\r\n  useEffect(() => {\r\n    setData(props.data)\r\n    setTitle(props.title)\r\n  }, [props])\r\n  return (\r\n    <div >\r\n      <Typography color='inherit' align='center'>\r\n        <CircularProgressWithLabel value={data?.macros || 0} />\r\n      </Typography>\r\n      <Typography color='inherit' variant='h6' align='center'>\r\n        <strong>{title}</strong>\r\n      </Typography>\r\n      <Typography color='inherit' variant='body2' align='center'>\r\n        {`${data?.gram} g`}\r\n      </Typography>\r\n      <Typography color='inherit' variant='body2' align='center'>\r\n        {`${data?.calories} c`}\r\n      </Typography>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NutritionPlan;\r\n"],"sourceRoot":""}