{"version":3,"sources":["../node_modules/@material-ui/icons/Refresh.js","pages/AdminUser/AdminUser.tsx"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","useStyle","makeStyles","theme","root","width","breakpoints","values","lg","maxWidth","margin","padding","spacing","greenColor","color","palette","green","main","themeButton","white","backgroundColor","dark","deleteButton","height","content","inner","minWidth","actions","justifyContent","tabCard","marginTop","sEvenly","display","iconPadd","jCenter","imageView","avatarRoot","borderRadius","marginRight","textPrimary","fontWeight","textSecondary","ingrdientsGridMain","ingredientsAvatarRoot","htmlContentGrid","paddingLeft","paddingRight","paddingTop","noIngredientsText","marginBottom","textareaAdornedEnd","htmlContent","textAlign","wordBreak","likeCountImg","noCommentsText","justifyCenter","blogTypeStyle","fontSize","marginLeft","rejectButtonStyle","initialFormValue","email","password","name","image","file","prevImage","isNew","user_type","AdminRoles","id","AddEditModel","props","classes","isEdit","isOpen","okBtnText","onClose","data","title","onSuccess","useState","initialValue","setInitialValue","formikRef","useRef","imageRef","Snackbar","useSnackbar","Post","useService","uploadNewImage","imageData","uploadImageCloudinary","Promise","resolve","addData","setSubmitting","resetForm","then","res","show","message","catch","err","editData","editDatas","onImageChange","event","persist","files","target","FieldName","length","reader","FileReader","onloadend","current","setFieldValue","result","readAsDataURL","useEffect","image_thumbnail","_id","rest","EditData","url","open","disableBackdropClick","disableEscapeKeyDown","fullWidth","aria-labelledby","innerRef","enableReinitialize","initialValues","onSubmit","helper","a","PostData","all","ImgRes","render","validationSchema","Yup","shape","trim","required","errors","touched","handleBlur","handleChange","submitForm","isSubmitting","setFieldTouched","console","log","dividers","container","item","xs","label","variant","onChange","onBlur","error","Boolean","helperText","type","options","find","getOptionLabel","option","newValue","renderInput","params","inputProps","md","ref","accept","hidden","className","onClick","click","startIcon","src","disabled","size","style","ViewModel","onReload","formValue","AdminUser","ConfModel","useConfModel","page_no","page_limit","stateData","setStateData","pageCount","setPageCount","dataList","setDataList","loading","setLoading","viewDialog","setViewDialog","addEditDialog","setAddEditDialog","listAdminUser","page_count","closeAddEditDialog","prevState","onSuccessAction","alignItems","justify","component","elevation","placeholder","Name","Value","align","map","index","hover","arrow","openViewDialog","is_disabled","openEditDialog","openModel","closeModel","onDelete","count","page"],"mappings":"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","file":"static/js/16.52a08ef8.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"\n}), 'Refresh');\n\nexports.default = _default;","import { Avatar, Button, Card, CardActions, CardContent, CircularProgress, Dialog, DialogActions, DialogContent, FormControl, FormHelperText, Grid, IconButton, makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, Tooltip, Typography } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Formik } from 'formik';\r\nimport React, { useEffect, useState } from 'react';\r\nimport * as Yup from 'yup';\r\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\r\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\r\nimport Page from '../../components/Page/Page';\r\nimport useConfModel from '../../hook/useConfModel';\r\nimport useService from '../../hook/useService';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport { uploadImageCloudinary } from '../../utils/CloudinaryUtils';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\n\r\n\r\nconst useStyle = makeStyles((theme: any) => ({\r\n  root: {\r\n    width: theme.breakpoints.values.lg,\r\n    maxWidth: '100%',\r\n    margin: '0 auto',\r\n    padding: theme.spacing(3),\r\n  },\r\n  greenColor: {\r\n    color: theme.palette.green.main,\r\n  },\r\n  themeButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n  },\r\n  deleteButton: {\r\n    width: '100%',\r\n    height: '50px',\r\n  },\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  inner: {\r\n    minWidth: 700,\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(1),\r\n    justifyContent: 'center',\r\n  },\r\n  tabCard: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  sEvenly: {\r\n    display: 'flex',\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  iconPadd: {\r\n    padding: 5,\r\n  },\r\n  jCenter: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  imageView: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  avatarRoot: {\r\n    borderRadius: 10,\r\n    marginRight: 15,\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10),\r\n  },\r\n  textPrimary: {\r\n    marginTop: 10,\r\n    fontWeight: 'bold',\r\n  },\r\n  textSecondary: {\r\n    marginTop: 10,\r\n  },\r\n  ingrdientsGridMain: {\r\n    marginTop: 10,\r\n  },\r\n  ingredientsAvatarRoot: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n    margin: 'auto',\r\n  },\r\n  htmlContentGrid: {\r\n    paddingLeft: theme.spacing(3),\r\n    paddingRight: theme.spacing(3),\r\n    paddingTop: theme.spacing(1),\r\n  },\r\n  noIngredientsText: {\r\n    marginBottom: theme.spacing(3),\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  textareaAdornedEnd: {\r\n    paddingRight: 0\r\n  },\r\n  htmlContent: {\r\n    '& ul': {\r\n      paddingLeft: '1.2rem',\r\n    },\r\n    '& p': {\r\n      textAlign: 'justify',\r\n      wordBreak: 'break-word'\r\n    },\r\n  },\r\n  likeCountImg: {\r\n    width: theme.spacing(2),\r\n    height: theme.spacing(2),\r\n  },\r\n  noCommentsText: {\r\n    textAlign: 'center'\r\n  },\r\n  justifyCenter: {\r\n    justifyContent: 'center'\r\n  },\r\n  blogTypeStyle: {\r\n    backgroundColor: '#F2805E',\r\n    color: 'white',\r\n    padding: '5px',\r\n    borderRadius: '5px',\r\n    fontSize: '14px',\r\n    marginLeft: '10px'\r\n  },\r\n  rejectButtonStyle: {\r\n    backgroundColor: 'red',\r\n    color: 'white',\r\n    marginLeft: '10px',\r\n    '&:hover': {\r\n      backgroundColor: 'red',\r\n    },\r\n  }\r\n}));\r\n\r\nconst AdminUser = () => {\r\n  const classes = useStyle();\r\n  const { Post } = useService();\r\n  const Snackbar = useSnackbar();\r\n  const ConfModel = useConfModel();\r\n  const [stateData, setStateData] = useState({ page_no: 1, page_limit: 10, name: '' });\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const [dataList, setDataList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [viewDialog, setViewDialog] = React.useState({\r\n    isOpen: false,\r\n    title: '',\r\n    data: {},\r\n  });\r\n  const [addEditDialog, setAddEditDialog] = useState({\r\n    isOpen: false,\r\n    title: '',\r\n    okBtnText: '',\r\n    isEdit: false,\r\n    data: {},\r\n  });\r\n\r\n  const listAdminUser = async () => {\r\n    setLoading(true);\r\n    Post('app/listAdminUser', stateData)\r\n      .then((res: any) => {\r\n        console.log('listAdminUser', res);\r\n        setLoading(false);\r\n        if (!res.error) {\r\n          setDataList(res.data);\r\n          setPageCount(res.page_count);\r\n        } else {\r\n          Snackbar.show(res.message, 'error');\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        console.log('err', err);\r\n        setLoading(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const onDelete = (data: any) => {\r\n    const { openModel, setLoading, closeModel } = ConfModel;\r\n    const submitFunction = () => {\r\n      setLoading(true);\r\n      Post('app/disableAdmin', { id: data._id })\r\n        .then(async (res: any) => {\r\n          setLoading(false);\r\n          closeModel();\r\n          onSuccessAction();\r\n          Snackbar.show(res.message, 'success');\r\n        })\r\n        .catch((err: any) => {\r\n          setLoading(false);\r\n          Snackbar.show('Internal Server Error', 'error');\r\n        });\r\n    };\r\n    const AlertText = `Are you sure want to ${data.is_disabled ? 'Enable' : 'Disable'} this user`\r\n    const BtnText = data.is_disabled ? 'Enable' : 'Disable'\r\n    openModel(submitFunction, AlertText, BtnText);\r\n  };\r\n\r\n  const searchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    event.persist()\r\n    const Name = event.target.name\r\n    const Value = event.target.value\r\n    setStateData((prevState: any) => ({ ...prevState, [Name]: Value }));\r\n  };\r\n\r\n  const openAddDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      title: 'Add Admin User',\r\n      isEdit: false,\r\n      okBtnText: 'Save',\r\n    }));\r\n  };\r\n\r\n  const openViewDialog = (data: any) => {\r\n    setViewDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      data,\r\n      title: 'View Admin User',\r\n    }));\r\n  };\r\n\r\n  const openEditDialog = (data: any) => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      isEdit: true,\r\n      data,\r\n      title: 'Edit Admin User',\r\n      okBtnText: 'Edit',\r\n    }));\r\n  };\r\n\r\n  const closeAddEditDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const onPageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    setStateData((prevState: any) => ({ ...prevState, page_no: value }));\r\n  };\r\n\r\n  const onSuccessAction = () => {\r\n    listAdminUser();\r\n    closeAddEditDialog();\r\n  };\r\n\r\n  const closeViewDialog = () => {\r\n    setViewDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    listAdminUser();\r\n  }, [stateData]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Page title='Admin Users' />\r\n      <Grid alignItems='flex-end' container justify='space-between' spacing={3}>\r\n        <Grid item>\r\n          <Typography component='h1' variant='h3'>\r\n            Admin Users\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant='contained'\r\n            onClick={() => openAddDialog()}\r\n            className={classes.themeButton}\r\n            startIcon={<AddIcon />}\r\n          >\r\n            Add\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* =============Search======== */}\r\n      <Grid container spacing={3}>\r\n        <Grid item>\r\n          <Paper elevation={0}>\r\n            <TextField\r\n              fullWidth\r\n              size='small'\r\n              placeholder='Name'\r\n              name='name'\r\n              value={stateData?.name}\r\n              variant='outlined'\r\n              onChange={searchChange}\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Card className={classes.tabCard}>\r\n        <CardContent className={classes.content}>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align='center'>#</TableCell>\r\n                  <TableCell align='center'>Image</TableCell>\r\n                  <TableCell align='center'>Name</TableCell>\r\n                  <TableCell align='center'>Email</TableCell>\r\n                  <TableCell align='center'>User Type</TableCell>\r\n                  <TableCell align='center'>Action</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {!loading &&\r\n                  dataList.map((data: any, index: number) => (\r\n                    <TableRow hover key={index}>\r\n                      <TableCell align='center'>\r\n                        {stateData.page_limit * (stateData.page_no - 1) +\r\n                          index +\r\n                          1}\r\n                      </TableCell>\r\n                      <TableCell align='center'>\r\n                        <div className={classes.jCenter}>\r\n                          <Avatar variant='square' src={data?.image?.url} />\r\n                        </div>\r\n                      </TableCell>\r\n                      <TableCell align='center'>{data?.name}</TableCell>\r\n                      <TableCell align='center'>{data?.email}</TableCell>\r\n                      <TableCell align='center'>{data?.user_type}</TableCell>\r\n                      <TableCell align='center'>\r\n                        <div className={classes.sEvenly}>\r\n                          <Tooltip title='View' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openViewDialog(data)}\r\n                            >\r\n                              <CenterFocusStrongIcon color='primary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          {!data.is_disabled && <Tooltip title='Edit' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openEditDialog(data)}\r\n                            >\r\n                              <EditIcon color='action' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          }\r\n                          <Tooltip title='Status' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => onDelete(data)}\r\n                            >\r\n                              {!data.is_disabled && <DeleteIcon color='secondary' />}\r\n                              {data.is_disabled && <RefreshIcon color='secondary' />}\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                {loading && <TableLoader />}\r\n                {!loading && dataList.length == 0 && (\r\n                  <TableNoData>No Data Found</TableNoData>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </CardContent>\r\n\r\n        <CardActions className={classes.actions}>\r\n          <Pagination\r\n            count={pageCount}\r\n            page={stateData.page_no}\r\n            onChange={onPageChange}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n\r\n      {addEditDialog.isOpen && <AddEditModel {...addEditDialog} onClose={closeAddEditDialog} onSuccess={onSuccessAction} />}\r\n      {viewDialog.isOpen && <ViewModel {...viewDialog} onClose={closeViewDialog} onReload={() => listAdminUser()} />}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nconst initialFormValue = {\r\n  email: '',\r\n  password: '',\r\n  name: '',\r\n  image: { file: null, prevImage: '', isNew: null },\r\n  user_type: ''\r\n}\r\nconst AdminRoles = [\r\n  { id: 'ADMIN', name: 'Admin' },\r\n  { id: 'NUTRITION', name: 'Nutrition' },\r\n  { id: 'SKINCARE', name: 'Skincare' },\r\n  { id: 'WORKOUT', name: 'Workout' },\r\n  { id: 'CUSTOMERCARE', name: 'Customer Care' }\r\n]\r\n\r\nexport const AddEditModel = (props: any) => {\r\n  const classes = useStyle()\r\n  const { isEdit, isOpen, okBtnText = 'OK', onClose, data, title, onSuccess } = props;\r\n  const [initialValue, setInitialValue] = useState({ ...initialFormValue });\r\n  const formikRef = React.useRef<any>(null);\r\n  const imageRef = React.useRef<any>(null);\r\n  const imageThumbnailRef = React.useRef<any>(null);\r\n  const Snackbar = useSnackbar();\r\n  const { Post } = useService();\r\n\r\n  const uploadNewImage = (imageData: any) => {\r\n    const { isNew, file } = imageData\r\n    if (isNew) {\r\n      return uploadImageCloudinary(file)\r\n    } else {\r\n      return Promise.resolve(file)\r\n    }\r\n  }\r\n\r\n  const onSubmit = (value: any, helper: any) => {\r\n    try {\r\n      helper.setSubmitting(true);\r\n      const render = async () => {\r\n        const { image, ...rest } = value;\r\n        const PostData = rest;\r\n        const [ImgRes] = await Promise.all([uploadNewImage(image)])\r\n\r\n        PostData.image = ImgRes\r\n\r\n        !isEdit && addData(PostData, helper);\r\n        isEdit && editData(PostData, helper);\r\n      };\r\n      render();\r\n    } catch (err) {\r\n      helper.setSubmitting(false);\r\n      Snackbar.show('Image Upload Failed', 'error');\r\n    }\r\n  };\r\n\r\n  const addData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n    Post('app/addAdminUser', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const editData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    const {id, name, user_type, image} = data;\r\n    const editDatas = {id, name, user_type, image};\r\n    setSubmitting(true);\r\n    Post('app/updateAdmin', editDatas)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const onImageChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    event.persist();\r\n    const files = event.target.files;\r\n    const FieldName = event.target.name;\r\n    if (files && files.length != 0) {\r\n      const reader = new FileReader();\r\n      const file = files[0];\r\n      reader.onloadend = () => {\r\n        formikRef.current.setFieldValue(FieldName, {\r\n          file,\r\n          prevImage: reader.result,\r\n          isNew: true,\r\n        });\r\n      };\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      formikRef.current.setFieldValue(FieldName, {\r\n        file: null,\r\n        prevImage: '',\r\n        isNew: null,\r\n      });\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isEdit) {\r\n      const { image, image_thumbnail, _id, ...rest } = data;\r\n      const EditData = { ...rest, id: _id };\r\n      EditData.image = { file: image, prevImage: image?.url, isNew: false };\r\n      EditData.image_thumbnail = { file: image_thumbnail, prevImage: image_thumbnail?.url, isNew: false };\r\n      setInitialValue(EditData);\r\n    } else {\r\n      setInitialValue(initialFormValue);\r\n    }\r\n  }, [props]);\r\n\r\n  return (\r\n    <Dialog\r\n      open={isOpen}\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      fullWidth\r\n      maxWidth='md'\r\n      aria-labelledby='dialog-title'\r\n    >\r\n      <DialogTitle id='dialog-title' onClose={onClose}>\r\n        {title}\r\n      </DialogTitle>\r\n      <Formik\r\n        innerRef={formikRef}\r\n        enableReinitialize\r\n        initialValues={initialValue}\r\n        onSubmit={onSubmit}\r\n        validationSchema={Yup.object().shape({\r\n         ...(!isEdit && {email: Yup.string().trim().required('Email is required').email()}),\r\n         ...(!isEdit && {password: Yup.string().trim().required('Password is required')}),\r\n          name: Yup.string().trim().required('Name is required'),\r\n          image: Yup.object({ file: Yup.mixed().required('A file is required') }),\r\n          user_type: Yup.string().trim().required('User type is required'),\r\n        })}\r\n      >\r\n        {({ values, errors, touched, handleBlur, handleChange, setFieldValue, submitForm, setFieldTouched, isSubmitting, }) => (\r\n          <>\r\n          {console.log(errors)}\r\n            <DialogContent dividers>\r\n              <Grid container spacing={2}>\r\n                {!isEdit && (\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label='Email'\r\n                      name='email'\r\n                      variant='outlined'\r\n                      value={values.email}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      error={Boolean(touched.email && errors.email)}\r\n                      helperText={touched.email && errors.email}\r\n                    />\r\n                </Grid>\r\n                )}\r\n\r\n                {!isEdit && (\r\n                   <Grid item xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label='Password'\r\n                      name='password'\r\n                      variant='outlined'\r\n                      type='password'\r\n                      value={values.password}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      error={Boolean(touched.password && errors.password)}\r\n                      helperText={touched.password && errors.password}\r\n                    />\r\n                 </Grid>\r\n                )}\r\n\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label='Name'\r\n                    name='name'\r\n                    variant='outlined'\r\n                    value={values.name}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(touched.name && errors.name)}\r\n                    helperText={touched.name && errors.name}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <Autocomplete\r\n                    fullWidth\r\n                    options={AdminRoles}\r\n                    value={AdminRoles.find((data: any) => data.id == values.user_type)}\r\n                    getOptionLabel={(option: any) => option.name}\r\n                    onChange={(event: any, newValue: any) => {\r\n                      setFieldValue('user_type', newValue?.id || '');\r\n                    }}\r\n                    onBlur={handleBlur}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        label='User Type'\r\n                        name='user_type'\r\n                        variant='outlined'\r\n                        error={Boolean(touched.user_type && errors.user_type)}\r\n                        helperText={touched.user_type && errors.user_type}\r\n                        inputProps={{\r\n                          ...params.inputProps,\r\n                        }}\r\n                      />\r\n                    )}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item md={12} xs={12}>\r\n                  <input\r\n                    name='image'\r\n                    ref={imageRef}\r\n                    type='file'\r\n                    accept='.jpg,.png,jpeg'\r\n                    onChange={onImageChange}\r\n                    onBlur={handleBlur}\r\n                    hidden\r\n                  />\r\n\r\n                  <Button\r\n                    fullWidth\r\n                    className={classes.themeButton}\r\n                    variant='contained'\r\n                    color='default'\r\n                    onClick={() => imageRef.current.click()}\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Upload Image\r\n                  </Button>\r\n\r\n                  <FormControl\r\n                    error={Boolean(\r\n                      touched?.image?.file && errors?.image?.file\r\n                    )}\r\n                  >\r\n                    <FormHelperText>\r\n                      {touched?.image?.file &&\r\n                        errors?.image?.file}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item md={12} xs={12}>\r\n                  {values.image?.prevImage && (\r\n                    <img\r\n                      className={classes.imageView}\r\n                      src={values.image?.prevImage}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n\r\n              </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onClose} variant='outlined' color='secondary'>\r\n                Cancel\r\n              </Button>\r\n\r\n              <Button\r\n                className={classes.themeButton}\r\n                onClick={() => submitForm()}\r\n                disabled={isSubmitting}\r\n                variant='outlined'\r\n              >\r\n                {isSubmitting ? (\r\n                  <CircularProgress size={24} style={{ color: 'white' }} />\r\n                ) : (\r\n                  okBtnText\r\n                )}\r\n              </Button>\r\n            </DialogActions>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport const ViewModel = (props: any) => {\r\n  const { isOpen, title, onClose, data, onReload } = props;\r\n  const classes = useStyle();\r\n  const [formValue, setFormValue] = useState(data);\r\n\r\n  console.log(formValue)\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      fullWidth\r\n      maxWidth='sm'\r\n      aria-labelledby='dialog-view-title'\r\n      open={isOpen}\r\n    >\r\n      <DialogTitle id='dialog-view-title' onClose={onClose}>\r\n        {title}\r\n      </DialogTitle>\r\n\r\n      <DialogContent dividers>\r\n\r\n        <div>\r\n          <img\r\n            src={formValue?.image?.url}\r\n            className={classes.imageView}\r\n          />\r\n        </div>\r\n        <Card>\r\n          <Table>\r\n            <TableBody>\r\n              <TableRow >\r\n                <TableCell>Name</TableCell>\r\n                <TableCell>{formValue?.name}</TableCell>\r\n              </TableRow>\r\n              <TableRow >\r\n                <TableCell>Email</TableCell>\r\n                <TableCell>{formValue?.email}</TableCell>\r\n              </TableRow>\r\n              <TableRow >\r\n                <TableCell>User Type</TableCell>\r\n                <TableCell>{formValue?.user_type}</TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </Card>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={onClose} variant='outlined' color='secondary'>\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default AdminUser\r\n"],"sourceRoot":""}