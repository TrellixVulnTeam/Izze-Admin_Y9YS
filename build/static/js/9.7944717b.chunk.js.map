{"version":3,"sources":["utils/PlanDropdowns.tsx","../node_modules/@material-ui/icons/ControlPoint.js","components/UnitSelect/UnitSelect.tsx","utils/MetricUnits.tsx","components/TipTapEditor/EditorButtons.tsx","components/TipTapEditor/TipTapEditor.tsx","../node_modules/@material-ui/icons/FileCopy.js","../node_modules/@material-ui/icons/Timer.js","../node_modules/@material-ui/core/esm/MenuItem/MenuItem.js","pages/SkinCareRecipe/SkinCareRecipe.tsx","pages/SkinCarePlan/SkinCarePlan.tsx"],"names":["DietTypeDrop","id","name","FitnessGoalDrop","FitnessGoalWomenDrop","LifeStyleDrop","ExperienceDrop","PreferredDrop","InterestsDrop","SkinTypeDrop","CurrentClimateDrop","SkinIrregularDrop","SubDrop","SkinTextureDrop","CcpaStatus","NoOption","getSubSkinIrregular","SkinIrregularValue","find","getDropValues","dropValues","value","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","React","_default","createElement","d","useStyles","makeStyles","theme","selectRoot","borderColor","selectIcon","right","formControlRoot","minWidth","UnitSelect","props","useState","option","placeholder","onChange","Function","onBlur","setProps","classes","useEffect","variant","className","shrink","labelId","icon","map","i","UnitDropdown","inActive","borderRadius","color","palette","green","main","border","active","white","backgroundColor","dark","btnGroup","display","EditorButton","editor","ButtonGroup","disableElevation","fullWidth","size","IconButton","root","isActive","onClick","chain","focus","toggleBold","run","toggleItalic","toggleStrike","toggleCode","setParagraph","toggleBulletList","toggleOrderedList","TipTapEditor","useEditor","extensions","StarterKit","Link","content","onUpdate","getHTML","MenuItem","ref","tabIndex","_props$component","component","_props$disableGutters","disableGutters","ListItemClasses","_props$role","role","selected","tabIndexProp","other","_objectWithoutProperties","disabled","undefined","ListItem","_extends","button","dense","clsx","gutters","withStyles","typography","body1","_defineProperty","minHeight","paddingTop","paddingBottom","boxSizing","width","overflow","whiteSpace","breakpoints","up","body2","values","lg","maxWidth","margin","padding","spacing","addIcon","marginRight","inner","actions","justifyContent","tabCard","marginTop","sEvenly","iconPadd","jCenter","imageView","height","themeButton","lColor","deleteButton","avatarRoot","textPrimary","fontWeight","textSecondary","ingrdientsGridMain","ingredientsAvatarRoot","timeText","alignItems","htmlContentGrid","paddingLeft","paddingRight","noIngredientsText","marginBottom","textareaAdornedEnd","htmlContent","textAlign","AddEditDailog","isOpen","title","onClose","isEdit","data","onSuccess","okBtnText","formikRef","useRef","imageRef","Snackbar","useSnackbar","Post","useService","ingredientList","setIngredientList","ingredient","quantity","quantity_unit","initialFormValue","recipe_name","recipe_description","ingredients","preparation_time","preparation_description","recipe_image","file","prevImage","isNew","initialValue","setInitialValue","listIngredients","a","then","res","error","show","message","_id","console","log","catch","err","onImageChange","e","persist","files","target","length","reader","FileReader","onloadend","current","setFieldValue","result","readAsDataURL","addData","setSubmitting","resetForm","editData","rest","EditData","IngredientIds","filter","includes","url","disableBackdropClick","disableEscapeKeyDown","aria-labelledby","open","innerRef","enableReinitialize","initialValues","onSubmit","helper","PostData","uploadNewImage","render","validationSchema","Yup","shape","trim","required","max","of","when","is","otherwise","typeError","errors","touched","handleChange","handleBlur","setFieldTouched","submitForm","isSubmitting","dividers","container","item","md","xs","label","Boolean","helperText","multiline","rowsMax","validateOnChange","push","remove","unshift","addIngredients","endIcon","incValue","direction","options","getOptionLabel","getOptionSelected","event","newValue","renderInput","params","inputProps","InputProps","adornedEnd","endAdornment","type","accept","hidden","click","startIcon","src","ViewDailog","setFormValue","SkinCareRecipeViewContent","formValue","primary","secondary","align","style","justify","index","image","fontSize","dangerouslySetInnerHTML","__html","SkinCareRecipe","ConfModel","useConfModel","page_no","page_limit","stateData","setStateData","pageCount","setPageCount","dataList","setDataList","loading","setLoading","addEditDialog","setAddEditDialog","viewDialog","setViewDialog","listSkinCare","page_count","closeAddEditDialog","prevState","onSuccessAction","text","hover","substring","arrow","openViewDialog","openEditDialog","openModel","closeModel","onDelete","count","page","dayPaper","mTop","sBetween","ingredientsAvatarStyle","tabRoot","tabIndicator","tabTextColorInherit","tabPanelRoot","listItemRoot","noListItemRoot","paperRoot","AddEditDialog","isDuplicate","skinCareRecipeList","setSkinCareRecipeList","initialFormValues","skin_type","current_climate","skin_irregular","skin_irregular_sub","skin_texture","recipes","Array","fill","day","cloneDeep","recipe","response","recData","elevation","ViewSkincarePlan","setValue","indicator","orientation","textColorInherit","toString","SkinCarePlan","isLoading","setIsLoading","tableData","setTableData","listSkinCarePlan","openDuplicateDialog"],"mappings":"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","file":"static/js/9.7944717b.chunk.js","sourcesContent":["//=====Meal Plan\r\nexport const DietTypeDrop = [\r\n  { id: 'VEG', name: 'Vegetarian' },\r\n  { id: 'NONVEG', name: 'Non-Vegetarian' },\r\n  { id: 'EGG', name: 'Eggetarian' },\r\n  { id: 'VEGAN', name: 'Vegan' },\r\n];\r\n\r\nexport const FitnessGoalDrop = [\r\n  { id: 'WEIGHTGAIN', name: 'Weight Gain' },\r\n  { id: 'WEIGHTLOSS', name: 'Weight Loss' },\r\n  { id: 'MAINTAINWEIGHT', name: 'Maintain Weight' },\r\n];\r\nexport const FitnessGoalWomenDrop = [\r\n  { id: 'WEIGHTGAIN', name: 'Weight Gain' },\r\n  { id: 'WEIGHTLOSS', name: 'Weight Loss' },\r\n  { id: 'MAINTAINWEIGHT', name: 'Maintain Weight' },\r\n  { id: 'WEIGHTGAINPOSTPARTUM', name: 'Weight Gain (Post-Partum)' },\r\n  { id: 'WEIGHTLOSSPOSTPARTUM', name: 'Weight Loss (Post-Partum)' },\r\n  { id: 'MAINTAINWEIGHTPOSTPARTUM', name: 'Maintain Weight (Post-Partum)' },\r\n];\r\nexport const LifeStyleDrop = [\r\n  { id: 'SEDENTARY', name: 'Sedentary' },\r\n  { id: 'LIGHTLYACTIVE', name: 'Lightly Active' },\r\n  { id: 'MODERATEACTIVE', name: 'Moderately Active' },\r\n  { id: 'VERYACTIVE', name: 'Very Active' },\r\n];\r\n\r\n//==========Workout Plan===========\r\nexport const ExperienceDrop = [\r\n  { id: 'BEGINNER', name: 'Beginner' },\r\n  { id: 'INTERMEDIATE', name: 'Intermediate' },\r\n  { id: 'PROFESSIONAL', name: 'Professional' },\r\n];\r\n\r\nexport const PreferredDrop = [\r\n  { id: 'STRENGTH', name: 'Strength Training' },\r\n  { id: 'HIIT', name: 'HIIT' },\r\n];\r\n\r\nexport const InterestsDrop = [\r\n  { id: 'HOME', name: 'Home Workout' },\r\n  { id: 'GYM', name: 'Gym Workout' },\r\n];\r\n\r\n//=========Skincare Plan============\r\nexport const SkinTypeDrop = [\r\n  { id: 'DRY', name: 'Dry' },\r\n  { id: 'OILY', name: 'Oily' },\r\n  { id: 'COMBINATION', name: 'Combination' },\r\n  { id: 'NORMAL', name: 'Normal' },\r\n];\r\n\r\nexport const CurrentClimateDrop = [\r\n  { id: 'HOT', name: 'Hot' },\r\n  { id: 'COLD', name: 'Cold' },\r\n  { id: 'HUMID', name: 'Humid' },\r\n  { id: 'DRY', name: 'Dry' },\r\n];\r\n\r\nexport const SkinIrregularDrop = [\r\n  {\r\n    id: 'ACNE', name: 'Acne', SubDrop: [\r\n      { id: 'PIMPLES', name: 'Pimples' },\r\n      { id: 'BLACKHEADS', name: 'Black Heads' },\r\n      { id: 'WHITEHEADS', name: 'White Heads' },\r\n    ]\r\n  },\r\n  {\r\n    id: 'RASHES', name: 'Rashes', SubDrop: [\r\n      { id: 'SCALY', name: 'Scaly' },\r\n      { id: 'ITCHY', name: 'Itchy' },\r\n      { id: 'BUMPY', name: 'Bumpy' },\r\n      { id: 'BOILS', name: 'Boils' },\r\n      { id: 'BLISTERS', name: 'Blisters' },\r\n    ]\r\n  },\r\n  {\r\n    id: 'DISCOLORATION', name: 'Discoloration', SubDrop: [\r\n      { id: 'BLACKISH', name: 'Blackish' },\r\n      { id: 'WHITISH', name: 'Whitish' },\r\n      { id: 'PINKISH', name: 'Pinkish' },\r\n      { id: 'REDDISH', name: 'Reddish' },\r\n      { id: 'SUNSPOTS', name: 'Sun Spots' },\r\n    ]\r\n  },\r\n];\r\n\r\nexport const SkinTextureDrop = [\r\n  { id: 'SAGGY', name: 'Saggy', },\r\n  { id: 'FINELINES', name: ' Fine Lines' },\r\n  { id: 'WRINKLES', name: 'Wrinkles' },\r\n  { id: 'NONE', name: 'None' },\r\n];\r\n\r\nexport const CcpaStatus = [\r\n  { id: '0', name: 'Pending', },\r\n  { id: '1', name: 'Processing' },\r\n  { id: '2', name: 'Closed' },\r\n];\r\n\r\nexport const NoOption = { id: '', name: '' }\r\n\r\nexport const getSubSkinIrregular = (SkinIrregularValue: any) => {\r\n  return SkinIrregularDrop?.find(({ id }: any) => id == SkinIrregularValue)?.SubDrop || []\r\n}\r\n\r\nconst getDropValues = (dropValues: any, value: string) => {\r\n  return dropValues.find(({ id }: any) => id == value)?.name || ''\r\n};\r\n\r\nexport default getDropValues\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.49 2 2 6.49 2 12s4.49 10 10 10 10-4.49 10-10S17.51 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'ControlPoint');\n\nexports.default = _default;","import React, { useState, useEffect } from 'react';\r\nimport { FormControl, InputLabel, makeStyles, MenuItem, Select } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  selectRoot: {\r\n    '& .MuiOutlinedInput-notchedOutline': {\r\n      borderColor: 'white !important'\r\n    }\r\n  },\r\n  selectIcon: {\r\n    right: 0\r\n  },\r\n  formControlRoot: {\r\n    minWidth: 'unset'\r\n  }\r\n}));\r\n\r\nconst UnitSelect = (props: any) => {\r\n  const [{\r\n    value = '',\r\n    name = '',\r\n    id = 'tempID',\r\n    option = [],\r\n    placeholder = 'Unit',\r\n    onChange = new Function,\r\n    onBlur = new Function,\r\n  }, setProps] = useState(props)\r\n\r\n  const classes = useStyles()\r\n  useEffect(() => {\r\n    setProps(props)\r\n  }, [props])\r\n\r\n  return (\r\n    <FormControl variant=\"outlined\" className={classes.formControlRoot}>\r\n      <InputLabel id={id} shrink={false} >\r\n        {value == '' && placeholder}\r\n      </InputLabel>\r\n      <Select\r\n        labelId={id}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        className={classes.selectRoot}\r\n        classes={{\r\n          icon: classes.selectIcon\r\n        }}\r\n      >\r\n        {option.map(({ id, name }: any, i: any) => <MenuItem key={i} value={id}>{name}</MenuItem>)}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default UnitSelect;\r\n\r\n\r\n\r\n","const UnitDropdown = [\r\n    { id: 'None', name: 'None' },\r\n    { id: 'g', name: 'g' },\r\n    // { id: 'KG', name: 'kg' },\r\n    // { id: 'L', name: 'liter' },\r\n    { id: 'ml', name: 'ml' },\r\n    { id: 'tsp', name: 'tsp' },\r\n    { id: 'tbsp', name: 'tbsp' },\r\n]\r\nexport default UnitDropdown;","import React from 'react';\r\nimport { ButtonGroup, IconButton } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\r\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\r\nimport StrikethroughSIcon from '@material-ui/icons/StrikethroughS';\r\nimport CodeIcon from '@material-ui/icons/Code';//code\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';//highlite\r\nimport LinkIcon from '@material-ui/icons/Link';//link\r\nimport FormatTextdirectionLToRIcon from '@material-ui/icons/FormatTextdirectionLToR';//pragraph\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';//bullet list\r\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';// ordered list\r\nimport FormatQuoteIcon from '@material-ui/icons/FormatQuote'; //quote\r\nimport FormatClearIcon from '@material-ui/icons/FormatClear'; //clear text\r\n\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  inActive: {\r\n    borderRadius: 'unset',\r\n    color: theme.palette.green.main,\r\n    border: `1px solid ${theme.palette.green.main}`,\r\n  },\r\n  active: {\r\n    borderRadius: 'unset',\r\n    color: theme.palette.white,\r\n    border: `1px solid ${theme.palette.green.main}`,\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n  },\r\n  btnGroup: {\r\n    display: 'block'\r\n  }\r\n}));\r\n\r\n\r\n\r\nconst EditorButton = (props: any) => {\r\n  const { editor } = props\r\n  const classes = useStyles();\r\n  return (\r\n    <ButtonGroup disableElevation fullWidth className={classes.btnGroup} variant=\"contained\" size='small' >\r\n\r\n      {/* ===Bold=== */}\r\n      <IconButton size=\"small\"\r\n        classes={{ root: editor?.isActive('bold') ? classes.active : classes.inActive }}\r\n        onClick={() => editor?.chain().focus().toggleBold().run()}\r\n      >\r\n        <FormatBoldIcon />\r\n      </IconButton>\r\n\r\n      {/* ===italic=== */}\r\n      <IconButton size=\"small\"\r\n        classes={{ root: editor?.isActive('italic') ? classes.active : classes.inActive }}\r\n        onClick={() => editor?.chain().focus().toggleItalic().run()}\r\n      >\r\n        <FormatItalicIcon />\r\n      </IconButton>\r\n\r\n      {/* ===Strike=== */}\r\n      <IconButton size=\"small\"\r\n        classes={{ root: editor?.isActive('strike') ? classes.active : classes.inActive }}\r\n        onClick={() => editor?.chain().focus().toggleStrike().run()}\r\n      >\r\n        <StrikethroughSIcon />\r\n      </IconButton>\r\n\r\n      {/* ===Code=== */}\r\n      <IconButton size=\"small\"\r\n        classes={{ root: editor?.isActive('code') ? classes.active : classes.inActive }}\r\n        onClick={() => editor?.chain().focus().toggleCode().run()}\r\n      >\r\n        <CodeIcon />\r\n      </IconButton>\r\n\r\n      {/* ===Paragraph=== */}\r\n      <IconButton size=\"small\"\r\n        classes={{ root: editor?.isActive('paragraph') ? classes.active : classes.inActive }}\r\n        onClick={() => editor?.chain().focus().setParagraph().run()}\r\n      >\r\n        <FormatTextdirectionLToRIcon />\r\n      </IconButton>\r\n \r\n      {/* ===bullet list=== */}\r\n      <IconButton size=\"small\"\r\n        classes={{ root: editor?.isActive('bulletList') ? classes.active : classes.inActive }}\r\n        onClick={() => editor?.chain().focus().toggleBulletList().run()}\r\n      >\r\n        <FormatListBulletedIcon />\r\n      </IconButton>\r\n\r\n      {/* ===order list=== */}\r\n      <IconButton size=\"small\"\r\n        classes={{ root: editor?.isActive('orderedList') ? classes.active : classes.inActive }}\r\n        onClick={() => editor?.chain().focus().toggleOrderedList().run()}\r\n      >\r\n        <FormatListNumberedIcon />\r\n      </IconButton>\r\n\r\n\r\n    </ButtonGroup>\r\n  );\r\n}\r\n\r\nconst EditorIcon = (props: any) => {\r\n  const { children, active, click } = props\r\n  const classes = useStyles()\r\n  return (\r\n    <IconButton size=\"small\"\r\n      classes={{ root: active ? classes.active : classes.inActive }}\r\n      onClick={() => click()}\r\n    >\r\n      {children}\r\n    </IconButton>\r\n  )\r\n}\r\n\r\nexport default EditorButton;\r\n","import React, { useEffect } from \"react\"\r\nimport { EditorContent, useEditor } from \"@tiptap/react\"\r\nimport StarterKit from \"@tiptap/starter-kit\"\r\nimport Link from '@tiptap/extension-link'\r\nimport EditorButton from \"./EditorButtons\"\r\n\r\nconst TipTapEditor = (props: any) => {\r\n    const { value, onChange, onBlur } = props\r\n    const editor = useEditor({\r\n      extensions: [\r\n        StarterKit,\r\n        Link,\r\n      ],\r\n      content: value,\r\n      onUpdate: ({ editor }): void => onChange(editor.getHTML()),\r\n      onBlur: ({ editor }): void => onBlur(),\r\n    })\r\n  \r\n    // useEffect(() => {\r\n    //   editor?.commands?.setContent(value)\r\n    // }, [value,editor])\r\n  \r\n    return (\r\n      <>\r\n        <EditorButton editor={editor} />\r\n        <EditorContent editor={editor} />\r\n      </>\r\n    )\r\n  }\r\n\r\nexport default TipTapEditor","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z\"\n}), 'FileCopy');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15 1H9v2h6V1zm-4 13h2V8h-2v6zm8.03-6.61l1.42-1.42c-.43-.51-.9-.99-1.41-1.41l-1.42 1.42C16.07 4.74 14.12 4 12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9 9-4.03 9-9c0-2.12-.74-4.07-1.97-5.61zM12 20c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\"\n}), 'Timer');\n\nexports.default = _default;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListItem from '../ListItem';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body1, _defineProperty({\n      minHeight: 48,\n      paddingTop: 6,\n      paddingBottom: 6,\n      boxSizing: 'border-box',\n      width: 'auto',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    }, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    })),\n    // TODO v5: remove\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: {},\n\n    /* Styles applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the root element if dense. */\n    dense: _extends({}, theme.typography.body2, {\n      minHeight: 'auto'\n    })\n  };\n};\nvar MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      ListItemClasses = props.ListItemClasses,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'menuitem' : _props$role,\n      selected = props.selected,\n      tabIndexProp = props.tabIndex,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"ListItemClasses\", \"role\", \"selected\", \"tabIndex\"]);\n\n  var tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/React.createElement(ListItem, _extends({\n    button: true,\n    role: role,\n    tabIndex: tabIndex,\n    component: component,\n    selected: selected,\n    disableGutters: disableGutters,\n    classes: _extends({\n      dense: classes.dense\n    }, ListItemClasses),\n    className: clsx(classes.root, className, selected && classes.selected, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes = {\n  /**\n   * Menu item contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * `classes` prop applied to the [`ListItem`](/api/list-item/) element.\n   */\n  ListItemClasses: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenuItem'\n})(MenuItem);","import {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  FormControl,\r\n  FormHelperText,\r\n  Grid,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  makeStyles,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Tooltip,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\r\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Autocomplete, Pagination } from '@material-ui/lab';\r\nimport { FieldArray, Formik, getIn } from 'formik';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport * as Yup from 'yup';\r\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\r\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\r\nimport Page from '../../components/Page/Page';\r\nimport TipTapEditor from '../../components/TipTapEditor/TipTapEditor';\r\nimport useConfModel from '../../hook/useConfModel';\r\nimport useService from '../../hook/useService';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport { imageUpload } from '../../utils/FirebaseUtils';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport { uploadNewImage } from '../../utils/CloudinaryUtils';\r\nimport UnitSelect from '../../components/UnitSelect/UnitSelect';\r\nimport UnitDropdown from '../../utils/MetricUnits';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  root: {\r\n    width: theme.breakpoints.values.lg,\r\n    maxWidth: '100%',\r\n    margin: '0 auto',\r\n    padding: theme.spacing(3),\r\n  },\r\n  addIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  inner: {\r\n    minWidth: 700,\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(1),\r\n    justifyContent: 'center',\r\n  },\r\n  tabCard: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  sEvenly: {\r\n    display: 'flex',\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  iconPadd: {\r\n    padding: 5,\r\n  },\r\n  jCenter: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  imageView: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  themeButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n  },\r\n  lColor: {\r\n    color: 'white',\r\n  },\r\n  deleteButton: {\r\n    width: '100%',\r\n    height: '50px',\r\n  },\r\n  //\r\n  avatarRoot: {\r\n    borderRadius: 10,\r\n    marginRight: 15,\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10),\r\n  },\r\n  textPrimary: {\r\n    fontWeight: 'bold'\r\n  },\r\n  textSecondary: {\r\n  },\r\n  ingrdientsGridMain: {\r\n    marginTop: 10\r\n  },\r\n  ingredientsAvatarRoot: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n    margin: 'auto',\r\n  },\r\n  timeText: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  htmlContentGrid: {\r\n    paddingLeft: theme.spacing(3),\r\n    paddingRight: theme.spacing(3),\r\n    paddingTop: theme.spacing(1),\r\n  },\r\n  noIngredientsText: {\r\n    marginBottom: theme.spacing(3),\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  textareaAdornedEnd: {\r\n    paddingRight: 0\r\n  },\r\n  htmlContent: {\r\n    '& ul': {\r\n      paddingLeft: '1.2rem',\r\n    },\r\n    '& p': {\r\n      textAlign: 'justify',\r\n    }\r\n  }\r\n\r\n}));\r\n\r\nconst SkinCareRecipe = () => {\r\n  const classes = useStyles();\r\n  const { Post } = useService();\r\n  const Snackbar = useSnackbar();\r\n  const ConfModel = useConfModel();\r\n  const [stateData, setStateData] = useState({ page_no: 1, page_limit: 10 });\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const [dataList, setDataList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [addEditDialog, setAddEditDialog] = useState({\r\n    isOpen: false,\r\n    title: '',\r\n    okBtnText: '',\r\n    isEdit: false,\r\n    data: {},\r\n  });\r\n  const [viewDialog, setViewDialog] = useState({\r\n    isOpen: false,\r\n    title: '',\r\n    data: {},\r\n  });\r\n\r\n  const listSkinCare = async () => {\r\n    setLoading(true);\r\n    Post('app/listSkinCareRecipe', stateData)\r\n      .then((res: any) => {\r\n        console.log('listSkinCare', res);\r\n        setLoading(false);\r\n        if (!res.error) {\r\n          setDataList(res.data);\r\n          setPageCount(res.page_count);\r\n        } else {\r\n          Snackbar.show(res.message, 'error');\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        console.log('err', err);\r\n        setLoading(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const onPageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    setStateData((prevState: any) => ({ ...prevState, page_no: value }));\r\n  };\r\n\r\n  const setElipsis = (text: any) => {\r\n    return text.length >= 25 ? `${text.substring(0, 40)}...` : text;\r\n  };\r\n\r\n  const openAddDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      isEdit: false,\r\n      title: 'Add Recpie',\r\n      okBtnText: 'Save',\r\n    }));\r\n  };\r\n\r\n  const openEditDialog = (data: any) => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      isEdit: true,\r\n      data,\r\n      title: 'Edit Recpie',\r\n      okBtnText: 'Edit',\r\n    }));\r\n  };\r\n\r\n  const openViewDialog = (data: any) => {\r\n    setViewDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      data,\r\n      title: 'View Recpie',\r\n    }));\r\n  };\r\n\r\n  const onDelete = (data: any) => {\r\n    const { openModel, setLoading, closeModel } = ConfModel;\r\n    const submitFunction = () => {\r\n      setLoading(true);\r\n      Post('app/deleteSkinCareRecipe', { id: data._id })\r\n        .then(async (res: any) => {\r\n          setLoading(false);\r\n          closeModel();\r\n          onSuccessAction();\r\n          Snackbar.show(res.message, 'success');\r\n        })\r\n        .catch((err: any) => {\r\n          setLoading(false);\r\n          Snackbar.show('Internal Server Error', 'error');\r\n        });\r\n    };\r\n    openModel(submitFunction);\r\n  };\r\n\r\n  const closeAddEditDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const closeViewDialog = () => {\r\n    setViewDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const onSuccessAction = () => {\r\n    listSkinCare();\r\n    closeAddEditDialog();\r\n  };\r\n\r\n  useEffect(() => {\r\n    listSkinCare();\r\n  }, [stateData]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Page title='Skin Care Recipe' />\r\n\r\n      {/* =======Header====== */}\r\n      <Grid alignItems='flex-end' container justify='space-between' spacing={3}>\r\n        <Grid item>\r\n          <Typography component='h1' variant='h3'>\r\n            Skin Care Recipe\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant='contained'\r\n            onClick={() => openAddDialog()}\r\n            className={classes.themeButton}\r\n            startIcon={<AddIcon />}\r\n          >\r\n            Add\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* =============Search======== */}\r\n      {/* <Grid container spacing={3}>\r\n        <Grid item>\r\n          <Paper elevation={0}>\r\n            <TextField\r\n              fullWidth\r\n              size='small'\r\n              placeholder='Name'\r\n              variant='outlined'\r\n              name='state'\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid> */}\r\n\r\n      {/* ========Table With Pagination========= */}\r\n      <Card className={classes.tabCard}>\r\n        <CardContent className={classes.content}>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align='center'>#</TableCell>\r\n                  <TableCell align='center'>Image</TableCell>\r\n                  <TableCell align='center'>Name</TableCell>\r\n                  <TableCell align='center'>Description</TableCell>\r\n                  <TableCell align='center'>Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {!loading &&\r\n                  dataList.map((data: any, index: number) => (\r\n                    <TableRow hover key={index}>\r\n                      <TableCell align='center'>\r\n                        {stateData.page_limit * (stateData.page_no - 1) + index + 1}\r\n                      </TableCell>\r\n                      <TableCell align='center'>\r\n                        <div className={classes.jCenter}>\r\n                          <Avatar variant='square' src={data?.recipe_image?.url} />\r\n                        </div>\r\n                      </TableCell>\r\n                      <TableCell align='center'>{data?.recipe_name}</TableCell>\r\n                      <TableCell align='center'>\r\n                        <Tooltip title={data?.recipe_description}>\r\n                          <span>{setElipsis(data?.recipe_description)}</span>\r\n                        </Tooltip>\r\n                      </TableCell>\r\n                      <TableCell align='center'>\r\n                        <div className={classes.sEvenly}>\r\n                          <Tooltip title='View' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openViewDialog(data)}\r\n                            >\r\n                              <CenterFocusStrongIcon color='primary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Edit' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openEditDialog(data)}\r\n                            >\r\n                              <EditIcon color='action' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Delete' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => onDelete(data)}\r\n                            >\r\n                              <DeleteIcon color='secondary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                {loading && <TableLoader />}\r\n                {!loading && dataList.length == 0 && (\r\n                  <TableNoData>No Data Found</TableNoData>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </CardContent>\r\n\r\n        <CardActions className={classes.actions}>\r\n          <Pagination\r\n            count={pageCount}\r\n            page={stateData.page_no}\r\n            onChange={onPageChange}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n\r\n      {/* ============Add Edit Dialog========== */}\r\n      <AddEditDailog\r\n        {...addEditDialog}\r\n        onClose={closeAddEditDialog}\r\n        onSuccess={onSuccessAction}\r\n      />\r\n\r\n      {/* ============View Dialog========== */}\r\n      <ViewDailog {...viewDialog} onClose={closeViewDialog} />\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface Ingredient {\r\n  id: string;\r\n  quantity: string;\r\n  quantity_unit: string;\r\n}\r\n\r\ninterface Recpie {\r\n  recipe_name: string;\r\n  recipe_description: string;\r\n  ingredients: Ingredient[];\r\n  preparation_time: string;\r\n  preparation_description: string;\r\n  recipe_image: { file: null | any; prevImage: string; isNew: null | Boolean };\r\n}\r\n\r\nconst AddEditDailog = (props: any) => {\r\n  const {\r\n    isOpen,\r\n    title,\r\n    onClose,\r\n    isEdit,\r\n    data,\r\n    onSuccess,\r\n    okBtnText = 'Ok',\r\n  } = props;\r\n  const classes = useStyles();\r\n  const formikRef = useRef<any>(null);\r\n  const imageRef = useRef<any>(null);\r\n  const Snackbar = useSnackbar();\r\n  const { Post } = useService();\r\n  const [ingredientList, setIngredientList] = useState([]);\r\n\r\n  const ingredient: Ingredient = {\r\n    id: '',\r\n    quantity: '',\r\n    quantity_unit: ''\r\n  };\r\n\r\n  const initialFormValue: Recpie = {\r\n    recipe_name: '',\r\n    recipe_description: '',\r\n    ingredients: [ingredient],\r\n    preparation_time: '',\r\n    preparation_description: '',\r\n    recipe_image: { file: null, prevImage: '', isNew: null },\r\n  };\r\n\r\n  const [initialValue, setInitialValue] = useState({ ...initialFormValue });\r\n\r\n  const listIngredients = async () => {\r\n    Post('app/listAllSkinCareIngredient', {})\r\n      .then((res: any) => {\r\n        if (!res.error) {\r\n          let ingredients = res.data.map((data: any) => {\r\n            data.id = data._id;\r\n            return data;\r\n          });\r\n          console.log('listSkinCareIngredient', ingredients);\r\n          setIngredientList(ingredients);\r\n        } else {\r\n          Snackbar.show(res.message, 'error');\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        console.log('err', err);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const onImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    e.persist();\r\n    const files = e.target.files;\r\n    if (files && files.length != 0) {\r\n      const reader = new FileReader();\r\n      const file = files[0];\r\n      reader.onloadend = () => {\r\n        formikRef.current.setFieldValue('recipe_image', {\r\n          file,\r\n          prevImage: reader.result,\r\n          isNew: true,\r\n        });\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n    // else {\r\n    //   formikRef.current.setFieldValue('recipe_image', {\r\n    //     file: null,\r\n    //     prevImage: '',\r\n    //     isNew: null,\r\n    //   });\r\n    // }\r\n  };\r\n\r\n  const onSubmit = (value: any, helper: any) => {\r\n    try {\r\n      helper.setSubmitting(true);\r\n      const render = async () => {\r\n        const { recipe_image, ...rest } = value;\r\n        const { file, isNew } = recipe_image;\r\n        const PostData = rest;\r\n\r\n        PostData.recipe_image = await uploadNewImage(recipe_image);\r\n\r\n        !isEdit && addData(PostData, helper);\r\n        isEdit && editData(PostData, helper);\r\n      };\r\n      render();\r\n    } catch (err) {\r\n      Snackbar.show('Image Upload Failed', 'error');\r\n    }\r\n  };\r\n\r\n  const addData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n    Post('app/addSkinCareRecipe', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const editData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n    Post('app/editSkinCareRecipe', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const addIngredients = (push: any) => {\r\n    push(ingredient);\r\n  };\r\n\r\n  const removeIngredients = (values: Recpie, i: number, setFieldValue: any) => {\r\n    let { ingredients } = values;\r\n    const TempIngredients = ingredients.filter(\r\n      (data: any, index: number) => index !== i\r\n    );\r\n    setFieldValue('ingredients', TempIngredients);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isEdit) {\r\n      const { recipe_image, ingredients, _id, ...rest } = data;\r\n      const EditData = { ...rest, id: _id };\r\n      const IngredientIds = ingredientList.map(({ _id }: any) => _id)\r\n      EditData.ingredients = ingredients.filter(({ _id }: any) => IngredientIds.includes(_id)).map(({ _id, ...rest }: any) => ({ id: _id, ...rest }));\r\n      EditData.recipe_image = {\r\n        file: recipe_image,\r\n        prevImage: recipe_image?.url,\r\n        isNew: false,\r\n      };\r\n      setInitialValue(EditData);\r\n    } else {\r\n      setInitialValue(initialFormValue);\r\n    }\r\n  }, [props]);\r\n\r\n  useEffect(() => {\r\n    listIngredients();\r\n  }, []);\r\n\r\n  const handleOnchangeTextEditor = (getData: any, setFieldValue: any) => {\r\n    console.log(getData);\r\n    setFieldValue('preparation_description', getData)\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      fullWidth\r\n      maxWidth='md'\r\n      aria-labelledby='dialog-title'\r\n      open={isOpen}\r\n    >\r\n      <DialogTitle id='dialog-title' onClose={onClose}>\r\n        {title}\r\n      </DialogTitle>\r\n\r\n      <Formik\r\n        innerRef={formikRef}\r\n        enableReinitialize\r\n        initialValues={initialValue}\r\n        onSubmit={onSubmit}\r\n        validationSchema={Yup.object().shape({\r\n          recipe_name: Yup.string().trim().required('Recipe name is required'),\r\n          recipe_description: Yup.string().trim().max(250, 'Must be 250 characters or less').required('Recipe Description is required'),\r\n          preparation_time: Yup.string()\r\n            .trim()\r\n            .required('Preparation time is required'),\r\n          preparation_description: Yup.string()\r\n            .required('Preparation description is required'),\r\n          ingredients: Yup.array().of(\r\n            Yup.object().shape({\r\n              id: Yup.string().trim().required('Incredients is Required'),\r\n              quantity: Yup.mixed().required('Quality is required').when('quantity_unit', {\r\n                is: 'None',\r\n                then: Yup.string(),\r\n                otherwise: Yup.number().typeError('Quantity must be in number')\r\n              }),\r\n              quantity_unit: Yup.string().trim().required('Quantity unit is required'),\r\n            })\r\n          ),\r\n          recipe_image: Yup.object({\r\n            file: Yup.mixed().required('A file is required'),\r\n          }),\r\n        })}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          setFieldValue,\r\n          handleBlur,\r\n          setFieldTouched,\r\n          submitForm,\r\n          isSubmitting,\r\n        }) => (\r\n          <>\r\n            <DialogContent dividers>\r\n              <Grid container spacing={2}>\r\n                <Grid item md={12} xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label='Recipe Name'\r\n                    name='recipe_name'\r\n                    variant='outlined'\r\n                    error={Boolean(touched.recipe_name && errors.recipe_name)}\r\n                    helperText={touched.recipe_name && errors.recipe_name}\r\n                    value={values.recipe_name}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item md={12} xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    multiline\r\n                    rowsMax={250}\r\n                    label='Recipe Description'\r\n                    name='recipe_description'\r\n                    variant='outlined'\r\n                    error={Boolean(\r\n                      touched.recipe_description && errors.recipe_description\r\n                    )}\r\n                    helperText={\r\n                      touched.recipe_description && errors.recipe_description\r\n                    }\r\n                    value={values.recipe_description}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                </Grid>\r\n\r\n\r\n                <FieldArray name=\"ingredients\" validateOnChange>\r\n                  {({ push, unshift, remove }) => (\r\n                    <>\r\n                      <Grid item md={12} xs={12}>\r\n                        {/* <FormControl\r\n                    error={Boolean(touched?.ingredients && errors?.ingredients)}\r\n                  > */}\r\n                        <Button\r\n                          fullWidth\r\n                          className={classes.themeButton}\r\n                          variant='contained'\r\n                          color='default'\r\n                          onClick={() => addIngredients(push)}\r\n                          endIcon={<ControlPointIcon />}\r\n                        >\r\n                          Add Ingredients\r\n                        </Button>\r\n\r\n                        {/* <FormHelperText>\r\n                      {touched?.ingredients && errors?.ingredients}\r\n                    </FormHelperText>\r\n                  </FormControl> */}\r\n                      </Grid>\r\n                      {values?.ingredients?.map((incValue: any, i: number) => (\r\n                        <Grid key={i} item container md={12} xs={12} direction='row' spacing={2}>\r\n                          <Grid item md={5} xs={5}>\r\n                            <Autocomplete\r\n                              fullWidth\r\n                              options={ingredientList}\r\n                              value={ingredientList.find(\r\n                                (data: any) => data._id == incValue.id\r\n                              )}\r\n                              getOptionLabel={(option: any) => option.name}\r\n                              getOptionSelected={(option) =>\r\n                                option._id == incValue.id\r\n                              }\r\n                              onChange={(event: any, newValue: any) => {\r\n                                setFieldValue(\r\n                                  `ingredients[${i}].id`,\r\n                                  newValue?._id || ''\r\n                                );\r\n                              }}\r\n                              onBlur={handleBlur}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  label='Ingredients'\r\n                                  variant='outlined'\r\n                                  error={Boolean(\r\n                                    touched?.ingredients &&\r\n                                    touched?.ingredients[i]?.id &&\r\n                                    errors?.ingredients &&\r\n                                    (errors?.ingredients[i] as Ingredient)?.id\r\n                                  )}\r\n                                  helperText={\r\n                                    touched?.ingredients &&\r\n                                    touched?.ingredients[i]?.id &&\r\n                                    errors?.ingredients &&\r\n                                    (errors?.ingredients[i] as Ingredient)?.id\r\n                                  }\r\n                                  inputProps={{\r\n                                    ...params.inputProps,\r\n                                  }}\r\n\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Grid>\r\n\r\n                          <Grid item md={6} xs={6}>\r\n                            <TextField\r\n                              fullWidth\r\n                              label='Quantity'\r\n                              name={`ingredients[${i}].quantity`}\r\n                              variant='outlined'\r\n                              error={Boolean(\r\n                                touched?.ingredients && touched?.ingredients[i]?.quantity && errors?.ingredients && (errors?.ingredients[i] as Ingredient)?.quantity ||\r\n                                touched?.ingredients && touched?.ingredients[i]?.quantity_unit && errors?.ingredients && (errors?.ingredients[i] as Ingredient)?.quantity_unit\r\n                              )}\r\n                              helperText={\r\n                                touched?.ingredients && touched?.ingredients[i]?.quantity && errors?.ingredients && (errors?.ingredients[i] as Ingredient)?.quantity ||\r\n                                touched?.ingredients && touched?.ingredients[i]?.quantity_unit && errors?.ingredients && (errors?.ingredients[i] as Ingredient)?.quantity_unit\r\n                              }\r\n                              value={incValue.quantity}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                              InputProps={{\r\n                                classes: {\r\n                                  adornedEnd: classes.textareaAdornedEnd\r\n                                },\r\n                                endAdornment: <UnitSelect id='quantity_unit' option={UnitDropdown} name={`ingredients[${i}].quantity_unit`} value={incValue.quantity_unit} onChange={handleChange} onBlur={handleBlur} />\r\n                              }}\r\n                            />\r\n                          </Grid>\r\n                          {values?.ingredients?.length > 1 && (\r\n                            <Grid item md={1} xs={1}>\r\n                              <Button\r\n                                fullWidth\r\n                                className={classes.deleteButton}\r\n                                variant='contained'\r\n                                color='secondary'\r\n                                onClick={() => remove(i)}\r\n                              >\r\n                                <DeleteIcon />\r\n                              </Button>\r\n                            </Grid>\r\n                          )}\r\n                        </Grid>\r\n                      ))}\r\n                    </>\r\n                  )}\r\n                </FieldArray>\r\n\r\n                <Grid item md={12} xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    multiline\r\n                    label='Preparation Time'\r\n                    name='preparation_time'\r\n                    variant='outlined'\r\n                    error={Boolean(\r\n                      touched.preparation_time && errors.preparation_time\r\n                    )}\r\n                    helperText={\r\n                      touched.preparation_time && errors.preparation_time\r\n                    }\r\n                    value={values.preparation_time}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item md={12} xs={12}>\r\n                  <FormControl\r\n                    fullWidth\r\n                    error={Boolean(\r\n                      touched?.preparation_description &&\r\n                      errors?.preparation_description\r\n                    )}\r\n                  >\r\n                    <TipTapEditor\r\n                      name='preparation_description'\r\n                      value={values.preparation_description}\r\n                      onChange={(value: any) =>\r\n                        setFieldValue('preparation_description', value)\r\n                      }\r\n                      onBlur={() =>\r\n                        setFieldTouched('preparation_description', true, true)\r\n                      }\r\n                    />\r\n\r\n                    <FormHelperText>\r\n                      {touched?.preparation_description &&\r\n                        errors?.preparation_description}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item md={12} xs={12}>\r\n                  <input\r\n                    name='recipe_image'\r\n                    ref={imageRef}\r\n                    type='file'\r\n                    accept='.jpg,.png,jpeg'\r\n                    onChange={onImageChange}\r\n                    onBlur={handleBlur}\r\n                    hidden\r\n                  />\r\n                  <Button\r\n                    fullWidth\r\n                    className={classes.themeButton}\r\n                    variant='contained'\r\n                    color='default'\r\n                    onClick={() => imageRef.current.click()}\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Recipe Image\r\n                  </Button>\r\n                  <FormControl\r\n                    error={Boolean(\r\n                      touched?.recipe_image?.file && errors?.recipe_image?.file\r\n                    )}\r\n                  >\r\n                    <FormHelperText>\r\n                      {touched?.recipe_image?.file &&\r\n                        errors?.recipe_image?.file}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item md={12} xs={12}>\r\n                  {values.recipe_image?.prevImage && (\r\n                    <img\r\n                      className={classes.imageView}\r\n                      src={values.recipe_image?.prevImage}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n              <Button onClick={onClose} variant='outlined' color='secondary'>\r\n                Cancel\r\n              </Button>\r\n\r\n              <Button\r\n                className={classes.themeButton}\r\n                onClick={() => submitForm()}\r\n                disabled={isSubmitting}\r\n                variant='outlined'\r\n              >\r\n                {isSubmitting ? (\r\n                  <CircularProgress size={24} className={classes.lColor} />\r\n                ) : (\r\n                  okBtnText\r\n                )}\r\n              </Button>\r\n            </DialogActions>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst ViewDailog = (props: any) => {\r\n  const { isOpen, title, onClose, data } = props;\r\n  const classes = useStyles();\r\n  const [formValue, setFormValue] = useState(data);\r\n\r\n  useEffect(() => {\r\n    setFormValue(data);\r\n  }, [props]);\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      fullWidth\r\n      maxWidth='sm'\r\n      aria-labelledby='dialog-view-title'\r\n      open={isOpen}\r\n    >\r\n      <DialogTitle id='dialog-view-title' onClose={onClose}>\r\n        {title}\r\n      </DialogTitle>\r\n\r\n      <DialogContent dividers>\r\n        <SkinCareRecipeViewContent {...props} />\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={onClose} variant='outlined' color='secondary'>\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport const SkinCareRecipeViewContent = (props: any) => {\r\n  const { isOpen, title, onClose, data } = props;\r\n  const classes = useStyles();\r\n  const [formValue, setFormValue] = useState(data);\r\n\r\n  useEffect(() => {\r\n    setFormValue(data);\r\n  }, [props]);\r\n  return (\r\n    <>\r\n      <List>\r\n        <ListItem disableGutters>\r\n          <ListItemAvatar>\r\n            <Avatar className={classes.avatarRoot} src={formValue?.recipe_image?.url} />\r\n          </ListItemAvatar>\r\n          <ListItemText\r\n            classes={{\r\n              primary: classes.textPrimary,\r\n              secondary: classes.textSecondary\r\n            }}\r\n            primary={formValue?.recipe_name}\r\n            secondary={formValue?.recipe_description}\r\n          />\r\n        </ListItem>\r\n      </List>\r\n\r\n      <Typography variant='h6' align='left' style={{ color: '#41A58D' }}>INGREDIENTS</Typography>\r\n\r\n      <Grid container spacing={2} className={classes.ingrdientsGridMain} justify='center'>\r\n        {formValue?.ingredients?.map((value: any, index: any) =>\r\n          <Grid key={index} item xs={4} md={3}>\r\n            <Avatar className={classes.ingredientsAvatarRoot} src={value?.image?.url} />\r\n            <Typography variant='h6' align='center'>{value?.name}</Typography>\r\n            <Typography variant='subtitle2' align='center'>{value?.quantity} {value?.quantity_unit !== 'None' && value?.quantity_unit}</Typography>\r\n          </Grid>\r\n        )}\r\n        {formValue?.ingredients?.length == 0 &&\r\n          <Grid item xs={12} md={12} className={classes.noIngredientsText}>\r\n            <div>No Ingredients</div>\r\n          </Grid>\r\n        }\r\n      </Grid>\r\n\r\n      <Typography variant='h6' align='left' style={{ color: '#41A58D' }}>PREPARATION</Typography>\r\n      <Typography variant='body2' align='center' className={classes.timeText}>\r\n        <TimerIcon fontSize='inherit' />\r\n        <span>{formValue?.preparation_time}</span>\r\n      </Typography>\r\n\r\n      <Grid container >\r\n        <Grid item xs={12} md={12} className={classes.htmlContentGrid}>\r\n          <div className={classes.htmlContent} dangerouslySetInnerHTML={{ __html: formValue?.preparation_description }} />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SkinCareRecipe;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport {\r\n  makeStyles,\r\n  Avatar,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  InputLabel,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  FormControl,\r\n  FormHelperText,\r\n  Grid,\r\n  IconButton,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Tooltip,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  CircularProgress,\r\n  Select,\r\n  Tab,\r\n} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Page from '../../components/Page/Page';\r\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Pagination, TabContext, TabList, TabPanel } from '@material-ui/lab';\r\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\r\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport useService from '../../hook/useService';\r\nimport useConfModel from '../../hook/useConfModel';\r\nimport { SkinCareRecipeViewContent } from '../SkinCareRecipe/SkinCareRecipe';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport getDropValues, { SkinTypeDrop, CurrentClimateDrop, SkinIrregularDrop, SkinTextureDrop, getSubSkinIrregular, NoOption } from '../../utils/PlanDropdowns';\r\nimport { cloneDeep } from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  root: {\r\n    width: theme.breakpoints.values.lg,\r\n    maxWidth: '100%',\r\n    margin: '0 auto',\r\n    padding: theme.spacing(3),\r\n  },\r\n  themeButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n  },\r\n  dayPaper: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: theme.palette.green.main,\r\n    color: 'white',\r\n  },\r\n  lColor: {\r\n    color: 'white',\r\n  },\r\n  tabCard: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  mTop: {\r\n    marginTop: theme.spacing(1.5),\r\n  },\r\n  jCenter: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  sEvenly: {\r\n    display: 'flex',\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  sBetween: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  iconPadd: {\r\n    padding: 5,\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(1),\r\n    justifyContent: 'center',\r\n  },\r\n  ingredientsAvatarStyle: {\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10),\r\n    margin: 'auto',\r\n    marginTop: '20px',\r\n  },\r\n  //\r\n  tabRoot: {\r\n    minWidth: 72,\r\n  },\r\n  tabIndicator: {\r\n    backgroundColor: theme.palette.green.main,\r\n  },\r\n  tabTextColorInherit: {\r\n    backgroundColor: theme.palette.green.main,\r\n    color: 'white',\r\n    border: '1px solid white'\r\n  },\r\n  tabPanelRoot: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n    width: '100%'\r\n  },\r\n  listItemRoot: {\r\n    backgroundColor: '#7ac0af2b',\r\n    margin: '10px 0px'\r\n  },\r\n  noListItemRoot: {\r\n    backgroundColor: '#f500571c',\r\n    margin: '10px 0px'\r\n  },\r\n  paperRoot: {\r\n    display: 'flex'\r\n  },\r\n}));\r\n\r\nconst SkinCarePlan = () => {\r\n  const classes = useStyles();\r\n  const { Post } = useService();\r\n  const Snackbar = useSnackbar();\r\n  const ConfModel = useConfModel();\r\n  const [isLoading, setIsLoading] = React.useState(true);\r\n  const [stateData, setStateData] = React.useState({\r\n    page_no: 1,\r\n    page_limit: 10,\r\n  });\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [tableData, setTableData] = React.useState([]);\r\n\r\n  const [addEditDialog, setAddEditDialog] = React.useState({\r\n    isOpen: false,\r\n    isDuplicate : false,\r\n    title: '',\r\n    okBtnText: '',\r\n    isEdit: false,\r\n    data: {},\r\n  });\r\n\r\n  const [viewDialog, setViewDialog] = useState({\r\n    isOpen: false,\r\n    title: '',\r\n    data: {},\r\n  });\r\n\r\n  const listSkinCarePlan = () => {\r\n    setIsLoading(true);\r\n    Post('app/listSkinCarePlan', stateData)\r\n      .then((res: any) => {\r\n        setIsLoading(false);\r\n        if (!res.error) {\r\n          setPageCount(res.page_count);\r\n          setTableData(res.data);\r\n        } else {\r\n          Snackbar.show(res.message, 'error');\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        setIsLoading(false);\r\n        Snackbar.show(error.message, 'error');\r\n      });\r\n  };\r\n\r\n  const openAddDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      title: 'Add Skin Care Plan',\r\n      isEdit: false,\r\n      okBtnText: 'Save',\r\n    }));\r\n  };\r\n\r\n  const openEditDialog = (data: any) => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      isEdit: true,\r\n      data,\r\n      title: 'Edit Skin care Plan',\r\n      okBtnText: 'Edit',\r\n    }));\r\n  };\r\n\r\n  const openViewDialog = (data: any) => {\r\n    setViewDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      data,\r\n      title: 'View Skincare Plan',\r\n    }));\r\n  };\r\n\r\n  const openDuplicateDialog = (data: any) => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isDuplicate : true,\r\n      isOpen: true,\r\n      isEdit: false,\r\n      data,\r\n      title: 'Duplicate Skincare Plan',\r\n      okBtnText: 'Duplicate',\r\n    }));\r\n  };\r\n\r\n  const onDelete = (data: any) => {\r\n    const { openModel, setLoading, closeModel } = ConfModel;\r\n    const submitFunction = () => {\r\n      setLoading(true);\r\n      Post('app/deleteSkinCarePlan', { id: data._id })\r\n        .then(async (res: any) => {\r\n          setLoading(false);\r\n          closeModel();\r\n          onSuccessAction();\r\n          Snackbar.show(res.message, 'success');\r\n        })\r\n        .catch((err: any) => {\r\n          setLoading(false);\r\n          Snackbar.show('Internal Server Error', 'error');\r\n        });\r\n    };\r\n    openModel(submitFunction);\r\n  };\r\n\r\n  const onSuccessAction = () => {\r\n    listSkinCarePlan();\r\n    closeAddEditDialog();\r\n  };\r\n\r\n  const closeAddEditDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({ ...prevState, isOpen: false, isDuplicate: false }));\r\n  };\r\n\r\n  const closeViewDialog = () => {\r\n    setViewDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  // const closeDuplicateDialog = () => {\r\n  //   setViewDialog((prevState: any) => ({ ...prevState, isOpen: false, isDuplicate : false }));\r\n  // };\r\n\r\n  const onPageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    setStateData((prevState: any) => ({ ...prevState, page_no: value }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    listSkinCarePlan();\r\n  }, [stateData]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Page title='Skin Care Plan' />\r\n\r\n      {/* =======Header====== */}\r\n      <Grid alignItems='flex-end' container justify='space-between' spacing={3}>\r\n        <Grid item>\r\n          <Typography component='h1' variant='h3'>\r\n            Skin Care Plan\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant='contained'\r\n            onClick={() => openAddDialog()}\r\n            className={classes.themeButton}\r\n            startIcon={<AddIcon />}\r\n          >\r\n            Add\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* =============Search======== */}\r\n      {/* <Grid container spacing={3}>\r\n        <Grid item>\r\n          <Paper elevation={0}>\r\n            <TextField\r\n              fullWidth\r\n              size='small'\r\n              placeholder='Name'\r\n              variant='outlined'\r\n              name='state'\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid> */}\r\n\r\n      {/* ========Table With Pagination========= */}\r\n      <Card className={classes.tabCard}>\r\n        <CardContent className={classes.content}>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align='center'>#</TableCell>\r\n                  <TableCell align='center'>Skin Type</TableCell>\r\n                  <TableCell align='center'>Current Climate</TableCell>\r\n                  <TableCell align='center'>Skin Irregularities</TableCell>\r\n                  <TableCell align='center'>Sub Skin Irregularities</TableCell>\r\n                  <TableCell align='center'>Skin Texture </TableCell>\r\n                  <TableCell align='center'>Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {!isLoading &&\r\n                  tableData.map((data: any, index: any) => {\r\n                    return (\r\n                      <TableRow key={index} hover>\r\n                        <TableCell align='center'>{stateData.page_limit * (stateData.page_no - 1) + index + 1}</TableCell>\r\n                        <TableCell align='center'>{getDropValues(SkinTypeDrop, data?.skin_type)}</TableCell>\r\n                        <TableCell align='center'>{getDropValues(CurrentClimateDrop, data?.current_climate)}</TableCell>\r\n                        <TableCell align='center'>{getDropValues(SkinIrregularDrop, data?.skin_irregular)}</TableCell>\r\n                        <TableCell align='center'>{getDropValues(getSubSkinIrregular(data?.skin_irregular), data?.skin_irregular_sub)}</TableCell>\r\n                        <TableCell align='center'>{getDropValues(SkinTextureDrop, data?.skin_texture)}</TableCell>\r\n\r\n                        <TableCell align='center'>\r\n                          <div className={classes.sEvenly}>\r\n                            <Tooltip title='View' arrow>\r\n                              <IconButton\r\n                                className={classes.iconPadd}\r\n                                onClick={() => openViewDialog(data)}\r\n                              >\r\n                                <CenterFocusStrongIcon color='primary' />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip title='Edit' arrow>\r\n                              <IconButton\r\n                                className={classes.iconPadd}\r\n                                onClick={() => openEditDialog(data)}\r\n                              >\r\n                                <EditIcon color='action' />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip title='Duplicate' arrow>\r\n                              <IconButton\r\n                                className={classes.iconPadd}\r\n                                onClick={() => openDuplicateDialog(data)}\r\n                              >\r\n                                <FileCopyIcon color='action' />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip title='Delete' arrow>\r\n                              <IconButton\r\n                                className={classes.iconPadd}\r\n                                onClick={() => onDelete(data)}\r\n                              >\r\n                                <DeleteIcon color='secondary' />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                          </div>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                {isLoading && <TableLoader />}\r\n                {!isLoading && tableData.length == 0 && (\r\n                  <TableNoData>No Data Found</TableNoData>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </CardContent>\r\n\r\n        <CardActions className={classes.actions}>\r\n          <Pagination\r\n            count={pageCount}\r\n            page={stateData.page_no}\r\n            onChange={onPageChange}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n\r\n      {/* ==========Add & Edit Dialoge======== */}\r\n\r\n      <AddEditDialog\r\n        {...addEditDialog}\r\n        onClose={closeAddEditDialog}\r\n        onSuccess={onSuccessAction}\r\n      />\r\n      {viewDialog.isOpen && <ViewSkincarePlan {...viewDialog} onClose={closeViewDialog} />}\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface Recipe {\r\n  id: string;\r\n  day: number;\r\n}\r\n\r\ninterface RecipePlan {\r\n  skin_type: string;\r\n  current_climate: string;\r\n  skin_irregular: string;\r\n  skin_irregular_sub: string;\r\n  skin_texture: string;\r\n  recipes: Recipe[];\r\n}\r\n\r\nconst AddEditDialog = (props: any) => {\r\n  const {\r\n    isEdit,\r\n    isDuplicate,\r\n    isOpen,\r\n    okBtnText = 'OK',\r\n    onClose,\r\n    data,\r\n    title,\r\n    onSuccess,\r\n  } = props;\r\n  console.log(isDuplicate)\r\n  const classes = useStyles();\r\n  const { Post } = useService();\r\n  const Snackbar = useSnackbar();\r\n  const formikRef = useRef<any>(null);\r\n  const [skinCareRecipeList, setSkinCareRecipeList] = React.useState<any>([]);\r\n  const initialFormValues: RecipePlan = {\r\n    skin_type: '',\r\n    current_climate: '',\r\n    skin_irregular: '',\r\n    skin_irregular_sub: '',\r\n    skin_texture: '',\r\n    recipes: Array(14).fill(null).map((d, i) => ({ day: i + 1, id: '' })),\r\n  };\r\n  const [initialValue, setInitialValue] = React.useState({\r\n    ...initialFormValues,\r\n  });\r\n\r\n  const listSkinCareRecipeList = () => {\r\n    Post('app/listAllSkinCareRecipe', {})\r\n      .then((response: any) => {\r\n        if (!response.error) {\r\n          setSkinCareRecipeList(response?.data);\r\n        } else {\r\n          Snackbar.show(response.message, 'error');\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        Snackbar.show(error.message, 'error');\r\n      });\r\n  };\r\n\r\n  const onSubmit = (value: any, helper: any) => {\r\n    helper.setSubmitting(false);\r\n    !isEdit || isDuplicate ? addData(value, helper) : ''\r\n    isEdit && editData(value, helper);\r\n\r\n  };\r\n\r\n  const addData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    console.log(data)\r\n    setSubmitting(true);\r\n    Post('app/addSkinCarePlan', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const editData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n    Post('app/editSkinCarePlan', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    if (isEdit || isDuplicate) {\r\n      const { recipes, _id, ...rest } = cloneDeep(data);\r\n      const editData = { ...rest, id: _id };\r\n      editData.recipes = recipes.map((data: any) => {\r\n        data.id = data.recipe._id;\r\n        return data;\r\n      });\r\n      setInitialValue(editData);\r\n    } else {\r\n      setInitialValue(initialFormValues);\r\n    }\r\n  }, [props]);\r\n\r\n  useEffect(() => {\r\n    listSkinCareRecipeList();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={isOpen}\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        fullWidth\r\n        maxWidth='md'\r\n        aria-labelledby='dialog-title'\r\n      >\r\n        <DialogTitle id='dialog-title' onClose={onClose}>\r\n          {title}\r\n        </DialogTitle>\r\n        <Formik\r\n          innerRef={formikRef}\r\n          enableReinitialize\r\n          initialValues={initialValue}\r\n          onSubmit={onSubmit}\r\n          validationSchema={Yup.object().shape({\r\n            skin_type: Yup.string().trim().required('Skin Type is required'),\r\n            current_climate: Yup.string().trim().required('Current Climate is required'),\r\n            skin_irregular: Yup.string().trim().required('Skin Irregularites is required'),\r\n            skin_irregular_sub: Yup.string().trim().required('Sub Skin Irregularites is required'),\r\n            skin_texture: Yup.string().trim().required('Skin Texture is required'),\r\n            recipes: Yup.array().of(\r\n              Yup.object().shape({\r\n                id: Yup.string().trim().required('Recipe is Required'),\r\n                day: Yup.string().trim().required('Day is Required'),\r\n              })\r\n            ),\r\n          })}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            setFieldValue,\r\n            submitForm,\r\n            isSubmitting,\r\n          }) => (\r\n            <>\r\n              <DialogContent dividers>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={4}>\r\n                    <Autocomplete\r\n                      options={SkinTypeDrop}\r\n                      value={SkinTypeDrop.find((data: any) => data.id == values.skin_type)}\r\n                      getOptionLabel={(option: any) => option.name}\r\n                      getOptionSelected={(option) => option.id == values.skin_type}\r\n                      onChange={(event: any, newValue: any) => {\r\n                        setFieldValue('skin_type', newValue?.id || '');\r\n                      }}\r\n                      onBlur={handleBlur}\r\n                      renderInput={(params: any) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label='Skin Type'\r\n                          variant='outlined'\r\n                          error={Boolean(touched.skin_type && errors.skin_type)}\r\n                          helperText={touched.skin_type && errors.skin_type}\r\n                          inputProps={{\r\n                            ...params.inputProps,\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={4}>\r\n                    <Autocomplete\r\n                      options={CurrentClimateDrop}\r\n                      value={CurrentClimateDrop.find((data: any) => data.id == values.current_climate)}\r\n                      getOptionLabel={(option: any) => option.name}\r\n                      getOptionSelected={(option) => option.id == values.current_climate}\r\n                      onChange={(event: any, newValue: any) => {\r\n                        setFieldValue('current_climate', newValue?.id || '');\r\n                      }}\r\n                      onBlur={handleBlur}\r\n                      renderInput={(params: any) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label='Current Climate'\r\n                          variant='outlined'\r\n                          error={Boolean(touched.current_climate && errors.current_climate)}\r\n                          helperText={touched.current_climate && errors.current_climate}\r\n                          inputProps={{\r\n                            ...params.inputProps,\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={4}>\r\n                    <Autocomplete\r\n                      options={SkinTextureDrop}\r\n                      value={SkinTextureDrop.find((data: any) => data.id == values.skin_texture)}\r\n                      getOptionLabel={(option: any) => option.name}\r\n                      getOptionSelected={(option) => option.id == values.skin_texture}\r\n                      onChange={(event: any, newValue: any) => {\r\n                        setFieldValue('skin_texture', newValue?.id || '');\r\n                      }}\r\n                      onBlur={handleBlur}\r\n                      renderInput={(params: any) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label='Skin Texture'\r\n                          variant='outlined'\r\n                          error={Boolean(touched.skin_texture && errors.skin_texture)}\r\n                          helperText={touched.skin_texture && errors.skin_texture}\r\n                          inputProps={{\r\n                            ...params.inputProps,\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <Autocomplete\r\n                      options={SkinIrregularDrop}\r\n                      value={SkinIrregularDrop.find((data: any) => data.id == values.skin_irregular)}\r\n                      getOptionLabel={(option: any) => option.name}\r\n                      getOptionSelected={(option) => option.id == values.skin_irregular}\r\n                      onChange={(event: any, newValue: any) => {\r\n                        setFieldValue('skin_irregular', newValue?.id || '');\r\n                        setFieldValue('skin_irregular_sub', '');\r\n                      }}\r\n                      onBlur={handleBlur}\r\n                      renderInput={(params: any) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label='Skin Irregularites'\r\n                          variant='outlined'\r\n                          error={Boolean(touched.skin_irregular && errors.skin_irregular)}\r\n                          helperText={touched.skin_irregular && errors.skin_irregular}\r\n                          inputProps={{\r\n                            ...params.inputProps,\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <Autocomplete\r\n                      options={getSubSkinIrregular(values.skin_irregular)}\r\n                      value={getSubSkinIrregular(values.skin_irregular).find((data: any) => data.id == values.skin_irregular_sub) || NoOption}\r\n                      getOptionLabel={(option: any) => option.name}\r\n                      getOptionSelected={(option) => option.id == values.skin_irregular_sub}\r\n                      onChange={(event: any, newValue: any) => {\r\n                        setFieldValue('skin_irregular_sub', newValue?.id || '');\r\n                      }}\r\n                      onBlur={handleBlur}\r\n                      renderInput={(params: any) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label='Sub Skin Irregularites'\r\n                          variant='outlined'\r\n                          error={Boolean(touched.skin_irregular_sub && errors.skin_irregular_sub)}\r\n                          helperText={touched.skin_irregular_sub && errors.skin_irregular_sub}\r\n                          inputProps={{\r\n                            ...params.inputProps,\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n\r\n                  {values.recipes.map((recData: any, i: any) => {\r\n                    return (\r\n                      <>\r\n                        <Grid key={i} md={1} item xs={2}>\r\n                          <Paper\r\n                            elevation={0}\r\n                            component='div'\r\n                            className={classes.dayPaper}\r\n                          >\r\n                            <Typography\r\n                              color='inherit'\r\n                              align={'center'}\r\n                            >\r\n                              {`Day - ${recData.day}`}\r\n                            </Typography>\r\n                          </Paper>\r\n                        </Grid>\r\n                        <Grid item md={11} xs={10}>\r\n                          <Autocomplete\r\n                            options={skinCareRecipeList}\r\n                            value={skinCareRecipeList.find(\r\n                              (data: any) => data._id == recData.id\r\n                            )}\r\n                            getOptionLabel={(option: any) => option.recipe_name}\r\n                            getOptionSelected={(option) =>\r\n                              option._id == recData.id\r\n                            }\r\n                            onChange={(event: any, newValue: any) => {\r\n                              setFieldValue(`recipes[${i}].id`, newValue?._id || '');\r\n                            }}\r\n                            onBlur={handleBlur}\r\n                            renderInput={(params: any) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label='Recipe'\r\n                                variant='outlined'\r\n                                error={Boolean(\r\n                                  touched?.recipes &&\r\n                                  touched?.recipes[i]?.id &&\r\n                                  errors?.recipes &&\r\n                                  (errors?.recipes[i] as any)?.id\r\n                                )}\r\n                                helperText={\r\n                                  touched?.recipes &&\r\n                                  touched?.recipes[i]?.id &&\r\n                                  errors?.recipes &&\r\n                                  (errors?.recipes[i] as any)?.id\r\n                                }\r\n                                inputProps={{\r\n                                  ...params.inputProps,\r\n                                }}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                      </>\r\n                    );\r\n                  })}\r\n                </Grid>\r\n              </DialogContent>\r\n\r\n              <DialogActions>\r\n                <Button onClick={onClose} variant='outlined' color='secondary'>\r\n                  Cancel\r\n                </Button>\r\n\r\n                <Button\r\n                  className={classes.themeButton}\r\n                  onClick={() => submitForm()}\r\n                  disabled={isSubmitting}\r\n                  variant='outlined'\r\n                >\r\n                  {isSubmitting ? (\r\n                    <CircularProgress size={24} className={classes.lColor} />\r\n                  ) : (\r\n                    okBtnText\r\n                  )}\r\n                </Button>\r\n              </DialogActions>\r\n            </>\r\n          )}\r\n        </Formik>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ViewSkincarePlan = (props: any) => {\r\n  const { isOpen, title, onClose, data } = props;\r\n  const classes = useStyles();\r\n  const [formValue, setFormValue] = useState(data);\r\n  const [value, setValue] = React.useState('1');\r\n\r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: string) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFormValue(data);\r\n  }, [props]);\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      fullWidth\r\n      maxWidth='md'\r\n      aria-labelledby='dialog-view-title'\r\n      open={isOpen}\r\n    >\r\n      <DialogTitle id='dialog-view-title' onClose={onClose}>\r\n        {title}\r\n      </DialogTitle>\r\n\r\n      <DialogContent dividers>\r\n        <Paper >\r\n          <Table>\r\n            <TableBody>\r\n              <TableRow >\r\n                <TableCell>Skin Type</TableCell>\r\n                <TableCell><strong>{getDropValues(SkinTypeDrop, formValue?.skin_type)}</strong></TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Current Climate</TableCell>\r\n                <TableCell><strong>{getDropValues(CurrentClimateDrop, data?.current_climate)}</strong></TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Skin Irregularities</TableCell>\r\n                <TableCell><strong>{getDropValues(SkinIrregularDrop, data?.skin_irregular)}</strong></TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Sub Skin Irregularities</TableCell>\r\n                <TableCell><strong>{getDropValues(getSubSkinIrregular(data?.skin_irregular), data?.skin_irregular_sub)}</strong></TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Skin Texture</TableCell>\r\n                <TableCell><strong>{getDropValues(SkinTextureDrop, data?.skin_texture)}</strong></TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n\r\n        <Paper className={classes.paperRoot}>\r\n          <TabContext value={value || ''}>\r\n\r\n            <TabList\r\n              classes={{\r\n                indicator: classes.tabIndicator\r\n              }}\r\n              onChange={handleChange}\r\n              orientation=\"vertical\"\r\n              variant=\"standard\"\r\n            >\r\n              {formValue?.recipes?.map((item: any, index: number) =>\r\n                <Tab\r\n                  key={index}\r\n                  classes={{ root: classes.tabRoot, textColorInherit: classes.tabTextColorInherit }}\r\n                  label={`Day - ${item.day}`}\r\n                  value={item.day.toString()} />\r\n              )}\r\n            </TabList>\r\n\r\n            {formValue?.recipes?.map((item: any, index: any) =>\r\n              <TabPanel key={index} className={classes.tabPanelRoot} value={item.day.toString()}>\r\n                <SkinCareRecipeViewContent data={item.recipe} />\r\n              </TabPanel>)}\r\n          </TabContext>\r\n        </Paper>\r\n\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={onClose} variant='outlined' color='secondary'>\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SkinCarePlan;\r\n"],"sourceRoot":""}