{"version":3,"sources":["../node_modules/@material-ui/icons/ControlPoint.js","components/TipTapEditor/EditorButtons.tsx","components/TipTapEditor/TipTapEditor.tsx","pages/WorkoutExercise/WorkoutExercise.tsx"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","useStyles","makeStyles","theme","inActive","borderRadius","color","palette","green","main","border","active","white","backgroundColor","dark","btnGroup","display","EditorButton","props","editor","classes","ButtonGroup","disableElevation","fullWidth","className","variant","size","IconButton","root","isActive","onClick","chain","focus","toggleBold","run","toggleItalic","toggleStrike","toggleCode","setParagraph","toggleBulletList","toggleOrderedList","TipTapEditor","onChange","onBlur","useEditor","extensions","StarterKit","Link","content","onUpdate","getHTML","width","breakpoints","values","lg","maxWidth","margin","padding","spacing","addIcon","marginRight","inner","minWidth","actions","justifyContent","tabCard","marginTop","sEvenly","iconPadd","jCenter","imageView","height","themeButton","lColor","workouttermsavatar","deleteButton","avatarStyles","ingredientsAvatarStyle","marginTopStyle","adjustmentTop","avatarRoot","textPrimary","fontWeight","textSecondary","ingrdientsGridMain","ingredientsAvatarRoot","htmlContentGrid","paddingLeft","paddingRight","paddingTop","noIngredientsText","marginBottom","htmlContent","textAlign","AddEditDailog","isOpen","title","onClose","isEdit","data","onSuccess","okBtnText","formikRef","useRef","imageRef","Snackbar","useSnackbar","Post","useService","useState","equipmentList","setEquipmentList","workoutTerms","name","image","file","prevImage","isNew","description","initialFormValue","workout_name","workout_image","workout_description","workout_type","workout_terms","required_equipments","id","how_to_do","initialValue","setInitialValue","listIngredients","a","then","res","error","show","message","getequipmentList","map","_id","catch","err","onImageChange","e","persist","files","target","length","reader","FileReader","onloadend","current","setFieldValue","result","readAsDataURL","addData","setSubmitting","resetForm","console","log","editData","handleEquipmentChange","event","newValue","sampleDatas","datas","useEffect","rest","EquipmentIds","filter","includes","item","url","disableBackdropClick","disableEscapeKeyDown","aria-labelledby","open","innerRef","enableReinitialize","initialValues","onSubmit","helper","postData","TermPromiseArray","Promise","all","uploadNewImage","ImgRes","TermRes","render","validationSchema","Yup","shape","trim","required","max","of","errors","touched","handleChange","handleBlur","setFieldTouched","submitForm","isSubmitting","dividers","container","md","xs","label","Boolean","helperText","multiline","validateOnChange","push","remove","addIngredients","endIcon","workoutValues","index","WorkoutTerms","multiple","options","getOptionLabel","option","renderInput","params","inputProps","ref","type","accept","hidden","click","startIcon","src","disabled","FormikContext","useFormikContext","imgRef","FieldName","FieldValue","getIn","FieldError","FieldTouched","direction","Terms","i","removeTerm","ViewDailog","formValue","setFormValue","alt","align","justify","substring","style","dangerouslySetInnerHTML","__html","WorkoutExercise","ConfModel","useConfModel","page_no","page_limit","stateData","setStateData","pageCount","setPageCount","dataList","setDataList","loading","setLoading","addEditDialog","setAddEditDialog","viewDialog","setViewDialog","listWorkOutExercise","page_count","closeAddEditDialog","prevState","onSuccessAction","alignItems","component","text","hover","arrow","openViewDialog","openEditDialog","openModel","closeModel","onDelete","count","page"],"mappings":"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","file":"static/js/16.6bcac20f.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.49 2 2 6.49 2 12s4.49 10 10 10 10-4.49 10-10S17.51 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'ControlPoint');\n\nexports.default = _default;","import React from 'react';\r\nimport { ButtonGroup, IconButton } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\r\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\r\nimport StrikethroughSIcon from '@material-ui/icons/StrikethroughS';\r\nimport CodeIcon from '@material-ui/icons/Code';//code\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';//highlite\r\nimport LinkIcon from '@material-ui/icons/Link';//link\r\nimport FormatTextdirectionLToRIcon from '@material-ui/icons/FormatTextdirectionLToR';//pragraph\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';//bullet list\r\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';// ordered list\r\nimport FormatQuoteIcon from '@material-ui/icons/FormatQuote'; //quote\r\nimport FormatClearIcon from '@material-ui/icons/FormatClear'; //clear text\r\n\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  inActive: {\r\n    borderRadius: 'unset',\r\n    color: theme.palette.green.main,\r\n    border: `1px solid ${theme.palette.green.main}`,\r\n  },\r\n  active: {\r\n    borderRadius: 'unset',\r\n    color: theme.palette.white,\r\n    border: `1px solid ${theme.palette.green.main}`,\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n  },\r\n  btnGroup: {\r\n    display: 'block'\r\n  }\r\n}));\r\n\r\n\r\n\r\nconst EditorButton = (props: any) => {\r\n  const { editor } = props\r\n  const classes = useStyles();\r\n  return (\r\n    <ButtonGroup disableElevation fullWidth className={classes.btnGroup} variant=\"contained\" size='small' >\r\n\r\n      {/* ===Bold=== */}\r\n      <IconButton size=\"small\"\r\n        classes={{ root: editor?.isActive('bold') ? classes.active : classes.inActive }}\r\n        onClick={() => editor?.chain().focus().toggleBold().run()}\r\n      >\r\n        <FormatBoldIcon />\r\n      </IconButton>\r\n\r\n      {/* ===italic=== */}\r\n      <IconButton size=\"small\"\r\n        classes={{ root: editor?.isActive('italic') ? classes.active : classes.inActive }}\r\n        onClick={() => editor?.chain().focus().toggleItalic().run()}\r\n      >\r\n        <FormatItalicIcon />\r\n      </IconButton>\r\n\r\n      {/* ===Strike=== */}\r\n      <IconButton size=\"small\"\r\n        classes={{ root: editor?.isActive('strike') ? classes.active : classes.inActive }}\r\n        onClick={() => editor?.chain().focus().toggleStrike().run()}\r\n      >\r\n        <StrikethroughSIcon />\r\n      </IconButton>\r\n\r\n      {/* ===Code=== */}\r\n      <IconButton size=\"small\"\r\n        classes={{ root: editor?.isActive('code') ? classes.active : classes.inActive }}\r\n        onClick={() => editor?.chain().focus().toggleCode().run()}\r\n      >\r\n        <CodeIcon />\r\n      </IconButton>\r\n\r\n      {/* ===Paragraph=== */}\r\n      <IconButton size=\"small\"\r\n        classes={{ root: editor?.isActive('paragraph') ? classes.active : classes.inActive }}\r\n        onClick={() => editor?.chain().focus().setParagraph().run()}\r\n      >\r\n        <FormatTextdirectionLToRIcon />\r\n      </IconButton>\r\n \r\n      {/* ===bullet list=== */}\r\n      <IconButton size=\"small\"\r\n        classes={{ root: editor?.isActive('bulletList') ? classes.active : classes.inActive }}\r\n        onClick={() => editor?.chain().focus().toggleBulletList().run()}\r\n      >\r\n        <FormatListBulletedIcon />\r\n      </IconButton>\r\n\r\n      {/* ===order list=== */}\r\n      <IconButton size=\"small\"\r\n        classes={{ root: editor?.isActive('orderedList') ? classes.active : classes.inActive }}\r\n        onClick={() => editor?.chain().focus().toggleOrderedList().run()}\r\n      >\r\n        <FormatListNumberedIcon />\r\n      </IconButton>\r\n\r\n\r\n    </ButtonGroup>\r\n  );\r\n}\r\n\r\nconst EditorIcon = (props: any) => {\r\n  const { children, active, click } = props\r\n  const classes = useStyles()\r\n  return (\r\n    <IconButton size=\"small\"\r\n      classes={{ root: active ? classes.active : classes.inActive }}\r\n      onClick={() => click()}\r\n    >\r\n      {children}\r\n    </IconButton>\r\n  )\r\n}\r\n\r\nexport default EditorButton;\r\n","import React, { useEffect } from \"react\"\r\nimport { EditorContent, useEditor } from \"@tiptap/react\"\r\nimport StarterKit from \"@tiptap/starter-kit\"\r\nimport Link from '@tiptap/extension-link'\r\nimport EditorButton from \"./EditorButtons\"\r\n\r\nconst TipTapEditor = (props: any) => {\r\n    const { value, onChange, onBlur } = props\r\n    const editor = useEditor({\r\n      extensions: [\r\n        StarterKit,\r\n        Link,\r\n      ],\r\n      content: value,\r\n      onUpdate: ({ editor }): void => onChange(editor.getHTML()),\r\n      onBlur: ({ editor }): void => onBlur(),\r\n    })\r\n  \r\n    // useEffect(() => {\r\n    //   editor?.commands?.setContent(value)\r\n    // }, [value,editor])\r\n  \r\n    return (\r\n      <>\r\n        <EditorButton editor={editor} />\r\n        <EditorContent editor={editor} />\r\n      </>\r\n    )\r\n  }\r\n\r\nexport default TipTapEditor","import {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  FormControl,\r\n  FormHelperText,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  IconButton,\r\n  makeStyles,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Tooltip,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\r\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Autocomplete, Pagination } from '@material-ui/lab';\r\nimport { Formik, getIn, useFormikContext, FieldArray } from 'formik';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport * as Yup from 'yup';\r\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\r\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\r\nimport Page from '../../components/Page/Page';\r\nimport TipTapEditor from '../../components/TipTapEditor/TipTapEditor';\r\nimport useConfModel from '../../hook/useConfModel';\r\nimport useService from '../../hook/useService';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport { uploadNewImage } from '../../utils/CloudinaryUtils';\r\nimport { imageUpload } from '../../utils/FirebaseUtils';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  root: {\r\n    width: theme.breakpoints.values.lg,\r\n    maxWidth: '100%',\r\n    margin: '0 auto',\r\n    padding: theme.spacing(3),\r\n  },\r\n  addIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  inner: {\r\n    minWidth: 700,\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(1),\r\n    justifyContent: 'center',\r\n  },\r\n  tabCard: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  sEvenly: {\r\n    display: 'flex',\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  iconPadd: {\r\n    padding: 5,\r\n  },\r\n  jCenter: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  imageView: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  themeButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n  },\r\n  lColor: {\r\n    color: 'white',\r\n  },\r\n  workouttermsavatar: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  deleteButton: {\r\n    width: '100%',\r\n    height: '50px',\r\n  },\r\n  avatarStyles: {\r\n    width: theme.spacing(15),\r\n    height: theme.spacing(15),\r\n    // margin: 'auto',\r\n  },\r\n  ingredientsAvatarStyle: {\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10),\r\n    margin: 'auto',\r\n  },\r\n  marginTopStyle: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  adjustmentTop: {\r\n    marginTop: '5px',\r\n  },\r\n  avatarRoot: {\r\n    borderRadius: 10,\r\n    marginRight: 15,\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10),\r\n  },\r\n  textPrimary: {\r\n    marginTop: 10,\r\n    fontWeight: 'bold',\r\n  },\r\n  textSecondary: {\r\n    marginTop: 10,\r\n  },\r\n  ingrdientsGridMain: {\r\n    marginTop: 10,\r\n  },\r\n  ingredientsAvatarRoot: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n    margin: 'auto',\r\n  },\r\n  htmlContentGrid: {\r\n    paddingLeft: theme.spacing(3),\r\n    paddingRight: theme.spacing(3),\r\n    paddingTop: theme.spacing(1),\r\n  },\r\n  noIngredientsText: {\r\n    marginBottom: theme.spacing(3),\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  htmlContent: {\r\n    '& ul': {\r\n      paddingLeft: '1.2rem',\r\n    },\r\n    '& p': {\r\n      textAlign: 'justify',\r\n    },\r\n  },\r\n}));\r\n\r\nconst WorkoutExercise = () => {\r\n  const classes = useStyles();\r\n  const { Post } = useService();\r\n  const Snackbar = useSnackbar();\r\n  const ConfModel = useConfModel();\r\n  const [stateData, setStateData] = useState({ page_no: 1, page_limit: 10 });\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const [dataList, setDataList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [addEditDialog, setAddEditDialog] = useState({\r\n    isOpen: false,\r\n    title: '',\r\n    okBtnText: '',\r\n    isEdit: false,\r\n    data: {},\r\n  });\r\n  const [viewDialog, setViewDialog] = useState({\r\n    isOpen: false,\r\n    title: '',\r\n    data: {},\r\n  });\r\n\r\n  const listWorkOutExercise = async () => {\r\n    setLoading(true);\r\n    Post('app/listWorkout', stateData)\r\n      .then((res: any) => {\r\n        setLoading(false);\r\n        if (!res.error) {\r\n          setDataList(res.data);\r\n          setPageCount(res.page_count);\r\n        } else {\r\n          Snackbar.show(res.message, 'error');\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        setLoading(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const onPageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    setStateData((prevState: any) => ({ ...prevState, page_no: value }));\r\n  };\r\n\r\n  const setElipsis = (text: any) => {\r\n    return text?.length >= 25 ? `${text.substring(0, 40)}...` : text;\r\n  };\r\n\r\n  const openAddDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      isEdit: false,\r\n      title: 'Add Exercise',\r\n      okBtnText: 'Save',\r\n    }));\r\n  };\r\n\r\n  const openEditDialog = (data: any) => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      isEdit: true,\r\n      data,\r\n      title: 'Edit Exercise',\r\n      okBtnText: 'Edit',\r\n    }));\r\n  };\r\n\r\n  const openViewDialog = (data: any) => {\r\n    setViewDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      data,\r\n      title: 'View Exerice',\r\n    }));\r\n  };\r\n\r\n  const onDelete = (data: any) => {\r\n    const { openModel, setLoading, closeModel } = ConfModel;\r\n    const submitFunction = () => {\r\n      setLoading(true);\r\n      Post('app/deleteWorkout', { id: data._id })\r\n        .then(async (res: any) => {\r\n          setLoading(false);\r\n          closeModel();\r\n          onSuccessAction();\r\n          Snackbar.show(res.message, 'success');\r\n        })\r\n        .catch((err: any) => {\r\n          setLoading(false);\r\n          Snackbar.show('Internal Server Error', 'error');\r\n        });\r\n    };\r\n    openModel(submitFunction);\r\n  };\r\n\r\n  const closeAddEditDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const closeViewDialog = () => {\r\n    setViewDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const onSuccessAction = () => {\r\n    listWorkOutExercise();\r\n    closeAddEditDialog();\r\n  };\r\n\r\n  useEffect(() => {\r\n    listWorkOutExercise();\r\n  }, [stateData]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Page title='Workout Exercise' />\r\n\r\n      {/* =======Header====== */}\r\n      <Grid alignItems='flex-end' container justify='space-between' spacing={3}>\r\n        <Grid item>\r\n          <Typography component='h1' variant='h3'>\r\n            Movement Exercise\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant='contained'\r\n            onClick={() => openAddDialog()}\r\n            className={classes.themeButton}\r\n            startIcon={<AddIcon />}\r\n          >\r\n            Add\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* =============Search======== */}\r\n      {/* <Grid container spacing={3}>\r\n        <Grid item>\r\n          <Paper elevation={0}>\r\n            <TextField\r\n              fullWidth\r\n              size='small'\r\n              placeholder='Name'\r\n              variant='outlined'\r\n              name='state'\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid> */}\r\n\r\n      {/* ========Table With Pagination========= */}\r\n      <Card className={classes.tabCard}>\r\n        <CardContent className={classes.content}>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align='center'>#</TableCell>\r\n                  <TableCell align='center'>Exercise Image</TableCell>\r\n                  <TableCell align='center'>Exercise Name</TableCell>\r\n                  <TableCell align='center'>Exercise Description</TableCell>\r\n                  <TableCell align='center'>Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {!loading &&\r\n                  dataList.map((data: any, index: number) => (\r\n                    <TableRow hover key={index}>\r\n                      <TableCell align='center'>\r\n                        {stateData.page_limit * (stateData.page_no - 1) +\r\n                          index +\r\n                          1}\r\n                      </TableCell>\r\n                      <TableCell align='center'>\r\n                        <div className={classes.jCenter}>\r\n                          <Avatar variant='square' src={data?.workout_image?.url} />\r\n                        </div>\r\n                      </TableCell>\r\n                      <TableCell align='center'>{data?.workout_name}</TableCell>\r\n                      <TableCell align='center'>\r\n                        <Tooltip title={data?.workout_description}>\r\n                          <span>{setElipsis(data?.workout_description)}</span>\r\n                        </Tooltip>\r\n                      </TableCell>\r\n                      <TableCell align='center'>\r\n                        <div className={classes.sEvenly}>\r\n                          <Tooltip title='View' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openViewDialog(data)}\r\n                            >\r\n                              <CenterFocusStrongIcon color='primary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Edit' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openEditDialog(data)}\r\n                            >\r\n                              <EditIcon color='action' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Delete' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => onDelete(data)}\r\n                            >\r\n                              <DeleteIcon color='secondary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                {loading && <TableLoader />}\r\n                {!loading && dataList.length == 0 && (\r\n                  <TableNoData>No Data Found</TableNoData>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </CardContent>\r\n\r\n        <CardActions className={classes.actions}>\r\n          <Pagination\r\n            count={pageCount}\r\n            page={stateData.page_no}\r\n            onChange={onPageChange}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n\r\n      {/* ============Add Edit Dialog========== */}\r\n      <AddEditDailog\r\n        {...addEditDialog}\r\n        onClose={closeAddEditDialog}\r\n        onSuccess={onSuccessAction}\r\n      />\r\n\r\n      {/* ============View Dialog========== */}\r\n      <ViewDailog {...viewDialog} onClose={closeViewDialog} />\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface Workoutterms {\r\n  name: string;\r\n  image: { file: null | any; prevImage: string | any; isNew: null | Boolean };\r\n  description: any;\r\n}\r\n\r\ninterface Equipments {\r\n  id: string | any;\r\n}\r\n\r\ninterface Exercise {\r\n  workout_name: string;\r\n  workout_image: { file: null | any; prevImage: string; isNew: null | Boolean };\r\n  workout_description: string;\r\n  // workout_thumbnail: { file: null | any; prevImage: string; isNew: null | Boolean};\r\n  workout_type: string;\r\n  workout_terms: Workoutterms[];\r\n  required_equipments: Equipments[];\r\n  how_to_do: string;\r\n}\r\n\r\nconst AddEditDailog = (props: any) => {\r\n  const {\r\n    isOpen,\r\n    title,\r\n    onClose,\r\n    isEdit,\r\n    data,\r\n    onSuccess,\r\n    okBtnText = 'Ok',\r\n  } = props;\r\n  const classes = useStyles();\r\n  const formikRef = useRef<any>(null);\r\n  const imageRef = useRef<any>(null);\r\n  const thumbnailImageRef = useRef<any>(null);\r\n  const Snackbar = useSnackbar();\r\n  const { Post } = useService();\r\n  const [equipmentList, setEquipmentList] = useState<any>([]);\r\n\r\n  const workoutTerms: Workoutterms = {\r\n    name: '',\r\n    image: { file: null, prevImage: '', isNew: null },\r\n    description: '',\r\n  };\r\n\r\n  const equipments: Equipments = {\r\n    id: '',\r\n  };\r\n\r\n  const initialFormValue: Exercise = {\r\n    workout_name: '',\r\n    workout_image: { file: null, prevImage: '', isNew: null },\r\n    workout_description: '',\r\n    // workout_thumbnail: { file: null, prevImage: '', isNew: null },\r\n    workout_type: '',\r\n    workout_terms: [workoutTerms],\r\n    required_equipments: [equipments],\r\n    how_to_do: '',\r\n  };\r\n\r\n  const [initialValue, setInitialValue] = useState({ ...initialFormValue });\r\n\r\n  const listIngredients = async () => {\r\n    Post('app/listAllEquipment', {})\r\n      .then((res: any) => {\r\n        if (!res.error) {\r\n          let getequipmentList = res.data.map((data: any) => {\r\n            data.id = data._id;\r\n            return data;\r\n          });\r\n          setEquipmentList(getequipmentList);\r\n        } else {\r\n          Snackbar.show(res.message, 'error');\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const onImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    e.persist();\r\n    const files = e.target.files;\r\n    if (files && files.length != 0) {\r\n      const reader = new FileReader();\r\n      const file = files[0];\r\n      reader.onloadend = () => {\r\n        formikRef.current.setFieldValue('workout_image', {\r\n          file,\r\n          prevImage: reader.result,\r\n          isNew: true,\r\n        });\r\n      };\r\n      reader.readAsDataURL(file);\r\n    } \r\n    // else {\r\n    //   formikRef.current.setFieldValue('workout_image', {\r\n    //     file: null,\r\n    //     prevImage: '',\r\n    //     isNew: null,\r\n    //   });\r\n    // }\r\n  };\r\n\r\n  const onThumbnailImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    e.persist();\r\n    const files = e.target.files;\r\n    if (files && files.length != 0) {\r\n      const reader = new FileReader();\r\n      const file = files[0];\r\n      reader.onloadend = () => {\r\n        formikRef.current.setFieldValue('workout_thumbnail', {\r\n          file,\r\n          prevImage: reader.result,\r\n          isNew: true,\r\n        });\r\n      };\r\n      reader.readAsDataURL(file);\r\n    } \r\n    // else {\r\n    //   formikRef.current.setFieldValue('workout_thumbnail', {\r\n    //     file: null,\r\n    //     prevImage: '',\r\n    //     isNew: null,\r\n    //   });\r\n    // }\r\n  };\r\n\r\n  const onSubmit = (value: any, helper: any) => {\r\n    try {\r\n      helper.setSubmitting(true);\r\n\r\n      const render = async () => {\r\n        const { workout_image, workout_terms, ...rest } = value;\r\n\r\n        const postData = rest;\r\n        const TermPromiseArray = Promise.all(workout_terms.map(({ image, ...rest }: any) => uploadNewImage(image).then((ImgRes: any) => ({ image: ImgRes, ...rest }))))\r\n\r\n        const [ImgRes, TermRes] = await Promise.all([uploadNewImage(workout_image), TermPromiseArray])\r\n\r\n        postData.workout_image = ImgRes\r\n        // postData.workout_thumbnail = ImgTumpRes\r\n        postData.workout_terms = TermRes\r\n\r\n        !isEdit && addData(postData, helper);\r\n        isEdit && editData(postData, helper);\r\n\r\n      };\r\n      render();\r\n    } catch (err) {\r\n      Snackbar.show('Image Upload Failed', 'error');\r\n    }\r\n  };\r\n\r\n  const addData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    console.log(data)\r\n    setSubmitting(true);\r\n    Post('app/addWorkout', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const editData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n    Post('app/editWorkout', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const handleEquipmentChange = (event: any, newValue: any) => {\r\n    let sampleDatas = newValue.map((datas: any) => {\r\n      return {\r\n        id: datas._id,\r\n      };\r\n    });\r\n    formikRef.current.setFieldValue('required_equipments', sampleDatas);\r\n  };\r\n\r\n  const addIngredients = (values: Exercise, push: any) => {\r\n    let { workout_terms } = values;\r\n    push(workoutTerms);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isEdit) {\r\n      const { required_equipments, workout_terms, _id, workout_image, ...rest } = data;\r\n      const editData = { ...rest, id: _id };\r\n      editData.required_equipments = required_equipments.map((data: any) => {\r\n        // data.id = data._id;\r\n        return {\r\n          id: data._id,\r\n        };\r\n      });\r\n\r\n      const EquipmentIds = equipmentList.map(({ _id }: any) => _id)\r\n      editData.required_equipments = required_equipments.filter(({ _id }: any) => EquipmentIds.includes(_id)).map(({ _id }: any) => ({ id: _id }));\r\n      editData.workout_terms = workout_terms.map((item: any) => {\r\n        return {\r\n          name: item.name,\r\n          image: { file: item.image, prevImage: item.image?.url, isNew: false },\r\n          description: item.description,\r\n        };\r\n      });\r\n      // editData.workout_thumbnail = {\r\n      //   file: workout_thumbnail,\r\n      //   prevImage: workout_thumbnail?.url,\r\n      //   isNew: false,\r\n      // };\r\n      editData.workout_image = {\r\n        file: workout_image,\r\n        prevImage: workout_image?.url,\r\n        isNew: false,\r\n      };\r\n      setInitialValue(editData);\r\n    } else {\r\n      setInitialValue(initialFormValue);\r\n    }\r\n  }, [props]);\r\n\r\n  useEffect(() => {\r\n    listIngredients();\r\n  }, []);\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      fullWidth\r\n      maxWidth='md'\r\n      aria-labelledby='dialog-title'\r\n      open={isOpen}\r\n    >\r\n      <DialogTitle id='dialog-title' onClose={onClose}>\r\n        {title}\r\n      </DialogTitle>\r\n\r\n      <Formik\r\n        innerRef={formikRef}\r\n        enableReinitialize\r\n        initialValues={initialValue}\r\n        onSubmit={onSubmit}\r\n        validationSchema={Yup.object().shape({\r\n          workout_name: Yup.string()\r\n            .trim()\r\n            .required('Workout name is required'),\r\n          workout_image: Yup.object({\r\n            file: Yup.mixed().required('A file is required'),\r\n          }),\r\n          workout_description: Yup.string()\r\n            .trim()\r\n            .max(250, 'Must be 250 characters or less')\r\n            .required('Workout description is required'),\r\n          // workout_thumbnail: Yup.object({\r\n          //   file: Yup.mixed().required('A file is required'),\r\n          // }),\r\n          workout_type: Yup.string()\r\n            .trim()\r\n            .required('Workout type is required'),\r\n          workout_terms: Yup.array().of(\r\n            Yup.object().shape({\r\n              name: Yup.string()\r\n                .trim()\r\n                .required('Workout term name is Required'),\r\n              image: Yup.object({\r\n                file: Yup.mixed().required('required'),\r\n              }),\r\n              description: Yup.string()\r\n                .max(250, 'Must be 250 characters or less')\r\n                .required('Workout description is Required'),\r\n            })\r\n          ),\r\n          required_equipments: Yup.array().of(\r\n            Yup.object().shape({\r\n              id: Yup.string().trim().required(' Equipments is Required'),\r\n            })\r\n          ),\r\n          how_to_do: Yup.string().trim().required('Steps is required'),\r\n        })}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          setFieldValue,\r\n          handleBlur,\r\n          setFieldTouched,\r\n          submitForm,\r\n          isSubmitting,\r\n        }) => (\r\n          <>\r\n            <DialogContent dividers>\r\n              <Grid container spacing={3}>\r\n                <Grid item md={12} xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label='Workout name'\r\n                    name='workout_name'\r\n                    variant='outlined'\r\n                    error={Boolean(touched.workout_name && errors.workout_name)}\r\n                    helperText={touched.workout_name && errors.workout_name}\r\n                    value={values.workout_name}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item md={12} xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    multiline\r\n                    label='Workout description'\r\n                    name='workout_description'\r\n                    variant='outlined'\r\n                    error={Boolean(\r\n                      touched.workout_description && errors.workout_description\r\n                    )}\r\n                    helperText={\r\n                      touched.workout_description && errors.workout_description\r\n                    }\r\n                    value={values.workout_description}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item md={12} xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    multiline\r\n                    label='Workout type'\r\n                    name='workout_type'\r\n                    variant='outlined'\r\n                    error={Boolean(touched.workout_type && errors.workout_type)}\r\n                    helperText={touched.workout_type && errors.workout_type}\r\n                    value={values.workout_type}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                </Grid>\r\n\r\n                <FieldArray name='workout_terms' validateOnChange>\r\n                  {({push, remove})=>(\r\n                    <>\r\n                      <Grid item md={12} xs={12}>\r\n                        <Button\r\n                          fullWidth\r\n                          className={classes.themeButton}\r\n                          variant='contained'\r\n                          color='default'\r\n                          onClick={() => addIngredients(values, push)}\r\n                          endIcon={<ControlPointIcon />}\r\n                        >\r\n                          Add workout terms\r\n                        </Button>\r\n                      </Grid>\r\n                    {values?.workout_terms?.map((workoutValues: any, index: any) => <WorkoutTerms key={index} index={index} />)}\r\n                    </>\r\n                  )}\r\n                </FieldArray>\r\n                <Grid item md={12} xs={12}>\r\n                  <Autocomplete\r\n                    multiple\r\n                    id='combo-box-demo'\r\n                    options={equipmentList}\r\n                    value={equipmentList.filter((data: any) =>\r\n                      values.required_equipments\r\n                        .map(({ id }: any) => id)\r\n                        .includes(data._id)\r\n                    )}\r\n                    onChange={handleEquipmentChange}\r\n                    getOptionLabel={(option: any) => option.name}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        label='Equipments'\r\n                        name='required_equipments'\r\n                        variant='outlined'\r\n                        error={Boolean(\r\n                          touched?.required_equipments &&\r\n                          touched?.required_equipments[0]?.id &&\r\n                          errors?.required_equipments &&\r\n                          (errors?.required_equipments[0] as any)?.id\r\n                        )}\r\n                        helperText={\r\n                          touched?.required_equipments &&\r\n                          touched?.required_equipments[0]?.id &&\r\n                          errors?.required_equipments &&\r\n                          (errors?.required_equipments[0] as any)?.id\r\n                        }\r\n                        inputProps={{\r\n                          ...params.inputProps,\r\n                        }}\r\n                      />\r\n                    )}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item md={12} xs={12}>\r\n                  <FormControl\r\n                    fullWidth\r\n                    error={Boolean(touched?.how_to_do && errors?.how_to_do)}\r\n                  >\r\n                    <TipTapEditor\r\n                      value={values.how_to_do}\r\n                      onChange={(value: any) =>\r\n                        setFieldValue('how_to_do', value)\r\n                      }\r\n                      onBlur={() => setFieldTouched('how_to_do', true, true)}\r\n                    />\r\n\r\n                    <FormHelperText>\r\n                      {touched?.how_to_do && errors?.how_to_do}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item md={12} xs={12}>\r\n                  <input\r\n                    name='recipe_image'\r\n                    ref={imageRef}\r\n                    type='file'\r\n                    accept='.jpg,.png,jpeg'\r\n                    onChange={onImageChange}\r\n                    onBlur={handleBlur}\r\n                    hidden\r\n                  />\r\n                  <Button\r\n                    fullWidth\r\n                    className={classes.themeButton}\r\n                    variant='contained'\r\n                    color='default'\r\n                    onClick={() => imageRef.current.click()}\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Workout image\r\n                  </Button>\r\n                  <FormControl\r\n                    error={Boolean(\r\n                      touched?.workout_image?.file &&\r\n                      errors?.workout_image?.file\r\n                    )}\r\n                  >\r\n                    <FormHelperText>\r\n                      {touched?.workout_image?.file &&\r\n                        errors?.workout_image?.file}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                {/* <Grid item md={6} xs={6}>\r\n                  <input\r\n                    name='recipe_image'\r\n                    ref={thumbnailImageRef}\r\n                    type='file'\r\n                    accept='.jpg,.png,jpeg'\r\n                    onChange={onThumbnailImageChange}\r\n                    onBlur={handleBlur}\r\n                    hidden\r\n                  />\r\n                  <Button\r\n                    fullWidth\r\n                    className={classes.themeButton}\r\n                    variant='contained'\r\n                    color='default'\r\n                    onClick={() => thumbnailImageRef.current.click()}\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Workout Thumbnail\r\n                  </Button>\r\n                  <FormControl\r\n                    error={Boolean(\r\n                      touched?.workout_thumbnail?.file &&\r\n                      errors?.workout_thumbnail?.file\r\n                    )}\r\n                  >\r\n                    <FormHelperText>\r\n                      {touched?.workout_thumbnail?.file &&\r\n                        errors?.workout_thumbnail?.file}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                </Grid> */}\r\n\r\n                <Grid item md={12} xs={12}>\r\n                  {values.workout_image?.prevImage && (\r\n                    <img\r\n                      className={classes.imageView}\r\n                      src={values.workout_image?.prevImage}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n\r\n                {/* <Grid item md={6} xs={6}>\r\n                  {values.workout_thumbnail?.prevImage && (\r\n                    <img\r\n                      className={classes.imageView}\r\n                      src={values.workout_thumbnail?.prevImage}\r\n                    />\r\n                  )}\r\n                </Grid> */}\r\n              </Grid>\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n              <Button onClick={onClose} variant='outlined' color='secondary'>\r\n                Cancel\r\n              </Button>\r\n\r\n              <Button\r\n                className={classes.themeButton}\r\n                onClick={() => submitForm()}\r\n                disabled={isSubmitting}\r\n                variant='outlined'\r\n              >\r\n                {isSubmitting ? (\r\n                  <CircularProgress size={24} className={classes.lColor} />\r\n                ) : (\r\n                  okBtnText\r\n                )}\r\n              </Button>\r\n            </DialogActions>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst WorkoutTerms = (props: any) => {\r\n  const classes = useStyles();\r\n  const FormikContext = useFormikContext();\r\n  const { values, errors, touched, setFieldValue, handleBlur, handleChange }: any = FormikContext;\r\n  // const [{ values, errors, touched, setFieldValue, handleBlur, handleChange }, setFormikContext]: any = useState(FormikContext);\r\n  const { index } = props;\r\n  const imgRef = useRef<any>(null);\r\n  const FieldName = `workout_terms[${index}]`;\r\n  const FieldValue = getIn(values, `workout_terms[${index}]`);\r\n  const FieldError = getIn(errors, `workout_terms[${index}]`);\r\n  const FieldTouched = getIn(touched, `workout_terms[${index}]`);\r\n\r\n  const onImageChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    event.persist();\r\n    const files = event.target.files;\r\n    if (files && files.length != 0) {\r\n      const reader = new FileReader();\r\n      const file = files[0];\r\n      reader.onloadend = () => {\r\n        setFieldValue(`${FieldName}.image`, { file, prevImage: reader.result, isNew: true, });\r\n      };\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      setFieldValue(`${FieldName}.image`, { file: null, prevImage: '', isNew: null });\r\n    }\r\n  }\r\n\r\n  const removeTerm = () => {\r\n    const OldTerms = getIn(values, 'workout_terms');\r\n    const Terms = OldTerms.filter((d: any, i: number) => i != index);\r\n    setFieldValue('workout_terms', Terms);\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   setFormikContext(FormikContext)\r\n  // }, [props])\r\n\r\n  return (\r\n    <Grid\r\n      item\r\n      container\r\n      md={12}\r\n      xs={12}\r\n      direction='row'\r\n      spacing={2}\r\n    >\r\n      <Grid item md={1} xs={12}>\r\n        <input\r\n          name={`${FieldName}.image`}\r\n          ref={imgRef}\r\n          type='file'\r\n          accept='.jpg,.png,jpeg'\r\n          onChange={(e) => onImageChange(e)}\r\n          onBlur={handleBlur}\r\n          hidden\r\n        />\r\n        <Avatar\r\n          className={classes.workouttermsavatar}\r\n          variant='square'\r\n          onClick={() => imgRef?.current?.click()}\r\n          src={FieldValue?.image?.prevImage}\r\n        />\r\n        <FormControl error={Boolean(FieldTouched?.image?.file && FieldError?.image?.file)}>\r\n          <FormHelperText>{FieldTouched?.image?.file && FieldError?.image?.file}</FormHelperText>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item md={5} xs={12}>\r\n        <TextField\r\n          fullWidth\r\n          multiline\r\n          label='Workout terms name'\r\n          name={`${FieldName}.name`}\r\n          variant='outlined'\r\n          error={Boolean(FieldTouched?.name && FieldError?.name)}\r\n          helperText={FieldTouched?.name && FieldError?.name}\r\n          value={FieldValue.name}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n      <Grid item md={5} xs={8}>\r\n        <TextField\r\n          fullWidth\r\n          multiline\r\n          label='Workout terms description'\r\n          name={`${FieldName}.description`}\r\n          variant='outlined'\r\n          error={Boolean(FieldTouched?.description && FieldError?.description)}\r\n          helperText={FieldTouched?.description && FieldError?.description}\r\n          value={FieldValue.description}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item md={1} xs={4}>\r\n        {values?.workout_terms.length > 1 && (\r\n          <Button\r\n            fullWidth\r\n            className={classes.deleteButton}\r\n            variant='contained'\r\n            color='secondary'\r\n            onClick={() => removeTerm()}\r\n          >\r\n            <DeleteIcon />\r\n          </Button>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst ViewDailog = (props: any) => {\r\n  const { isOpen, title, onClose, data } = props;\r\n  const classes = useStyles();\r\n  const [formValue, setFormValue] = useState(data);\r\n\r\n  useEffect(() => {\r\n    setFormValue(data);\r\n  }, [props]);\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      fullWidth\r\n      maxWidth='sm'\r\n      aria-labelledby='dialog-view-title'\r\n      open={isOpen}\r\n    >\r\n      <DialogTitle id='dialog-view-title' onClose={onClose}>\r\n        {title}\r\n      </DialogTitle>\r\n\r\n      <DialogContent dividers>\r\n        <div>\r\n          <img\r\n            src={formValue?.workout_image?.url}\r\n            alt={'Workout image'}\r\n            className={classes.imageView}\r\n          />\r\n        </div>\r\n        <Typography variant='h5' align='left' className={classes.textPrimary}>{formValue?.workout_name}</Typography>\r\n\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          className={classes.ingrdientsGridMain}\r\n          justify='center'\r\n        >\r\n          {formValue?.workout_terms?.map((value: any, index: any) => (\r\n            <Grid key={index} item xs={4} md={3}>\r\n              <Avatar\r\n                className={classes.ingredientsAvatarRoot}\r\n                src={value?.image?.url}\r\n              />\r\n              <Typography variant='h6' align='center'>\r\n                {value?.name}\r\n              </Typography>\r\n              <Typography variant='subtitle2' align='center'>\r\n                {value.description.length >= 25\r\n                  ? `${value.description.substring(0, 30)}...`\r\n                  : value.description}\r\n              </Typography>\r\n            </Grid>\r\n          ))}\r\n          {formValue?.workout_terms?.length == 0 && (\r\n            <Grid item xs={12} md={12} className={classes.noIngredientsText}>\r\n              <div>No workout terms added</div>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n        <Typography variant='h6' align='left' className={classes.textSecondary}>{formValue?.workout_description}</Typography>\r\n\r\n\r\n\r\n        <Typography variant='h5' align='left' style={{ color: '#41A58D' }} className={classes.textPrimary}>\r\n          Equipments\r\n        </Typography>\r\n\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          className={classes.ingrdientsGridMain}\r\n          justify='center'\r\n        >\r\n          {formValue?.required_equipments?.map((value: any, index: any) => (\r\n            <Grid key={index} item xs={4} md={3}>\r\n              <Avatar\r\n                className={classes.ingredientsAvatarRoot}\r\n                src={value?.image?.url}\r\n              />\r\n              <Typography variant='h6' align='center'>\r\n                {value?.name}\r\n              </Typography>\r\n              {/* <Typography variant='subtitle2' align='center'>\r\n                {value.description.length >= 25\r\n                  ? `${value.description.substring(0, 30)}...`\r\n                  : value.description}\r\n              </Typography> */}\r\n            </Grid>\r\n          ))}\r\n          {formValue?.required_equipments?.length == 0 && (\r\n            <Grid item xs={12} md={12} className={classes.noIngredientsText}>\r\n              <div>No Equipments Added</div>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n\r\n        <Typography variant='h6' align='left' style={{ color: '#41A58D' }}>\r\n          How to do\r\n        </Typography>\r\n\r\n        <Grid container>\r\n          <Grid item xs={12} md={12} className={classes.htmlContentGrid}>\r\n            <div\r\n              className={classes.htmlContent}\r\n              dangerouslySetInnerHTML={{ __html: formValue?.how_to_do }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={onClose} variant='outlined' color='secondary'>\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default WorkoutExercise;\r\n"],"sourceRoot":""}