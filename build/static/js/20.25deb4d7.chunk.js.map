{"version":3,"sources":["pages/SignIn/SignIn.tsx"],"names":["useStyles","makeStyles","theme","root","height","padding","spacing","rootMain","display","alignItems","justifyContent","card","width","breakpoints","values","sm","maxWidth","overflow","position","flexGrow","flexBasis","content","logoImgDiv","logoImg","loginForm","marginTop","divider","margin","btnLoading","color","fields","flexWrap","themeButton","palette","white","backgroundColor","green","main","dark","AuthLoader","loading","children","useState","aLoading","setALoading","useEffect","MobxObserver","classes","navigate","useNavigate","Snackbar","useSnackbar","UserStore","useStore","authLoading","setAuthLoading","authStateChanged","user","DashboardRoute","unsubscribe","AuthStateChange","className","title","src","Logo","gutterBottom","variant","enableReinitialize","initialValues","email","password","onSubmit","value","setSubmitting","signInWithCredenrials","then","response","setIdToken","uid","catch","error","console","log","show","message","validationSchema","Yup","shape","trim","required","errors","touched","handleChange","handleBlur","handleSubmit","setFieldValue","isSubmitting","fullWidth","label","name","Boolean","helperText","onChange","onBlur","type","disabled","size","align","component","RouterLink","to","ForgotPasswordRoute","underline"],"mappings":"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","file":"static/js/20.25deb4d7.chunk.js","sourcesContent":["import { Button, Card, CardContent, CircularProgress, Divider, Link, TextField, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport Logo from '../../assets/Images/logo.png';\r\nimport Page from '../../components/Page/Page';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport { useStore } from '../../Mobx/Helpers/UseStore';\r\nimport { AuthStateChange, signInWithCredenrials } from '../../utils/FirebaseUtils';\r\nimport Loader from '../../components/Loader/Loader';\r\nimport { DashboardRoute, ForgotPasswordRoute } from '../../Routes/RoutesConstants';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport MobxObserver from '../../Mobx/Helpers/MobxObserver';\r\n\r\n// const useStyles1 = makeStyles((theme: any) =>{console.log(theme)})\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  root: {\r\n    height: '100%',\r\n    padding: theme.spacing(6, 2)\r\n  },\r\n  rootMain: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  card: {\r\n    width: theme.breakpoints.values.sm,\r\n    maxWidth: '100%',\r\n    overflow: 'unset',\r\n    display: 'flex',\r\n    position: 'relative',\r\n    '& > *': {\r\n      flexGrow: 1,\r\n      flexBasis: '50%',\r\n      width: '50%'\r\n    }\r\n  },\r\n  content: {\r\n    padding: theme.spacing(3, 4, 3, 4)\r\n  },\r\n  logoImgDiv: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    padding: theme.spacing(2, 0),\r\n  },\r\n  logoImg: {\r\n    width: theme.spacing(20),\r\n    height: theme.spacing(10),\r\n  },\r\n  loginForm: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(2, 0)\r\n  },\r\n  btnLoading: {\r\n    color: 'white'\r\n  },\r\n  fields: {\r\n    margin: theme.spacing(-1),\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      flexGrow: 1,\r\n      margin: theme.spacing(1)\r\n    }\r\n  },\r\n  themeButton: {\r\n    marginTop: theme.spacing(2),\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n    '&:disabled': {\r\n      backgroundColor: theme.palette.green.main,\r\n    },\r\n  },\r\n}));\r\n\r\nconst Signin = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const Snackbar = useSnackbar();\r\n  const { UserStore } = useStore();\r\n  const [authLoading, setAuthLoading] = useState(true);\r\n\r\n  const loginUser = (value: any, { setSubmitting }: any) => {\r\n    setSubmitting(true);\r\n    signInWithCredenrials(value.email, value.password)\r\n      .then((response: any) => {\r\n        setSubmitting(false);\r\n        UserStore.setIdToken(response.user.uid);\r\n      })\r\n      .catch((error: any) => {\r\n        console.log('Firebase Login Error', error);\r\n        Snackbar.show(error.message, 'error');\r\n        setSubmitting(false);\r\n      });\r\n  };\r\n\r\n  const authStateChanged = (user: any) => {\r\n    if (user) {\r\n      navigate(DashboardRoute);\r\n      setAuthLoading(true);\r\n    } else {\r\n      setAuthLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = AuthStateChange(authStateChanged);\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  return (\r\n    <AuthLoader loading={authLoading}>\r\n      <div className={classes.root}>\r\n        <Page title='Login' />\r\n        <div className={classes.logoImgDiv} ><img className={classes.logoImg} src={Logo} /></div>\r\n        <div className={classes.rootMain}>\r\n          <Card className={classes.card}>\r\n            <CardContent className={classes.content}>\r\n              <Typography\r\n                gutterBottom\r\n                variant=\"h3\"\r\n              >\r\n                Login\r\n              </Typography>\r\n              <Formik\r\n                enableReinitialize\r\n                initialValues={{ email: '', password: '' }}\r\n                onSubmit={loginUser}\r\n                validationSchema={Yup.object().shape({\r\n                  email: Yup.string().trim().required('Email is required'),\r\n                  password: Yup.string().trim().required('Password is required'),\r\n                })}\r\n              >\r\n                {({\r\n                  values,\r\n                  errors,\r\n                  touched,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  setFieldValue,\r\n                  handleSubmit,\r\n                  isSubmitting,\r\n                }) => (\r\n\r\n                  <form className={classes.loginForm} onSubmit={handleSubmit}>\r\n                    <div className={classes.fields}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Email address\"\r\n                        name=\"email\"\r\n                        variant=\"outlined\"\r\n                        error={Boolean(touched.email && errors.email)}\r\n                        helperText={touched.email && errors.email}\r\n                        value={values.email}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Password\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        variant=\"outlined\"\r\n                        error={Boolean(touched.password && errors.password)}\r\n                        helperText={touched.password && errors.password}\r\n                        value={values.password}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n                    <Button\r\n                      fullWidth\r\n                      className={classes.themeButton}\r\n                      disabled={isSubmitting}\r\n                      size=\"large\"\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                    >\r\n                      {isSubmitting ? <CircularProgress className={classes.btnLoading} size={25} /> : 'Login'}\r\n                    </Button>\r\n                  </form>\r\n                )}\r\n              </Formik>\r\n\r\n              <Divider className={classes.divider} />\r\n              <Link\r\n                align=\"center\"\r\n                color=\"textPrimary\"\r\n                component={RouterLink}\r\n                to={ForgotPasswordRoute}\r\n                underline=\"always\"\r\n                variant=\"subtitle2\"\r\n              >\r\n                Forgot Password?\r\n              </Link>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </AuthLoader>\r\n  );\r\n};\r\n\r\nconst AuthLoader = ({ loading, children }: any) => {\r\n  const [aLoading, setALoading] = useState(loading);\r\n\r\n  useEffect(() => {\r\n    setALoading(loading);\r\n  }, [loading]);\r\n\r\n  return <>{aLoading ? <Loader /> : children}</>;\r\n};\r\n\r\nexport default MobxObserver(Signin);\r\n\r\n\r\n"],"sourceRoot":""}