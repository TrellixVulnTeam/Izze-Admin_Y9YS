{"version":3,"sources":["../node_modules/@material-ui/icons/ControlPoint.js","components/UnitSelect/UnitSelect.tsx","utils/MetricUnits.tsx","../node_modules/@material-ui/core/esm/MenuItem/MenuItem.js","pages/NutritionIngredients/NutritionIngredients.tsx"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","useStyles","makeStyles","theme","selectRoot","borderColor","selectIcon","right","formControlRoot","minWidth","UnitSelect","props","useState","name","id","option","placeholder","onChange","Function","onBlur","setProps","classes","useEffect","variant","className","shrink","labelId","icon","map","i","UnitDropdown","MenuItem","ref","tabIndex","_props$component","component","_props$disableGutters","disableGutters","ListItemClasses","_props$role","role","selected","tabIndexProp","other","_objectWithoutProperties","disabled","undefined","ListItem","_extends","button","dense","clsx","root","gutters","withStyles","typography","body1","_defineProperty","minHeight","paddingTop","paddingBottom","boxSizing","width","overflow","whiteSpace","breakpoints","up","body2","values","lg","maxWidth","margin","padding","spacing","content","tabCard","marginTop","themeButton","color","palette","white","backgroundColor","green","main","dark","sEvenly","display","justifyContent","iconPadd","jCenter","actions","deleteButton","height","imageView","textareaAdornedEnd","paddingRight","AddandEditDialogue","isEdit","isOpen","okBtnText","onClose","data","title","onSuccess","formikRef","useRef","imageRef","Snackbar","useSnackbar","Post","useService","initialValues","nutrientName","image","file","prevImage","isNew","quantity","protein","quantity_unit","fat","carbs","calories","benfits","description","initialFormValues","setInitialFormValues","addBenifits","setAddBenifits","addData","setSubmitting","resetForm","then","res","show","message","catch","err","editData","onImageChange","e","persist","files","target","length","reader","FileReader","onloadend","current","setFieldValue","result","readAsDataURL","_id","rest","url","open","disableBackdropClick","disableEscapeKeyDown","fullWidth","aria-labelledby","innerRef","enableReinitialize","onSubmit","helper","a","postData","uploadNewImage","renderSubmit","validationSchema","Yup","shape","trim","required","typeError","max","of","errors","touched","handleBlur","handleChange","submitForm","isSubmitting","dividers","container","item","xs","label","error","Boolean","helperText","InputProps","adornedEnd","endAdornment","onClick","event","preventDefault","dummyData","handleAddBenifits","endIcon","index","handleBenifitChange","deleteBenifitsData","splice","indexOf","removeBenifits","multiline","md","type","accept","hidden","click","startIcon","src","size","style","ViewIngredientModel","formValue","setFormValue","console","log","align","NutritionIngredients","loading","setLoading","ConfModel","useConfModel","page_no","page_limit","stateData","setStateData","pageCount","setPageCount","ingredientList","setIngredientList","addEditDialog","setAddEditDialog","viewDialog","setViewDialog","listNutritionIngredient","page_count","closeAddEditDialog","prevState","onSuccessAction","alignItems","justify","text","hover","substring","arrow","openViewDialog","openEditDialog","openModel","closeModel","onDelete","count","page"],"mappings":"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","file":"static/js/12.c74ebcfe.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.49 2 2 6.49 2 12s4.49 10 10 10 10-4.49 10-10S17.51 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'ControlPoint');\n\nexports.default = _default;","import React, { useState, useEffect } from 'react';\r\nimport { FormControl, InputLabel, makeStyles, MenuItem, Select } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  selectRoot: {\r\n    '& .MuiOutlinedInput-notchedOutline': {\r\n      borderColor: 'white !important'\r\n    }\r\n  },\r\n  selectIcon: {\r\n    right: 0\r\n  },\r\n  formControlRoot: {\r\n    minWidth: 'unset'\r\n  }\r\n}));\r\n\r\nconst UnitSelect = (props: any) => {\r\n  const [{\r\n    value = '',\r\n    name = '',\r\n    id = 'tempID',\r\n    option = [],\r\n    placeholder = 'Unit',\r\n    onChange = new Function,\r\n    onBlur = new Function,\r\n  }, setProps] = useState(props)\r\n\r\n  const classes = useStyles()\r\n  useEffect(() => {\r\n    setProps(props)\r\n  }, [props])\r\n\r\n  return (\r\n    <FormControl variant=\"outlined\" className={classes.formControlRoot}>\r\n      <InputLabel id={id} shrink={false} >\r\n        {value == '' && placeholder}\r\n      </InputLabel>\r\n      <Select\r\n        labelId={id}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        className={classes.selectRoot}\r\n        classes={{\r\n          icon: classes.selectIcon\r\n        }}\r\n      >\r\n        {option.map(({ id, name }: any, i: any) => <MenuItem key={i} value={id}>{name}</MenuItem>)}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default UnitSelect;\r\n\r\n\r\n\r\n","const UnitDropdown = [\r\n    { id: 'None', name: 'None' },\r\n    { id: 'g', name: 'g' },\r\n    // { id: 'KG', name: 'kg' },\r\n    // { id: 'L', name: 'liter' },\r\n    { id: 'ml', name: 'ml' },\r\n    { id: 'tsp', name: 'tsp' },\r\n    { id: 'tbsp', name: 'tbsp' },\r\n]\r\nexport default UnitDropdown;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListItem from '../ListItem';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body1, _defineProperty({\n      minHeight: 48,\n      paddingTop: 6,\n      paddingBottom: 6,\n      boxSizing: 'border-box',\n      width: 'auto',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    }, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    })),\n    // TODO v5: remove\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: {},\n\n    /* Styles applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the root element if dense. */\n    dense: _extends({}, theme.typography.body2, {\n      minHeight: 'auto'\n    })\n  };\n};\nvar MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      ListItemClasses = props.ListItemClasses,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'menuitem' : _props$role,\n      selected = props.selected,\n      tabIndexProp = props.tabIndex,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"ListItemClasses\", \"role\", \"selected\", \"tabIndex\"]);\n\n  var tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/React.createElement(ListItem, _extends({\n    button: true,\n    role: role,\n    tabIndex: tabIndex,\n    component: component,\n    selected: selected,\n    disableGutters: disableGutters,\n    classes: _extends({\n      dense: classes.dense\n    }, ListItemClasses),\n    className: clsx(classes.root, className, selected && classes.selected, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes = {\n  /**\n   * Menu item contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * `classes` prop applied to the [`ListItem`](/api/list-item/) element.\n   */\n  ListItemClasses: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenuItem'\n})(MenuItem);","import { Avatar, Button, Card, CardActions, CardContent, CircularProgress, Dialog, DialogActions, DialogContent, FormControl, FormHelperText, Grid, IconButton, makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, Tooltip, Typography } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport { Formik } from 'formik';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport * as Yup from 'yup';\r\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\r\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\r\nimport Page from '../../components/Page/Page';\r\nimport UnitSelect from '../../components/UnitSelect/UnitSelect';\r\nimport UnitDropdown from '../../utils/MetricUnits';\r\nimport useConfModel from '../../hook/useConfModel';\r\nimport useService from '../../hook/useService';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport { imageUpload } from '../../utils/FirebaseUtils';\r\nimport { uploadNewImage } from '../../utils/CloudinaryUtils';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  root: {\r\n    width: theme.breakpoints.values.lg,\r\n    maxWidth: '100%',\r\n    margin: '0 auto',\r\n    padding: theme.spacing(3),\r\n  },\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  tabCard: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  themeButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n  },\r\n  sEvenly: {\r\n    display: 'flex',\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  iconPadd: {\r\n    padding: 5,\r\n  },\r\n  jCenter: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(1),\r\n    justifyContent: 'center',\r\n  },\r\n  deleteButton: {\r\n    width: '100%',\r\n    height: '50px',\r\n  },\r\n  imageView: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  textareaAdornedEnd: {\r\n    paddingRight: 0\r\n  },\r\n}));\r\n\r\nfunction NutritionIngredients() {\r\n  const classes = useStyles()\r\n  const [loading, setLoading] = React.useState(true)\r\n  const Snackbar = useSnackbar();\r\n  const ConfModel = useConfModel();\r\n  const { Post } = useService();\r\n  const [stateData, setStateData] = useState({ page_no: 1, page_limit: 10 });\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const [ingredientList, setIngredientList] = React.useState([])\r\n  const [addEditDialog, setAddEditDialog] = React.useState({\r\n    isOpen: false,\r\n    title: '',\r\n    okBtnText: '',\r\n    isEdit: false,\r\n    data: {},\r\n  });\r\n  const [viewDialog, setViewDialog] = useState({\r\n    isOpen: false,\r\n    title: '',\r\n    data: {},\r\n  });\r\n\r\n  const listNutritionIngredient = async () => {\r\n    setLoading(true);\r\n    Post('app/listMealIngredient', stateData)\r\n      .then((res: any) => {\r\n        setLoading(false);\r\n        if (!res.error) {\r\n          setIngredientList(res.data);\r\n          setPageCount(res.page_count);\r\n        } else {\r\n          Snackbar.show(res.message, 'error');\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        console.log('err', err);\r\n        setLoading(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const onPageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    setStateData((prevState: any) => ({ ...prevState, page_no: value }));\r\n  };\r\n\r\n  const openAddDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      title: 'Add Nutrition Ingredients',\r\n      isEdit: false,\r\n      okBtnText: 'Save',\r\n    }));\r\n  };\r\n\r\n  const openEditDialog = (data: any) => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      isEdit: true,\r\n      data,\r\n      title: 'Edit Nutrition Ingredients',\r\n      okBtnText: 'Edit',\r\n    }));\r\n  };\r\n\r\n  const openViewDialog = (data: any) => {\r\n    setViewDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      data,\r\n      title: 'View Nutrition Ingredient',\r\n    }));\r\n  };\r\n\r\n  const onDelete = (data: any) => {\r\n    const { openModel, setLoading, closeModel } = ConfModel;\r\n    const submitFunction = () => {\r\n      setLoading(true);\r\n      Post('app/deleteMealIngredient', { id: data._id })\r\n        .then(async (res: any) => {\r\n          setLoading(false);\r\n          closeModel();\r\n          onSuccessAction();\r\n          Snackbar.show(res.message, 'success');\r\n        })\r\n        .catch((err: any) => {\r\n          setLoading(false);\r\n          Snackbar.show('Internal Server Error', 'error');\r\n        });\r\n    };\r\n    openModel(submitFunction);\r\n  };\r\n\r\n  const closeViewDialog = () => {\r\n    setViewDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const closeAddEditDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  }\r\n\r\n  const setElipsis = (text: any) => {\r\n    return text?.length >= 25 ? `${text.substring(0, 40)}...` : text;\r\n  };\r\n\r\n  const onSuccessAction = () => {\r\n    listNutritionIngredient();\r\n    closeAddEditDialog();\r\n  };\r\n\r\n  useEffect(() => {\r\n    listNutritionIngredient();\r\n  }, [stateData]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Page title='Nutrition Ingredients' />\r\n\r\n      <Grid alignItems='flex-end' container justify='space-between' spacing={3}>\r\n        <Grid item>\r\n          <Typography component='h1' variant='h3'>\r\n            Nutrition Ingredients\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant='contained'\r\n            onClick={() => openAddDialog()}\r\n            className={classes.themeButton}\r\n            startIcon={<AddIcon />}\r\n          >\r\n            Add\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* =============Search======== */}\r\n      {/* <Grid container spacing={3}>\r\n        <Grid item>\r\n          <Paper elevation={0}>\r\n            <TextField\r\n              fullWidth\r\n              size='small'\r\n              placeholder='Name'\r\n              variant='outlined'\r\n              name='state'\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid> */}\r\n\r\n      <Card className={classes.tabCard}>\r\n        <CardContent className={classes.content}>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align='center'>#</TableCell>\r\n                  <TableCell align='center'>Image</TableCell>\r\n                  <TableCell align='center'>Name</TableCell>\r\n                  <TableCell align='center'>Description</TableCell>\r\n                  <TableCell align='center'>Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {!loading &&\r\n                  ingredientList.map((data: any, index: number) => (\r\n                    <TableRow hover key={index}>\r\n                      <TableCell align='center'>\r\n                        {stateData.page_limit * (stateData.page_no - 1) + index + 1}\r\n                      </TableCell>\r\n                      <TableCell align='center'>\r\n                        <div className={classes.jCenter}>\r\n                          <Avatar variant='square' src={data?.image?.url} />\r\n                        </div>\r\n                      </TableCell>\r\n                      <TableCell align='center'>{data?.name}</TableCell>\r\n                      <TableCell align='center'>\r\n                        <Tooltip title={data?.description}>\r\n                          <span>{setElipsis(data?.description)}</span>\r\n                        </Tooltip>\r\n                      </TableCell>\r\n                      <TableCell align='center'>\r\n                        <div className={classes.sEvenly}>\r\n                          <Tooltip title='View' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openViewDialog(data)}\r\n                            >\r\n                              <CenterFocusStrongIcon color='primary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Edit' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openEditDialog(data)}\r\n                            >\r\n                              <EditIcon color='action' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Delete' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => onDelete(data)}\r\n                            >\r\n                              <DeleteIcon color='secondary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                {loading && <TableLoader />}\r\n                {!loading && ingredientList.length == 0 && (\r\n                  <TableNoData>No Data Found</TableNoData>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </CardContent>\r\n\r\n        <CardActions className={classes.actions}>\r\n          <Pagination\r\n            count={pageCount}\r\n            page={stateData.page_no}\r\n            onChange={onPageChange}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n\r\n      <AddandEditDialogue {...addEditDialog} onClose={closeAddEditDialog} onSuccess={onSuccessAction} />\r\n      {viewDialog.isOpen && <ViewIngredientModel {...viewDialog} onClose={closeViewDialog} />}\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface NutritionValues {\r\n  nutrientName: string,\r\n  image: { file: null | any, prevImage: string, isNew: null | boolean },\r\n  quantity: string,\r\n  protein: string,\r\n  quantity_unit: string,\r\n  fat: string,\r\n  carbs: string,\r\n  calories: string,\r\n  benfits: Array<any>,\r\n  description: string\r\n}\r\n\r\nconst AddandEditDialogue = (props: any) => {\r\n  const { isEdit, isOpen, okBtnText = 'OK', onClose, data, title, onSuccess } = props;\r\n  const classes = useStyles()\r\n  const formikRef = useRef<any>(null)\r\n  const imageRef = useRef<any>(null)\r\n  const Snackbar = useSnackbar();\r\n  const { Post } = useService();\r\n  const initialValues: NutritionValues = {\r\n    nutrientName: '',\r\n    image: { file: null, prevImage: '', isNew: null },\r\n    quantity: '',\r\n    protein: '',\r\n    quantity_unit: '',\r\n    fat: '',\r\n    carbs: '',\r\n    calories: '',\r\n    benfits: [],\r\n    description: '',\r\n  };\r\n\r\n  const [initialFormValues, setInitialFormValues] = React.useState({ ...initialValues });\r\n  const [addBenifits, setAddBenifits] = React.useState<any>([])\r\n\r\n  const handleAddBenifits = (event: any) => {\r\n    event.preventDefault()\r\n    const dummyData = [...addBenifits, ''];\r\n    setAddBenifits(dummyData)\r\n    formikRef.current.setFieldValue('benfits', dummyData)\r\n  }\r\n\r\n  const removeBenifits = (item: any) => {\r\n    const deleteBenifitsData = [...addBenifits];\r\n    deleteBenifitsData.splice(deleteBenifitsData.indexOf(item), 1);\r\n    formikRef.current.setFieldValue('benfits', deleteBenifitsData)\r\n    setAddBenifits(deleteBenifitsData)\r\n  }\r\n\r\n  const handleBenifitChange = (event: any, index: any) => {\r\n    addBenifits[index] = event.target.value;\r\n    formikRef.current.setFieldValue('benfits', [...addBenifits])\r\n  }\r\n\r\n  const onSubmit = (value: any, helper: any) => {\r\n    try {\r\n      helper.setSubmitting(true)\r\n      const renderSubmit = async () => {\r\n        const { image, nutrientName, ...rest } = value;\r\n        const postData = rest;\r\n\r\n        postData.name = nutrientName\r\n        postData.image = await uploadNewImage(image);\r\n\r\n        !isEdit && addData(postData, helper);\r\n        isEdit && editData(postData, helper);\r\n      }\r\n      renderSubmit()\r\n    }\r\n    catch {\r\n      Snackbar.show('Image Upload Failed', 'error');\r\n    }\r\n  }\r\n\r\n  const addData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n    Post('app/addMealIngredient', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const editData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n    Post('app/editMealIngredient', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n\r\n  const onImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    e.persist();\r\n    const files = e.target.files;\r\n    if (files && files.length != 0) {\r\n      const reader = new FileReader();\r\n      const file = files[0];\r\n      reader.onloadend = () => {\r\n        formikRef.current.setFieldValue('image', {\r\n          file,\r\n          prevImage: reader.result,\r\n          isNew: true,\r\n        });\r\n      };\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      formikRef.current.setFieldValue('image', {\r\n        file: null,\r\n        prevImage: '',\r\n        isNew: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isEdit) {\r\n      const { name, image, _id, ...rest } = data;\r\n      const editData = { ...rest, id: _id }\r\n      editData.nutrientName = name;\r\n      editData.image = { file: image, isNew: false, prevImage: image?.url }\r\n      setAddBenifits(data.benfits)\r\n      setInitialFormValues(editData);\r\n    } else {\r\n      setInitialFormValues(initialValues);\r\n    }\r\n  }, [props])\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={isOpen}\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        fullWidth\r\n        maxWidth='md'\r\n        aria-labelledby='dialog-title' >\r\n\r\n        <DialogTitle id='dialog-title' onClose={onClose}>\r\n          {title}\r\n        </DialogTitle>\r\n        <Formik\r\n          innerRef={formikRef}\r\n          enableReinitialize\r\n          initialValues={initialFormValues}\r\n          onSubmit={onSubmit}\r\n          validationSchema={Yup.object().shape({\r\n            nutrientName: Yup.string().trim().required('Name is required'),\r\n            quantity: Yup.number().typeError('Quantity must be in number').required('Quality is required'),\r\n            protein:Yup.number().typeError('Protein must be in number').required('Protein is required'),\r\n            quantity_unit: Yup.string().trim().required('Quantity unit is required'),\r\n            fat: Yup.number().typeError('Fat must be in number').required('Fat is required'),\r\n            carbs:Yup.number().typeError('Carbs must be in number').required('Carbs is required'),\r\n            calories: Yup.number().typeError('Calories must be in number').required('Calories is required'),\r\n            description: Yup.string().trim().max(250, 'Must be 250 characters or less').required('Description is required'),\r\n            image: Yup.object({\r\n              file: Yup.mixed().required('A file is required'),\r\n            }),\r\n            benfits: Yup.array().of(Yup.string().required('Benefits is required'))\r\n          })}\r\n        >\r\n          {({ values, errors, touched, handleBlur, handleChange, submitForm, isSubmitting, }: any) => (\r\n            <>\r\n              <DialogContent dividers>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label='Name'\r\n                      name='nutrientName'\r\n                      variant='outlined'\r\n                      error={Boolean(touched.nutrientName && errors.nutrientName)}\r\n                      helperText={touched.nutrientName && errors.nutrientName}\r\n                      value={values.nutrientName}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label='Quantity'\r\n                      name='quantity'\r\n                      variant='outlined'\r\n                      error={Boolean(touched.quantity && errors.quantity) || Boolean(touched.quantity_unit && errors.quantity_unit)}\r\n                      helperText={touched.quantity && errors.quantity || (touched.quantity_unit && errors.quantity_unit)}\r\n                      value={values.quantity}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      InputProps={{\r\n                        classes: {\r\n                          adornedEnd: classes.textareaAdornedEnd\r\n                        },\r\n                        endAdornment: <UnitSelect id='quantity_unit' option={UnitDropdown} name='quantity_unit' value={values.quantity_unit} onChange={handleChange} onBlur={handleBlur} />\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label='Protein ( g )'\r\n                      name='protein'\r\n                      variant='outlined'\r\n                      error={Boolean(touched.protein && errors.protein)}\r\n                      helperText={(touched.protein && errors.protein)}\r\n                      value={values.protein}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label='Fat ( g )'\r\n                      name='fat'\r\n                      variant='outlined'\r\n                      error={Boolean(touched.fat && errors.fat)}\r\n                      helperText={touched.fat && errors.fat}\r\n                      value={values.fat}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label='Carbs ( g )'\r\n                      name='carbs'\r\n                      variant='outlined'\r\n                      error={Boolean(touched.carbs && errors.carbs)}\r\n                      helperText={touched.carbs && errors.carbs}\r\n                      value={values.carbs}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label='Calories ( kcal )'\r\n                      name='calories'\r\n                      variant='outlined'\r\n                      error={Boolean(touched.calories && errors.calories)}\r\n                      helperText={touched.calories && errors.calories}\r\n                      value={values.calories}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <Button\r\n                      fullWidth\r\n                      className={classes.themeButton}\r\n                      variant='contained'\r\n                      color='default'\r\n                      onClick={(e) => handleAddBenifits(e)}\r\n                      endIcon={<ControlPointIcon />}\r\n                    >\r\n                      Add Benefits\r\n                    </Button>\r\n                  </Grid>\r\n\r\n                  {values?.benfits?.map((data: any, index: any) => {\r\n                    return (\r\n                      <>\r\n                        <Grid item xs={11}>\r\n                          <TextField\r\n                            fullWidth\r\n                            label='Benefits'\r\n                            name={`benfits[${index}]`}\r\n                            variant='outlined'\r\n                            error={Boolean(\r\n                              touched?.benfits &&\r\n                              touched?.benfits[index] &&\r\n                              errors?.benfits &&\r\n                              (errors?.benfits[index] as any)\r\n                            )}\r\n                            helperText={\r\n                              touched?.benfits &&\r\n                              touched?.benfits[index] &&\r\n                              errors?.benfits &&\r\n                              (errors?.benfits[index] as any)\r\n                            }\r\n                            value={data}\r\n                            onChange={(e) => handleBenifitChange(e, index)}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={1}>\r\n                          <Button\r\n                            fullWidth\r\n                            className={classes.deleteButton}\r\n                            variant='contained'\r\n                            color='secondary'\r\n                            onClick={() =>\r\n                              removeBenifits(data)\r\n                            }\r\n                          >\r\n                            <DeleteIcon />\r\n                          </Button>\r\n                        </Grid>\r\n                      </>\r\n                    )\r\n                  })}\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      multiline\r\n                      label='Description'\r\n                      name='description'\r\n                      variant='outlined'\r\n                      error={Boolean(touched.description && errors.description)}\r\n                      helperText={touched.description && errors.description}\r\n                      value={values.description}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item md={12} xs={12}>\r\n                    <input\r\n                      name='image'\r\n                      ref={imageRef}\r\n                      type='file'\r\n                      accept='.jpg,.png,jpeg'\r\n                      onChange={onImageChange}\r\n                      onBlur={handleBlur}\r\n                      hidden\r\n                    />\r\n                    <Button\r\n                      fullWidth\r\n                      className={classes.themeButton}\r\n                      variant='contained'\r\n                      color='default'\r\n                      onClick={() => imageRef.current.click()}\r\n                      startIcon={<CloudUploadIcon />}\r\n                    >\r\n                      Upload Image\r\n                    </Button>\r\n                    <FormControl\r\n                      error={Boolean(\r\n                        touched?.image?.file && errors?.image?.file\r\n                      )}\r\n                    >\r\n                      <FormHelperText>\r\n                        {touched?.image?.file &&\r\n                          errors?.image?.file}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item md={12} xs={12}>\r\n                    {values.image?.prevImage && (\r\n                      <img\r\n                        className={classes.imageView}\r\n                        src={values.image?.prevImage}\r\n                      />\r\n                    )}\r\n                  </Grid>\r\n                </Grid>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={onClose} variant='outlined' color='secondary'>\r\n                  Cancel\r\n                </Button>\r\n\r\n                <Button\r\n                  className={classes.themeButton}\r\n                  onClick={() => submitForm()}\r\n                  disabled={isSubmitting}\r\n                  variant='outlined'\r\n                >\r\n                  {isSubmitting ? (\r\n                    <CircularProgress size={24} style={{ color: 'white' }} />\r\n                  ) : (\r\n                    okBtnText\r\n                  )}\r\n                </Button>\r\n              </DialogActions>\r\n            </>\r\n          )}\r\n        </Formik>\r\n\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ViewIngredientModel = (props: any) => {\r\n  const { isOpen, title, onClose, data } = props;\r\n  const classes = useStyles();\r\n  const [formValue, setFormValue] = useState(data);\r\n  console.log(formValue)\r\n\r\n  useEffect(() => {\r\n    setFormValue(data);\r\n  }, [props]);\r\n\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      fullWidth\r\n      maxWidth='md'\r\n      aria-labelledby='dialog-view-title'\r\n      open={isOpen}\r\n    >\r\n      <DialogTitle id='dialog-view-title' onClose={onClose}>\r\n        {title}\r\n      </DialogTitle>\r\n\r\n      <DialogContent dividers>\r\n        <Paper >\r\n          <Table>\r\n            <TableBody>\r\n              <TableRow >\r\n                <TableCell>Name</TableCell>\r\n                <TableCell><strong>{formValue?.name}</strong></TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Calories</TableCell>\r\n                <TableCell><strong>{formValue?.calories} Kcal</strong></TableCell>\r\n              </TableRow>\r\n              <TableRow >\r\n                <TableCell>Carbs</TableCell>\r\n                <TableCell><strong>{formValue?.carbs} g</strong></TableCell>\r\n              </TableRow>\r\n              <TableRow >\r\n                <TableCell>Fat</TableCell>\r\n                <TableCell><strong>{formValue?.fat} g</strong></TableCell>\r\n              </TableRow>\r\n              <TableRow >\r\n                <TableCell>Protein</TableCell>\r\n                <TableCell><strong>{formValue?.protein} g</strong></TableCell>\r\n              </TableRow>\r\n              <TableRow >\r\n                <TableCell>Quantity</TableCell>\r\n                <TableCell><strong>{formValue?.quantity} {formValue?.quantity_unit}</strong></TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n\r\n        <Paper style={{ marginTop: '20px' }} >\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align='center'><strong>#</strong></TableCell>\r\n                <TableCell align='center'><strong>Benifits</strong></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {formValue?.benfits?.map((item: any, index: any) => {\r\n                return (\r\n                  <TableRow>\r\n                    <TableCell align='center'>{index + 1}</TableCell>\r\n                    <TableCell align='center'>{item}</TableCell>\r\n                  </TableRow>\r\n                )\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n\r\n        <Typography style={{ marginTop: '20px' }} variant='h4'>Description</Typography>\r\n        <Typography style={{ marginTop: '10px' }} variant='h5'>{formValue?.description}</Typography>\r\n\r\n        <Grid style={{ marginTop: '20px' }} container>\r\n          <Grid item md={12} xs={12}>\r\n            {formValue?.image && (\r\n              <img className={classes.imageView} src={formValue?.image?.url} />\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={onClose} variant='outlined' color='secondary'>\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default NutritionIngredients;\r\n"],"sourceRoot":""}