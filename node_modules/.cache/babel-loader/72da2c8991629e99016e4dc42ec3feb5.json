{"ast":null,"code":"import _objectSpread from\"D:/Pyramidion/WebApp/Izze-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:/Pyramidion/WebApp/Izze-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useLayoutEffect,useRef,useState}from'react';import{Button,Card,CircularProgress,Grid,Table,TableBody,TableCell,TableRow,TextField}from'@material-ui/core';import{Autocomplete}from'@material-ui/lab';import{makeStyles}from'@material-ui/styles';import{Formik}from'formik';import clsx from'clsx';import*as Yup from'yup';import getDropValues,{DietTypeDrop,FitnessGoalDrop,FitnessGoalWomenDrop,LifeStyleDrop,NoOption}from'../../utils/PlanDropdowns';import useSnackbar from'../../hook/useSnackbar';import useService from'../../hook/useService';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{editCardRoot:{padding:theme.spacing(2)},marginLeft1:{marginLeft:theme.spacing(1)},themeButton:{color:theme.palette.white,backgroundColor:theme.palette.green.main,'&:hover':{backgroundColor:theme.palette.green.dark}},actionGrid:{display:'flex',alignItems:\"center\",justifyContent:\"flex-end\"},editButtonDiv:{display:'flex',alignItems:\"center\",justifyContent:\"flex-end\",paddingBottom:theme.spacing(2)}};});var AppNutrition=function AppNutrition(props){var classes=useStyles();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isEdit=_useState2[0],setIsEdit=_useState2[1];var data=props.data,onRefresh=props.onRefresh;var _useState3=useState(data),_useState4=_slicedToArray(_useState3,2),formData=_useState4[0],setFormData=_useState4[1];useEffect(function(){setFormData(props.data);},[props.data]);return/*#__PURE__*/_jsxs(_Fragment,{children:[!isEdit&&/*#__PURE__*/_jsx(\"div\",{className:classes.editButtonDiv,children:/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return setIsEdit(true);},className:classes.themeButton,variant:\"outlined\",children:\"Edit\"})}),!isEdit&&/*#__PURE__*/_jsx(ViewCard,{data:formData}),isEdit&&/*#__PURE__*/_jsx(EditCard,{data:formData,onClose:function onClose(){return setIsEdit(false);},onSuccess:function onSuccess(){return onRefresh();}})]});};var EditCard=function EditCard(props){var classes=useStyles();var onClose=props.onClose,onSuccess=props.onSuccess;var formikRef=useRef(null);var Snackbar=useSnackbar();var _useService=useService(),Post=_useService.Post;var formInitialValue={id:\"\",fitnessGoal:\"\",lifestyle:\"\",diet_type:\"\",weight:0,weightUnit:\"kgs\",height:0,heightUnit:\"cm\"};console.log(props.data);var _useState5=useState(formInitialValue),_useState6=_slicedToArray(_useState5,2),initialValue=_useState6[0],setInitialValue=_useState6[1];var onSubmit=function onSubmit(value,_ref){var setSubmitting=_ref.setSubmitting,resetForm=_ref.resetForm;setSubmitting(true);Post('app/updateMealPlan',value).then(function(res){Snackbar.show(res.message,'success');setSubmitting(false);resetForm();onClose();onSuccess();}).catch(function(err){setSubmitting(false);Snackbar.show(err.message,'error');});};useLayoutEffect(function(){var _props$data=props.data,_id=_props$data._id,fitnessGoal=_props$data.fitnessGoal,lifestyle=_props$data.lifestyle,diet_type=_props$data.diet_type,weight=_props$data.weight,height=_props$data.height;setInitialValue(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{id:_id,fitnessGoal:fitnessGoal,lifestyle:lifestyle,diet_type:diet_type,weight:weight,height:height});});},[props.data]);return/*#__PURE__*/_jsx(Card,{className:classes.editCardRoot,children:/*#__PURE__*/_jsx(Formik,{innerRef:formikRef,enableReinitialize:true,initialValues:initialValue,validationSchema:Yup.object().shape({fitnessGoal:Yup.string().trim().required('Fitness goal is required'),lifestyle:Yup.string().trim().required('Life style is required'),diet_type:Yup.string().trim().required('Diet type is required'),weight:Yup.number().required('Weight is required'),weightUnit:Yup.string().trim().required('Weight unit is required'),height:Yup.number().required('Height is required'),heightUnit:Yup.string().trim().required('Height unit is required')}),onSubmit:onSubmit,children:function children(_ref2){var _props$data2;var values=_ref2.values,errors=_ref2.errors,touched=_ref2.touched,handleChange=_ref2.handleChange,handleBlur=_ref2.handleBlur,setFieldValue=_ref2.setFieldValue,submitForm=_ref2.submitForm,isSubmitting=_ref2.isSubmitting;return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:/*#__PURE__*/_jsx(Autocomplete,{options:((_props$data2=props.data)===null||_props$data2===void 0?void 0:_props$data2.gender)!=='She/Her/Hers'?FitnessGoalDrop:FitnessGoalWomenDrop,value:FitnessGoalDrop.find(function(data){return data.id==values.fitnessGoal;})||NoOption,getOptionLabel:function getOptionLabel(option){return option.name;},getOptionSelected:function getOptionSelected(option){return option.id==values.fitnessGoal;},onChange:function onChange(event,newValue){setFieldValue('fitnessGoal',(newValue===null||newValue===void 0?void 0:newValue.id)||'');},onBlur:handleBlur,renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{label:\"Fitness goals\",variant:\"outlined\",error:Boolean(touched.fitnessGoal&&errors.fitnessGoal),helperText:touched.fitnessGoal&&errors.fitnessGoal,inputProps:_objectSpread({},params.inputProps)}));}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:/*#__PURE__*/_jsx(Autocomplete,{options:LifeStyleDrop,value:LifeStyleDrop.find(function(data){return data.id==values.lifestyle;})||NoOption,getOptionLabel:function getOptionLabel(option){return option.name;},getOptionSelected:function getOptionSelected(option){return option.id==values.lifestyle;},onChange:function onChange(event,newValue){setFieldValue('lifestyle',(newValue===null||newValue===void 0?void 0:newValue.id)||'');},onBlur:handleBlur,renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{label:\"Life style\",variant:\"outlined\",error:Boolean(touched.lifestyle&&errors.lifestyle),helperText:touched.lifestyle&&errors.lifestyle,inputProps:_objectSpread({},params.inputProps)}));}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:/*#__PURE__*/_jsx(Autocomplete,{options:DietTypeDrop,value:DietTypeDrop.find(function(data){return data.id==values.diet_type;})||NoOption,getOptionLabel:function getOptionLabel(option){return option.name;},getOptionSelected:function getOptionSelected(option){return option.id==values.diet_type;},onChange:function onChange(event,newValue){setFieldValue('diet_type',(newValue===null||newValue===void 0?void 0:newValue.id)||'');},onBlur:handleBlur,renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{label:\"Diet Types\",variant:\"outlined\",error:Boolean(touched.diet_type&&errors.diet_type),helperText:touched.diet_type&&errors.diet_type,inputProps:_objectSpread({},params.inputProps)}));}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Weight\",name:\"weight\",variant:\"outlined\",error:Boolean(touched.weight&&errors.weight),helperText:touched.weight&&errors.weight,value:values===null||values===void 0?void 0:values.weight,onChange:handleChange,onBlur:handleBlur,InputProps:{endAdornment:values===null||values===void 0?void 0:values.weightUnit}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Height\",name:\"height\",variant:\"outlined\",error:Boolean(touched.height&&errors.height),helperText:touched.height&&errors.height,value:values===null||values===void 0?void 0:values.height,onChange:handleChange,onBlur:handleBlur,InputProps:{endAdornment:values===null||values===void 0?void 0:values.heightUnit}})}),/*#__PURE__*/_jsxs(Grid,{className:classes.actionGrid,item:true,xs:12,children:[/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return onClose();},variant:\"outlined\",color:\"secondary\",children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{className:clsx(classes.themeButton,classes.marginLeft1),onClick:function onClick(){return submitForm();},disabled:isSubmitting,variant:\"outlined\",children:isSubmitting?/*#__PURE__*/_jsx(CircularProgress,{size:24,style:{color:'white'}}):'Update'})]})]})});}})});};var ViewCard=function ViewCard(props){var classes=useStyles();var data=props.data;var _useState7=useState({}),_useState8=_slicedToArray(_useState7,2),formData=_useState8[0],setFormData=_useState8[1];useEffect(function(){setFormData(data);},[props]);return/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(Table,{children:/*#__PURE__*/_jsxs(TableBody,{children:[/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Fitness Goals\"}),/*#__PURE__*/_jsx(TableCell,{children:getDropValues(FitnessGoalDrop,formData===null||formData===void 0?void 0:formData.fitnessGoal)})]}),/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Life Style\"}),/*#__PURE__*/_jsx(TableCell,{children:getDropValues(LifeStyleDrop,formData===null||formData===void 0?void 0:formData.lifestyle)})]}),/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Diet Type\"}),/*#__PURE__*/_jsx(TableCell,{children:getDropValues(DietTypeDrop,formData===null||formData===void 0?void 0:formData.diet_type)})]}),/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Height\"}),/*#__PURE__*/_jsx(TableCell,{children:(formData===null||formData===void 0?void 0:formData.height)!==null?formData===null||formData===void 0?void 0:formData.height:''+' '+(formData===null||formData===void 0?void 0:formData.heightUnit)!==null?formData===null||formData===void 0?void 0:formData.heightUnit:''})]}),/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Weight\"}),/*#__PURE__*/_jsx(TableCell,{children:(formData===null||formData===void 0?void 0:formData.weight)!==null?formData===null||formData===void 0?void 0:formData.weight:''+' '+(formData===null||formData===void 0?void 0:formData.weightUnit)!==null?formData===null||formData===void 0?void 0:formData.weightUnit:''})]})]})})});};export default AppNutrition;","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/pages/AppUsers/AppNutrition.tsx"],"names":["React","useEffect","useLayoutEffect","useRef","useState","Button","Card","CircularProgress","Grid","Table","TableBody","TableCell","TableRow","TextField","Autocomplete","makeStyles","Formik","clsx","Yup","getDropValues","DietTypeDrop","FitnessGoalDrop","FitnessGoalWomenDrop","LifeStyleDrop","NoOption","useSnackbar","useService","useStyles","theme","editCardRoot","padding","spacing","marginLeft1","marginLeft","themeButton","color","palette","white","backgroundColor","green","main","dark","actionGrid","display","alignItems","justifyContent","editButtonDiv","paddingBottom","AppNutrition","props","classes","isEdit","setIsEdit","data","onRefresh","formData","setFormData","EditCard","onClose","onSuccess","formikRef","Snackbar","Post","formInitialValue","id","fitnessGoal","lifestyle","diet_type","weight","weightUnit","height","heightUnit","console","log","initialValue","setInitialValue","onSubmit","value","setSubmitting","resetForm","then","res","show","message","catch","err","_id","prevState","object","shape","string","trim","required","number","values","errors","touched","handleChange","handleBlur","setFieldValue","submitForm","isSubmitting","gender","find","option","name","event","newValue","params","Boolean","inputProps","endAdornment","ViewCard"],"mappings":"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","sourcesContent":["import React, { memo, useEffect, useLayoutEffect, useRef, useState } from 'react';\r\nimport {\r\n  Button,\r\n  Card, CircularProgress, Grid, Table, TableBody, TableCell,\r\n  TableRow,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Formik } from 'formik';\r\nimport clsx from 'clsx';\r\nimport * as Yup from 'yup';\r\nimport getDropValues, { DietTypeDrop, FitnessGoalDrop, FitnessGoalWomenDrop, LifeStyleDrop, NoOption } from '../../utils/PlanDropdowns';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport useService from '../../hook/useService';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  editCardRoot: {\r\n    padding: theme.spacing(2)\r\n  },\r\n  marginLeft1: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  themeButton: {\r\n    color: theme.palette.white,\r\n\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n  },\r\n  actionGrid: {\r\n    display: 'flex',\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\"\r\n  },\r\n  editButtonDiv: {\r\n    display: 'flex',\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    paddingBottom: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst AppNutrition = (props: any) => {\r\n  const classes = useStyles();\r\n  const [isEdit, setIsEdit] = useState(false)\r\n  const { data, onRefresh } = props;\r\n  const [formData, setFormData] = useState<any>(data);\r\n  useEffect(() => {\r\n    setFormData(props.data)\r\n  }, [props.data]);\r\n\r\n  return (\r\n    <>\r\n      {!isEdit && <div className={classes.editButtonDiv}>\r\n        <Button onClick={() => setIsEdit(true)} className={classes.themeButton} variant='outlined'>\r\n          Edit\r\n        </Button>\r\n      </div>\r\n      }\r\n      {!isEdit && <ViewCard data={formData} />}\r\n      {isEdit && <EditCard data={formData} onClose={() => setIsEdit(false)} onSuccess={() => onRefresh()} />}\r\n    </>\r\n  );\r\n};\r\n\r\nconst EditCard = (props: any) => {\r\n  const classes = useStyles();\r\n  const { onClose, onSuccess } = props;\r\n  const formikRef = useRef<any>(null);\r\n  const Snackbar = useSnackbar();\r\n  const { Post } = useService();\r\n\r\n  const formInitialValue = {\r\n    id: \"\",\r\n    fitnessGoal: \"\",\r\n    lifestyle: \"\",\r\n    diet_type: \"\",\r\n    weight: 0,\r\n    weightUnit: \"kgs\",\r\n    height: 0,\r\n    heightUnit: \"cm\"\r\n  }\r\n\r\n  console.log(props.data)\r\n\r\n  const [initialValue, setInitialValue] = useState<any>(formInitialValue);\r\n\r\n  const onSubmit = (value: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n\r\n    Post('app/updateMealPlan', value)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onClose();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    const { _id, fitnessGoal, lifestyle, diet_type, weight, height } = props.data\r\n    setInitialValue((prevState: any) => ({ ...prevState, id: _id, fitnessGoal, lifestyle, diet_type, weight, height }))\r\n  }, [props.data]);\r\n\r\n\r\n  return (\r\n    <Card className={classes.editCardRoot}>\r\n      <Formik\r\n        innerRef={formikRef}\r\n        enableReinitialize\r\n        initialValues={initialValue}\r\n        validationSchema={\r\n          Yup.object().shape({\r\n            fitnessGoal: Yup.string().trim().required('Fitness goal is required'),\r\n            lifestyle: Yup.string().trim().required('Life style is required'),\r\n            diet_type: Yup.string().trim().required('Diet type is required'),\r\n            weight: Yup.number().required('Weight is required'),\r\n            weightUnit: Yup.string().trim().required('Weight unit is required'),\r\n            height: Yup.number().required('Height is required'),\r\n            heightUnit: Yup.string().trim().required('Height unit is required'),\r\n          })\r\n        }\r\n        onSubmit={onSubmit}\r\n      >\r\n        {({ values, errors, touched, handleChange, handleBlur, setFieldValue, submitForm, isSubmitting }) => (\r\n          <>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={4}>\r\n                <Autocomplete\r\n                  options={props.data?.gender !== 'She/Her/Hers' ? FitnessGoalDrop : FitnessGoalWomenDrop}\r\n                  value={FitnessGoalDrop.find((data: any) => data.id == values.fitnessGoal) || NoOption}\r\n                  getOptionLabel={(option: any) => option.name}\r\n                  getOptionSelected={(option) => option.id == values.fitnessGoal}\r\n                  onChange={(event: any, newValue: any) => {\r\n                    setFieldValue('fitnessGoal', newValue?.id || '');\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  renderInput={(params: any) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label='Fitness goals'\r\n                      variant='outlined'\r\n                      error={Boolean(touched.fitnessGoal && errors.fitnessGoal)}\r\n                      helperText={touched.fitnessGoal && errors.fitnessGoal}\r\n                      inputProps={{\r\n                        ...params.inputProps,\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={4}>\r\n                <Autocomplete\r\n                  options={LifeStyleDrop}\r\n                  value={LifeStyleDrop.find((data: any) => data.id == values.lifestyle) || NoOption}\r\n                  getOptionLabel={(option: any) => option.name}\r\n                  getOptionSelected={(option) => option.id == values.lifestyle}\r\n                  onChange={(event: any, newValue: any) => {\r\n                    setFieldValue('lifestyle', newValue?.id || '');\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  renderInput={(params: any) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label='Life style'\r\n                      variant='outlined'\r\n                      error={Boolean(touched.lifestyle && errors.lifestyle)}\r\n                      helperText={touched.lifestyle && errors.lifestyle}\r\n                      inputProps={{\r\n                        ...params.inputProps,\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={4}>\r\n                <Autocomplete\r\n                  options={DietTypeDrop}\r\n                  value={DietTypeDrop.find((data: any) => data.id == values.diet_type) || NoOption}\r\n                  getOptionLabel={(option: any) => option.name}\r\n                  getOptionSelected={(option) => option.id == values.diet_type}\r\n                  onChange={(event: any, newValue: any) => {\r\n                    setFieldValue('diet_type', newValue?.id || '');\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  renderInput={(params: any) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label='Diet Types'\r\n                      variant='outlined'\r\n                      error={Boolean(touched.diet_type && errors.diet_type)}\r\n                      helperText={touched.diet_type && errors.diet_type}\r\n                      inputProps={{\r\n                        ...params.inputProps,\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  label='Weight'\r\n                  name='weight'\r\n                  variant='outlined'\r\n                  error={Boolean(touched.weight && errors.weight)}\r\n                  helperText={touched.weight && errors.weight}\r\n                  value={values?.weight}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  InputProps={{\r\n                    endAdornment: values?.weightUnit\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  label='Height'\r\n                  name='height'\r\n                  variant='outlined'\r\n                  error={Boolean(touched.height && errors.height)}\r\n                  helperText={touched.height && errors.height}\r\n                  value={values?.height}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  InputProps={{\r\n                    endAdornment: values?.heightUnit\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid className={classes.actionGrid} item xs={12}>\r\n                <Button onClick={() => onClose()} variant='outlined' color='secondary'>\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  className={clsx(classes.themeButton, classes.marginLeft1)}\r\n                  onClick={() => submitForm()}\r\n                  disabled={isSubmitting}\r\n                  variant='outlined'\r\n                >\r\n                  {isSubmitting ? (\r\n                    <CircularProgress size={24} style={{ color: 'white' }} />\r\n                  ) : 'Update'}\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst ViewCard = (props: any) => {\r\n  const classes = useStyles();\r\n\r\n  const { data } = props;\r\n  const [formData, setFormData] = useState<any>({});\r\n  useEffect(() => {\r\n    setFormData(data)\r\n  }, [props]);\r\n\r\n  return (\r\n    <Card>\r\n      <Table>\r\n        <TableBody>\r\n          <TableRow >\r\n            <TableCell>Fitness Goals</TableCell>\r\n            <TableCell>{getDropValues(FitnessGoalDrop, formData?.fitnessGoal)}</TableCell>\r\n          </TableRow>\r\n          <TableRow >\r\n            <TableCell>Life Style</TableCell>\r\n            <TableCell>{getDropValues(LifeStyleDrop, formData?.lifestyle)}</TableCell>\r\n          </TableRow>\r\n          <TableRow >\r\n            <TableCell>Diet Type</TableCell>\r\n            <TableCell>{getDropValues(DietTypeDrop, formData?.diet_type)}</TableCell>\r\n          </TableRow>\r\n          <TableRow >\r\n            <TableCell>Height</TableCell>\r\n            <TableCell>{formData?.height !== null ? formData?.height : '' + ' ' + formData?.heightUnit !== null ? formData?.heightUnit : ''}</TableCell>\r\n            {/* <TableCell>{formData?.height + ' ' + formData?.heightUnit}</TableCell> */}\r\n          </TableRow>\r\n          <TableRow >\r\n            <TableCell>Weight</TableCell>\r\n            <TableCell>{formData?.weight !== null ? formData?.weight : '' + ' ' + formData?.weightUnit !== null ? formData?.weightUnit : ''}</TableCell>\r\n            {/* <TableCell>{formData?.weight + ' ' + formData?.weightUnit}</TableCell> */}\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </Card>\r\n  );\r\n};\r\n\r\n\r\nexport default AppNutrition;\r\n"]},"metadata":{},"sourceType":"module"}