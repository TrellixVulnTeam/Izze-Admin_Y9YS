{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pyramidion\\\\WebApp\\\\Izze-Admin\\\\src\\\\pages\\\\SignIn\\\\SignIn.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useNavigate } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { IngredientsRoute } from '../../Routes/RoutesConstants';\nimport 'firebase/auth';\nimport { AuthStateChange, signInWithCredenrials } from '../../utils/firebaseUtils';\nimport useSnackbar from '../../hook/useSnackbar';\nimport useService from '../../hook/useService';\nimport { useStore } from '../../Mobx/Helpers/UseStore';\nimport Loader from '../../components/Loader/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  loginStyle: {\n    width: '80%',\n    backgroundColor: 'white',\n    margin: 'auto',\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(22),\n    borderRadius: '10px',\n    boxShadow: ' 0px 20px 40px #0000001F',\n    [theme.breakpoints.down('md')]: {\n      width: '90%'\n    }\n  },\n  SigninTextStyle: {\n    textAlign: 'start',\n    paddingLeft: theme.spacing(3),\n    paddingBottom: theme.spacing(2),\n    paddingTop: theme.spacing(1),\n    fontWeight: 500,\n    color: '#41A58D'\n  },\n  textboxStyle: {\n    paddingTop: theme.spacing(1)\n  },\n  textboxStyle1: {\n    paddingTop: theme.spacing(5)\n  },\n  textfieldStyle: {\n    width: '90%'\n  },\n  forgotpasswordStyle: {\n    paddingTop: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    textAlign: 'end',\n    textDecoration: 'underline',\n    cursor: 'pointer'\n  },\n  buttonStyle: {\n    display: 'flex',\n    flex: 1,\n    justifyContent: 'space-between',\n    padding: theme.spacing(3.5)\n  },\n  signUpbutton: {\n    width: '40%',\n    backgroundColor: 'white',\n    border: '2px solid #41A58D',\n    color: '#41A58D',\n    textTransform: 'capitalize',\n    '&:hover': {\n      backgroundColor: '#41A58D',\n      color: 'white'\n    }\n  },\n  signinButton: {\n    width: '40%',\n    backgroundColor: '#41A58D',\n    color: 'white',\n    textTransform: 'capitalize',\n    '&:hover': {\n      backgroundColor: 'white',\n      color: '#41A58D',\n      border: '2px solid #41A58D'\n    }\n  },\n  textfields: {\n    paddingLeft: theme.spacing(3)\n  },\n  divider: {\n    width: '85%',\n    marginLeft: theme.spacing(3)\n  },\n  errors: {\n    textAlign: 'initial',\n    fontWeight: 400,\n    fontSize: 12,\n    color: 'red',\n    marginTop: theme.spacing(1)\n  }\n}));\nconst validationSchema = Yup.object().shape({\n  userEmail: Yup.string().email('Enter the valid Email.').required('Required *.'),\n  userPassword: Yup.string().min(8, 'Password must be atleast 8 character.').required('Required *.')\n});\n\nfunction SignIn(props) {\n  _s();\n\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const theme = useTheme();\n  const Snackbar = useSnackbar();\n  const {\n    Post\n  } = useService();\n  const {\n    UserStore\n  } = useStore();\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [authLoading, setAuthLoading] = React.useState(true);\n  const [loginCredentials, setLoginCredentials] = React.useState('');\n  const [invalidUserEmail, setInvalidUserEmail] = React.useState(false);\n  const [invalidUserPassword, setInvalidUserPassword] = React.useState(false);\n\n  const loginUser = value => {\n    setLoginCredentials(value);\n    setIsLoading(true);\n    signInWithCredenrials(value.userEmail, value.userPassword).then(response => {\n      setIsLoading(false);\n      localStorage.setItem('uid', response.user.uid);\n      UserStore.setIdToken(response.user.uid);\n    }).catch(error => {\n      console.log('Firebase Login Error', error);\n      Snackbar.show(error.message, 'error');\n      setIsLoading(false);\n    });\n  };\n\n  const authStateChanged = user => {\n    if (user) {\n      navigate(IngredientsRoute);\n      setAuthLoading(true);\n    } else {\n      setAuthLoading(false);\n    }\n\n    console.log(user);\n  };\n\n  useEffect(() => {\n    const unsubscribe = AuthStateChange(authStateChanged);\n    return () => unsubscribe();\n  }, []); // const handleKeyPress = (e: any) => {\n  //   if (e.key === 'Enter') {\n  //     loginUser(loginCredentials.userEmail, loginCredentials.userPassword);\n  //   }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(AuthLoader, {\n    loading: authLoading,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 12,\n        lg: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 12,\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.loginStyle,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              className: classes.SigninTextStyle,\n              children: \"SignIn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              className: classes.divider\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.textfields,\n              children: /*#__PURE__*/_jsxDEV(Formik, {\n                validationSchema: validationSchema,\n                initialValues: {\n                  userEmail: '',\n                  userPassword: ''\n                },\n                onSubmit: loginUser,\n                children: props => {\n                  const {\n                    values,\n                    errors,\n                    handleChange,\n                    handleSubmit\n                  } = props;\n                  return /*#__PURE__*/_jsxDEV(\"form\", {\n                    onSubmit: handleSubmit,\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: classes.textboxStyle,\n                      children: [/*#__PURE__*/_jsxDEV(TextField, {\n                        type: \"text\",\n                        className: classes.textfieldStyle,\n                        value: values.userEmail,\n                        onChange: handleChange('userEmail'),\n                        label: \"Enter Email\" // onKeyPress={handleKeyPress}\n\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 190,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(Typography, {\n                          className: classes.errors,\n                          children: invalidUserEmail ? 'Invalid email, Please enter the valid email.' : errors.userEmail\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 199,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 198,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 189,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: classes.textboxStyle1,\n                      children: [/*#__PURE__*/_jsxDEV(TextField, {\n                        type: \"password\",\n                        value: values.userPassword,\n                        onChange: handleChange('userPassword'),\n                        className: classes.textfieldStyle,\n                        label: \"Enter Password\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 207,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(Typography, {\n                          className: classes.errors,\n                          children: invalidUserPassword ? 'Invalid password, Please enter the valid password.' : errors.userPassword\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 215,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 214,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 206,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      className: classes.forgotpasswordStyle,\n                      children: \"Forgot Password ?\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 222,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: classes.buttonStyle,\n                      children: [/*#__PURE__*/_jsxDEV(Button, {\n                        className: classes.signUpbutton,\n                        children: \"SignUp\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 226,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Button, {\n                        type: \"submit\",\n                        style: isMobile && isLoading ? {\n                          width: '50%'\n                        } : {},\n                        className: classes.signinButton,\n                        children: [isLoading ? 'Signing In' : 'Sign In', isLoading ? /*#__PURE__*/_jsxDEV(\"i\", {\n                          style: {\n                            fontSize: 15,\n                            marginLeft: 20\n                          },\n                          className: \"fas fa-spinner fa-pulse\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 238,\n                          columnNumber: 31\n                        }, this) : '']\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 229,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 225,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 23\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 12,\n        lg: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignIn, \"c2Z+uDQbnKHRwj/zYuB19A+bWUU=\", false, function () {\n  return [useStyles, useNavigate, useTheme, useSnackbar, useService, useStore, useMediaQuery];\n});\n\n_c = SignIn;\n\nconst AuthLoader = ({\n  loading,\n  children\n}) => {\n  _s2();\n\n  const [aLoading, setALoading] = useState(loading);\n  useEffect(() => {\n    setALoading(loading);\n  }, [loading]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: aLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 24\n    }, this) : children\n  }, void 0, false);\n};\n\n_s2(AuthLoader, \"RzWMk7TtzMth6FZJrtvfx6Y6fbM=\");\n\n_c2 = AuthLoader;\nexport default SignIn;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SignIn\");\n$RefreshReg$(_c2, \"AuthLoader\");","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/pages/SignIn/SignIn.tsx"],"names":["React","useEffect","useState","Typography","Grid","TextField","Button","Divider","makeStyles","useNavigate","Formik","Yup","useTheme","useMediaQuery","IngredientsRoute","AuthStateChange","signInWithCredenrials","useSnackbar","useService","useStore","Loader","useStyles","theme","loginStyle","width","backgroundColor","margin","padding","spacing","marginTop","borderRadius","boxShadow","breakpoints","down","SigninTextStyle","textAlign","paddingLeft","paddingBottom","paddingTop","fontWeight","color","textboxStyle","textboxStyle1","textfieldStyle","forgotpasswordStyle","paddingRight","textDecoration","cursor","buttonStyle","display","flex","justifyContent","signUpbutton","border","textTransform","signinButton","textfields","divider","marginLeft","errors","fontSize","validationSchema","object","shape","userEmail","string","email","required","userPassword","min","SignIn","props","classes","navigate","Snackbar","Post","UserStore","isMobile","isLoading","setIsLoading","authLoading","setAuthLoading","loginCredentials","setLoginCredentials","invalidUserEmail","setInvalidUserEmail","invalidUserPassword","setInvalidUserPassword","loginUser","value","then","response","localStorage","setItem","user","uid","setIdToken","catch","error","console","log","show","message","authStateChanged","unsubscribe","values","handleChange","handleSubmit","AuthLoader","loading","children","aLoading","setALoading"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport firebase from 'firebase/app';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { LoginApi } from '../../Services/Api';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { DashboardRoute, IngredientsRoute } from '../../Routes/RoutesConstants';\r\nimport 'firebase/auth';\r\nimport {\r\n  AuthStateChange,\r\n  signInWithCredenrials,\r\n} from '../../utils/firebaseUtils';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport { PostApi } from '../../utils/ApiService';\r\nimport useService from '../../hook/useService';\r\nimport { useStore } from '../../Mobx/Helpers/UseStore';\r\nimport Loader from '../../components/Loader/Loader';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  loginStyle: {\r\n    width: '80%',\r\n    backgroundColor: 'white',\r\n    margin: 'auto',\r\n    padding: theme.spacing(2),\r\n    marginTop: theme.spacing(22),\r\n    borderRadius: '10px',\r\n    boxShadow: ' 0px 20px 40px #0000001F',\r\n    [theme.breakpoints.down('md')]: {\r\n      width: '90%',\r\n    },\r\n  },\r\n  SigninTextStyle: {\r\n    textAlign: 'start',\r\n    paddingLeft: theme.spacing(3),\r\n    paddingBottom: theme.spacing(2),\r\n    paddingTop: theme.spacing(1),\r\n    fontWeight: 500,\r\n    color: '#41A58D',\r\n  },\r\n  textboxStyle: {\r\n    paddingTop: theme.spacing(1),\r\n  },\r\n  textboxStyle1: {\r\n    paddingTop: theme.spacing(5),\r\n  },\r\n  textfieldStyle: {\r\n    width: '90%',\r\n  },\r\n  forgotpasswordStyle: {\r\n    paddingTop: theme.spacing(3),\r\n    paddingRight: theme.spacing(3),\r\n    textAlign: 'end',\r\n    textDecoration: 'underline',\r\n    cursor: 'pointer',\r\n  },\r\n  buttonStyle: {\r\n    display: 'flex',\r\n    flex: 1,\r\n    justifyContent: 'space-between',\r\n    padding: theme.spacing(3.5),\r\n  },\r\n  signUpbutton: {\r\n    width: '40%',\r\n    backgroundColor: 'white',\r\n    border: '2px solid #41A58D',\r\n    color: '#41A58D',\r\n    textTransform: 'capitalize',\r\n    '&:hover': {\r\n      backgroundColor: '#41A58D',\r\n      color: 'white',\r\n    },\r\n  },\r\n  signinButton: {\r\n    width: '40%',\r\n    backgroundColor: '#41A58D',\r\n    color: 'white',\r\n    textTransform: 'capitalize',\r\n    '&:hover': {\r\n      backgroundColor: 'white',\r\n      color: '#41A58D',\r\n      border: '2px solid #41A58D',\r\n    },\r\n  },\r\n  textfields: {\r\n    paddingLeft: theme.spacing(3),\r\n  },\r\n  divider: {\r\n    width: '85%',\r\n    marginLeft: theme.spacing(3),\r\n  },\r\n  errors: {\r\n    textAlign: 'initial',\r\n    fontWeight: 400,\r\n    fontSize: 12,\r\n    color: 'red',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  userEmail: Yup.string()\r\n    .email('Enter the valid Email.')\r\n    .required('Required *.'),\r\n  userPassword: Yup.string()\r\n    .min(8, 'Password must be atleast 8 character.')\r\n    .required('Required *.'),\r\n});\r\n\r\nfunction SignIn(props: any) {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const theme = useTheme();\r\n  const Snackbar = useSnackbar();\r\n  const { Post } = useService();\r\n  const { UserStore } = useStore();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n  const [authLoading, setAuthLoading] = React.useState(true);\r\n  const [loginCredentials, setLoginCredentials] = React.useState<any>('');\r\n  const [invalidUserEmail, setInvalidUserEmail] = React.useState(false);\r\n  const [invalidUserPassword, setInvalidUserPassword] = React.useState(false);\r\n\r\n  const loginUser = (value: any) => {\r\n    setLoginCredentials(value);\r\n    setIsLoading(true);\r\n    signInWithCredenrials(value.userEmail, value.userPassword)\r\n      .then((response: any) => {\r\n        setIsLoading(false);\r\n        localStorage.setItem('uid', response.user.uid);\r\n        UserStore.setIdToken(response.user.uid);\r\n      })\r\n      .catch((error: any) => {\r\n        console.log('Firebase Login Error', error);\r\n        Snackbar.show(error.message, 'error');\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  const authStateChanged = (user: any) => {\r\n    if (user) {\r\n      navigate(IngredientsRoute);\r\n      setAuthLoading(true);\r\n    } else {\r\n      setAuthLoading(false);\r\n    }\r\n    console.log(user);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = AuthStateChange(authStateChanged);\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  // const handleKeyPress = (e: any) => {\r\n  //   if (e.key === 'Enter') {\r\n  //     loginUser(loginCredentials.userEmail, loginCredentials.userPassword);\r\n  //   }\r\n  // };\r\n  return (\r\n    <AuthLoader loading={authLoading}>\r\n      <Grid container>\r\n        <Grid item xs={12} md={12} lg={3}></Grid>\r\n        <Grid item xs={12} md={12} lg={6}>\r\n          <div className={classes.loginStyle}>\r\n            <div>\r\n              <Typography variant='h5' className={classes.SigninTextStyle}>\r\n                SignIn\r\n              </Typography>\r\n              <Divider className={classes.divider} />\r\n              <div className={classes.textfields}>\r\n                <Formik\r\n                  validationSchema={validationSchema}\r\n                  initialValues={{ userEmail: '', userPassword: '' }}\r\n                  onSubmit={loginUser}\r\n                >\r\n                  {(props) => {\r\n                    const { values, errors, handleChange, handleSubmit } =\r\n                      props;\r\n                    return (\r\n                      <form onSubmit={handleSubmit}>\r\n                        <div className={classes.textboxStyle}>\r\n                          <TextField\r\n                            type='text'\r\n                            className={classes.textfieldStyle}\r\n                            value={values.userEmail}\r\n                            onChange={handleChange('userEmail')}\r\n                            label='Enter Email'\r\n                            // onKeyPress={handleKeyPress}\r\n                          />\r\n                          <div>\r\n                            <Typography className={classes.errors}>\r\n                              {invalidUserEmail\r\n                                ? 'Invalid email, Please enter the valid email.'\r\n                                : errors.userEmail}\r\n                            </Typography>\r\n                          </div>\r\n                        </div>\r\n                        <div className={classes.textboxStyle1}>\r\n                          <TextField\r\n                            type='password'\r\n                            value={values.userPassword}\r\n                            onChange={handleChange('userPassword')}\r\n                            className={classes.textfieldStyle}\r\n                            label='Enter Password'\r\n                          />\r\n                          <div>\r\n                            <Typography className={classes.errors}>\r\n                              {invalidUserPassword\r\n                                ? 'Invalid password, Please enter the valid password.'\r\n                                : errors.userPassword}\r\n                            </Typography>\r\n                          </div>\r\n                        </div>\r\n                        <Typography className={classes.forgotpasswordStyle}>\r\n                          Forgot Password ?\r\n                        </Typography>\r\n                        <div className={classes.buttonStyle}>\r\n                          <Button className={classes.signUpbutton}>\r\n                            SignUp\r\n                          </Button>\r\n                          <Button\r\n                            type='submit'\r\n                            style={\r\n                              isMobile && isLoading ? { width: '50%' } : {}\r\n                            }\r\n                            className={classes.signinButton}\r\n                          >\r\n                            {isLoading ? 'Signing In' : 'Sign In'}\r\n                            {isLoading ? (\r\n                              <i\r\n                                style={{ fontSize: 15, marginLeft: 20 }}\r\n                                className='fas fa-spinner fa-pulse'\r\n                              ></i>\r\n                            ) : (\r\n                              ''\r\n                            )}\r\n                          </Button>\r\n                        </div>\r\n                      </form>\r\n                    );\r\n                  }}\r\n                </Formik>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12} md={12} lg={3}></Grid>\r\n      </Grid>\r\n    </AuthLoader>\r\n  );\r\n}\r\n\r\nconst AuthLoader = ({ loading, children }: any) => {\r\n  const [aLoading, setALoading] = useState(loading);\r\n\r\n  useEffect(() => {\r\n    setALoading(loading);\r\n  }, [loading]);\r\n\r\n  return <>{aLoading ? <Loader /> : children}</>;\r\n};\r\n\r\nexport default SignIn;\r\n"]},"metadata":{},"sourceType":"module"}