{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pyramidion\\\\WebApp\\\\Izze-Admin\\\\src\\\\pages\\\\NutritionPlan\\\\NutritionPlan.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Button, Card, CardActions, CardContent, CircularProgress, Dialog, DialogActions, DialogContent, Grid, IconButton, makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, Tooltip, Typography } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { Pagination } from '@material-ui/lab';\nimport { Formik } from 'formik';\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\nimport Page from '../../components/Page/Page';\nimport useService from '../../hook/useService';\nimport useSnackbar from '../../hook/useSnackbar';\nimport { initialValues, validation } from './FormikValues';\nimport AddEditModelTextFields from './AddEditTextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: theme.breakpoints.values.lg,\n    maxWidth: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(3)\n  },\n  content: {\n    padding: 0\n  },\n  tabCard: {\n    marginTop: theme.spacing(3)\n  },\n  themeButton: {\n    color: theme.palette.white,\n    backgroundColor: theme.palette.green.main,\n    '&:hover': {\n      backgroundColor: theme.palette.green.dark\n    }\n  },\n  sEvenly: {\n    display: 'flex',\n    justifyContent: 'space-evenly'\n  },\n  iconPadd: {\n    padding: 5\n  },\n  jCenter: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  actions: {\n    padding: theme.spacing(1),\n    justifyContent: 'center'\n  }\n}));\n\nfunction NutritionPlan() {\n  _s();\n\n  const classes = useStyles();\n  const Snackbar = useSnackbar();\n  const {\n    Post\n  } = useService();\n  const [loading, setLoading] = React.useState(true);\n  const [stateData, setStateData] = useState({\n    page_no: 1,\n    page_limit: 10\n  });\n  const [pageCount, setPageCount] = useState(0);\n  const [nutritionPlanList, setNutritionPlanList] = React.useState([]);\n  const [addEditDialog, setAddEditDialog] = React.useState({\n    isOpen: false,\n    title: '',\n    okBtnText: '',\n    isEdit: false,\n    data: {}\n  });\n\n  const openAddDialog = () => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      title: 'Add Nutrition Plan',\n      isEdit: false,\n      okBtnText: 'Save'\n    }));\n  };\n\n  const openEditDialog = data => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      isEdit: true,\n      data,\n      title: 'Edit Nutrition Plan',\n      okBtnText: 'Edit'\n    }));\n  };\n\n  const listNutritionPlan = async () => {\n    setLoading(true);\n    Post('app/listNutritionPlan', stateData).then(res => {\n      setLoading(false);\n\n      if (!res.error) {\n        setNutritionPlanList(res.data);\n        setPageCount(res.page_count);\n      } else {\n        Snackbar.show(res.message, 'error');\n      }\n    }).catch(err => {\n      console.log('err', err);\n      setLoading(false);\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  const onPageChange = (event, value) => {\n    setStateData(prevState => ({ ...prevState,\n      page_no: value\n    }));\n  };\n\n  const closeAddEditDialog = () => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: false\n    }));\n  };\n\n  const onSuccessAction = () => {\n    listNutritionPlan();\n    closeAddEditDialog();\n  };\n\n  React.useEffect(() => {\n    listNutritionPlan();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Page, {\n      title: \"Nutrition Ingredients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      alignItems: \"flex-end\",\n      container: true,\n      justify: \"space-between\",\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h3\",\n          children: \"Nutrition Ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => openAddDialog(),\n          className: classes.themeButton,\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 24\n          }, this),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 0,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            size: \"small\",\n            placeholder: \"Name\",\n            variant: \"outlined\",\n            name: \"state\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.tabCard,\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        className: classes.content,\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"#\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Goal Plan\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Diet Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Calories\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: [!loading && nutritionPlanList.map((data, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: stateData.page_limit * (stateData.page_no - 1) + index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: data === null || data === void 0 ? void 0 : data.goal_plan\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: data === null || data === void 0 ? void 0 : data.diet_type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: data === null || data === void 0 ? void 0 : data.calories\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: classes.sEvenly,\n                    children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                      title: \"View\",\n                      arrow: true,\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        className: classes.iconPadd // onClick={() => openViewDialog(data)}\n                        ,\n                        children: /*#__PURE__*/_jsxDEV(CenterFocusStrongIcon, {\n                          color: \"primary\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 204,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 200,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                      title: \"Edit\",\n                      arrow: true,\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        className: classes.iconPadd,\n                        onClick: () => openEditDialog(data),\n                        children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                          color: \"action\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 212,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 208,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 207,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                      title: \"Delete\",\n                      arrow: true,\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        className: classes.iconPadd // onClick={() => onDelete(data)}\n                        ,\n                        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                          color: \"secondary\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 220,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 216,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 215,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 21\n              }, this)), loading && /*#__PURE__*/_jsxDEV(TableLoader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 29\n              }, this), !loading && nutritionPlanList.length == 0 && /*#__PURE__*/_jsxDEV(TableNoData, {\n                children: \"No Data Found\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Pagination, {\n          count: pageCount,\n          page: stateData.page_no,\n          onChange: onPageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddEditModel, { ...addEditDialog,\n      onClose: closeAddEditDialog,\n      onSuccess: onSuccessAction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NutritionPlan, \"pgX15EQASUAsL8ppbzTd0qVyIk4=\", false, function () {\n  return [useStyles, useSnackbar, useService];\n});\n\n_c = NutritionPlan;\nexport const AddEditModel = props => {\n  _s2();\n\n  const {\n    isEdit,\n    isOpen,\n    okBtnText = 'OK',\n    onClose,\n    data,\n    title,\n    onSuccess\n  } = props;\n  const formikRef = useRef(null);\n  const classes = useStyles();\n  const Snackbar = useSnackbar();\n  const {\n    Post\n  } = useService();\n  const [initialFormValues, setInitialFormValues] = React.useState({ ...initialValues\n  });\n\n  const onSubmit = (value, helper) => {\n    helper.setSubmitting(true);\n    const postData = { ...value\n    };\n    !isEdit && addData(postData, helper);\n    isEdit && editData(postData, helper);\n  };\n\n  const addData = (data, {\n    setSubmitting,\n    resetForm\n  }) => {// setSubmitting(true);\n    // Post('app/addNutritionPlan', data)\n    //   .then((res: any) => {\n    //     Snackbar.show(res.message, 'success');\n    //     setSubmitting(false);\n    //     resetForm();\n    //     onSuccess();\n    //   })\n    //   .catch((err: any) => {\n    //     setSubmitting(false);\n    //     Snackbar.show(err.message, 'error');\n    //   });\n  };\n\n  const editData = (data, {\n    setSubmitting,\n    resetForm\n  }) => {\n    setSubmitting(true);\n    alert('done');\n    Post('app/editNutritionPlan', data).then(res => {\n      Snackbar.show(res.message, 'success');\n      setSubmitting(false);\n      resetForm();\n      onSuccess();\n    }).catch(err => {\n      setSubmitting(false);\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  useEffect(() => {\n    if (isEdit) {\n      // console.log(data)\n      const {\n        early_morning,\n        breakfast,\n        mid_morning_snack,\n        lunch,\n        evening_snack,\n        dinner,\n        ...rest\n      } = data;\n      const editData = rest; // editData.early_morning = early_morning?.ingredients?.map((data: any)=>{\n      //   return [{\n      //     id : data._id\n      //   }]\n      // })\n\n      console.log(editData);\n      setInitialFormValues(editData);\n    } else {\n      setInitialFormValues(initialFormValues);\n    }\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isOpen,\n      disableBackdropClick: true,\n      disableEscapeKeyDown: true,\n      fullWidth: true,\n      maxWidth: \"md\",\n      \"aria-labelledby\": \"dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"dialog-title\",\n        onClose: onClose,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        innerRef: formikRef,\n        enableReinitialize: true,\n        initialValues: initialFormValues,\n        validationSchema: validation.validationSchema,\n        onSubmit: onSubmit,\n        children: props => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [console.log(props.errors), /*#__PURE__*/_jsxDEV(DialogContent, {\n            dividers: true,\n            children: /*#__PURE__*/_jsxDEV(AddEditModelTextFields, { ...props,\n              formikRef: formikRef,\n              data: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: onClose,\n              variant: \"outlined\",\n              color: \"secondary\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: classes.themeButton,\n              onClick: () => props.submitForm(),\n              disabled: props.isSubmitting,\n              variant: \"outlined\",\n              children: props.isSubmitting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 24,\n                style: {\n                  color: 'white'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 25\n              }, this) : okBtnText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s2(AddEditModel, \"g6yxuaTk5ZDjLsqnoH1UPUJBFAM=\", false, function () {\n  return [useStyles, useSnackbar, useService];\n});\n\n_c2 = AddEditModel;\nexport default NutritionPlan;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NutritionPlan\");\n$RefreshReg$(_c2, \"AddEditModel\");","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/pages/NutritionPlan/NutritionPlan.tsx"],"names":["React","useEffect","useRef","useState","Button","Card","CardActions","CardContent","CircularProgress","Dialog","DialogActions","DialogContent","Grid","IconButton","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TextField","Tooltip","Typography","AddIcon","CenterFocusStrongIcon","DeleteIcon","EditIcon","Pagination","Formik","DialogTitle","TableLoader","TableNoData","Page","useService","useSnackbar","initialValues","validation","AddEditModelTextFields","useStyles","theme","root","width","breakpoints","values","lg","maxWidth","margin","padding","spacing","content","tabCard","marginTop","themeButton","color","palette","white","backgroundColor","green","main","dark","sEvenly","display","justifyContent","iconPadd","jCenter","actions","NutritionPlan","classes","Snackbar","Post","loading","setLoading","stateData","setStateData","page_no","page_limit","pageCount","setPageCount","nutritionPlanList","setNutritionPlanList","addEditDialog","setAddEditDialog","isOpen","title","okBtnText","isEdit","data","openAddDialog","prevState","openEditDialog","listNutritionPlan","then","res","error","page_count","show","message","catch","err","console","log","onPageChange","event","value","closeAddEditDialog","onSuccessAction","map","index","goal_plan","diet_type","calories","length","AddEditModel","props","onClose","onSuccess","formikRef","initialFormValues","setInitialFormValues","onSubmit","helper","setSubmitting","postData","addData","editData","resetForm","alert","early_morning","breakfast","mid_morning_snack","lunch","evening_snack","dinner","rest","validationSchema","errors","submitForm","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { Avatar, Button,  Card, CardActions, CardContent, CircularProgress, Dialog, DialogActions, DialogContent, Grid, IconButton, makeStyles, Paper, Tab, Table, TableBody, FormControl, FormHelperText, TableCell, TableContainer, TableHead, TableRow,TextField,Tooltip,Typography,} from '@material-ui/core';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Pagination, TabContext, TabList, TabPanel } from '@material-ui/lab';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { imageUpload } from '../../utils/FirebaseUtils';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\r\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\r\nimport Page from '../../components/Page/Page';\r\nimport useConfModel from '../../hook/useConfModel';\r\nimport useService from '../../hook/useService';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport {initialValues, validation} from './FormikValues';\r\nimport AddEditModelTextFields from './AddEditTextField'\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  root: {\r\n    width: theme.breakpoints.values.lg,\r\n    maxWidth: '100%',\r\n    margin: '0 auto',\r\n    padding: theme.spacing(3),\r\n  },\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  tabCard: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  themeButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n  },\r\n  sEvenly: {\r\n    display: 'flex',\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  iconPadd: {\r\n    padding: 5,\r\n  },\r\n  jCenter: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(1),\r\n    justifyContent: 'center',\r\n  },\r\n}));\r\n\r\nfunction NutritionPlan() {\r\n  const classes = useStyles();\r\n  const Snackbar = useSnackbar();\r\n  const { Post } = useService();\r\n  const [loading,setLoading] = React.useState(true);\r\n  const [stateData, setStateData] = useState({ page_no: 1, page_limit: 10 });\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const [nutritionPlanList,setNutritionPlanList] = React.useState([])\r\n  const [addEditDialog, setAddEditDialog] = React.useState({\r\n    isOpen: false,\r\n    title: '',\r\n    okBtnText: '',\r\n    isEdit: false,\r\n    data: {},\r\n  });\r\n\r\n  const openAddDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      title: 'Add Nutrition Plan',\r\n      isEdit: false,\r\n      okBtnText: 'Save',\r\n    }));\r\n  };\r\n\r\n  const openEditDialog = (data: any) => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      isEdit: true,\r\n      data,\r\n      title: 'Edit Nutrition Plan',\r\n      okBtnText: 'Edit',\r\n    }));\r\n  };\r\n\r\n  const listNutritionPlan = async () => {\r\n    setLoading(true);\r\n    Post('app/listNutritionPlan', stateData)\r\n      .then((res: any) => {\r\n        setLoading(false);\r\n        if (!res.error) {\r\n          setNutritionPlanList(res.data);\r\n          setPageCount(res.page_count);\r\n        } else {\r\n          Snackbar.show(res.message, 'error');\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        console.log('err', err);\r\n        setLoading(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const onPageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    setStateData((prevState: any) => ({ ...prevState, page_no: value }));\r\n  };\r\n\r\n  const closeAddEditDialog = () =>{\r\n    setAddEditDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  }\r\n\r\n  const onSuccessAction = () => {\r\n    listNutritionPlan();\r\n    closeAddEditDialog();\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    listNutritionPlan();\r\n  },[])\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Page title='Nutrition Ingredients' />\r\n\r\n      <Grid alignItems='flex-end' container justify='space-between' spacing={3}>\r\n        <Grid item>\r\n          <Typography component='h1' variant='h3'>\r\n            Nutrition Ingredients\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant='contained'\r\n            onClick={() => openAddDialog()}\r\n            className={classes.themeButton}\r\n            startIcon={<AddIcon />}\r\n          >\r\n            Add\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* =============Search======== */}\r\n      <Grid container spacing={3}>\r\n        <Grid item>\r\n          <Paper elevation={0}>\r\n            <TextField\r\n              fullWidth\r\n              size='small'\r\n              placeholder='Name'\r\n              variant='outlined'\r\n              name='state'\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Card className={classes.tabCard}>\r\n        <CardContent className={classes.content}>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align='center'>#</TableCell>\r\n                  <TableCell align='center'>Goal Plan</TableCell>\r\n                  <TableCell align='center'>Diet Type</TableCell>\r\n                  <TableCell align='center'>Calories</TableCell>\r\n                  <TableCell align='center'>Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {!loading &&\r\n                  nutritionPlanList.map((data: any, index: number) => (\r\n                    <TableRow hover key={index}>\r\n                      <TableCell align='center'>\r\n                        {stateData.page_limit * (stateData.page_no - 1) + index + 1}\r\n                      </TableCell>\r\n                      <TableCell align='center'>{data?.goal_plan}</TableCell>\r\n                      <TableCell align='center'>{data?.diet_type}</TableCell>\r\n                      <TableCell align='center'>{data?.calories}</TableCell>\r\n                      <TableCell align='center'>\r\n                        <div className={classes.sEvenly}>\r\n                          <Tooltip title='View' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              // onClick={() => openViewDialog(data)}\r\n                            >\r\n                              <CenterFocusStrongIcon color='primary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Edit' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openEditDialog(data)}\r\n                            >\r\n                              <EditIcon color='action' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Delete' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              // onClick={() => onDelete(data)}\r\n                            >\r\n                              <DeleteIcon color='secondary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                {loading && <TableLoader />}\r\n                {!loading && nutritionPlanList.length == 0 && (\r\n                  <TableNoData>No Data Found</TableNoData>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </CardContent>\r\n\r\n        <CardActions className={classes.actions}>\r\n          <Pagination\r\n            count={pageCount}\r\n            page={stateData.page_no}\r\n            onChange={onPageChange}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n\r\n      <AddEditModel {...addEditDialog}  onClose={closeAddEditDialog}  onSuccess={onSuccessAction}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const AddEditModel = (props: any) =>{\r\n   const { isEdit, isOpen, okBtnText = 'OK', onClose,data, title, onSuccess} = props;\r\n   const formikRef = useRef<any>(null);\r\n   const classes = useStyles();\r\n   const Snackbar = useSnackbar();\r\n   const { Post } = useService();\r\n   const [initialFormValues,setInitialFormValues] = React.useState({...initialValues});\r\n   \r\n   const onSubmit = (value: any,helper: any) =>{\r\n        helper.setSubmitting(true)\r\n        const postData = {...value}\r\n        !isEdit && addData(postData, helper);\r\n        isEdit && editData(postData, helper);\r\n   }\r\n\r\n   const addData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    // setSubmitting(true);\r\n    // Post('app/addNutritionPlan', data)\r\n    //   .then((res: any) => {\r\n    //     Snackbar.show(res.message, 'success');\r\n    //     setSubmitting(false);\r\n    //     resetForm();\r\n    //     onSuccess();\r\n    //   })\r\n    //   .catch((err: any) => {\r\n    //     setSubmitting(false);\r\n    //     Snackbar.show(err.message, 'error');\r\n    //   });\r\n  };\r\n\r\n  const editData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n    alert('done')\r\n    Post('app/editNutritionPlan', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if(isEdit){\r\n      // console.log(data)\r\n      const { early_morning, breakfast, mid_morning_snack, lunch, evening_snack, dinner, ...rest} = data;\r\n      const editData = rest;\r\n      // editData.early_morning = early_morning?.ingredients?.map((data: any)=>{\r\n      //   return [{\r\n      //     id : data._id\r\n      //   }]\r\n      // })\r\n      console.log(editData)\r\n      setInitialFormValues(editData);\r\n    } else {\r\n      setInitialFormValues(initialFormValues);\r\n    }\r\n  },[props])\r\n\r\n    return (\r\n        <>\r\n            <Dialog  \r\n            open={isOpen}\r\n            disableBackdropClick\r\n            disableEscapeKeyDown\r\n            fullWidth\r\n            maxWidth='md'\r\n            aria-labelledby='dialog-title'\r\n            >\r\n              <DialogTitle id='dialog-title' onClose={onClose}>\r\n                {title}\r\n                </DialogTitle>\r\n                <Formik \r\n                innerRef={formikRef}\r\n                enableReinitialize\r\n                initialValues={initialFormValues}\r\n                validationSchema = {validation.validationSchema}\r\n                onSubmit={onSubmit}\r\n              >\r\n                {(props: any)=>(\r\n                <>\r\n                {console.log(props.errors)}\r\n                <DialogContent dividers>\r\n                    <AddEditModelTextFields {...props} formikRef = {formikRef} data={data} />\r\n                </DialogContent>\r\n                  \r\n                  <DialogActions>\r\n                    <Button onClick={onClose} variant='outlined' color='secondary'>\r\n                      Cancel\r\n                    </Button>\r\n                    <Button\r\n                      className={classes.themeButton}\r\n                      onClick={() =>props.submitForm()}\r\n                      disabled={props.isSubmitting}\r\n                      variant='outlined'\r\n                    >\r\n                      {props.isSubmitting ? (\r\n                        <CircularProgress size={24} style={{color : 'white'}} />\r\n                      ) : (\r\n                        okBtnText\r\n                      )}\r\n                    </Button>\r\n                  </DialogActions>\r\n                </>\r\n            )}\r\n              </Formik>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NutritionPlan;\r\n"]},"metadata":{},"sourceType":"module"}