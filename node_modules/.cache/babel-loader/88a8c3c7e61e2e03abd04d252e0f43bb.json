{"ast":null,"code":"import Dropcursor from '@tiptap/extension-dropcursor';\nimport Gapcursor from '@tiptap/extension-gapcursor';\nimport Document from '@tiptap/extension-document';\nimport Paragraph from '@tiptap/extension-paragraph';\nimport Text from '@tiptap/extension-text';\nimport History from '@tiptap/extension-history';\nimport Bold from '@tiptap/extension-bold';\nimport Italic from '@tiptap/extension-italic';\nimport Code from '@tiptap/extension-code';\nimport CodeBlock from '@tiptap/extension-code-block';\nimport Heading from '@tiptap/extension-heading';\nimport HardBreak from '@tiptap/extension-hard-break';\nimport Strike from '@tiptap/extension-strike';\nimport Blockquote from '@tiptap/extension-blockquote';\nimport HorizontalRule from '@tiptap/extension-horizontal-rule';\nimport BulletList from '@tiptap/extension-bullet-list';\nimport OrderedList from '@tiptap/extension-ordered-list';\nimport ListItem from '@tiptap/extension-list-item';\nimport { Extension } from '@tiptap/core';\nconst StarterKit = Extension.create({\n  name: 'starterKit',\n\n  addExtensions() {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t;\n\n    const extensions = [];\n\n    if (this.options.blockquote !== false) {\n      extensions.push(Blockquote.configure((_a = this.options) === null || _a === void 0 ? void 0 : _a.blockquote));\n    }\n\n    if (this.options.bold !== false) {\n      extensions.push(Bold.configure((_b = this.options) === null || _b === void 0 ? void 0 : _b.bold));\n    }\n\n    if (this.options.bulletList !== false) {\n      extensions.push(BulletList.configure((_c = this.options) === null || _c === void 0 ? void 0 : _c.bulletList));\n    }\n\n    if (this.options.code !== false) {\n      extensions.push(Code.configure((_d = this.options) === null || _d === void 0 ? void 0 : _d.code));\n    }\n\n    if (this.options.codeBlock !== false) {\n      extensions.push(CodeBlock.configure((_e = this.options) === null || _e === void 0 ? void 0 : _e.codeBlock));\n    }\n\n    if (this.options.document !== false) {\n      extensions.push(Document.configure((_f = this.options) === null || _f === void 0 ? void 0 : _f.document));\n    }\n\n    if (this.options.dropcursor !== false) {\n      extensions.push(Dropcursor.configure((_g = this.options) === null || _g === void 0 ? void 0 : _g.dropcursor));\n    }\n\n    if (this.options.gapcursor !== false) {\n      extensions.push(Gapcursor.configure((_h = this.options) === null || _h === void 0 ? void 0 : _h.gapcursor));\n    }\n\n    if (this.options.hardBreak !== false) {\n      extensions.push(HardBreak.configure((_j = this.options) === null || _j === void 0 ? void 0 : _j.hardBreak));\n    }\n\n    if (this.options.heading !== false) {\n      extensions.push(Heading.configure((_k = this.options) === null || _k === void 0 ? void 0 : _k.heading));\n    }\n\n    if (this.options.history !== false) {\n      extensions.push(History.configure((_l = this.options) === null || _l === void 0 ? void 0 : _l.history));\n    }\n\n    if (this.options.horizontalRule !== false) {\n      extensions.push(HorizontalRule.configure((_m = this.options) === null || _m === void 0 ? void 0 : _m.horizontalRule));\n    }\n\n    if (this.options.italic !== false) {\n      extensions.push(Italic.configure((_o = this.options) === null || _o === void 0 ? void 0 : _o.italic));\n    }\n\n    if (this.options.listItem !== false) {\n      extensions.push(ListItem.configure((_p = this.options) === null || _p === void 0 ? void 0 : _p.listItem));\n    }\n\n    if (this.options.orderedList !== false) {\n      extensions.push(OrderedList.configure((_q = this.options) === null || _q === void 0 ? void 0 : _q.orderedList));\n    }\n\n    if (this.options.paragraph !== false) {\n      extensions.push(Paragraph.configure((_r = this.options) === null || _r === void 0 ? void 0 : _r.paragraph));\n    }\n\n    if (this.options.strike !== false) {\n      extensions.push(Strike.configure((_s = this.options) === null || _s === void 0 ? void 0 : _s.strike));\n    }\n\n    if (this.options.text !== false) {\n      extensions.push(Text.configure((_t = this.options) === null || _t === void 0 ? void 0 : _t.text));\n    }\n\n    return extensions;\n  }\n\n});\n\nfunction defaultExtensions(options) {\n  console.warn('[tiptap warn]: defaultExtensions() is deprecated. please use the default export \"StarterKit\". \"StarterKit\" is a regular extension that contains all other extensions.');\n  return [Document, Paragraph.configure(options === null || options === void 0 ? void 0 : options.paragraph), Text, Bold.configure(options === null || options === void 0 ? void 0 : options.bold), Italic.configure(options === null || options === void 0 ? void 0 : options.italic), Code.configure(options === null || options === void 0 ? void 0 : options.code), Strike.configure(options === null || options === void 0 ? void 0 : options.strike), HardBreak.configure(options === null || options === void 0 ? void 0 : options.hardBreak), Heading.configure(options === null || options === void 0 ? void 0 : options.heading), Blockquote.configure(options === null || options === void 0 ? void 0 : options.blockquote), BulletList.configure(options === null || options === void 0 ? void 0 : options.bulletList), OrderedList.configure(options === null || options === void 0 ? void 0 : options.orderedList), ListItem.configure(options === null || options === void 0 ? void 0 : options.listItem), HorizontalRule.configure(options === null || options === void 0 ? void 0 : options.horizontalRule), CodeBlock.configure(options === null || options === void 0 ? void 0 : options.codeBlock), History.configure(options === null || options === void 0 ? void 0 : options.history), Dropcursor.configure(options === null || options === void 0 ? void 0 : options.dropcursor), Gapcursor];\n}\n\nexport default StarterKit;\nexport { defaultExtensions };","map":null,"metadata":{},"sourceType":"module"}