{"ast":null,"code":"import { Mark, mergeAttributes, markInputRule, markPasteRule } from '@tiptap/core';\nvar inputRegex = /(?:^|\\s)((?:~~)((?:[^~]+))(?:~~))$/gm;\nvar pasteRegex = /(?:^|\\s)((?:~~)((?:[^~]+))(?:~~))/gm;\nvar Strike = Mark.create({\n  name: 'strike',\n  defaultOptions: {\n    HTMLAttributes: {}\n  },\n  parseHTML: function parseHTML() {\n    return [{\n      tag: 's'\n    }, {\n      tag: 'del'\n    }, {\n      tag: 'strike'\n    }, {\n      style: 'text-decoration',\n      consuming: false,\n      getAttrs: function getAttrs(style) {\n        return style.includes('line-through') ? {} : false;\n      }\n    }];\n  },\n  renderHTML: function renderHTML(_ref) {\n    var HTMLAttributes = _ref.HTMLAttributes;\n    return ['s', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n  },\n  addCommands: function addCommands() {\n    return {\n      setStrike: function setStrike() {\n        return function (_ref2) {\n          var commands = _ref2.commands;\n          return commands.setMark('strike');\n        };\n      },\n      toggleStrike: function toggleStrike() {\n        return function (_ref3) {\n          var commands = _ref3.commands;\n          return commands.toggleMark('strike');\n        };\n      },\n      unsetStrike: function unsetStrike() {\n        return function (_ref4) {\n          var commands = _ref4.commands;\n          return commands.unsetMark('strike');\n        };\n      }\n    };\n  },\n  addKeyboardShortcuts: function addKeyboardShortcuts() {\n    var _this = this;\n\n    return {\n      'Mod-Shift-x': function ModShiftX() {\n        return _this.editor.commands.toggleStrike();\n      }\n    };\n  },\n  addInputRules: function addInputRules() {\n    return [markInputRule(inputRegex, this.type)];\n  },\n  addPasteRules: function addPasteRules() {\n    return [markPasteRule(pasteRegex, this.type)];\n  }\n});\nexport default Strike;\nexport { Strike, inputRegex, pasteRegex };","map":null,"metadata":{},"sourceType":"module"}