{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pyramidion\\\\WebApp\\\\Izze-Admin\\\\src\\\\pages\\\\SkinCareRecipe\\\\SkinCareRecipe.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport { Avatar, Button, Card, CardActions, CardContent, CircularProgress, Dialog, DialogActions, DialogContent, FormControl, FormHelperText, Grid, IconButton, List, ListItem, ListItemAvatar, ListItemText, makeStyles, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, Tooltip, Typography } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { Autocomplete, Pagination } from '@material-ui/lab';\nimport { FieldArray, Formik } from 'formik';\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as Yup from 'yup';\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\nimport Page from '../../components/Page/Page';\nimport TipTapEditor from '../../components/TipTapEditor/TipTapEditor';\nimport useConfModel from '../../hook/useConfModel';\nimport useService from '../../hook/useService';\nimport useSnackbar from '../../hook/useSnackbar';\nimport TimerIcon from '@material-ui/icons/Timer';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { uploadNewImage } from '../../utils/CloudinaryUtils';\nimport UnitSelect from '../../components/UnitSelect/UnitSelect';\nimport UnitDropdown from '../../utils/MetricUnits';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: theme.breakpoints.values.lg,\n    maxWidth: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(3)\n  },\n  addIcon: {\n    marginRight: theme.spacing(1)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 700\n  },\n  actions: {\n    padding: theme.spacing(1),\n    justifyContent: 'center'\n  },\n  tabCard: {\n    marginTop: theme.spacing(3)\n  },\n  sEvenly: {\n    display: 'flex',\n    justifyContent: 'space-evenly'\n  },\n  iconPadd: {\n    padding: 5\n  },\n  jCenter: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  imageView: {\n    width: '100%',\n    height: '100%'\n  },\n  themeButton: {\n    color: theme.palette.white,\n    backgroundColor: theme.palette.green.main,\n    '&:hover': {\n      backgroundColor: theme.palette.green.dark\n    }\n  },\n  lColor: {\n    color: 'white'\n  },\n  deleteButton: {\n    width: '100%',\n    height: '50px'\n  },\n  //\n  avatarRoot: {\n    borderRadius: 10,\n    marginRight: 15,\n    width: theme.spacing(10),\n    height: theme.spacing(10)\n  },\n  textPrimary: {\n    fontWeight: 'bold'\n  },\n  textSecondary: {},\n  ingrdientsGridMain: {\n    marginTop: 10\n  },\n  ingredientsAvatarRoot: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n    margin: 'auto'\n  },\n  timeText: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  htmlContentGrid: {\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingTop: theme.spacing(1)\n  },\n  noIngredientsText: {\n    marginBottom: theme.spacing(3),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  textareaAdornedEnd: {\n    paddingRight: 0\n  },\n  htmlContent: {\n    '& ul': {\n      paddingLeft: '1.2rem'\n    },\n    '& p': {\n      textAlign: 'justify'\n    }\n  }\n}));\n\nconst SkinCareRecipe = () => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    Post\n  } = useService();\n  const Snackbar = useSnackbar();\n  const ConfModel = useConfModel();\n  const [stateData, setStateData] = useState({\n    page_no: 1,\n    page_limit: 10\n  });\n  const [pageCount, setPageCount] = useState(0);\n  const [dataList, setDataList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [addEditDialog, setAddEditDialog] = useState({\n    isOpen: false,\n    title: '',\n    okBtnText: '',\n    isEdit: false,\n    data: {}\n  });\n  const [viewDialog, setViewDialog] = useState({\n    isOpen: false,\n    title: '',\n    data: {}\n  });\n\n  const listSkinCare = async () => {\n    setLoading(true);\n    Post('app/listSkinCareRecipe', stateData).then(res => {\n      console.log('listSkinCare', res);\n      setLoading(false);\n\n      if (!res.error) {\n        setDataList(res.data);\n        setPageCount(res.page_count);\n      } else {\n        Snackbar.show(res.message, 'error');\n      }\n    }).catch(err => {\n      console.log('err', err);\n      setLoading(false);\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  const onPageChange = (event, value) => {\n    setStateData(prevState => ({ ...prevState,\n      page_no: value\n    }));\n  };\n\n  const setElipsis = text => {\n    return text.length >= 25 ? `${text.substring(0, 40)}...` : text;\n  };\n\n  const openAddDialog = () => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      isEdit: false,\n      title: 'Add Recpie',\n      okBtnText: 'Save'\n    }));\n  };\n\n  const openEditDialog = data => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      isEdit: true,\n      data,\n      title: 'Edit Recpie',\n      okBtnText: 'Edit'\n    }));\n  };\n\n  const openViewDialog = data => {\n    setViewDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      data,\n      title: 'View Recpie'\n    }));\n  };\n\n  const onDelete = data => {\n    const {\n      openModel,\n      setLoading,\n      closeModel\n    } = ConfModel;\n\n    const submitFunction = () => {\n      setLoading(true);\n      Post('app/deleteSkinCareRecipe', {\n        id: data._id\n      }).then(async res => {\n        setLoading(false);\n        closeModel();\n        onSuccessAction();\n        Snackbar.show(res.message, 'success');\n      }).catch(err => {\n        setLoading(false);\n        Snackbar.show('Internal Server Error', 'error');\n      });\n    };\n\n    openModel(submitFunction);\n  };\n\n  const closeAddEditDialog = () => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: false\n    }));\n  };\n\n  const closeViewDialog = () => {\n    setViewDialog(prevState => ({ ...prevState,\n      isOpen: false\n    }));\n  };\n\n  const onSuccessAction = () => {\n    listSkinCare();\n    closeAddEditDialog();\n  };\n\n  useEffect(() => {\n    listSkinCare();\n  }, [stateData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Page, {\n      title: \"Skin Care Recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      alignItems: \"flex-end\",\n      container: true,\n      justify: \"space-between\",\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h3\",\n          children: \"Skin Care Recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => openAddDialog(),\n          className: classes.themeButton,\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 24\n          }, this),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.tabCard,\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        className: classes.content,\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"#\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: [!loading && dataList.map((data, index) => {\n                var _data$recipe_image;\n\n                return /*#__PURE__*/_jsxDEV(TableRow, {\n                  hover: true,\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: stateData.page_limit * (stateData.page_no - 1) + index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: classes.jCenter,\n                      children: /*#__PURE__*/_jsxDEV(Avatar, {\n                        variant: \"square\",\n                        src: data === null || data === void 0 ? void 0 : (_data$recipe_image = data.recipe_image) === null || _data$recipe_image === void 0 ? void 0 : _data$recipe_image.url\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 331,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 330,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: data === null || data === void 0 ? void 0 : data.recipe_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                      title: data === null || data === void 0 ? void 0 : data.recipe_description,\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: setElipsis(data === null || data === void 0 ? void 0 : data.recipe_description)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 337,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 336,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: classes.sEvenly,\n                      children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                        title: \"View\",\n                        arrow: true,\n                        children: /*#__PURE__*/_jsxDEV(IconButton, {\n                          className: classes.iconPadd,\n                          onClick: () => openViewDialog(data),\n                          children: /*#__PURE__*/_jsxDEV(CenterFocusStrongIcon, {\n                            color: \"primary\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 347,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 343,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 342,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                        title: \"Edit\",\n                        arrow: true,\n                        children: /*#__PURE__*/_jsxDEV(IconButton, {\n                          className: classes.iconPadd,\n                          onClick: () => openEditDialog(data),\n                          children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                            color: \"action\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 355,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 351,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 350,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                        title: \"Delete\",\n                        arrow: true,\n                        children: /*#__PURE__*/_jsxDEV(IconButton, {\n                          className: classes.iconPadd,\n                          onClick: () => onDelete(data),\n                          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                            color: \"secondary\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 363,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 359,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 358,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 341,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 340,\n                    columnNumber: 23\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 21\n                }, this);\n              }), loading && /*#__PURE__*/_jsxDEV(TableLoader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 29\n              }, this), !loading && dataList.length == 0 && /*#__PURE__*/_jsxDEV(TableNoData, {\n                children: \"No Data Found\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Pagination, {\n          count: pageCount,\n          page: stateData.page_no,\n          onChange: onPageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddEditDailog, { ...addEditDialog,\n      onClose: closeAddEditDialog,\n      onSuccess: onSuccessAction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ViewDailog, { ...viewDialog,\n      onClose: closeViewDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SkinCareRecipe, \"n7lqFhswjx4n2RNYmdeOspsVVkI=\", false, function () {\n  return [useStyles, useService, useSnackbar, useConfModel];\n});\n\n_c = SkinCareRecipe;\n\nconst AddEditDailog = props => {\n  _s2();\n\n  const {\n    isOpen,\n    title,\n    onClose,\n    isEdit,\n    data,\n    onSuccess,\n    okBtnText = 'Ok'\n  } = props;\n  const classes = useStyles();\n  const formikRef = useRef(null);\n  const imageRef = useRef(null);\n  const Snackbar = useSnackbar();\n  const {\n    Post\n  } = useService();\n  const [ingredientList, setIngredientList] = useState([]);\n  const [findUnits, setFindUnits] = React.useState(0);\n  const ingredient = {\n    id: '',\n    quantity: '',\n    quantity_unit: ''\n  };\n  const initialFormValue = {\n    recipe_name: '',\n    recipe_description: '',\n    ingredients: [ingredient],\n    preparation_time: '',\n    preparation_description: '',\n    recipe_image: {\n      file: null,\n      prevImage: '',\n      isNew: null\n    }\n  };\n  const [initialValue, setInitialValue] = useState({ ...initialFormValue\n  });\n\n  const listIngredients = async () => {\n    Post('app/listAllSkinCareIngredient', {}).then(res => {\n      if (!res.error) {\n        let ingredients = res.data.map(data => {\n          data.id = data._id;\n          return data;\n        });\n        console.log('listSkinCareIngredient', ingredients);\n        setIngredientList(ingredients);\n      } else {\n        Snackbar.show(res.message, 'error');\n      }\n    }).catch(err => {\n      console.log('err', err);\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  const handleUnitChange = (e, value, i) => {\n    formikRef.current.setFieldValue(`ingredients[${i}].quantity_unit`, value.props.value);\n\n    if (value.props.value === 'None') {\n      setFindUnits(1);\n    }\n  };\n\n  const onImageChange = e => {\n    e.persist();\n    const files = e.target.files;\n\n    if (files && files.length != 0) {\n      const reader = new FileReader();\n      const file = files[0];\n\n      reader.onloadend = () => {\n        formikRef.current.setFieldValue('recipe_image', {\n          file,\n          prevImage: reader.result,\n          isNew: true\n        });\n      };\n\n      reader.readAsDataURL(file);\n    } // else {\n    //   formikRef.current.setFieldValue('recipe_image', {\n    //     file: null,\n    //     prevImage: '',\n    //     isNew: null,\n    //   });\n    // }\n\n  };\n\n  const onSubmit = (value, helper) => {\n    try {\n      helper.setSubmitting(true);\n\n      const render = async () => {\n        const {\n          recipe_image,\n          ...rest\n        } = value;\n        const {\n          file,\n          isNew\n        } = recipe_image;\n        const PostData = rest;\n        PostData.recipe_image = await uploadNewImage(recipe_image);\n        !isEdit && addData(PostData, helper);\n        isEdit && editData(PostData, helper);\n      };\n\n      render();\n    } catch (err) {\n      Snackbar.show('Image Upload Failed', 'error');\n    }\n  };\n\n  const addData = (data, {\n    setSubmitting,\n    resetForm\n  }) => {\n    setSubmitting(true);\n    Post('app/addSkinCareRecipe', data).then(res => {\n      Snackbar.show(res.message, 'success');\n      setSubmitting(false);\n      resetForm();\n      onSuccess();\n    }).catch(err => {\n      setSubmitting(false);\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  const editData = (data, {\n    setSubmitting,\n    resetForm\n  }) => {\n    setSubmitting(true);\n    Post('app/editSkinCareRecipe', data).then(res => {\n      Snackbar.show(res.message, 'success');\n      setSubmitting(false);\n      resetForm();\n      onSuccess();\n    }).catch(err => {\n      setSubmitting(false);\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  const addIngredients = push => {\n    push(ingredient);\n  };\n\n  const removeIngredients = (values, i, setFieldValue) => {\n    let {\n      ingredients\n    } = values;\n    const TempIngredients = ingredients.filter((data, index) => index !== i);\n    setFieldValue('ingredients', TempIngredients);\n  };\n\n  useEffect(() => {\n    if (isEdit) {\n      const {\n        recipe_image,\n        ingredients,\n        _id,\n        ...rest\n      } = data;\n      const EditData = { ...rest,\n        id: _id\n      };\n      const IngredientIds = ingredientList.map(({\n        _id\n      }) => _id);\n      EditData.ingredients = ingredients.filter(({\n        _id\n      }) => IngredientIds.includes(_id)).map(({\n        _id,\n        ...rest\n      }) => ({\n        id: _id,\n        ...rest\n      }));\n      EditData.recipe_image = {\n        file: recipe_image,\n        prevImage: recipe_image === null || recipe_image === void 0 ? void 0 : recipe_image.url,\n        isNew: false\n      };\n      setInitialValue(EditData);\n    } else {\n      setInitialValue(initialFormValue);\n    }\n  }, [props]);\n  useEffect(() => {\n    listIngredients();\n  }, []);\n\n  const handleOnchangeTextEditor = (getData, setFieldValue) => {\n    console.log(getData);\n    setFieldValue('preparation_description', getData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    disableBackdropClick: true,\n    disableEscapeKeyDown: true,\n    fullWidth: true,\n    maxWidth: \"md\",\n    \"aria-labelledby\": \"dialog-title\",\n    open: isOpen,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"dialog-title\",\n      onClose: onClose,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      innerRef: formikRef,\n      enableReinitialize: true,\n      initialValues: initialValue,\n      onSubmit: onSubmit,\n      validationSchema: Yup.object().shape({\n        recipe_name: Yup.string().trim().required('Recipe name is required'),\n        recipe_description: Yup.string().trim().max(250, 'Must be 250 characters or less').required('Recipe Description is required'),\n        preparation_time: Yup.string().trim().required('Preparation time is required'),\n        preparation_description: Yup.string().required('Preparation description is required'),\n        ingredients: Yup.array().of(Yup.object().shape({\n          id: Yup.string().trim().required('Incredients is Required'),\n          ...(findUnits === 1 && {\n            quantity: Yup.string().trim().required('Quality is required')\n          }),\n          ...(findUnits === 0 && {\n            quantity: Yup.number().typeError('Quantity must be in number').required('Quality is required')\n          }),\n          quantity_unit: Yup.string().trim().required('Quantity unit is required')\n        })),\n        recipe_image: Yup.object({\n          file: Yup.mixed().required('A file is required')\n        })\n      }),\n      children: ({\n        values,\n        errors,\n        touched,\n        handleChange,\n        setFieldValue,\n        handleBlur,\n        setFieldTouched,\n        submitForm,\n        isSubmitting\n      }) => {\n        var _touched$recipe_image, _errors$recipe_image, _touched$recipe_image2, _errors$recipe_image2, _values$recipe_image, _values$recipe_image2;\n\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n            dividers: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 12,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Recipe Name\",\n                  name: \"recipe_name\",\n                  variant: \"outlined\",\n                  error: Boolean(touched.recipe_name && errors.recipe_name),\n                  helperText: touched.recipe_name && errors.recipe_name,\n                  value: values.recipe_name,\n                  onChange: handleChange,\n                  onBlur: handleBlur\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 644,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 643,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 12,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  multiline: true,\n                  rowsMax: 250,\n                  label: \"Recipe Description\",\n                  name: \"recipe_description\",\n                  variant: \"outlined\",\n                  error: Boolean(touched.recipe_description && errors.recipe_description),\n                  helperText: touched.recipe_description && errors.recipe_description,\n                  value: values.recipe_description,\n                  onChange: handleChange,\n                  onBlur: handleBlur\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 658,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 657,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FieldArray, {\n                name: \"ingredients\",\n                validateOnChange: true,\n                children: ({\n                  push,\n                  unshift,\n                  remove\n                }) => {\n                  var _values$ingredients;\n\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      md: 12,\n                      xs: 12,\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        fullWidth: true,\n                        className: classes.themeButton,\n                        variant: \"contained\",\n                        color: \"default\",\n                        onClick: () => addIngredients(push),\n                        endIcon: /*#__PURE__*/_jsxDEV(ControlPointIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 691,\n                          columnNumber: 36\n                        }, this),\n                        children: \"Add Ingredients\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 685,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 681,\n                      columnNumber: 23\n                    }, this), values === null || values === void 0 ? void 0 : (_values$ingredients = values.ingredients) === null || _values$ingredients === void 0 ? void 0 : _values$ingredients.map((incValue, i) => {\n                      var _touched$ingredients$3, _errors$ingredients$i3, _touched$ingredients$4, _errors$ingredients$i4, _touched$ingredients$5, _errors$ingredients$i5, _touched$ingredients$6, _errors$ingredients$i6, _values$ingredients2;\n\n                      return /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        container: true,\n                        md: 12,\n                        xs: 12,\n                        direction: \"row\",\n                        spacing: 2,\n                        children: [/*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          md: 5,\n                          xs: 5,\n                          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                            fullWidth: true,\n                            options: ingredientList,\n                            value: ingredientList.find(data => data._id == incValue.id),\n                            getOptionLabel: option => option.name,\n                            getOptionSelected: option => option._id == incValue.id,\n                            onChange: (event, newValue) => {\n                              setFieldValue(`ingredients[${i}].id`, (newValue === null || newValue === void 0 ? void 0 : newValue._id) || '');\n                            },\n                            onBlur: handleBlur,\n                            renderInput: params => {\n                              var _touched$ingredients$, _errors$ingredients$i, _touched$ingredients$2, _errors$ingredients$i2;\n\n                              return /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                                label: \"Ingredients\",\n                                variant: \"outlined\",\n                                error: Boolean((touched === null || touched === void 0 ? void 0 : touched.ingredients) && (touched === null || touched === void 0 ? void 0 : (_touched$ingredients$ = touched.ingredients[i]) === null || _touched$ingredients$ === void 0 ? void 0 : _touched$ingredients$.id) && (errors === null || errors === void 0 ? void 0 : errors.ingredients) && (errors === null || errors === void 0 ? void 0 : (_errors$ingredients$i = errors.ingredients[i]) === null || _errors$ingredients$i === void 0 ? void 0 : _errors$ingredients$i.id)),\n                                helperText: (touched === null || touched === void 0 ? void 0 : touched.ingredients) && (touched === null || touched === void 0 ? void 0 : (_touched$ingredients$2 = touched.ingredients[i]) === null || _touched$ingredients$2 === void 0 ? void 0 : _touched$ingredients$2.id) && (errors === null || errors === void 0 ? void 0 : errors.ingredients) && (errors === null || errors === void 0 ? void 0 : (_errors$ingredients$i2 = errors.ingredients[i]) === null || _errors$ingredients$i2 === void 0 ? void 0 : _errors$ingredients$i2.id),\n                                inputProps: { ...params.inputProps\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 730,\n                                columnNumber: 33\n                              }, this);\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 712,\n                            columnNumber: 29\n                          }, this)\n                        }, i, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 711,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          md: 6,\n                          xs: 6,\n                          children: /*#__PURE__*/_jsxDEV(TextField, {\n                            fullWidth: true,\n                            label: \"Quantity\",\n                            name: `ingredients[${i}].quantity`,\n                            variant: \"outlined\",\n                            error: Boolean((touched === null || touched === void 0 ? void 0 : touched.ingredients) && (touched === null || touched === void 0 ? void 0 : (_touched$ingredients$3 = touched.ingredients[i]) === null || _touched$ingredients$3 === void 0 ? void 0 : _touched$ingredients$3.quantity) && (errors === null || errors === void 0 ? void 0 : errors.ingredients) && (errors === null || errors === void 0 ? void 0 : (_errors$ingredients$i3 = errors.ingredients[i]) === null || _errors$ingredients$i3 === void 0 ? void 0 : _errors$ingredients$i3.quantity) || (touched === null || touched === void 0 ? void 0 : touched.ingredients) && (touched === null || touched === void 0 ? void 0 : (_touched$ingredients$4 = touched.ingredients[i]) === null || _touched$ingredients$4 === void 0 ? void 0 : _touched$ingredients$4.quantity_unit) && (errors === null || errors === void 0 ? void 0 : errors.ingredients) && (errors === null || errors === void 0 ? void 0 : (_errors$ingredients$i4 = errors.ingredients[i]) === null || _errors$ingredients$i4 === void 0 ? void 0 : _errors$ingredients$i4.quantity_unit)),\n                            helperText: (touched === null || touched === void 0 ? void 0 : touched.ingredients) && (touched === null || touched === void 0 ? void 0 : (_touched$ingredients$5 = touched.ingredients[i]) === null || _touched$ingredients$5 === void 0 ? void 0 : _touched$ingredients$5.quantity) && (errors === null || errors === void 0 ? void 0 : errors.ingredients) && (errors === null || errors === void 0 ? void 0 : (_errors$ingredients$i5 = errors.ingredients[i]) === null || _errors$ingredients$i5 === void 0 ? void 0 : _errors$ingredients$i5.quantity) || (touched === null || touched === void 0 ? void 0 : touched.ingredients) && (touched === null || touched === void 0 ? void 0 : (_touched$ingredients$6 = touched.ingredients[i]) === null || _touched$ingredients$6 === void 0 ? void 0 : _touched$ingredients$6.quantity_unit) && (errors === null || errors === void 0 ? void 0 : errors.ingredients) && (errors === null || errors === void 0 ? void 0 : (_errors$ingredients$i6 = errors.ingredients[i]) === null || _errors$ingredients$i6 === void 0 ? void 0 : _errors$ingredients$i6.quantity_unit),\n                            value: incValue.quantity,\n                            onChange: handleChange,\n                            onBlur: handleBlur,\n                            InputProps: {\n                              classes: {\n                                adornedEnd: classes.textareaAdornedEnd\n                              },\n                              endAdornment: /*#__PURE__*/_jsxDEV(UnitSelect, {\n                                id: \"quantity_unit\",\n                                option: UnitDropdown,\n                                name: `ingredients[${i}].quantity_unit`,\n                                value: incValue.quantity_unit,\n                                onChange: (e, value) => handleUnitChange(e, value, i),\n                                onBlur: handleBlur\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 776,\n                                columnNumber: 47\n                              }, this)\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 756,\n                            columnNumber: 29\n                          }, this)\n                        }, i, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 755,\n                          columnNumber: 27\n                        }, this), (values === null || values === void 0 ? void 0 : (_values$ingredients2 = values.ingredients) === null || _values$ingredients2 === void 0 ? void 0 : _values$ingredients2.length) > 1 && /*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          md: 1,\n                          xs: 1,\n                          children: /*#__PURE__*/_jsxDEV(Button, {\n                            fullWidth: true,\n                            className: classes.deleteButton,\n                            variant: \"contained\",\n                            color: \"secondary\",\n                            onClick: () => remove(i),\n                            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 789,\n                              columnNumber: 33\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 782,\n                            columnNumber: 31\n                          }, this)\n                        }, i, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 781,\n                          columnNumber: 29\n                        }, this)]\n                      }, i, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 702,\n                        columnNumber: 25\n                      }, this);\n                    })]\n                  }, void 0, true);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 678,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 12,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  multiline: true,\n                  label: \"Preparation Time\",\n                  name: \"preparation_time\",\n                  variant: \"outlined\",\n                  error: Boolean(touched.preparation_time && errors.preparation_time),\n                  helperText: touched.preparation_time && errors.preparation_time,\n                  value: values.preparation_time,\n                  onChange: handleChange,\n                  onBlur: handleBlur\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 800,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 799,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 12,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  error: Boolean((touched === null || touched === void 0 ? void 0 : touched.preparation_description) && (errors === null || errors === void 0 ? void 0 : errors.preparation_description)),\n                  children: [/*#__PURE__*/_jsxDEV(TipTapEditor, {\n                    name: \"preparation_description\",\n                    value: values.preparation_description,\n                    onChange: value => setFieldValue('preparation_description', value),\n                    onBlur: () => setFieldTouched('preparation_description', true, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 826,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                    children: (touched === null || touched === void 0 ? void 0 : touched.preparation_description) && (errors === null || errors === void 0 ? void 0 : errors.preparation_description)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 837,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 819,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 818,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 12,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"recipe_image\",\n                  ref: imageRef,\n                  type: \"file\",\n                  accept: \".jpg,.png,jpeg\",\n                  onChange: onImageChange,\n                  onBlur: handleBlur,\n                  hidden: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 845,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  fullWidth: true,\n                  className: classes.themeButton,\n                  variant: \"contained\",\n                  color: \"default\",\n                  onClick: () => imageRef.current.click(),\n                  startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 860,\n                    columnNumber: 32\n                  }, this),\n                  children: \"Recipe Image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 854,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  error: Boolean((touched === null || touched === void 0 ? void 0 : (_touched$recipe_image = touched.recipe_image) === null || _touched$recipe_image === void 0 ? void 0 : _touched$recipe_image.file) && (errors === null || errors === void 0 ? void 0 : (_errors$recipe_image = errors.recipe_image) === null || _errors$recipe_image === void 0 ? void 0 : _errors$recipe_image.file)),\n                  children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n                    children: (touched === null || touched === void 0 ? void 0 : (_touched$recipe_image2 = touched.recipe_image) === null || _touched$recipe_image2 === void 0 ? void 0 : _touched$recipe_image2.file) && (errors === null || errors === void 0 ? void 0 : (_errors$recipe_image2 = errors.recipe_image) === null || _errors$recipe_image2 === void 0 ? void 0 : _errors$recipe_image2.file)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 869,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 864,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 844,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 12,\n                xs: 12,\n                children: ((_values$recipe_image = values.recipe_image) === null || _values$recipe_image === void 0 ? void 0 : _values$recipe_image.prevImage) && /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: classes.imageView,\n                  src: (_values$recipe_image2 = values.recipe_image) === null || _values$recipe_image2 === void 0 ? void 0 : _values$recipe_image2.prevImage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 878,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 876,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: onClose,\n              variant: \"outlined\",\n              color: \"secondary\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 888,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: classes.themeButton,\n              onClick: () => submitForm(),\n              disabled: isSubmitting,\n              variant: \"outlined\",\n              children: isSubmitting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 24,\n                className: classes.lColor\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 899,\n                columnNumber: 19\n              }, this) : okBtnText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 892,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 887,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 591,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(AddEditDailog, \"5aaGwCNdevqV7JUJl83v2tq3e5k=\", false, function () {\n  return [useStyles, useSnackbar, useService];\n});\n\n_c2 = AddEditDailog;\n\nconst ViewDailog = props => {\n  _s3();\n\n  const {\n    isOpen,\n    title,\n    onClose,\n    data\n  } = props;\n  const classes = useStyles();\n  const [formValue, setFormValue] = useState(data);\n  useEffect(() => {\n    setFormValue(data);\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    disableBackdropClick: true,\n    disableEscapeKeyDown: true,\n    fullWidth: true,\n    maxWidth: \"sm\",\n    \"aria-labelledby\": \"dialog-view-title\",\n    open: isOpen,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"dialog-view-title\",\n      onClose: onClose,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 930,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      children: /*#__PURE__*/_jsxDEV(SkinCareRecipeViewContent, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 935,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 934,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        variant: \"outlined\",\n        color: \"secondary\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 939,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 938,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 922,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(ViewDailog, \"9fAd9pqRjf29KhbDlYBUKf2/COQ=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = ViewDailog;\nexport const SkinCareRecipeViewContent = props => {\n  _s4();\n\n  var _formValue$recipe_ima, _formValue$ingredient, _formValue$ingredient2;\n\n  const {\n    isOpen,\n    title,\n    onClose,\n    data\n  } = props;\n  const classes = useStyles();\n  const [formValue, setFormValue] = useState(data);\n  useEffect(() => {\n    setFormValue(data);\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      children: /*#__PURE__*/_jsxDEV(ListItem, {\n        disableGutters: true,\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            className: classes.avatarRoot,\n            src: formValue === null || formValue === void 0 ? void 0 : (_formValue$recipe_ima = formValue.recipe_image) === null || _formValue$recipe_ima === void 0 ? void 0 : _formValue$recipe_ima.url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 960,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 959,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          classes: {\n            primary: classes.textPrimary,\n            secondary: classes.textSecondary\n          },\n          primary: formValue === null || formValue === void 0 ? void 0 : formValue.recipe_name,\n          secondary: formValue === null || formValue === void 0 ? void 0 : formValue.recipe_description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 962,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 958,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 957,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      align: \"left\",\n      style: {\n        color: '#41A58D'\n      },\n      children: \"INGREDIENTS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 973,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      className: classes.ingrdientsGridMain,\n      justify: \"center\",\n      children: [formValue === null || formValue === void 0 ? void 0 : (_formValue$ingredient = formValue.ingredients) === null || _formValue$ingredient === void 0 ? void 0 : _formValue$ingredient.map((value, index) => {\n        var _value$image;\n\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          md: 3,\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            className: classes.ingredientsAvatarRoot,\n            src: value === null || value === void 0 ? void 0 : (_value$image = value.image) === null || _value$image === void 0 ? void 0 : _value$image.url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 978,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            align: \"center\",\n            children: value === null || value === void 0 ? void 0 : value.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 979,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            align: \"center\",\n            children: value === null || value === void 0 ? void 0 : value.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 980,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 977,\n          columnNumber: 11\n        }, this);\n      }), (formValue === null || formValue === void 0 ? void 0 : (_formValue$ingredient2 = formValue.ingredients) === null || _formValue$ingredient2 === void 0 ? void 0 : _formValue$ingredient2.length) == 0 && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 12,\n        className: classes.noIngredientsText,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"No Ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 985,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 984,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 975,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      align: \"left\",\n      style: {\n        color: '#41A58D'\n      },\n      children: \"PREPARATION\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 990,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      align: \"center\",\n      className: classes.timeText,\n      children: [/*#__PURE__*/_jsxDEV(TimerIcon, {\n        fontSize: \"inherit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 992,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: formValue === null || formValue === void 0 ? void 0 : formValue.preparation_time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 993,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 991,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 12,\n        className: classes.htmlContentGrid,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.htmlContent,\n          dangerouslySetInnerHTML: {\n            __html: formValue === null || formValue === void 0 ? void 0 : formValue.preparation_description\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 998,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 997,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 996,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s4(SkinCareRecipeViewContent, \"9fAd9pqRjf29KhbDlYBUKf2/COQ=\", false, function () {\n  return [useStyles];\n});\n\n_c4 = SkinCareRecipeViewContent;\nexport default SkinCareRecipe;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"SkinCareRecipe\");\n$RefreshReg$(_c2, \"AddEditDailog\");\n$RefreshReg$(_c3, \"ViewDailog\");\n$RefreshReg$(_c4, \"SkinCareRecipeViewContent\");","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/pages/SkinCareRecipe/SkinCareRecipe.tsx"],"names":["Avatar","Button","Card","CardActions","CardContent","CircularProgress","Dialog","DialogActions","DialogContent","FormControl","FormHelperText","Grid","IconButton","List","ListItem","ListItemAvatar","ListItemText","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TextField","Tooltip","Typography","AddIcon","CenterFocusStrongIcon","ControlPointIcon","DeleteIcon","EditIcon","Autocomplete","Pagination","FieldArray","Formik","React","useEffect","useRef","useState","Yup","DialogTitle","TableLoader","TableNoData","Page","TipTapEditor","useConfModel","useService","useSnackbar","TimerIcon","CloudUploadIcon","uploadNewImage","UnitSelect","UnitDropdown","useStyles","theme","root","width","breakpoints","values","lg","maxWidth","margin","padding","spacing","addIcon","marginRight","content","inner","minWidth","actions","justifyContent","tabCard","marginTop","sEvenly","display","iconPadd","jCenter","imageView","height","themeButton","color","palette","white","backgroundColor","green","main","dark","lColor","deleteButton","avatarRoot","borderRadius","textPrimary","fontWeight","textSecondary","ingrdientsGridMain","ingredientsAvatarRoot","timeText","alignItems","htmlContentGrid","paddingLeft","paddingRight","paddingTop","noIngredientsText","marginBottom","textareaAdornedEnd","htmlContent","textAlign","SkinCareRecipe","classes","Post","Snackbar","ConfModel","stateData","setStateData","page_no","page_limit","pageCount","setPageCount","dataList","setDataList","loading","setLoading","addEditDialog","setAddEditDialog","isOpen","title","okBtnText","isEdit","data","viewDialog","setViewDialog","listSkinCare","then","res","console","log","error","page_count","show","message","catch","err","onPageChange","event","value","prevState","setElipsis","text","length","substring","openAddDialog","openEditDialog","openViewDialog","onDelete","openModel","closeModel","submitFunction","id","_id","onSuccessAction","closeAddEditDialog","closeViewDialog","map","index","recipe_image","url","recipe_name","recipe_description","AddEditDailog","props","onClose","onSuccess","formikRef","imageRef","ingredientList","setIngredientList","findUnits","setFindUnits","ingredient","quantity","quantity_unit","initialFormValue","ingredients","preparation_time","preparation_description","file","prevImage","isNew","initialValue","setInitialValue","listIngredients","handleUnitChange","e","i","current","setFieldValue","onImageChange","persist","files","target","reader","FileReader","onloadend","result","readAsDataURL","onSubmit","helper","setSubmitting","render","rest","PostData","addData","editData","resetForm","addIngredients","push","removeIngredients","TempIngredients","filter","EditData","IngredientIds","includes","handleOnchangeTextEditor","getData","object","shape","string","trim","required","max","array","of","number","typeError","mixed","errors","touched","handleChange","handleBlur","setFieldTouched","submitForm","isSubmitting","Boolean","unshift","remove","incValue","find","option","name","newValue","params","inputProps","adornedEnd","endAdornment","click","ViewDailog","formValue","setFormValue","SkinCareRecipeViewContent","primary","secondary","image","__html"],"mappings":"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","sourcesContent":["import {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  FormControl,\r\n  FormHelperText,\r\n  Grid,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  makeStyles,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Tooltip,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\r\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Autocomplete, Pagination } from '@material-ui/lab';\r\nimport { FieldArray, Formik } from 'formik';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport * as Yup from 'yup';\r\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\r\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\r\nimport Page from '../../components/Page/Page';\r\nimport TipTapEditor from '../../components/TipTapEditor/TipTapEditor';\r\nimport useConfModel from '../../hook/useConfModel';\r\nimport useService from '../../hook/useService';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport { imageUpload } from '../../utils/FirebaseUtils';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport { uploadNewImage } from '../../utils/CloudinaryUtils';\r\nimport UnitSelect from '../../components/UnitSelect/UnitSelect';\r\nimport UnitDropdown from '../../utils/MetricUnits';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  root: {\r\n    width: theme.breakpoints.values.lg,\r\n    maxWidth: '100%',\r\n    margin: '0 auto',\r\n    padding: theme.spacing(3),\r\n  },\r\n  addIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  inner: {\r\n    minWidth: 700,\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(1),\r\n    justifyContent: 'center',\r\n  },\r\n  tabCard: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  sEvenly: {\r\n    display: 'flex',\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  iconPadd: {\r\n    padding: 5,\r\n  },\r\n  jCenter: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  imageView: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  themeButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n  },\r\n  lColor: {\r\n    color: 'white',\r\n  },\r\n  deleteButton: {\r\n    width: '100%',\r\n    height: '50px',\r\n  },\r\n  //\r\n  avatarRoot: {\r\n    borderRadius: 10,\r\n    marginRight: 15,\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10),\r\n  },\r\n  textPrimary: {\r\n    fontWeight: 'bold'\r\n  },\r\n  textSecondary: {\r\n  },\r\n  ingrdientsGridMain: {\r\n    marginTop: 10\r\n  },\r\n  ingredientsAvatarRoot: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n    margin: 'auto',\r\n  },\r\n  timeText: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  htmlContentGrid: {\r\n    paddingLeft: theme.spacing(3),\r\n    paddingRight: theme.spacing(3),\r\n    paddingTop: theme.spacing(1),\r\n  },\r\n  noIngredientsText: {\r\n    marginBottom: theme.spacing(3),\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  textareaAdornedEnd: {\r\n    paddingRight: 0\r\n  },\r\n  htmlContent: {\r\n    '& ul': {\r\n      paddingLeft: '1.2rem',\r\n    },\r\n    '& p': {\r\n      textAlign: 'justify',\r\n    }\r\n  }\r\n\r\n}));\r\n\r\nconst SkinCareRecipe = () => {\r\n  const classes = useStyles();\r\n  const { Post } = useService();\r\n  const Snackbar = useSnackbar();\r\n  const ConfModel = useConfModel();\r\n  const [stateData, setStateData] = useState({ page_no: 1, page_limit: 10 });\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const [dataList, setDataList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [addEditDialog, setAddEditDialog] = useState({\r\n    isOpen: false,\r\n    title: '',\r\n    okBtnText: '',\r\n    isEdit: false,\r\n    data: {},\r\n  });\r\n  const [viewDialog, setViewDialog] = useState({\r\n    isOpen: false,\r\n    title: '',\r\n    data: {},\r\n  });\r\n\r\n  const listSkinCare = async () => {\r\n    setLoading(true);\r\n    Post('app/listSkinCareRecipe', stateData)\r\n      .then((res: any) => {\r\n        console.log('listSkinCare', res);\r\n        setLoading(false);\r\n        if (!res.error) {\r\n          setDataList(res.data);\r\n          setPageCount(res.page_count);\r\n        } else {\r\n          Snackbar.show(res.message, 'error');\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        console.log('err', err);\r\n        setLoading(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const onPageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    setStateData((prevState: any) => ({ ...prevState, page_no: value }));\r\n  };\r\n\r\n  const setElipsis = (text: any) => {\r\n    return text.length >= 25 ? `${text.substring(0, 40)}...` : text;\r\n  };\r\n\r\n  const openAddDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      isEdit: false,\r\n      title: 'Add Recpie',\r\n      okBtnText: 'Save',\r\n    }));\r\n  };\r\n\r\n  const openEditDialog = (data: any) => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      isEdit: true,\r\n      data,\r\n      title: 'Edit Recpie',\r\n      okBtnText: 'Edit',\r\n    }));\r\n  };\r\n\r\n  const openViewDialog = (data: any) => {\r\n    setViewDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      data,\r\n      title: 'View Recpie',\r\n    }));\r\n  };\r\n\r\n  const onDelete = (data: any) => {\r\n    const { openModel, setLoading, closeModel } = ConfModel;\r\n    const submitFunction = () => {\r\n      setLoading(true);\r\n      Post('app/deleteSkinCareRecipe', { id: data._id })\r\n        .then(async (res: any) => {\r\n          setLoading(false);\r\n          closeModel();\r\n          onSuccessAction();\r\n          Snackbar.show(res.message, 'success');\r\n        })\r\n        .catch((err: any) => {\r\n          setLoading(false);\r\n          Snackbar.show('Internal Server Error', 'error');\r\n        });\r\n    };\r\n    openModel(submitFunction);\r\n  };\r\n\r\n  const closeAddEditDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const closeViewDialog = () => {\r\n    setViewDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const onSuccessAction = () => {\r\n    listSkinCare();\r\n    closeAddEditDialog();\r\n  };\r\n\r\n  useEffect(() => {\r\n    listSkinCare();\r\n  }, [stateData]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Page title='Skin Care Recipe' />\r\n\r\n      {/* =======Header====== */}\r\n      <Grid alignItems='flex-end' container justify='space-between' spacing={3}>\r\n        <Grid item>\r\n          <Typography component='h1' variant='h3'>\r\n            Skin Care Recipe\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant='contained'\r\n            onClick={() => openAddDialog()}\r\n            className={classes.themeButton}\r\n            startIcon={<AddIcon />}\r\n          >\r\n            Add\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* =============Search======== */}\r\n      {/* <Grid container spacing={3}>\r\n        <Grid item>\r\n          <Paper elevation={0}>\r\n            <TextField\r\n              fullWidth\r\n              size='small'\r\n              placeholder='Name'\r\n              variant='outlined'\r\n              name='state'\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid> */}\r\n\r\n      {/* ========Table With Pagination========= */}\r\n      <Card className={classes.tabCard}>\r\n        <CardContent className={classes.content}>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align='center'>#</TableCell>\r\n                  <TableCell align='center'>Image</TableCell>\r\n                  <TableCell align='center'>Name</TableCell>\r\n                  <TableCell align='center'>Description</TableCell>\r\n                  <TableCell align='center'>Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {!loading &&\r\n                  dataList.map((data: any, index: number) => (\r\n                    <TableRow hover key={index}>\r\n                      <TableCell align='center'>\r\n                        {stateData.page_limit * (stateData.page_no - 1) + index + 1}\r\n                      </TableCell>\r\n                      <TableCell align='center'>\r\n                        <div className={classes.jCenter}>\r\n                          <Avatar variant='square' src={data?.recipe_image?.url} />\r\n                        </div>\r\n                      </TableCell>\r\n                      <TableCell align='center'>{data?.recipe_name}</TableCell>\r\n                      <TableCell align='center'>\r\n                        <Tooltip title={data?.recipe_description}>\r\n                          <span>{setElipsis(data?.recipe_description)}</span>\r\n                        </Tooltip>\r\n                      </TableCell>\r\n                      <TableCell align='center'>\r\n                        <div className={classes.sEvenly}>\r\n                          <Tooltip title='View' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openViewDialog(data)}\r\n                            >\r\n                              <CenterFocusStrongIcon color='primary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Edit' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openEditDialog(data)}\r\n                            >\r\n                              <EditIcon color='action' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Delete' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => onDelete(data)}\r\n                            >\r\n                              <DeleteIcon color='secondary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                {loading && <TableLoader />}\r\n                {!loading && dataList.length == 0 && (\r\n                  <TableNoData>No Data Found</TableNoData>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </CardContent>\r\n\r\n        <CardActions className={classes.actions}>\r\n          <Pagination\r\n            count={pageCount}\r\n            page={stateData.page_no}\r\n            onChange={onPageChange}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n\r\n      {/* ============Add Edit Dialog========== */}\r\n      <AddEditDailog\r\n        {...addEditDialog}\r\n        onClose={closeAddEditDialog}\r\n        onSuccess={onSuccessAction}\r\n      />\r\n\r\n      {/* ============View Dialog========== */}\r\n      <ViewDailog {...viewDialog} onClose={closeViewDialog} />\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface Ingredient {\r\n  id: string;\r\n  quantity: string;\r\n  quantity_unit : string;\r\n}\r\n\r\ninterface Recpie {\r\n  recipe_name: string;\r\n  recipe_description: string;\r\n  ingredients: Ingredient[];\r\n  preparation_time: string;\r\n  preparation_description: string;\r\n  recipe_image: { file: null | any; prevImage: string; isNew: null | Boolean };\r\n}\r\n\r\nconst AddEditDailog = (props: any) => {\r\n  const {\r\n    isOpen,\r\n    title,\r\n    onClose,\r\n    isEdit,\r\n    data,\r\n    onSuccess,\r\n    okBtnText = 'Ok',\r\n  } = props;\r\n  const classes = useStyles();\r\n  const formikRef = useRef<any>(null);\r\n  const imageRef = useRef<any>(null);\r\n  const Snackbar = useSnackbar();\r\n  const { Post } = useService();\r\n  const [ingredientList, setIngredientList] = useState([]);\r\n  const [findUnits, setFindUnits] = React.useState(0) \r\n\r\n  const ingredient: Ingredient = {\r\n    id: '',\r\n    quantity: '',\r\n    quantity_unit : ''\r\n  };\r\n\r\n  const initialFormValue: Recpie = {\r\n    recipe_name: '',\r\n    recipe_description: '',\r\n    ingredients: [ingredient],\r\n    preparation_time: '',\r\n    preparation_description: '',\r\n    recipe_image: { file: null, prevImage: '', isNew: null },\r\n  };\r\n\r\n  const [initialValue, setInitialValue] = useState({ ...initialFormValue });\r\n\r\n  const listIngredients = async () => {\r\n    Post('app/listAllSkinCareIngredient', {})\r\n      .then((res: any) => {\r\n        if (!res.error) {\r\n          let ingredients = res.data.map((data: any) => {\r\n            data.id = data._id;\r\n            return data;\r\n          });\r\n          console.log('listSkinCareIngredient', ingredients);\r\n          setIngredientList(ingredients);\r\n        } else {\r\n          Snackbar.show(res.message, 'error');\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        console.log('err', err);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  \r\n  const handleUnitChange = (e: any, value: any, i: number) =>{\r\n    formikRef.current.setFieldValue(`ingredients[${i}].quantity_unit`, value.props.value)\r\n    if(value.props.value === 'None'){\r\n      setFindUnits(1)\r\n    }\r\n  }\r\n\r\n  const onImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    e.persist();\r\n    const files = e.target.files;\r\n    if (files && files.length != 0) {\r\n      const reader = new FileReader();\r\n      const file = files[0];\r\n      reader.onloadend = () => {\r\n        formikRef.current.setFieldValue('recipe_image', {\r\n          file,\r\n          prevImage: reader.result,\r\n          isNew: true,\r\n        });\r\n      };\r\n      reader.readAsDataURL(file);\r\n    } \r\n    // else {\r\n    //   formikRef.current.setFieldValue('recipe_image', {\r\n    //     file: null,\r\n    //     prevImage: '',\r\n    //     isNew: null,\r\n    //   });\r\n    // }\r\n  };\r\n\r\n  const onSubmit = (value: any, helper: any) => {\r\n    try {\r\n      helper.setSubmitting(true);\r\n      const render = async () => {\r\n        const { recipe_image, ...rest } = value;\r\n        const { file, isNew } = recipe_image;\r\n        const PostData = rest;\r\n\r\n        PostData.recipe_image = await uploadNewImage(recipe_image);\r\n\r\n        !isEdit && addData(PostData, helper);\r\n        isEdit && editData(PostData, helper);\r\n      };\r\n      render();\r\n    } catch (err) {\r\n      Snackbar.show('Image Upload Failed', 'error');\r\n    }\r\n  };\r\n\r\n  const addData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n    Post('app/addSkinCareRecipe', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const editData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n    Post('app/editSkinCareRecipe', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const addIngredients = (push: any) => {\r\n    push(ingredient);\r\n  };\r\n\r\n  const removeIngredients = (values: Recpie, i: number, setFieldValue: any) => {\r\n    let { ingredients } = values;\r\n    const TempIngredients = ingredients.filter(\r\n      (data: any, index: number) => index !== i\r\n    );\r\n    setFieldValue('ingredients', TempIngredients);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isEdit) {\r\n      const { recipe_image, ingredients, _id, ...rest } = data;\r\n      const EditData = { ...rest, id: _id };\r\n      const IngredientIds = ingredientList.map(({ _id }: any) => _id)\r\n      EditData.ingredients = ingredients.filter(({ _id }: any) => IngredientIds.includes(_id)).map(({ _id, ...rest }: any) => ({ id: _id, ...rest }));\r\n      EditData.recipe_image = {\r\n        file: recipe_image,\r\n        prevImage: recipe_image?.url,\r\n        isNew: false,\r\n      };\r\n      setInitialValue(EditData);\r\n    } else {\r\n      setInitialValue(initialFormValue);\r\n    }\r\n  }, [props]);\r\n\r\n  useEffect(() => {\r\n    listIngredients();\r\n  }, []);\r\n\r\n  const handleOnchangeTextEditor = (getData: any, setFieldValue: any) =>{\r\n    console.log(getData);\r\n    setFieldValue('preparation_description',getData)\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      fullWidth\r\n      maxWidth='md'\r\n      aria-labelledby='dialog-title'\r\n      open={isOpen}\r\n    >\r\n      <DialogTitle id='dialog-title' onClose={onClose}>\r\n        {title}\r\n      </DialogTitle>\r\n\r\n      <Formik\r\n        innerRef={formikRef}\r\n        enableReinitialize\r\n        initialValues={initialValue}\r\n        onSubmit={onSubmit}\r\n        validationSchema={Yup.object().shape({\r\n          recipe_name: Yup.string().trim().required('Recipe name is required'),\r\n          recipe_description: Yup.string().trim().max(250, 'Must be 250 characters or less').required('Recipe Description is required'),\r\n          preparation_time: Yup.string()\r\n            .trim()\r\n            .required('Preparation time is required'),\r\n          preparation_description: Yup.string()\r\n            .required('Preparation description is required'),\r\n          ingredients: Yup.array().of(\r\n            Yup.object().shape({\r\n              id: Yup.string().trim().required('Incredients is Required'),\r\n              ...(findUnits === 1 && {quantity: Yup.string().trim().required('Quality is required')}),\r\n              ...(findUnits === 0 && {quantity: Yup.number().typeError('Quantity must be in number').required('Quality is required')}),\r\n              quantity_unit: Yup.string().trim().required('Quantity unit is required'),\r\n            })\r\n          ),\r\n          recipe_image: Yup.object({\r\n            file: Yup.mixed().required('A file is required'),\r\n          }),\r\n        })}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          setFieldValue,\r\n          handleBlur,\r\n          setFieldTouched,\r\n          submitForm,\r\n          isSubmitting,\r\n        }) => (\r\n          <>\r\n            <DialogContent dividers>\r\n              <Grid container spacing={2}>\r\n                <Grid item md={12} xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label='Recipe Name'\r\n                    name='recipe_name'\r\n                    variant='outlined'\r\n                    error={Boolean(touched.recipe_name && errors.recipe_name)}\r\n                    helperText={touched.recipe_name && errors.recipe_name}\r\n                    value={values.recipe_name}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item md={12} xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    multiline\r\n                    rowsMax={250}\r\n                    label='Recipe Description'\r\n                    name='recipe_description'\r\n                    variant='outlined'\r\n                    error={Boolean(\r\n                      touched.recipe_description && errors.recipe_description\r\n                    )}\r\n                    helperText={\r\n                      touched.recipe_description && errors.recipe_description\r\n                    }\r\n                    value={values.recipe_description}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                </Grid>\r\n\r\n\r\n                <FieldArray name=\"ingredients\" validateOnChange>\r\n                  {({ push, unshift, remove }) => (\r\n                    <>\r\n                      <Grid item md={12} xs={12}>\r\n                        {/* <FormControl\r\n                    error={Boolean(touched?.ingredients && errors?.ingredients)}\r\n                  > */}\r\n                        <Button\r\n                          fullWidth\r\n                          className={classes.themeButton}\r\n                          variant='contained'\r\n                          color='default'\r\n                          onClick={() => addIngredients(push)}\r\n                          endIcon={<ControlPointIcon />}\r\n                        >\r\n                          Add Ingredients\r\n                        </Button>\r\n\r\n                        {/* <FormHelperText>\r\n                      {touched?.ingredients && errors?.ingredients}\r\n                    </FormHelperText>\r\n                  </FormControl> */}\r\n                      </Grid>\r\n                      {values?.ingredients?.map((incValue: any, i: number) => (\r\n                        <Grid\r\n                          key={i}\r\n                          item\r\n                          container\r\n                          md={12}\r\n                          xs={12}\r\n                          direction='row'\r\n                          spacing={2}\r\n                        >\r\n                          <Grid key={i} item md={5} xs={5}>\r\n                            <Autocomplete\r\n                              fullWidth\r\n                              options={ingredientList}\r\n                              value={ingredientList.find(\r\n                                (data: any) => data._id == incValue.id\r\n                              )}\r\n                              getOptionLabel={(option: any) => option.name}\r\n                              getOptionSelected={(option) =>\r\n                                option._id == incValue.id\r\n                              }\r\n                              onChange={(event: any, newValue: any) => {\r\n                                setFieldValue(\r\n                                  `ingredients[${i}].id`,\r\n                                  newValue?._id || ''\r\n                                );\r\n                              }}\r\n                              onBlur={handleBlur}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  label='Ingredients'\r\n                                  variant='outlined'\r\n                                  error={Boolean(\r\n                                    touched?.ingredients &&\r\n                                    touched?.ingredients[i]?.id &&\r\n                                    errors?.ingredients &&\r\n                                    (errors?.ingredients[i] as Ingredient)?.id\r\n                                  )}\r\n                                  helperText={\r\n                                    touched?.ingredients &&\r\n                                    touched?.ingredients[i]?.id &&\r\n                                    errors?.ingredients &&\r\n                                    (errors?.ingredients[i] as Ingredient)?.id\r\n                                  }\r\n                                  inputProps={{\r\n                                    ...params.inputProps,\r\n                                  }}\r\n                                  \r\n                                />\r\n                              )}\r\n                            />\r\n                          </Grid>\r\n\r\n                          <Grid key={i} item md={6} xs={6}>\r\n                            <TextField\r\n                              fullWidth\r\n                              label='Quantity'\r\n                              name={`ingredients[${i}].quantity`}\r\n                              variant='outlined'\r\n                              error={Boolean(\r\n                                touched?.ingredients && touched?.ingredients[i]?.quantity && errors?.ingredients && (errors?.ingredients[i] as Ingredient)?.quantity ||\r\n                                touched?.ingredients && touched?.ingredients[i]?.quantity_unit && errors?.ingredients && (errors?.ingredients[i] as Ingredient)?.quantity_unit\r\n                              )}\r\n                              helperText={\r\n                                touched?.ingredients && touched?.ingredients[i]?.quantity && errors?.ingredients && (errors?.ingredients[i] as Ingredient)?.quantity ||\r\n                                touched?.ingredients && touched?.ingredients[i]?.quantity_unit && errors?.ingredients && (errors?.ingredients[i] as Ingredient)?.quantity_unit\r\n                              }\r\n                              value={incValue.quantity}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                              InputProps={{\r\n                                classes: {\r\n                                  adornedEnd: classes.textareaAdornedEnd\r\n                                },\r\n                                endAdornment: <UnitSelect id='quantity_unit' option={UnitDropdown} name={`ingredients[${i}].quantity_unit`} value={incValue.quantity_unit} onChange={(e: any, value: any)=>handleUnitChange(e, value, i)} onBlur={handleBlur} />\r\n                              }}\r\n                            />\r\n                          </Grid>\r\n                          {values?.ingredients?.length > 1 && (\r\n                            <Grid key={i} item md={1} xs={1}>\r\n                              <Button\r\n                                fullWidth\r\n                                className={classes.deleteButton}\r\n                                variant='contained'\r\n                                color='secondary'\r\n                                onClick={() => remove(i)}\r\n                              >\r\n                                <DeleteIcon />\r\n                              </Button>\r\n                            </Grid>\r\n                          )}\r\n                        </Grid>\r\n                      ))}\r\n                    </>\r\n                  )}\r\n                </FieldArray>\r\n\r\n                <Grid item md={12} xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    multiline\r\n                    label='Preparation Time'\r\n                    name='preparation_time'\r\n                    variant='outlined'\r\n                    error={Boolean(\r\n                      touched.preparation_time && errors.preparation_time\r\n                    )}\r\n                    helperText={\r\n                      touched.preparation_time && errors.preparation_time\r\n                    }\r\n                    value={values.preparation_time}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item md={12} xs={12}>\r\n                  <FormControl\r\n                    fullWidth\r\n                    error={Boolean(\r\n                      touched?.preparation_description &&\r\n                      errors?.preparation_description\r\n                    )}\r\n                  >\r\n                    <TipTapEditor\r\n                      name = 'preparation_description'\r\n                      value={values.preparation_description}\r\n                      onChange={(value: any) =>\r\n                        setFieldValue('preparation_description', value)\r\n                      }\r\n                      onBlur={() =>\r\n                        setFieldTouched('preparation_description', true, true)\r\n                      }\r\n                    />\r\n\r\n                    <FormHelperText>\r\n                      {touched?.preparation_description &&\r\n                        errors?.preparation_description}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item md={12} xs={12}>\r\n                  <input\r\n                    name='recipe_image'\r\n                    ref={imageRef}\r\n                    type='file'\r\n                    accept='.jpg,.png,jpeg'\r\n                    onChange={onImageChange}\r\n                    onBlur={handleBlur}\r\n                    hidden\r\n                  />\r\n                  <Button\r\n                    fullWidth\r\n                    className={classes.themeButton}\r\n                    variant='contained'\r\n                    color='default'\r\n                    onClick={() => imageRef.current.click()}\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Recipe Image\r\n                  </Button>\r\n                  <FormControl\r\n                    error={Boolean(\r\n                      touched?.recipe_image?.file && errors?.recipe_image?.file\r\n                    )}\r\n                  >\r\n                    <FormHelperText>\r\n                      {touched?.recipe_image?.file &&\r\n                        errors?.recipe_image?.file}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item md={12} xs={12}>\r\n                  {values.recipe_image?.prevImage && (\r\n                    <img\r\n                      className={classes.imageView}\r\n                      src={values.recipe_image?.prevImage}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n              <Button onClick={onClose} variant='outlined' color='secondary'>\r\n                Cancel\r\n              </Button>\r\n\r\n              <Button\r\n                className={classes.themeButton}\r\n                onClick={() => submitForm()}\r\n                disabled={isSubmitting}\r\n                variant='outlined'\r\n              >\r\n                {isSubmitting ? (\r\n                  <CircularProgress size={24} className={classes.lColor} />\r\n                ) : (\r\n                  okBtnText\r\n                )}\r\n              </Button>\r\n            </DialogActions>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst ViewDailog = (props: any) => {\r\n  const { isOpen, title, onClose, data } = props;\r\n  const classes = useStyles();\r\n  const [formValue, setFormValue] = useState(data);\r\n\r\n  useEffect(() => {\r\n    setFormValue(data);\r\n  }, [props]);\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      fullWidth\r\n      maxWidth='sm'\r\n      aria-labelledby='dialog-view-title'\r\n      open={isOpen}\r\n    >\r\n      <DialogTitle id='dialog-view-title' onClose={onClose}>\r\n        {title}\r\n      </DialogTitle>\r\n\r\n      <DialogContent dividers>\r\n        <SkinCareRecipeViewContent {...props} />\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={onClose} variant='outlined' color='secondary'>\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport const SkinCareRecipeViewContent = (props: any) => {\r\n  const { isOpen, title, onClose, data } = props;\r\n  const classes = useStyles();\r\n  const [formValue, setFormValue] = useState(data);\r\n\r\n  useEffect(() => {\r\n    setFormValue(data);\r\n  }, [props]);\r\n  return (\r\n    <>\r\n      <List>\r\n        <ListItem disableGutters>\r\n          <ListItemAvatar>\r\n            <Avatar className={classes.avatarRoot} src={formValue?.recipe_image?.url} />\r\n          </ListItemAvatar>\r\n          <ListItemText\r\n            classes={{\r\n              primary: classes.textPrimary,\r\n              secondary: classes.textSecondary\r\n            }}\r\n            primary={formValue?.recipe_name}\r\n            secondary={formValue?.recipe_description}\r\n          />\r\n        </ListItem>\r\n      </List>\r\n\r\n      <Typography variant='h6' align='left' style={{ color: '#41A58D' }}>INGREDIENTS</Typography>\r\n\r\n      <Grid container spacing={2} className={classes.ingrdientsGridMain} justify='center'>\r\n        {formValue?.ingredients?.map((value: any, index: any) =>\r\n          <Grid key={index} item xs={4} md={3}>\r\n            <Avatar className={classes.ingredientsAvatarRoot} src={value?.image?.url} />\r\n            <Typography variant='h6' align='center'>{value?.name}</Typography>\r\n            <Typography variant='subtitle2' align='center'>{value?.quantity}</Typography>\r\n          </Grid>\r\n        )}\r\n        {formValue?.ingredients?.length == 0 &&\r\n          <Grid item xs={12} md={12} className={classes.noIngredientsText}>\r\n            <div>No Ingredients</div>\r\n          </Grid>\r\n        }\r\n      </Grid>\r\n\r\n      <Typography variant='h6' align='left' style={{ color: '#41A58D' }}>PREPARATION</Typography>\r\n      <Typography variant='body2' align='center' className={classes.timeText}>\r\n        <TimerIcon fontSize='inherit' />\r\n        <span>{formValue?.preparation_time}</span>\r\n      </Typography>\r\n\r\n      <Grid container >\r\n        <Grid item xs={12} md={12} className={classes.htmlContentGrid}>\r\n          <div className={classes.htmlContent} dangerouslySetInnerHTML={{ __html: formValue?.preparation_description }} />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SkinCareRecipe;\r\n"]},"metadata":{},"sourceType":"module"}