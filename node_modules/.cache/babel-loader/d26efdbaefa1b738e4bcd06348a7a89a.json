{"ast":null,"code":"import { Node, mergeAttributes } from '@tiptap/core';\nconst HardBreak = Node.create({\n  name: 'hardBreak',\n  defaultOptions: {\n    HTMLAttributes: {}\n  },\n  inline: true,\n  group: 'inline',\n  selectable: false,\n\n  parseHTML() {\n    return [{\n      tag: 'br'\n    }];\n  },\n\n  renderHTML({\n    HTMLAttributes\n  }) {\n    return ['br', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes)];\n  },\n\n  addCommands() {\n    return {\n      setHardBreak: () => ({\n        commands\n      }) => {\n        return commands.first([() => commands.exitCode(), () => commands.insertContent({\n          type: this.name\n        })]);\n      }\n    };\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Enter': () => this.editor.commands.setHardBreak(),\n      'Shift-Enter': () => this.editor.commands.setHardBreak()\n    };\n  }\n\n});\nexport default HardBreak;\nexport { HardBreak };","map":{"version":3,"sources":["../src/hard-break.ts"],"names":[],"mappings":";MAiBa,SAAS,GAAG,IAAI,CAAC,MAAL,CAA8B;AACrD,EAAA,IAAI,EAAE,WAD+C;AAGrD,EAAA,cAAc,EAAE;AACd,IAAA,cAAc,EAAE;AADF,GAHqC;AAOrD,EAAA,MAAM,EAAE,IAP6C;AASrD,EAAA,KAAK,EAAE,QAT8C;AAWrD,EAAA,UAAU,EAAE,KAXyC;;AAarD,EAAA,SAAS,GAAA;AACP,WAAO,CACL;AAAE,MAAA,GAAG,EAAE;AAAP,KADK,CAAP;AAGD,GAjBoD;;AAmBrD,EAAA,UAAU,CAAC;AAAE,IAAA;AAAF,GAAD,EAAmB;AAC3B,WAAO,CAAC,IAAD,EAAO,eAAe,CAAC,KAAK,OAAL,CAAa,cAAd,EAA8B,cAA9B,CAAtB,CAAP;AACD,GArBoD;;AAuBrD,EAAA,WAAW,GAAA;AACT,WAAO;AACL,MAAA,YAAY,EAAE,MAAM,CAAC;AAAE,QAAA;AAAF,OAAD,KAAa;AAC/B,eAAO,QAAQ,CAAC,KAAT,CAAe,CACpB,MAAM,QAAQ,CAAC,QAAT,EADc,EAEpB,MAAM,QAAQ,CAAC,aAAT,CAAuB;AAAE,UAAA,IAAI,EAAE,KAAK;AAAb,SAAvB,CAFc,CAAf,CAAP;AAID;AANI,KAAP;AAQD,GAhCoD;;AAkCrD,EAAA,oBAAoB,GAAA;AAClB,WAAO;AACL,mBAAa,MAAM,KAAK,MAAL,CAAY,QAAZ,CAAqB,YAArB,EADd;AAEL,qBAAe,MAAM,KAAK,MAAL,CAAY,QAAZ,CAAqB,YAArB;AAFhB,KAAP;AAID;;AAvCoD,CAA9B,C","sourcesContent":["import { Command, Node, mergeAttributes } from '@tiptap/core'\n\nexport interface HardBreakOptions {\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands {\n    hardBreak: {\n      /**\n       * Add a hard break\n       */\n      setHardBreak: () => Command,\n    }\n  }\n}\n\nexport const HardBreak = Node.create<HardBreakOptions>({\n  name: 'hardBreak',\n\n  defaultOptions: {\n    HTMLAttributes: {},\n  },\n\n  inline: true,\n\n  group: 'inline',\n\n  selectable: false,\n\n  parseHTML() {\n    return [\n      { tag: 'br' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['br', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes)]\n  },\n\n  addCommands() {\n    return {\n      setHardBreak: () => ({ commands }) => {\n        return commands.first([\n          () => commands.exitCode(),\n          () => commands.insertContent({ type: this.name }),\n        ])\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Enter': () => this.editor.commands.setHardBreak(),\n      'Shift-Enter': () => this.editor.commands.setHardBreak(),\n    }\n  },\n})\n"]},"metadata":{},"sourceType":"module"}