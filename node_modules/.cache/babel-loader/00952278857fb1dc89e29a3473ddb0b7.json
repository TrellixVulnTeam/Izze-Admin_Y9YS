{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pyramidion\\\\WebApp\\\\Izze-Admin\\\\src\\\\pages\\\\WorkoutPlan\\\\WorkoutPlan.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$();\n\nimport { Avatar, Button, Card, CardActions, CardContent, CircularProgress, Dialog, DialogActions, DialogContent, Grid, IconButton, makeStyles, Paper, Tab, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, Tooltip, Typography } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AddIcon from '@material-ui/icons/Add';\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { Pagination, TabContext, TabList, TabPanel } from '@material-ui/lab';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { Formik } from 'formik';\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as Yup from 'yup';\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\nimport Page from '../../components/Page/Page';\nimport useConfModel from '../../hook/useConfModel';\nimport useService from '../../hook/useService';\nimport useSnackbar from '../../hook/useSnackbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: theme.breakpoints.values.lg,\n    maxWidth: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(3)\n  },\n  themeButton: {\n    color: theme.palette.white,\n    backgroundColor: theme.palette.green.main,\n    '&:hover': {\n      backgroundColor: theme.palette.green.dark\n    }\n  },\n  dayPaper: {\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: theme.palette.green.main,\n    color: 'white'\n  },\n  lColor: {\n    color: 'white'\n  },\n  tabCard: {\n    marginTop: theme.spacing(3)\n  },\n  content: {\n    padding: 0\n  },\n  mTop: {\n    marginTop: theme.spacing(1.5)\n  },\n  jCenter: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  sEvenly: {\n    display: 'flex',\n    justifyContent: 'space-evenly'\n  },\n  sBetween: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  iconPadd: {\n    padding: 5\n  },\n  actions: {\n    padding: theme.spacing(1),\n    justifyContent: 'center'\n  },\n  ingredientsAvatarStyle: {\n    width: theme.spacing(10),\n    height: theme.spacing(10),\n    margin: 'auto',\n    marginTop: '20px'\n  },\n  //\n  tabRoot: {\n    minWidth: 72\n  },\n  tabIndicator: {\n    backgroundColor: theme.palette.green.main\n  },\n  tabTextColorInherit: {\n    backgroundColor: theme.palette.green.main,\n    color: 'white',\n    border: '1px solid white'\n  },\n  tabPanelRoot: {\n    paddingTop: 0,\n    paddingBottom: 0,\n    width: '100%'\n  },\n  listItemRoot: {\n    backgroundColor: '#7ac0af2b',\n    margin: '10px 0px'\n  },\n  noListItemRoot: {\n    backgroundColor: '#f500571c',\n    margin: '10px 0px'\n  },\n  paperRoot: {\n    display: 'flex'\n  }\n}));\nconst ExperienceDrop = [{\n  id: 'BEGINNER',\n  name: 'Beginner'\n}, {\n  id: 'INTERMEDIATE',\n  name: 'Intermediate'\n}, {\n  id: 'PROFESSIONAL',\n  name: 'Professional'\n}];\nconst PreferredDrop = [{\n  id: 'STRENGTH',\n  name: 'Strength Training'\n}, {\n  id: 'HIIT',\n  name: 'HIIT'\n}];\nconst InterestsDrop = [{\n  id: 'HOME',\n  name: 'Home Workout'\n}, {\n  id: 'GYM',\n  name: 'Gym Workout'\n}];\n\nconst WorkoutPlan = () => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    Post\n  } = useService();\n  const Snackbar = useSnackbar();\n  const ConfModel = useConfModel();\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [stateData, setStateData] = React.useState({\n    page_no: 1,\n    page_limit: 10\n  });\n  const [pageCount, setPageCount] = React.useState(0);\n  const [tableData, setTableData] = React.useState([]);\n  const [addEditDialog, setAddEditDialog] = React.useState({\n    isOpen: false,\n    title: '',\n    okBtnText: '',\n    isEdit: false,\n    data: {}\n  });\n  const [viewDialog, setViewDialog] = useState({\n    isOpen: false,\n    title: '',\n    data: {}\n  });\n\n  const listWorkoutPlan = () => {\n    setIsLoading(true);\n    Post('app/listWorkoutPlan', stateData).then(res => {\n      setIsLoading(false);\n\n      if (!res.error) {\n        setPageCount(res.page_count);\n        setTableData(res.data);\n      } else {\n        Snackbar.show(res.message, 'error');\n      }\n    }).catch(error => {\n      setIsLoading(false);\n      Snackbar.show(error.message, 'error');\n    });\n  };\n\n  const openAddDialog = () => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      title: 'Add Workout Plan',\n      isEdit: false,\n      okBtnText: 'Save'\n    }));\n  };\n\n  const openEditDialog = data => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      isEdit: true,\n      data,\n      title: 'Edit Workout Plan',\n      okBtnText: 'Edit'\n    }));\n  };\n\n  const openViewDialog = data => {\n    setViewDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      data,\n      title: 'View Workout Plan'\n    }));\n  };\n\n  const onDelete = data => {\n    const {\n      openModel,\n      setLoading,\n      closeModel\n    } = ConfModel;\n\n    const submitFunction = () => {\n      setLoading(true);\n      Post('app/deleteWorkoutPlan', {\n        id: data._id\n      }).then(async res => {\n        setLoading(false);\n        closeModel();\n        onSuccessAction();\n        Snackbar.show(res.message, 'success');\n      }).catch(err => {\n        setLoading(false);\n        Snackbar.show('Internal Server Error', 'error');\n      });\n    };\n\n    openModel(submitFunction);\n  };\n\n  const onSuccessAction = () => {\n    listWorkoutPlan();\n    closeAddEditDialog();\n  };\n\n  const closeAddEditDialog = () => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: false\n    }));\n  };\n\n  const closeViewDialog = () => {\n    setViewDialog(prevState => ({ ...prevState,\n      isOpen: false\n    }));\n  };\n\n  const onPageChange = (event, value) => {\n    setStateData(prevState => ({ ...prevState,\n      page_no: value\n    }));\n  };\n\n  const getDropValues = (dropValues, value) => {\n    var _dropValues$find;\n\n    return ((_dropValues$find = dropValues.find(({\n      id\n    }) => id == value)) === null || _dropValues$find === void 0 ? void 0 : _dropValues$find.name) || '';\n  };\n\n  useEffect(() => {\n    listWorkoutPlan();\n  }, [stateData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Page, {\n      title: \"Workout Plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      alignItems: \"flex-end\",\n      container: true,\n      justify: \"space-between\",\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h3\",\n          children: \"Workout Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => openAddDialog(),\n          className: classes.themeButton,\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 24\n          }, this),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.tabCard,\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        className: classes.content,\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"#\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Experience Level\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Preferred Workout\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Interests\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: [!isLoading && tableData.map((data, index) => {\n                return /*#__PURE__*/_jsxDEV(TableRow, {\n                  hover: true,\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: stateData.page_limit * (stateData.page_no - 1) + index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: getDropValues(ExperienceDrop, data === null || data === void 0 ? void 0 : data.experience_level)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: getDropValues(PreferredDrop, data === null || data === void 0 ? void 0 : data.preferred_workout)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: getDropValues(InterestsDrop, data === null || data === void 0 ? void 0 : data.interests)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: classes.sEvenly,\n                      children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                        title: \"View\",\n                        arrow: true,\n                        children: /*#__PURE__*/_jsxDEV(IconButton, {\n                          className: classes.iconPadd,\n                          onClick: () => openViewDialog(data),\n                          children: /*#__PURE__*/_jsxDEV(CenterFocusStrongIcon, {\n                            color: \"primary\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 313,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 309,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 308,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                        title: \"Edit\",\n                        arrow: true,\n                        children: /*#__PURE__*/_jsxDEV(IconButton, {\n                          className: classes.iconPadd,\n                          onClick: () => openEditDialog(data),\n                          children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                            color: \"action\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 321,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 317,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 316,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                        title: \"Delete\",\n                        arrow: true,\n                        children: /*#__PURE__*/_jsxDEV(IconButton, {\n                          className: classes.iconPadd,\n                          onClick: () => onDelete(data),\n                          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                            color: \"secondary\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 329,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 325,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 324,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 307,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 23\n                }, this);\n              }), isLoading && /*#__PURE__*/_jsxDEV(TableLoader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 31\n              }, this), !isLoading && tableData.length == 0 && /*#__PURE__*/_jsxDEV(TableNoData, {\n                children: \"No Data Found\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Pagination, {\n          count: pageCount,\n          page: stateData.page_no,\n          onChange: onPageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddEditDialog, { ...addEditDialog,\n      onClose: closeAddEditDialog,\n      onSuccess: onSuccessAction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this), viewDialog.isOpen && /*#__PURE__*/_jsxDEV(ViewWorkoutPlan, { ...viewDialog,\n      onClose: closeViewDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WorkoutPlan, \"aBSSO2HcRTNYwajZ5vqkuMHONew=\", false, function () {\n  return [useStyles, useService, useSnackbar, useConfModel];\n});\n\n_c = WorkoutPlan;\n\nconst AddEditDialog = props => {\n  _s2();\n\n  const {\n    isEdit,\n    isOpen,\n    okBtnText = 'OK',\n    onClose,\n    data,\n    title,\n    onSuccess\n  } = props;\n  const classes = useStyles();\n  const {\n    Post\n  } = useService();\n  const Snackbar = useSnackbar();\n  const formikRef = useRef(null);\n  const [workoutList, setWorkoutList] = React.useState([]);\n  const workoutInitalValue = {\n    before_workout: [],\n    workout: [],\n    after_workout: []\n  };\n  const initialFormValues = {\n    experience_level: '',\n    preferred_workout: '',\n    interests: '',\n    workouts: Array(7).fill(null).map((d, i) => ({\n      day: i + 1,\n      ...workoutInitalValue\n    }))\n  };\n  const [initialValue, setInitialValue] = React.useState({ ...initialFormValues\n  });\n\n  const listAllWorkout = () => {\n    Post('app/listAllWorkout', {}).then(response => {\n      if (!response.error) {\n        setWorkoutList(response.data);\n      } else {\n        Snackbar.show(response.message, 'error');\n      }\n    }).catch(error => {\n      Snackbar.show(error.message, 'error');\n    });\n  };\n\n  const onSubmit = (value, helper) => {\n    helper.setSubmitting(true);\n    !isEdit && addData(value, helper);\n    isEdit && editData(value, helper);\n  };\n\n  const addData = (data, {\n    setSubmitting,\n    resetForm\n  }) => {\n    setSubmitting(true);\n    Post('app/addWorkoutPlan', data).then(res => {\n      Snackbar.show(res.message, 'success');\n      setSubmitting(false);\n      resetForm();\n      onSuccess();\n    }).catch(err => {\n      const {\n        message = \"Internal Server Error\"\n      } = err.response.data;\n      setSubmitting(false);\n      Snackbar.show(message, 'error');\n    });\n  };\n\n  const editData = (data, {\n    setSubmitting,\n    resetForm\n  }) => {\n    setSubmitting(true);\n    Post('app/editWorkoutPlan', data).then(res => {\n      Snackbar.show(res.message, 'success');\n      setSubmitting(false);\n      resetForm();\n      onSuccess();\n    }).catch(err => {\n      const {\n        message = \"Internal Server Error\"\n      } = err.response.data;\n      setSubmitting(false);\n      Snackbar.show(message, 'error');\n    });\n  };\n\n  useEffect(() => {\n    if (isEdit) {\n      const {\n        workouts,\n        _id,\n        ...rest\n      } = data;\n      const editData = { ...rest,\n        id: _id\n      };\n      const CurrentWorkoutIds = workoutList.map(({\n        _id\n      }) => _id);\n      editData.workouts = workouts.map(data => {\n        data.before_workout = data.before_workout.filter(({\n          _id\n        }) => CurrentWorkoutIds.includes(_id)).map(({\n          _id\n        }) => ({\n          id: _id\n        }));\n        data.workout = data.workout.filter(({\n          _id\n        }) => CurrentWorkoutIds.includes(_id)).map(({\n          _id\n        }) => ({\n          id: _id\n        }));\n        data.after_workout = data.after_workout.filter(({\n          _id\n        }) => CurrentWorkoutIds.includes(_id)).map(({\n          _id\n        }) => ({\n          id: _id\n        }));\n        return data;\n      });\n      console.log('editData', editData);\n      setInitialValue(editData);\n    } else {\n      setInitialValue(initialFormValues);\n    }\n  }, [props, workoutList]);\n  useEffect(() => {\n    listAllWorkout();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isOpen,\n      disableBackdropClick: true,\n      disableEscapeKeyDown: true,\n      fullWidth: true,\n      maxWidth: \"lg\",\n      \"aria-labelledby\": \"dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"dialog-title\",\n        onClose: onClose,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        innerRef: formikRef,\n        enableReinitialize: true,\n        initialValues: initialValue,\n        onSubmit: onSubmit,\n        validationSchema: Yup.object().shape({\n          experience_level: Yup.string().trim().required('Experience Level is required'),\n          preferred_workout: Yup.string().trim().required('Preferred Workout is required'),\n          interests: Yup.string().trim().nullable().required('Interests is required'),\n          workouts: Yup.array().of(Yup.object().shape({\n            before_workout: Yup.array().of(Yup.object().shape({\n              id: Yup.string().trim().required('Before Workout is Required')\n            })),\n            workout: Yup.array().of(Yup.object().shape({\n              id: Yup.string().trim().required('Workout is Required')\n            })),\n            after_workout: Yup.array().of(Yup.object().shape({\n              id: Yup.string().trim().required('After Workout is Required')\n            })),\n            day: Yup.string().trim().required('Day is Required')\n          }))\n        }),\n        children: ({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          setFieldValue,\n          submitForm,\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n            dividers: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 4,\n                children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  options: ExperienceDrop,\n                  value: ExperienceDrop.find(data => data.id == values.experience_level),\n                  getOptionLabel: option => option.name,\n                  getOptionSelected: option => option.id == values.experience_level,\n                  onChange: (event, newValue) => {\n                    setFieldValue('experience_level', (newValue === null || newValue === void 0 ? void 0 : newValue.id) || '');\n                  },\n                  onBlur: handleBlur,\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    label: \"Experience Level\",\n                    variant: \"outlined\",\n                    error: Boolean(touched.experience_level && errors.experience_level),\n                    helperText: touched.experience_level && errors.experience_level,\n                    inputProps: { ...params.inputProps\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 558,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 548,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 4,\n                children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  options: PreferredDrop,\n                  value: PreferredDrop.find(data => data.id == values.preferred_workout),\n                  getOptionLabel: option => option.name,\n                  getOptionSelected: option => option.id == values.preferred_workout,\n                  onChange: (event, newValue) => {\n                    setFieldValue('preferred_workout', (newValue === null || newValue === void 0 ? void 0 : newValue.id) || '');\n                  },\n                  onBlur: handleBlur,\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    label: \"Preferred Workout\",\n                    variant: \"outlined\",\n                    error: Boolean(touched.preferred_workout && errors.preferred_workout),\n                    helperText: touched.preferred_workout && errors.preferred_workout,\n                    inputProps: { ...params.inputProps\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 583,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 573,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 4,\n                children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  options: InterestsDrop,\n                  value: InterestsDrop.find(data => data.id == values.interests),\n                  getOptionLabel: option => option.name,\n                  getOptionSelected: option => option.id == values.interests,\n                  onChange: (event, newValue) => {\n                    setFieldValue('interests', (newValue === null || newValue === void 0 ? void 0 : newValue.id) || null);\n                  },\n                  onBlur: handleBlur,\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    label: \"Interests\",\n                    variant: \"outlined\",\n                    error: Boolean(touched.interests && errors.interests),\n                    helperText: touched.interests && errors.interests,\n                    inputProps: { ...params.inputProps\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 607,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 597,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 596,\n                columnNumber: 19\n              }, this), values.workouts.map((worData, i) => {\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    md: 1,\n                    item: true,\n                    xs: 1,\n                    children: /*#__PURE__*/_jsxDEV(Paper, {\n                      elevation: 0,\n                      component: \"div\",\n                      className: classes.dayPaper,\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        color: \"inherit\",\n                        align: \"center\",\n                        children: `Day - ${worData.day}`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 629,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 624,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 623,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    md: 3,\n                    xs: 3,\n                    children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                      multiple: true,\n                      options: workoutList,\n                      value: workoutList.filter(data => worData.before_workout.map(({\n                        id\n                      }) => id).includes(data._id)),\n                      getOptionLabel: option => option.workout_name,\n                      onChange: (event, newValue) => {\n                        let WorkoutIds = newValue.map(({\n                          _id\n                        }) => ({\n                          id: _id\n                        }));\n                        setFieldValue(`workouts[${i}].before_workout`, WorkoutIds || []);\n                      },\n                      onBlur: handleBlur,\n                      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                        label: \"Pre Workout Warmup\",\n                        variant: \"outlined\",\n                        inputProps: { ...params.inputProps\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 645,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 634,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 633,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    md: 4,\n                    xs: 4,\n                    children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                      multiple: true,\n                      options: workoutList,\n                      value: workoutList.filter(data => worData.workout.map(({\n                        id\n                      }) => id).includes(data._id)),\n                      getOptionLabel: option => option.workout_name,\n                      onChange: (event, newValue) => {\n                        let WorkoutIds = newValue.map(({\n                          _id\n                        }) => ({\n                          id: _id\n                        }));\n                        setFieldValue(`workouts[${i}].workout`, WorkoutIds || []);\n                      },\n                      onBlur: handleBlur,\n                      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                        label: \"Core Exercise\",\n                        variant: \"outlined\",\n                        inputProps: { ...params.inputProps\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 668,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 657,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 656,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    md: 4,\n                    xs: 4,\n                    children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                      multiple: true,\n                      options: workoutList,\n                      value: workoutList.filter(data => worData.after_workout.map(({\n                        id\n                      }) => id).includes(data._id)),\n                      getOptionLabel: option => option.workout_name,\n                      onChange: (event, newValue) => {\n                        let WorkoutIds = newValue.map(({\n                          _id\n                        }) => ({\n                          id: _id\n                        }));\n                        setFieldValue(`workouts[${i}].after_workout`, WorkoutIds || []);\n                      },\n                      onBlur: handleBlur,\n                      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                        label: \"Post Workout Cooldown\",\n                        variant: \"outlined\",\n                        inputProps: { ...params.inputProps\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 692,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 681,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 680,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: onClose,\n              variant: \"outlined\",\n              color: \"secondary\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 710,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: classes.themeButton,\n              onClick: () => submitForm(),\n              disabled: isSubmitting,\n              variant: \"outlined\",\n              children: isSubmitting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 24,\n                className: classes.lColor\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 721,\n                columnNumber: 21\n              }, this) : okBtnText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 714,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 495,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(AddEditDialog, \"U2mZxWKj/E55Jsj0TP3LGDDfVvw=\", false, function () {\n  return [useStyles, useService, useSnackbar];\n});\n\n_c2 = AddEditDialog;\n\nconst ViewWorkoutPlan = props => {\n  _s3();\n\n  const {\n    isOpen,\n    title,\n    onClose,\n    data\n  } = props;\n  const classes = useStyles();\n  const [formValue, setFormValue] = useState(data);\n  const [value, setValue] = React.useState('1');\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const getDropValues = (dropValues, value) => {\n    var _dropValues$find2;\n\n    return ((_dropValues$find2 = dropValues.find(({\n      id\n    }) => id == value)) === null || _dropValues$find2 === void 0 ? void 0 : _dropValues$find2.name) || '';\n  };\n\n  useEffect(() => {\n    console.log('view data', data);\n    setFormValue(data);\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    disableBackdropClick: true,\n    disableEscapeKeyDown: true,\n    fullWidth: true,\n    maxWidth: \"md\",\n    \"aria-labelledby\": \"dialog-view-title\",\n    open: isOpen,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"dialog-view-title\",\n      onClose: onClose,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 764,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: /*#__PURE__*/_jsxDEV(TableBody, {\n            children: [/*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Experience Level\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 773,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: getDropValues(ExperienceDrop, formValue === null || formValue === void 0 ? void 0 : formValue.experience_level)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 774,\n                  columnNumber: 28\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 774,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 772,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Preferred Workout\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 777,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: getDropValues(PreferredDrop, formValue === null || formValue === void 0 ? void 0 : formValue.preferred_workout)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 778,\n                  columnNumber: 28\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 778,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 776,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Interests\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 781,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: getDropValues(InterestsDrop, formValue === null || formValue === void 0 ? void 0 : formValue.interests)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 782,\n                  columnNumber: 28\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 782,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 780,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 771,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 770,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 769,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paperRoot,\n        children: /*#__PURE__*/_jsxDEV(TabContext, {\n          value: value || '',\n          children: [/*#__PURE__*/_jsxDEV(TabList, {\n            classes: {\n              indicator: classes.tabIndicator\n            },\n            onChange: handleChange,\n            orientation: \"vertical\",\n            variant: \"standard\",\n            children: formValue === null || formValue === void 0 ? void 0 : formValue.workouts.map(item => /*#__PURE__*/_jsxDEV(Tab, {\n              classes: {\n                root: classes.tabRoot,\n                textColorInherit: classes.tabTextColorInherit\n              },\n              label: `Day - ${item.day}`,\n              value: item.day.toString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 799,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 790,\n            columnNumber: 13\n          }, this), formValue === null || formValue === void 0 ? void 0 : formValue.workouts.map(item => {\n            var _item$before_workout, _item$workout, _item$after_workout;\n\n            return /*#__PURE__*/_jsxDEV(TabPanel, {\n              className: classes.tabPanelRoot,\n              value: item.day.toString(),\n              children: /*#__PURE__*/_jsxDEV(List, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"Pre-Workout Warm Up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 809,\n                  columnNumber: 19\n                }, this), item === null || item === void 0 ? void 0 : item.before_workout.map(data => /*#__PURE__*/_jsxDEV(WorkoutListItem, {\n                  data: data\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 810,\n                  columnNumber: 60\n                }, this)), (item === null || item === void 0 ? void 0 : (_item$before_workout = item.before_workout) === null || _item$before_workout === void 0 ? void 0 : _item$before_workout.length) == 0 && /*#__PURE__*/_jsxDEV(NoWorkoutListItem, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 811,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"Core Exercises\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 812,\n                  columnNumber: 19\n                }, this), item === null || item === void 0 ? void 0 : item.workout.map(data => /*#__PURE__*/_jsxDEV(WorkoutListItem, {\n                  data: data\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 813,\n                  columnNumber: 53\n                }, this)), (item === null || item === void 0 ? void 0 : (_item$workout = item.workout) === null || _item$workout === void 0 ? void 0 : _item$workout.length) == 0 && /*#__PURE__*/_jsxDEV(NoWorkoutListItem, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 814,\n                  columnNumber: 50\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"Post-Workout Cool Down\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 815,\n                  columnNumber: 19\n                }, this), item === null || item === void 0 ? void 0 : item.after_workout.map(data => /*#__PURE__*/_jsxDEV(WorkoutListItem, {\n                  data: data\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 816,\n                  columnNumber: 59\n                }, this)), (item === null || item === void 0 ? void 0 : (_item$after_workout = item.after_workout) === null || _item$after_workout === void 0 ? void 0 : _item$after_workout.length) == 0 && /*#__PURE__*/_jsxDEV(NoWorkoutListItem, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 817,\n                  columnNumber: 56\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 808,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 807,\n              columnNumber: 15\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 788,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 768,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        variant: \"outlined\",\n        color: \"secondary\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 826,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 825,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 756,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(ViewWorkoutPlan, \"blWmAoftnhGKExJlcW61XC+R2Xw=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = ViewWorkoutPlan;\n\nconst WorkoutListItem = props => {\n  _s4();\n\n  var _listData$workout_ima;\n\n  const classes = useStyles();\n  const [listData, setListData] = useState(props.data);\n  useEffect(() => {\n    setListData(props.data);\n  }, [props.data]);\n  return /*#__PURE__*/_jsxDEV(ListItem, {\n    className: classes.listItemRoot,\n    children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n      children: /*#__PURE__*/_jsxDEV(Avatar, {\n        variant: \"square\",\n        src: listData === null || listData === void 0 ? void 0 : (_listData$workout_ima = listData.workout_image) === null || _listData$workout_ima === void 0 ? void 0 : _listData$workout_ima.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 843,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 842,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n      primary: listData === null || listData === void 0 ? void 0 : listData.workout_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 845,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 841,\n    columnNumber: 5\n  }, this);\n};\n\n_s4(WorkoutListItem, \"5NLOgEhPe+C0bpG7TOr7LXFoKSs=\", false, function () {\n  return [useStyles];\n});\n\n_c4 = WorkoutListItem;\n\nconst NoWorkoutListItem = props => {\n  _s5();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(ListItem, {\n    className: classes.noListItemRoot,\n    children: /*#__PURE__*/_jsxDEV(ListItemText, {\n      primary: 'No Workout'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 856,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 855,\n    columnNumber: 5\n  }, this);\n};\n\n_s5(NoWorkoutListItem, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c5 = NoWorkoutListItem;\nexport default WorkoutPlan;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"WorkoutPlan\");\n$RefreshReg$(_c2, \"AddEditDialog\");\n$RefreshReg$(_c3, \"ViewWorkoutPlan\");\n$RefreshReg$(_c4, \"WorkoutListItem\");\n$RefreshReg$(_c5, \"NoWorkoutListItem\");","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/pages/WorkoutPlan/WorkoutPlan.tsx"],"names":["Avatar","Button","Card","CardActions","CardContent","CircularProgress","Dialog","DialogActions","DialogContent","Grid","IconButton","makeStyles","Paper","Tab","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TextField","Tooltip","Typography","List","ListItem","ListItemAvatar","ListItemText","AddIcon","CenterFocusStrongIcon","DeleteIcon","EditIcon","Pagination","TabContext","TabList","TabPanel","Autocomplete","Formik","React","useEffect","useRef","useState","Yup","DialogTitle","TableLoader","TableNoData","Page","useConfModel","useService","useSnackbar","useStyles","theme","root","width","breakpoints","values","lg","maxWidth","margin","padding","spacing","themeButton","color","palette","white","backgroundColor","green","main","dark","dayPaper","height","display","alignItems","justifyContent","lColor","tabCard","marginTop","content","mTop","jCenter","sEvenly","sBetween","iconPadd","actions","ingredientsAvatarStyle","tabRoot","minWidth","tabIndicator","tabTextColorInherit","border","tabPanelRoot","paddingTop","paddingBottom","listItemRoot","noListItemRoot","paperRoot","ExperienceDrop","id","name","PreferredDrop","InterestsDrop","WorkoutPlan","classes","Post","Snackbar","ConfModel","isLoading","setIsLoading","stateData","setStateData","page_no","page_limit","pageCount","setPageCount","tableData","setTableData","addEditDialog","setAddEditDialog","isOpen","title","okBtnText","isEdit","data","viewDialog","setViewDialog","listWorkoutPlan","then","res","error","page_count","show","message","catch","openAddDialog","prevState","openEditDialog","openViewDialog","onDelete","openModel","setLoading","closeModel","submitFunction","_id","onSuccessAction","err","closeAddEditDialog","closeViewDialog","onPageChange","event","value","getDropValues","dropValues","find","map","index","experience_level","preferred_workout","interests","length","AddEditDialog","props","onClose","onSuccess","formikRef","workoutList","setWorkoutList","workoutInitalValue","before_workout","workout","after_workout","initialFormValues","workouts","Array","fill","d","i","day","initialValue","setInitialValue","listAllWorkout","response","onSubmit","helper","setSubmitting","addData","editData","resetForm","rest","CurrentWorkoutIds","filter","includes","console","log","object","shape","string","trim","required","nullable","array","of","errors","touched","handleChange","handleBlur","setFieldValue","submitForm","isSubmitting","option","newValue","params","Boolean","inputProps","worData","workout_name","WorkoutIds","ViewWorkoutPlan","formValue","setFormValue","setValue","indicator","item","textColorInherit","toString","WorkoutListItem","listData","setListData","workout_image","url","NoWorkoutListItem"],"mappings":"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","sourcesContent":["import { Avatar, Button, Card, CardActions, CardContent, CircularProgress, Dialog, DialogActions, DialogContent, Grid, IconButton, makeStyles, Paper, Tab, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, Tooltip, Typography } from '@material-ui/core';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Pagination, TabContext, TabList, TabPanel } from '@material-ui/lab';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Formik } from 'formik';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport * as Yup from 'yup';\r\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\r\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\r\nimport Page from '../../components/Page/Page';\r\nimport useConfModel from '../../hook/useConfModel';\r\nimport useService from '../../hook/useService';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\n\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  root: {\r\n    width: theme.breakpoints.values.lg,\r\n    maxWidth: '100%',\r\n    margin: '0 auto',\r\n    padding: theme.spacing(3),\r\n  },\r\n  themeButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n  },\r\n  dayPaper: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: theme.palette.green.main,\r\n    color: 'white',\r\n  },\r\n  lColor: {\r\n    color: 'white',\r\n  },\r\n  tabCard: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  mTop: {\r\n    marginTop: theme.spacing(1.5),\r\n  },\r\n  jCenter: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  sEvenly: {\r\n    display: 'flex',\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  sBetween: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  iconPadd: {\r\n    padding: 5,\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(1),\r\n    justifyContent: 'center',\r\n  },\r\n  ingredientsAvatarStyle: {\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10),\r\n    margin: 'auto',\r\n    marginTop: '20px',\r\n  },\r\n  //\r\n  tabRoot: {\r\n    minWidth: 72,\r\n  },\r\n  tabIndicator: {\r\n    backgroundColor: theme.palette.green.main,\r\n  },\r\n  tabTextColorInherit: {\r\n    backgroundColor: theme.palette.green.main,\r\n    color: 'white',\r\n    border: '1px solid white'\r\n  },\r\n  tabPanelRoot: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n    width: '100%'\r\n  },\r\n  listItemRoot: {\r\n    backgroundColor: '#7ac0af2b',\r\n    margin: '10px 0px'\r\n  },\r\n  noListItemRoot: {\r\n    backgroundColor: '#f500571c',\r\n    margin: '10px 0px'\r\n  },\r\n  paperRoot: {\r\n    display: 'flex'\r\n  },\r\n}));\r\n\r\nconst ExperienceDrop = [\r\n  { id: 'BEGINNER', name: 'Beginner' },\r\n  { id: 'INTERMEDIATE', name: 'Intermediate' },\r\n  { id: 'PROFESSIONAL', name: 'Professional' },\r\n];\r\n\r\nconst PreferredDrop = [\r\n  { id: 'STRENGTH', name: 'Strength Training' },\r\n  { id: 'HIIT', name: 'HIIT' },\r\n];\r\n\r\nconst InterestsDrop = [\r\n  { id: 'HOME', name: 'Home Workout' },\r\n  { id: 'GYM', name: 'Gym Workout' },\r\n];\r\n\r\nconst WorkoutPlan = () => {\r\n  const classes = useStyles();\r\n  const { Post } = useService();\r\n  const Snackbar = useSnackbar();\r\n  const ConfModel = useConfModel();\r\n  const [isLoading, setIsLoading] = React.useState(true);\r\n  const [stateData, setStateData] = React.useState({\r\n    page_no: 1,\r\n    page_limit: 10,\r\n  });\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [tableData, setTableData] = React.useState([]);\r\n  const [addEditDialog, setAddEditDialog] = React.useState({\r\n    isOpen: false,\r\n    title: '',\r\n    okBtnText: '',\r\n    isEdit: false,\r\n    data: {},\r\n  });\r\n  const [viewDialog, setViewDialog] = useState({\r\n    isOpen: false,\r\n    title: '',\r\n    data: {},\r\n  });\r\n\r\n  const listWorkoutPlan = () => {\r\n    setIsLoading(true);\r\n    Post('app/listWorkoutPlan', stateData)\r\n      .then((res: any) => {\r\n        setIsLoading(false);\r\n        if (!res.error) {\r\n          setPageCount(res.page_count);\r\n          setTableData(res.data);\r\n        } else {\r\n          Snackbar.show(res.message, 'error');\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        setIsLoading(false);\r\n        Snackbar.show(error.message, 'error');\r\n      });\r\n  };\r\n\r\n  const openAddDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      title: 'Add Workout Plan',\r\n      isEdit: false,\r\n      okBtnText: 'Save',\r\n    }));\r\n  };\r\n\r\n  const openEditDialog = (data: any) => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      isEdit: true,\r\n      data,\r\n      title: 'Edit Workout Plan',\r\n      okBtnText: 'Edit',\r\n    }));\r\n  };\r\n\r\n  const openViewDialog = (data: any) => {\r\n    setViewDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      data,\r\n      title: 'View Workout Plan',\r\n    }));\r\n  };\r\n\r\n  const onDelete = (data: any) => {\r\n    const { openModel, setLoading, closeModel } = ConfModel;\r\n    const submitFunction = () => {\r\n      setLoading(true);\r\n      Post('app/deleteWorkoutPlan', { id: data._id })\r\n        .then(async (res: any) => {\r\n          setLoading(false);\r\n          closeModel();\r\n          onSuccessAction();\r\n          Snackbar.show(res.message, 'success');\r\n        })\r\n        .catch((err: any) => {\r\n          setLoading(false);\r\n          Snackbar.show('Internal Server Error', 'error');\r\n        });\r\n    };\r\n    openModel(submitFunction);\r\n  };\r\n\r\n  const onSuccessAction = () => {\r\n    listWorkoutPlan();\r\n    closeAddEditDialog();\r\n  };\r\n\r\n  const closeAddEditDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const closeViewDialog = () => {\r\n    setViewDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const onPageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    setStateData((prevState: any) => ({ ...prevState, page_no: value }));\r\n  };\r\n\r\n  const getDropValues = (dropValues: any, value: string) => {\r\n    return dropValues.find(({ id }: any) => id == value)?.name || ''\r\n  };\r\n\r\n  useEffect(() => {\r\n    listWorkoutPlan();\r\n  }, [stateData]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Page title='Workout Plan' />\r\n\r\n      {/* =======Header====== */}\r\n      <Grid alignItems='flex-end' container justify='space-between' spacing={3}>\r\n        <Grid item>\r\n          <Typography component='h1' variant='h3'>\r\n            Workout Plan\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant='contained'\r\n            onClick={() => openAddDialog()}\r\n            className={classes.themeButton}\r\n            startIcon={<AddIcon />}\r\n          >\r\n            Add\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* =============Search======== */}\r\n      {/* <Grid container spacing={3}>\r\n        <Grid item>\r\n          <Paper elevation={0}>\r\n            <TextField\r\n              fullWidth\r\n              size='small'\r\n              placeholder='Name'\r\n              variant='outlined'\r\n              name='state'\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid> */}\r\n\r\n      {/* ========Table With Pagination========= */}\r\n      <Card className={classes.tabCard}>\r\n        <CardContent className={classes.content}>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align='center'>#</TableCell>\r\n                  <TableCell align='center'>Experience Level</TableCell>\r\n                  <TableCell align='center'>Preferred Workout</TableCell>\r\n                  <TableCell align='center'>Interests</TableCell>\r\n                  <TableCell align='center'>Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {!isLoading &&\r\n                  tableData.map((data: any, index: any) => {\r\n                    return (\r\n                      <TableRow hover>\r\n                        <TableCell align='center'>{stateData.page_limit * (stateData.page_no - 1) + index + 1}</TableCell>\r\n                        <TableCell align='center'>{getDropValues(ExperienceDrop, data?.experience_level)}</TableCell>\r\n                        <TableCell align='center'>{getDropValues(PreferredDrop, data?.preferred_workout)}</TableCell>\r\n                        <TableCell align='center'>{getDropValues(InterestsDrop, data?.interests)}</TableCell>\r\n                        <TableCell align='center'>\r\n                          <div className={classes.sEvenly}>\r\n                            <Tooltip title='View' arrow>\r\n                              <IconButton\r\n                                className={classes.iconPadd}\r\n                                onClick={() => openViewDialog(data)}\r\n                              >\r\n                                <CenterFocusStrongIcon color='primary' />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip title='Edit' arrow>\r\n                              <IconButton\r\n                                className={classes.iconPadd}\r\n                                onClick={() => openEditDialog(data)}\r\n                              >\r\n                                <EditIcon color='action' />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip title='Delete' arrow>\r\n                              <IconButton\r\n                                className={classes.iconPadd}\r\n                                onClick={() => onDelete(data)}\r\n                              >\r\n                                <DeleteIcon color='secondary' />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                          </div>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                {isLoading && <TableLoader />}\r\n                {!isLoading && tableData.length == 0 && (\r\n                  <TableNoData>No Data Found</TableNoData>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </CardContent>\r\n\r\n        <CardActions className={classes.actions}>\r\n          <Pagination\r\n            count={pageCount}\r\n            page={stateData.page_no}\r\n            onChange={onPageChange}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n\r\n      {/* ==========Add & Edit Dialoge======== */}\r\n\r\n      <AddEditDialog\r\n        {...addEditDialog}\r\n        onClose={closeAddEditDialog}\r\n        onSuccess={onSuccessAction}\r\n      />\r\n      {viewDialog.isOpen && <ViewWorkoutPlan {...viewDialog} onClose={closeViewDialog} />}\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface WorkoutMain {\r\n  before_workout: WorkoutSub[];\r\n  workout: WorkoutSub[];\r\n  after_workout: WorkoutSub[];\r\n  day: number;\r\n}\r\n\r\ninterface WorkoutSub {\r\n  id: string;\r\n}\r\n\r\ninterface WorkoutPlan {\r\n  experience_level: string;\r\n  preferred_workout: string;\r\n  interests: string;\r\n  workouts: WorkoutMain[];\r\n}\r\n\r\nconst AddEditDialog = (props: any) => {\r\n\r\n  const {\r\n    isEdit,\r\n    isOpen,\r\n    okBtnText = 'OK',\r\n    onClose,\r\n    data,\r\n    title,\r\n    onSuccess,\r\n  } = props;\r\n  const classes = useStyles();\r\n  const { Post } = useService();\r\n  const Snackbar = useSnackbar();\r\n  const formikRef = useRef<any>(null);\r\n  const [workoutList, setWorkoutList] = React.useState<any>([]);\r\n\r\n  const workoutInitalValue = {\r\n    before_workout: [],\r\n    workout: [],\r\n    after_workout: [],\r\n  }\r\n\r\n  const initialFormValues: WorkoutPlan = {\r\n    experience_level: '',\r\n    preferred_workout: '',\r\n    interests: '',\r\n    workouts: Array(7).fill(null).map((d, i) => ({ day: i + 1, ...workoutInitalValue })),\r\n  };\r\n\r\n\r\n  const [initialValue, setInitialValue] = React.useState({\r\n    ...initialFormValues,\r\n  });\r\n\r\n  const listAllWorkout = () => {\r\n    Post('app/listAllWorkout', {})\r\n      .then((response: any) => {\r\n        if (!response.error) {\r\n          setWorkoutList(response.data);\r\n        } else {\r\n          Snackbar.show(response.message, 'error');\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        Snackbar.show(error.message, 'error');\r\n      });\r\n  };\r\n\r\n  const onSubmit = (value: any, helper: any) => {\r\n    helper.setSubmitting(true);\r\n    !isEdit && addData(value, helper);\r\n    isEdit && editData(value, helper);\r\n  };\r\n\r\n  const addData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n    Post('app/addWorkoutPlan', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        const { message = \"Internal Server Error\" } = err.response.data\r\n        setSubmitting(false);\r\n        Snackbar.show(message, 'error');\r\n      });\r\n  };\r\n\r\n  const editData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n    Post('app/editWorkoutPlan', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        const { message = \"Internal Server Error\" } = err.response.data\r\n        setSubmitting(false);\r\n        Snackbar.show(message, 'error');\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isEdit) {\r\n      const { workouts, _id, ...rest } = data;\r\n      const editData = { ...rest, id: _id };\r\n      const CurrentWorkoutIds = workoutList.map(({ _id }: any) => _id)\r\n      editData.workouts = workouts.map((data: any) => {\r\n        data.before_workout = data.before_workout.filter(({ _id }: any) => CurrentWorkoutIds.includes(_id)).map(({ _id }: any) => ({ id: _id }));\r\n        data.workout = data.workout.filter(({ _id }: any) => CurrentWorkoutIds.includes(_id)).map(({ _id }: any) => ({ id: _id }));\r\n        data.after_workout = data.after_workout.filter(({ _id }: any) => CurrentWorkoutIds.includes(_id)).map(({ _id }: any) => ({ id: _id }));\r\n        return data;\r\n      });\r\n      console.log('editData', editData)\r\n      setInitialValue(editData);\r\n    } else {\r\n      setInitialValue(initialFormValues);\r\n    }\r\n  }, [props, workoutList]);\r\n\r\n  useEffect(() => {\r\n    listAllWorkout();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={isOpen}\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        fullWidth\r\n        maxWidth='lg'\r\n        aria-labelledby='dialog-title'\r\n      >\r\n        <DialogTitle id='dialog-title' onClose={onClose}>\r\n          {title}\r\n        </DialogTitle>\r\n        <Formik\r\n          innerRef={formikRef}\r\n          enableReinitialize\r\n          initialValues={initialValue}\r\n          onSubmit={onSubmit}\r\n          validationSchema={Yup.object().shape({\r\n            experience_level: Yup.string().trim().required('Experience Level is required'),\r\n            preferred_workout: Yup.string().trim().required('Preferred Workout is required'),\r\n            interests: Yup.string().trim().nullable().required('Interests is required'),\r\n            workouts: Yup.array().of(\r\n              Yup.object().shape({\r\n                before_workout: Yup.array().of(\r\n                  Yup.object().shape({\r\n                    id: Yup.string().trim().required('Before Workout is Required'),\r\n                  })),\r\n                workout: Yup.array().of(\r\n                  Yup.object().shape({\r\n                    id: Yup.string().trim().required('Workout is Required'),\r\n                  })),\r\n                after_workout: Yup.array().of(\r\n                  Yup.object().shape({\r\n                    id: Yup.string().trim().required('After Workout is Required'),\r\n                  })),\r\n                day: Yup.string().trim().required('Day is Required'),\r\n              }))\r\n          })}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            setFieldValue,\r\n            submitForm,\r\n            isSubmitting,\r\n          }) => (\r\n            <>\r\n              <DialogContent dividers>\r\n                <Grid container spacing={2}>\r\n                  <Grid item md={4} xs={4}>\r\n                    <Autocomplete\r\n                      options={ExperienceDrop}\r\n                      value={ExperienceDrop.find((data: any) => data.id == values.experience_level)}\r\n                      getOptionLabel={(option: any) => option.name}\r\n                      getOptionSelected={(option) => option.id == values.experience_level}\r\n                      onChange={(event: any, newValue: any) => {\r\n                        setFieldValue('experience_level', newValue?.id || '');\r\n                      }}\r\n                      onBlur={handleBlur}\r\n                      renderInput={(params: any) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label='Experience Level'\r\n                          variant='outlined'\r\n                          error={Boolean(touched.experience_level && errors.experience_level)}\r\n                          helperText={touched.experience_level && errors.experience_level}\r\n                          inputProps={{\r\n                            ...params.inputProps,\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item md={4} xs={4}>\r\n                    <Autocomplete\r\n                      options={PreferredDrop}\r\n                      value={PreferredDrop.find((data: any) => data.id == values.preferred_workout)}\r\n                      getOptionLabel={(option: any) => option.name}\r\n                      getOptionSelected={(option) => option.id == values.preferred_workout}\r\n                      onChange={(event: any, newValue: any) => {\r\n                        setFieldValue('preferred_workout', newValue?.id || '');\r\n                      }}\r\n                      onBlur={handleBlur}\r\n                      renderInput={(params: any) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label='Preferred Workout'\r\n                          variant='outlined'\r\n                          error={Boolean(touched.preferred_workout && errors.preferred_workout)}\r\n                          helperText={touched.preferred_workout && errors.preferred_workout}\r\n                          inputProps={{\r\n                            ...params.inputProps,\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item md={4} xs={4}>\r\n                    <Autocomplete\r\n                      options={InterestsDrop}\r\n                      value={InterestsDrop.find((data: any) => data.id == values.interests)}\r\n                      getOptionLabel={(option: any) => option.name}\r\n                      getOptionSelected={(option) => option.id == values.interests}\r\n                      onChange={(event: any, newValue: any) => {\r\n                        setFieldValue('interests', newValue?.id || null);\r\n                      }}\r\n                      onBlur={handleBlur}\r\n                      renderInput={(params: any) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label='Interests'\r\n                          variant='outlined'\r\n                          error={Boolean(touched.interests && errors.interests)}\r\n                          helperText={touched.interests && errors.interests}\r\n                          inputProps={{\r\n                            ...params.inputProps,\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                  {values.workouts.map((worData: any, i: any) => {\r\n                    return (\r\n                      <>\r\n                        <Grid md={1} item xs={1}>\r\n                          <Paper\r\n                            elevation={0}\r\n                            component='div'\r\n                            className={classes.dayPaper}\r\n                          >\r\n                            <Typography color='inherit' align='center'>{`Day - ${worData.day}`}</Typography>\r\n                          </Paper>\r\n                        </Grid>\r\n\r\n                        <Grid item md={3} xs={3}>\r\n                          <Autocomplete\r\n                            multiple\r\n                            options={workoutList}\r\n                            value={workoutList.filter((data: any) => worData.before_workout.map(({ id }: any) => id).includes(data._id))}\r\n                            getOptionLabel={(option: any) => option.workout_name}\r\n                            onChange={(event: any, newValue: any) => {\r\n                              let WorkoutIds = newValue.map(({ _id }: any) => ({ id: _id }))\r\n                              setFieldValue(`workouts[${i}].before_workout`, WorkoutIds || []);\r\n                            }}\r\n                            onBlur={handleBlur}\r\n                            renderInput={(params: any) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label='Pre Workout Warmup'\r\n                                variant='outlined'\r\n                                inputProps={{\r\n                                  ...params.inputProps,\r\n                                }}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item md={4} xs={4}>\r\n                          <Autocomplete\r\n                            multiple\r\n                            options={workoutList}\r\n                            value={workoutList.filter((data: any) => worData.workout.map(({ id }: any) => id).includes(data._id))}\r\n                            getOptionLabel={(option: any) => option.workout_name}\r\n                            onChange={(event: any, newValue: any) => {\r\n                              let WorkoutIds = newValue.map(({ _id }: any) => ({ id: _id }))\r\n                              setFieldValue(`workouts[${i}].workout`, WorkoutIds || []);\r\n                            }}\r\n                            onBlur={handleBlur}\r\n                            renderInput={(params: any) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label='Core Exercise'\r\n                                variant='outlined'\r\n                                inputProps={{\r\n                                  ...params.inputProps,\r\n                                }}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n\r\n                        <Grid item md={4} xs={4}>\r\n                          <Autocomplete\r\n                            multiple\r\n                            options={workoutList}\r\n                            value={workoutList.filter((data: any) => worData.after_workout.map(({ id }: any) => id).includes(data._id))}\r\n                            getOptionLabel={(option: any) => option.workout_name}\r\n                            onChange={(event: any, newValue: any) => {\r\n                              let WorkoutIds = newValue.map(({ _id }: any) => ({ id: _id }))\r\n                              setFieldValue(`workouts[${i}].after_workout`, WorkoutIds || []);\r\n                            }}\r\n                            onBlur={handleBlur}\r\n                            renderInput={(params: any) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label='Post Workout Cooldown'\r\n                                variant='outlined'\r\n                                inputProps={{\r\n                                  ...params.inputProps,\r\n                                }}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                      </>\r\n                    );\r\n                  })}\r\n                </Grid>\r\n              </DialogContent>\r\n\r\n              <DialogActions>\r\n                <Button onClick={onClose} variant='outlined' color='secondary'>\r\n                  Cancel\r\n                </Button>\r\n\r\n                <Button\r\n                  className={classes.themeButton}\r\n                  onClick={() => submitForm()}\r\n                  disabled={isSubmitting}\r\n                  variant='outlined'\r\n                >\r\n                  {isSubmitting ? (\r\n                    <CircularProgress size={24} className={classes.lColor} />\r\n                  ) : (\r\n                    okBtnText\r\n                  )}\r\n                </Button>\r\n              </DialogActions>\r\n            </>\r\n          )}\r\n        </Formik>\r\n      </Dialog>\r\n    </div >\r\n  );\r\n};\r\n\r\nconst ViewWorkoutPlan = (props: any) => {\r\n  const { isOpen, title, onClose, data } = props;\r\n  const classes = useStyles();\r\n  const [formValue, setFormValue] = useState(data);\r\n\r\n  const [value, setValue] = React.useState('1');\r\n\r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: string) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const getDropValues = (dropValues: any, value: string) => {\r\n    return dropValues.find(({ id }: any) => id == value)?.name || ''\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('view data', data)\r\n    setFormValue(data);\r\n  }, [props]);\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      fullWidth\r\n      maxWidth='md'\r\n      aria-labelledby='dialog-view-title'\r\n      open={isOpen}\r\n    >\r\n      <DialogTitle id='dialog-view-title' onClose={onClose}>\r\n        {title}\r\n      </DialogTitle>\r\n\r\n      <DialogContent dividers>\r\n        <Paper >\r\n          <Table>\r\n            <TableBody>\r\n              <TableRow >\r\n                <TableCell>Experience Level</TableCell>\r\n                <TableCell><strong>{getDropValues(ExperienceDrop, formValue?.experience_level)}</strong></TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Preferred Workout</TableCell>\r\n                <TableCell><strong>{getDropValues(PreferredDrop, formValue?.preferred_workout)}</strong></TableCell>\r\n              </TableRow>\r\n              <TableRow >\r\n                <TableCell>Interests</TableCell>\r\n                <TableCell><strong>{getDropValues(InterestsDrop, formValue?.interests)}</strong></TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n\r\n        <Paper className={classes.paperRoot}>\r\n          <TabContext value={value || ''}>\r\n            <TabList\r\n              classes={{\r\n                indicator: classes.tabIndicator\r\n              }}\r\n              onChange={handleChange}\r\n              orientation=\"vertical\"\r\n              variant=\"standard\"\r\n            >\r\n              {formValue?.workouts.map((item: any) =>\r\n                <Tab\r\n                  classes={{ root: classes.tabRoot, textColorInherit: classes.tabTextColorInherit }}\r\n                  label={`Day - ${item.day}`}\r\n                  value={item.day.toString()} />\r\n              )}\r\n            </TabList>\r\n\r\n            {formValue?.workouts.map((item: any) =>\r\n              <TabPanel className={classes.tabPanelRoot} value={item.day.toString()}>\r\n                <List>\r\n                  <div>Pre-Workout Warm Up</div>\r\n                  {item?.before_workout.map((data: any) => <WorkoutListItem data={data} />)}\r\n                  {item?.before_workout?.length == 0 && <NoWorkoutListItem />}\r\n                  <div>Core Exercises</div>\r\n                  {item?.workout.map((data: any) => <WorkoutListItem data={data} />)}\r\n                  {item?.workout?.length == 0 && <NoWorkoutListItem />}\r\n                  <div>Post-Workout Cool Down</div>\r\n                  {item?.after_workout.map((data: any) => <WorkoutListItem data={data} />)}\r\n                  {item?.after_workout?.length == 0 && <NoWorkoutListItem />}\r\n                </List>\r\n              </TabPanel>)}\r\n          </TabContext>\r\n        </Paper>\r\n\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={onClose} variant='outlined' color='secondary'>\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst WorkoutListItem = (props: any) => {\r\n  const classes = useStyles()\r\n  const [listData, setListData] = useState(props.data)\r\n  useEffect(() => {\r\n    setListData(props.data)\r\n  }, [props.data])\r\n  return (\r\n    <ListItem className={classes.listItemRoot}>\r\n      <ListItemAvatar>\r\n        <Avatar variant='square' src={listData?.workout_image?.url} />\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        primary={listData?.workout_name}\r\n      />\r\n    </ListItem>\r\n  )\r\n}\r\n\r\nconst NoWorkoutListItem = (props: any) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <ListItem className={classes.noListItemRoot}>\r\n      <ListItemText\r\n        primary={'No Workout'}\r\n      />\r\n    </ListItem>\r\n  )\r\n}\r\n\r\nexport default WorkoutPlan;\r\n"]},"metadata":{},"sourceType":"module"}