{"ast":null,"code":"import _objectSpread from\"D:/Pyramidion/WebApp/Izze-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:/Pyramidion/WebApp/Izze-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import Button from'@material-ui/core/Button';import CircularProgress from'@material-ui/core/CircularProgress';import Dialog from'@material-ui/core/Dialog';import DialogActions from'@material-ui/core/DialogActions';import DialogContent from'@material-ui/core/DialogContent';import DialogContentText from'@material-ui/core/DialogContentText';import Slide from'@material-ui/core/Slide';import{createStyles,makeStyles}from\"@material-ui/core/styles\";import React,{useContext,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return createStyles({dialogRoot:{'z-index':'3000 !important'},themeButton:{color:theme.palette.white,backgroundColor:theme.palette.green.main,'&:hover':{backgroundColor:theme.palette.green.dark}},lColor:{color:'white'}});});export var confModelContext=/*#__PURE__*/React.createContext(null);export var ConfModelProvider=function ConfModelProvider(props){var children=props.children;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),model=_useState2[0],setModel=_useState2[1];var _useState3=useState(function(){return function(){return new Function();};}),_useState4=_slicedToArray(_useState3,2),successFunction=_useState4[0],setSuccessFunction=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),confirmText=_useState6[0],setConfirmText=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),confirmButtonText=_useState8[0],setConfirmButtonText=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),loading=_useState10[0],setLoading=_useState10[1];var classes=useStyles();var openModel=function openModel(successFunction){var confirmText=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'Are you sure want to Delete?';var confirmButtonText=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'Delete';setModel(true);setSuccessFunction(function(){return function(){return successFunction;};});setConfirmText(confirmText);setConfirmButtonText(confirmButtonText);};var closeModel=function closeModel(){setModel(false);};var onDelete=function onDelete(){successFunction()();};var ProviderValue={openModel:openModel,closeModel:closeModel,setLoading:setLoading};return/*#__PURE__*/_jsxs(confModelContext.Provider,{value:ProviderValue,children:[children,/*#__PURE__*/_jsxs(Dialog,{open:model,TransitionComponent:Transition,keepMounted:true,onClose:closeModel,maxWidth:\"sm\",fullWidth:true,className:classes.dialogRoot,\"aria-labelledby\":\"alert-dialog-title\",children:[/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsx(DialogContentText,{id:\"alert-dialog-description\",children:confirmText})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"secondary\",onClick:closeModel,disabled:loading,children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{className:classes.themeButton,variant:\"outlined\",onClick:function onClick(){return onDelete();},disabled:loading,autoFocus:true,children:loading?/*#__PURE__*/_jsx(CircularProgress,{size:24,className:classes.lColor}):confirmButtonText})]})]})]});};var Transition=/*#__PURE__*/React.forwardRef(function Transition(props,ref){return/*#__PURE__*/_jsx(Slide,_objectSpread({direction:\"up\",ref:ref},props));});var useConfModel=function useConfModel(){return useContext(confModelContext);};export default useConfModel;","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/hook/useConfModel.tsx"],"names":["Button","CircularProgress","Dialog","DialogActions","DialogContent","DialogContentText","Slide","createStyles","makeStyles","React","useContext","useState","useStyles","theme","dialogRoot","themeButton","color","palette","white","backgroundColor","green","main","dark","lColor","confModelContext","createContext","ConfModelProvider","props","children","model","setModel","Function","successFunction","setSuccessFunction","confirmText","setConfirmText","confirmButtonText","setConfirmButtonText","loading","setLoading","classes","openModel","closeModel","onDelete","ProviderValue","Transition","forwardRef","ref","useConfModel"],"mappings":"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","sourcesContent":["import Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { TransitionProps } from '@material-ui/core/transitions';\r\nimport React, { useContext, useState } from 'react';\r\n\r\nconst useStyles = makeStyles((theme: any) =>\r\n  createStyles({\r\n    dialogRoot: {\r\n      'z-index': '3000 !important',\r\n    },\r\n    themeButton: {\r\n      color: theme.palette.white,\r\n      backgroundColor: theme.palette.green.main,\r\n      '&:hover': {\r\n        backgroundColor: theme.palette.green.dark\r\n      }\r\n    },\r\n    lColor: {\r\n      color: 'white'\r\n    }\r\n  })\r\n);\r\n\r\n\r\nexport const confModelContext = React.createContext<any>(null);\r\n\r\nexport const ConfModelProvider = (props: any) => {\r\n  const { children } = props\r\n  const [model, setModel] = useState(false)\r\n  const [successFunction, setSuccessFunction] = useState(() => () => new Function);\r\n  const [confirmText, setConfirmText] = useState('');\r\n  const [confirmButtonText, setConfirmButtonText] = useState('');\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const classes = useStyles()\r\n\r\n  const openModel = (successFunction: any, confirmText = 'Are you sure want to Delete?', confirmButtonText = 'Delete') => {\r\n    setModel(true)\r\n    setSuccessFunction(() => () => successFunction)\r\n    setConfirmText(confirmText)\r\n    setConfirmButtonText(confirmButtonText)\r\n  }\r\n\r\n  const closeModel = () => {\r\n    setModel(false)\r\n  }\r\n\r\n  const onDelete = () => {\r\n    successFunction()()\r\n  }\r\n\r\n  const ProviderValue = {\r\n    openModel: openModel,\r\n    closeModel: closeModel,\r\n    setLoading\r\n  }\r\n  return (\r\n\r\n    <confModelContext.Provider value={ProviderValue} >\r\n      {children}\r\n      <Dialog\r\n        open={model}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={closeModel}\r\n        maxWidth=\"sm\"\r\n        fullWidth\r\n        className={classes.dialogRoot}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n      >\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {confirmText}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button variant=\"outlined\" color=\"secondary\" onClick={closeModel} disabled={loading} >\r\n            Cancel\r\n          </Button>\r\n          <Button className={classes.themeButton} variant=\"outlined\" onClick={() => onDelete()} disabled={loading} autoFocus>\r\n            {loading ? <CircularProgress size={24} className={classes.lColor} /> : confirmButtonText}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </confModelContext.Provider>\r\n  )\r\n\r\n}\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n  ref: React.Ref<unknown>,\r\n) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\nconst useConfModel = () => {\r\n  return useContext(confModelContext);\r\n};\r\n\r\nexport default useConfModel;\r\n"]},"metadata":{},"sourceType":"module"}