{"ast":null,"code":"import { Extension } from '@tiptap/core';\nimport { undo, redo, history } from 'prosemirror-history';\nconst History = Extension.create({\n  name: 'history',\n  defaultOptions: {\n    depth: 100,\n    newGroupDelay: 500\n  },\n\n  addCommands() {\n    return {\n      undo: () => ({\n        state,\n        dispatch\n      }) => {\n        return undo(state, dispatch);\n      },\n      redo: () => ({\n        state,\n        dispatch\n      }) => {\n        return redo(state, dispatch);\n      }\n    };\n  },\n\n  addProseMirrorPlugins() {\n    return [history(this.options)];\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-z': () => this.editor.commands.undo(),\n      'Mod-y': () => this.editor.commands.redo(),\n      'Shift-Mod-z': () => this.editor.commands.redo()\n    };\n  }\n\n});\nexport default History;\nexport { History };","map":{"version":3,"sources":["../src/history.ts"],"names":[],"mappings":";;MAuBa,OAAO,GAAG,SAAS,CAAC,MAAV,CAAiC;AACtD,EAAA,IAAI,EAAE,SADgD;AAGtD,EAAA,cAAc,EAAE;AACd,IAAA,KAAK,EAAE,GADO;AAEd,IAAA,aAAa,EAAE;AAFD,GAHsC;;AAQtD,EAAA,WAAW,GAAA;AACT,WAAO;AACL,MAAA,IAAI,EAAE,MAAM,CAAC;AAAE,QAAA,KAAF;AAAS,QAAA;AAAT,OAAD,KAAoB;AAC9B,eAAO,IAAI,CAAC,KAAD,EAAQ,QAAR,CAAX;AACD,OAHI;AAIL,MAAA,IAAI,EAAE,MAAM,CAAC;AAAE,QAAA,KAAF;AAAS,QAAA;AAAT,OAAD,KAAoB;AAC9B,eAAO,IAAI,CAAC,KAAD,EAAQ,QAAR,CAAX;AACD;AANI,KAAP;AAQD,GAjBqD;;AAmBtD,EAAA,qBAAqB,GAAA;AACnB,WAAO,CACL,OAAO,CAAC,KAAK,OAAN,CADF,CAAP;AAGD,GAvBqD;;AAyBtD,EAAA,oBAAoB,GAAA;AAClB,WAAO;AACL,eAAS,MAAM,KAAK,MAAL,CAAY,QAAZ,CAAqB,IAArB,EADV;AAEL,eAAS,MAAM,KAAK,MAAL,CAAY,QAAZ,CAAqB,IAArB,EAFV;AAGL,qBAAe,MAAM,KAAK,MAAL,CAAY,QAAZ,CAAqB,IAArB;AAHhB,KAAP;AAKD;;AA/BqD,CAAjC,C","sourcesContent":["import { Command, Extension } from '@tiptap/core'\nimport { history, undo, redo } from 'prosemirror-history'\n\nexport interface HistoryOptions {\n  depth: number,\n  newGroupDelay: number,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands {\n    history: {\n      /**\n       * Undo recent changes\n       */\n      undo: () => Command,\n      /**\n       * Reapply reverted changes\n       */\n      redo: () => Command,\n    }\n  }\n}\n\nexport const History = Extension.create<HistoryOptions>({\n  name: 'history',\n\n  defaultOptions: {\n    depth: 100,\n    newGroupDelay: 500,\n  },\n\n  addCommands() {\n    return {\n      undo: () => ({ state, dispatch }) => {\n        return undo(state, dispatch)\n      },\n      redo: () => ({ state, dispatch }) => {\n        return redo(state, dispatch)\n      },\n    }\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      history(this.options),\n    ]\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-z': () => this.editor.commands.undo(),\n      'Mod-y': () => this.editor.commands.redo(),\n      'Shift-Mod-z': () => this.editor.commands.redo(),\n    }\n  },\n})\n"]},"metadata":{},"sourceType":"module"}