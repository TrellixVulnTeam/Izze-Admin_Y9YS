{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pyramidion\\\\WebApp\\\\Izze-Admin\\\\src\\\\pages\\\\ForgotPassword\\\\ForgotPassword.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { Button, Card, CardContent, CircularProgress, Divider, Link, TextField, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport React, { useEffect, useState } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport Logo from '../../assets/Images/logo.png';\nimport Page from '../../components/Page/Page';\nimport useSnackbar from '../../hook/useSnackbar';\nimport { AuthStateChange, sendPasswordResetEmail } from '../../utils/FirebaseUtils';\nimport Loader from '../../components/Loader/Loader';\nimport { DashboardRoute, SigninRoute } from '../../Routes/RoutesConstants';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    padding: theme.spacing(6, 2)\n  },\n  rootMain: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  card: {\n    width: theme.breakpoints.values.sm,\n    maxWidth: '100%',\n    overflow: 'unset',\n    display: 'flex',\n    position: 'relative',\n    '& > *': {\n      flexGrow: 1,\n      flexBasis: '50%',\n      width: '50%'\n    }\n  },\n  content: {\n    padding: theme.spacing(3, 4, 3, 4)\n  },\n  logoImgDiv: {\n    display: 'flex',\n    justifyContent: 'center',\n    padding: theme.spacing(2, 0)\n  },\n  logoImg: {\n    width: theme.spacing(20),\n    height: theme.spacing(10)\n  },\n  loginForm: {\n    marginTop: theme.spacing(3)\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  btnLoading: {\n    color: 'white'\n  },\n  fields: {\n    margin: theme.spacing(-1),\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      flexGrow: 1,\n      margin: theme.spacing(1)\n    }\n  },\n  themeButton: {\n    marginTop: theme.spacing(2),\n    color: theme.palette.white,\n    backgroundColor: theme.palette.green.main,\n    '&:hover': {\n      backgroundColor: theme.palette.green.dark\n    },\n    '&:disabled': {\n      backgroundColor: theme.palette.green.main\n    }\n  }\n}));\n\nconst ForgotPassword = () => {\n  _s();\n\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const Snackbar = useSnackbar();\n  const [authLoading, setAuthLoading] = useState(true);\n\n  const submitForgotPass = (value, {\n    setSubmitting\n  }) => {\n    setSubmitting(true);\n    sendPasswordResetEmail(value.email).then(response => {\n      setSubmitting(false);\n      Snackbar.show('Reset Password link is send to your given email', 'success');\n      navigate(SigninRoute);\n    }).catch(error => {\n      Snackbar.show(error.message, 'error');\n      setSubmitting(false);\n    });\n  };\n\n  const authStateChanged = user => {\n    if (user) {\n      navigate(DashboardRoute);\n      setAuthLoading(true);\n    } else {\n      setAuthLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    const unsubscribe = AuthStateChange(authStateChanged);\n    return () => unsubscribe();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthLoader, {\n    loading: authLoading,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Page, {\n        title: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.logoImgDiv,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: classes.logoImg,\n          src: Logo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.rootMain,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.card,\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            className: classes.content,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"h3\",\n              children: \"Forgot Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Formik, {\n              enableReinitialize: true,\n              initialValues: {\n                email: ''\n              },\n              onSubmit: submitForgotPass,\n              validationSchema: Yup.object().shape({\n                email: Yup.string().trim().required('Email is required')\n              }),\n              children: ({\n                values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                setFieldValue,\n                handleSubmit,\n                isSubmitting\n              }) => /*#__PURE__*/_jsxDEV(\"form\", {\n                className: classes.loginForm,\n                onSubmit: handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.fields,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Email address\",\n                    name: \"email\",\n                    variant: \"outlined\",\n                    error: Boolean(touched.email && errors.email),\n                    helperText: touched.email && errors.email,\n                    value: values.email,\n                    onChange: handleChange,\n                    onBlur: handleBlur\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  fullWidth: true,\n                  className: classes.themeButton,\n                  disabled: isSubmitting,\n                  size: \"large\",\n                  type: \"submit\",\n                  variant: \"contained\",\n                  children: isSubmitting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                    className: classes.btnLoading,\n                    size: 25\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 39\n                  }, this) : 'Submit'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              className: classes.divider\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              align: \"center\",\n              color: \"textPrimary\",\n              component: RouterLink,\n              to: SigninRoute,\n              underline: \"always\",\n              variant: \"subtitle2\",\n              children: \"Back to Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ForgotPassword, \"RdT2w6sKbbFWRXDkNT3mRpndJ5g=\", false, function () {\n  return [useStyles, useNavigate, useSnackbar];\n});\n\n_c = ForgotPassword;\n\nconst AuthLoader = ({\n  loading,\n  children\n}) => {\n  _s2();\n\n  const [aLoading, setALoading] = useState(loading);\n  useEffect(() => {\n    setALoading(loading);\n  }, [loading]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: aLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 24\n    }, this) : children\n  }, void 0, false);\n};\n\n_s2(AuthLoader, \"RzWMk7TtzMth6FZJrtvfx6Y6fbM=\");\n\n_c2 = AuthLoader;\nexport default ForgotPassword;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ForgotPassword\");\n$RefreshReg$(_c2, \"AuthLoader\");","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/pages/ForgotPassword/ForgotPassword.tsx"],"names":["Button","Card","CardContent","CircularProgress","Divider","Link","TextField","Typography","makeStyles","React","useEffect","useState","RouterLink","useNavigate","Logo","Page","useSnackbar","AuthStateChange","sendPasswordResetEmail","Loader","DashboardRoute","SigninRoute","Formik","Yup","useStyles","theme","root","height","padding","spacing","rootMain","display","alignItems","justifyContent","card","width","breakpoints","values","sm","maxWidth","overflow","position","flexGrow","flexBasis","content","logoImgDiv","logoImg","loginForm","marginTop","divider","margin","btnLoading","color","fields","flexWrap","themeButton","palette","white","backgroundColor","green","main","dark","ForgotPassword","classes","navigate","Snackbar","authLoading","setAuthLoading","submitForgotPass","value","setSubmitting","email","then","response","show","catch","error","message","authStateChanged","user","unsubscribe","object","shape","string","trim","required","errors","touched","handleChange","handleBlur","setFieldValue","handleSubmit","isSubmitting","Boolean","AuthLoader","loading","children","aLoading","setALoading"],"mappings":"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","sourcesContent":["import { Button, Card, CardContent, CircularProgress, Divider, Link, TextField, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport Logo from '../../assets/Images/logo.png';\r\nimport Page from '../../components/Page/Page';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport { useStore } from '../../Mobx/Helpers/UseStore';\r\nimport { AuthStateChange, sendPasswordResetEmail, signInWithCredenrials } from '../../utils/FirebaseUtils';\r\nimport Loader from '../../components/Loader/Loader';\r\nimport { DashboardRoute, SigninRoute } from '../../Routes/RoutesConstants';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  root: {\r\n    height: '100%',\r\n    padding: theme.spacing(6, 2)\r\n  },\r\n  rootMain: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  card: {\r\n    width: theme.breakpoints.values.sm,\r\n    maxWidth: '100%',\r\n    overflow: 'unset',\r\n    display: 'flex',\r\n    position: 'relative',\r\n    '& > *': {\r\n      flexGrow: 1,\r\n      flexBasis: '50%',\r\n      width: '50%'\r\n    }\r\n  },\r\n  content: {\r\n    padding: theme.spacing(3, 4, 3, 4)\r\n  },\r\n  logoImgDiv: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    padding: theme.spacing(2, 0),\r\n  },\r\n  logoImg: {\r\n    width: theme.spacing(20),\r\n    height: theme.spacing(10),\r\n  },\r\n  loginForm: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(2, 0)\r\n  },\r\n  btnLoading: {\r\n    color: 'white'\r\n  },\r\n  fields: {\r\n    margin: theme.spacing(-1),\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      flexGrow: 1,\r\n      margin: theme.spacing(1)\r\n    }\r\n  },\r\n  themeButton: {\r\n    marginTop: theme.spacing(2),\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n    '&:disabled': {\r\n      backgroundColor: theme.palette.green.main,\r\n    },\r\n  },\r\n}));\r\n\r\nconst ForgotPassword = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const Snackbar = useSnackbar();\r\n  const [authLoading, setAuthLoading] = useState(true);\r\n\r\n  const submitForgotPass = (value: any, { setSubmitting }: any) => {\r\n    setSubmitting(true);\r\n    sendPasswordResetEmail(value.email)\r\n      .then((response: any) => {\r\n        setSubmitting(false);\r\n        Snackbar.show('Reset Password link is send to your given email', 'success');\r\n        navigate(SigninRoute)\r\n      })\r\n      .catch((error: any) => {\r\n        Snackbar.show(error.message, 'error');\r\n        setSubmitting(false);\r\n      });\r\n  };\r\n\r\n  const authStateChanged = (user: any) => {\r\n    if (user) {\r\n      navigate(DashboardRoute);\r\n      setAuthLoading(true);\r\n    } else {\r\n      setAuthLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = AuthStateChange(authStateChanged);\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  return (\r\n    <AuthLoader loading={authLoading}>\r\n      <div className={classes.root}>\r\n        <Page title='Forgot Password' />\r\n        <div className={classes.logoImgDiv} ><img className={classes.logoImg} src={Logo} /></div>\r\n        <div className={classes.rootMain}>\r\n          <Card className={classes.card}>\r\n            <CardContent className={classes.content}>\r\n              <Typography\r\n                gutterBottom\r\n                variant=\"h3\"\r\n              >\r\n                Forgot Password\r\n              </Typography>\r\n              <Formik\r\n                enableReinitialize\r\n                initialValues={{ email: '' }}\r\n                onSubmit={submitForgotPass}\r\n                validationSchema={Yup.object().shape({\r\n                  email: Yup.string().trim().required('Email is required'),\r\n                })}\r\n              >\r\n                {({\r\n                  values,\r\n                  errors,\r\n                  touched,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  setFieldValue,\r\n                  handleSubmit,\r\n                  isSubmitting,\r\n                }) => (\r\n\r\n                  <form className={classes.loginForm} onSubmit={handleSubmit}>\r\n                    <div className={classes.fields}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Email address\"\r\n                        name=\"email\"\r\n                        variant=\"outlined\"\r\n                        error={Boolean(touched.email && errors.email)}\r\n                        helperText={touched.email && errors.email}\r\n                        value={values.email}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n                    <Button\r\n                      fullWidth\r\n                      className={classes.themeButton}\r\n                      disabled={isSubmitting}\r\n                      size=\"large\"\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                    >\r\n                      {isSubmitting ? <CircularProgress className={classes.btnLoading} size={25} /> : 'Submit'}\r\n                    </Button>\r\n                  </form>\r\n                )}\r\n              </Formik>\r\n\r\n              <Divider className={classes.divider} />\r\n              <Link\r\n                align=\"center\"\r\n                color=\"textPrimary\"\r\n                component={RouterLink}\r\n                to={SigninRoute}\r\n                underline=\"always\"\r\n                variant=\"subtitle2\"\r\n              >\r\n                Back to Login\r\n              </Link>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </AuthLoader>\r\n  );\r\n};\r\n\r\nconst AuthLoader = ({ loading, children }: any) => {\r\n  const [aLoading, setALoading] = useState(loading);\r\n\r\n  useEffect(() => {\r\n    setALoading(loading);\r\n  }, [loading]);\r\n\r\n  return <>{aLoading ? <Loader /> : children}</>;\r\n};\r\n\r\nexport default ForgotPassword;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}