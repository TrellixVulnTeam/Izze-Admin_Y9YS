{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pyramidion\\\\WebApp\\\\Izze-Admin\\\\src\\\\components\\\\TopNavBar\\\\TopBar.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport React, { useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport firebase from '../../firebase';\nimport { makeStyles } from '@material-ui/styles';\nimport { AppBar, Button, IconButton, Toolbar, Hidden, colors } from '@material-ui/core';\nimport InputIcon from '@material-ui/icons/Input';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    boxShadow: 'none',\n    backgroundColor: theme.palette.green.main\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  search: {\n    backgroundColor: 'rgba(255,255,255, 0.1)',\n    borderRadius: 4,\n    flexBasis: 300,\n    height: 36,\n    padding: theme.spacing(0, 2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  searchIcon: {\n    marginRight: theme.spacing(2),\n    color: 'inherit'\n  },\n  searchInput: {\n    flexGrow: 1,\n    color: 'inherit',\n    '& input::placeholder': {\n      opacity: 1,\n      color: 'inherit'\n    }\n  },\n  searchPopper: {\n    zIndex: theme.zIndex.appBar + 100\n  },\n  searchPopperContent: {\n    marginTop: theme.spacing(1)\n  },\n  trialButton: {\n    marginLeft: theme.spacing(2),\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  },\n  trialIcon: {\n    marginRight: theme.spacing(1)\n  },\n  notificationsButton: {\n    marginLeft: theme.spacing(1)\n  },\n  notificationsBadge: {\n    backgroundColor: colors.orange[600]\n  },\n  logoutButton: {\n    marginLeft: theme.spacing(1)\n  },\n  logoutIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst TopBar = props => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    onOpenNavBarMobile,\n    className,\n    ...rest\n  } = props;\n  const [isLoading, setIsLoading] = React.useState(false);\n  useEffect(() => {\n    let mounted = true;\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const handleLogout = () => {\n    setIsLoading(true);\n    firebase.auth().signOut().then(() => {\n      setIsLoading(false);\n      localStorage.clear();\n      props.history.push('/');\n    }).catch(error => {\n      throw error;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppBar, { ...rest,\n    className: clsx(classes.root, className),\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      children: [/*#__PURE__*/_jsxDEV(RouterLink, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Logo\",\n          src: \"/images/logos/logo--white.svg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.flexGrow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n        mdDown: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.logoutButton,\n          color: \"inherit\",\n          onClick: handleLogout,\n          children: [/*#__PURE__*/_jsxDEV(InputIcon, {\n            className: classes.logoutIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), \"Sign out\", isLoading ? /*#__PURE__*/_jsxDEV(\"i\", {\n            style: {\n              fontSize: 15,\n              marginLeft: 20\n            },\n            className: \"fas fa-spinner fa-pulse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this) : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n        lgUp: true,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          onClick: onOpenNavBarMobile,\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TopBar, \"mW/mCQU2PDk7dloWP7NbLG9Fb8k=\", false, function () {\n  return [useStyles];\n});\n\n_c = TopBar;\nexport default TopBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopBar\");","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/components/TopNavBar/TopBar.tsx"],"names":["React","useEffect","Link","RouterLink","clsx","firebase","makeStyles","AppBar","Button","IconButton","Toolbar","Hidden","colors","InputIcon","MenuIcon","useStyles","theme","root","boxShadow","backgroundColor","palette","green","main","flexGrow","search","borderRadius","flexBasis","height","padding","spacing","display","alignItems","searchIcon","marginRight","color","searchInput","opacity","searchPopper","zIndex","appBar","searchPopperContent","marginTop","trialButton","marginLeft","white","trialIcon","notificationsButton","notificationsBadge","orange","logoutButton","logoutIcon","TopBar","props","classes","onOpenNavBarMobile","className","rest","isLoading","setIsLoading","useState","mounted","handleLogout","auth","signOut","then","localStorage","clear","history","push","catch","error","fontSize"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport firebase from '../../firebase';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  AppBar,\r\n  Button,\r\n  IconButton,\r\n  Toolbar,\r\n  Hidden,\r\n  colors,\r\n} from '@material-ui/core';\r\nimport InputIcon from '@material-ui/icons/Input';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  root: {\r\n    boxShadow: 'none',\r\n    backgroundColor: theme.palette.green.main,\r\n  },\r\n  flexGrow: {\r\n    flexGrow: 1,\r\n  },\r\n  search: {\r\n    backgroundColor: 'rgba(255,255,255, 0.1)',\r\n    borderRadius: 4,\r\n    flexBasis: 300,\r\n    height: 36,\r\n    padding: theme.spacing(0, 2),\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  searchIcon: {\r\n    marginRight: theme.spacing(2),\r\n    color: 'inherit',\r\n  },\r\n  searchInput: {\r\n    flexGrow: 1,\r\n    color: 'inherit',\r\n    '& input::placeholder': {\r\n      opacity: 1,\r\n      color: 'inherit',\r\n    },\r\n  },\r\n  searchPopper: {\r\n    zIndex: theme.zIndex.appBar + 100,\r\n  },\r\n  searchPopperContent: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  trialButton: {\r\n    marginLeft: theme.spacing(2),\r\n    color: theme.palette.white,\r\n    backgroundColor: colors.green[600],\r\n    '&:hover': {\r\n      backgroundColor: colors.green[900],\r\n    },\r\n  },\r\n  trialIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  notificationsButton: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  notificationsBadge: {\r\n    backgroundColor: colors.orange[600],\r\n  },\r\n  logoutButton: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  logoutIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst TopBar = (props: any) => {\r\n  const classes = useStyles();\r\n  const { onOpenNavBarMobile, className, ...rest } = props;\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const handleLogout = () => {\r\n    setIsLoading(true);\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        setIsLoading(false);\r\n        localStorage.clear();\r\n        props.history.push('/');\r\n      })\r\n      .catch((error: any) => {\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  return (\r\n    <AppBar {...rest} className={clsx(classes.root, className)}>\r\n      <Toolbar>\r\n        <RouterLink to='/'>\r\n          <img alt='Logo' src='/images/logos/logo--white.svg' />\r\n        </RouterLink>\r\n        <div className={classes.flexGrow} />\r\n\r\n        <Hidden mdDown>\r\n          <Button\r\n            className={classes.logoutButton}\r\n            color='inherit'\r\n            onClick={handleLogout}\r\n          >\r\n            <InputIcon className={classes.logoutIcon} />\r\n            Sign out\r\n            {isLoading ? (\r\n              <i\r\n                style={{ fontSize: 15, marginLeft: 20 }}\r\n                className='fas fa-spinner fa-pulse'\r\n              ></i>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </Button>\r\n        </Hidden>\r\n        <Hidden lgUp>\r\n          <IconButton color='inherit' onClick={onOpenNavBarMobile}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default TopBar;\r\n"]},"metadata":{},"sourceType":"module"}