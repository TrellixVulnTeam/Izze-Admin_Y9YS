{"ast":null,"code":"import * as Yup from 'yup';\nexport const initialValues = {\n  goal_plan: '',\n  actvity_factor: '',\n  diet_type: '',\n  calories: '',\n  protein: {\n    macros: '',\n    gram: '',\n    calories: ''\n  },\n  fat: {\n    macros: '',\n    gram: '',\n    calories: ''\n  },\n  carbs: {\n    macros: '',\n    gram: '',\n    calories: ''\n  },\n  early_morning: {\n    ingredients: [{\n      id: ''\n    }],\n    quantity: '',\n    protein: '',\n    fat: '',\n    carbs: '',\n    calories: ''\n  },\n  breakfast: {\n    ingredients: [{\n      id: ''\n    }],\n    quantity: '',\n    protein: '',\n    fat: '',\n    carbs: '',\n    calories: ''\n  },\n  mid_morning_snack: {\n    ingredients: [{\n      id: ''\n    }],\n    quantity: '',\n    protein: '',\n    fat: '',\n    carbs: '',\n    calories: ''\n  },\n  lunch: {\n    ingredients: [{\n      id: ''\n    }],\n    quantity: '',\n    protein: '',\n    fat: '',\n    carbs: '',\n    calories: ''\n  },\n  evening_snack: {\n    ingredients: [{\n      id: ''\n    }],\n    quantity: '',\n    protein: '',\n    fat: '',\n    carbs: '',\n    calories: ''\n  },\n  dinner: {\n    ingredients: [{\n      id: ''\n    }],\n    quantity: '',\n    protein: '',\n    fat: '',\n    carbs: '',\n    calories: ''\n  }\n};\nexport const validation = {\n  validationSchema: Yup.object().shape({\n    goal_plan: Yup.string().trim().required('Goal plan is required'),\n    actvity_factor: Yup.string().trim().required('Activiy factor is required'),\n    diet_type: Yup.string().trim().required('Diet type is required'),\n    calories: Yup.string().trim().required('Calories is required'),\n    protein: Yup.object({\n      macros: Yup.string().trim().required('Macros is required'),\n      gram: Yup.string().trim().required('Gram is required'),\n      calories: Yup.string().trim().required('Calories is required')\n    }),\n    fat: Yup.object({\n      macros: Yup.string().trim().required('Macros is required'),\n      gram: Yup.string().trim().required('Gram is required'),\n      calories: Yup.string().trim().required('Calories is required')\n    }),\n    carbs: Yup.object({\n      macros: Yup.string().trim().required('Macros is required'),\n      gram: Yup.string().trim().required('Gram is required'),\n      calories: Yup.string().trim().required('Calories is required')\n    }),\n    early_morning: Yup.object({\n      ingredients: Yup.array().of(Yup.object().shape({\n        id: Yup.string().trim().required('Workout is Required')\n      }))\n    })\n  })\n};","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/pages/NutritionPlan/FormikValues.tsx"],"names":["Yup","initialValues","goal_plan","actvity_factor","diet_type","calories","protein","macros","gram","fat","carbs","early_morning","ingredients","id","quantity","breakfast","mid_morning_snack","lunch","evening_snack","dinner","validation","validationSchema","object","shape","string","trim","required","array","of"],"mappings":"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","sourcesContent":["import * as Yup from 'yup';\r\n\r\ninterface Ingredients {\r\n  id: string;\r\n}\r\n\r\ninterface FoodItems {\r\n  macros: string;\r\n  gram: string;\r\n  calories: string;\r\n}\r\n\r\ninterface FoodTiming {\r\n  ingredients: Ingredients[];\r\n  quantity: string;\r\n  protein: string;\r\n  fat: string;\r\n  carbs: string;\r\n  calories: string;\r\n}\r\n\r\ninterface NutritionPlan {\r\n  goal_plan: string;\r\n  actvity_factor: string;\r\n  diet_type: string;\r\n  calories: string;\r\n  protein: FoodItems;\r\n  fat: FoodItems;\r\n  carbs: FoodItems;\r\n  early_morning: FoodTiming;\r\n  breakfast: FoodTiming;\r\n  mid_morning_snack: FoodTiming;\r\n  lunch: FoodTiming;\r\n  evening_snack: FoodTiming;\r\n  dinner: FoodTiming;\r\n}\r\n\r\nexport const initialValues: NutritionPlan = {\r\n  goal_plan: '',\r\n  actvity_factor: '',\r\n  diet_type: '',\r\n  calories: '',\r\n  protein: {\r\n    macros: '',\r\n    gram: '',\r\n    calories: '',\r\n  },\r\n  fat: {\r\n    macros: '',\r\n    gram: '',\r\n    calories: '',\r\n  },\r\n  carbs: {\r\n    macros: '',\r\n    gram: '',\r\n    calories: '',\r\n  },\r\n  early_morning: {\r\n    ingredients: [{ id: '' }],\r\n    quantity: '',\r\n    protein: '',\r\n    fat: '',\r\n    carbs: '',\r\n    calories: '',\r\n  },\r\n  breakfast: {\r\n    ingredients: [{ id: '' }],\r\n    quantity: '',\r\n    protein: '',\r\n    fat: '',\r\n    carbs: '',\r\n    calories: '',\r\n  },\r\n  mid_morning_snack: {\r\n    ingredients: [{ id: '' }],\r\n    quantity: '',\r\n    protein: '',\r\n    fat: '',\r\n    carbs: '',\r\n    calories: '',\r\n  },\r\n  lunch: {\r\n    ingredients: [{ id: '' }],\r\n    quantity: '',\r\n    protein: '',\r\n    fat: '',\r\n    carbs: '',\r\n    calories: '',\r\n  },\r\n  evening_snack: {\r\n    ingredients: [{ id: '' }],\r\n    quantity: '',\r\n    protein: '',\r\n    fat: '',\r\n    carbs: '',\r\n    calories: '',\r\n  },\r\n  dinner: {\r\n    ingredients: [{ id: '' }],\r\n    quantity: '',\r\n    protein: '',\r\n    fat: '',\r\n    carbs: '',\r\n    calories: '',\r\n  },\r\n};\r\n\r\nexport const validation = {\r\n  validationSchema: Yup.object().shape({\r\n    goal_plan: Yup.string().trim().required('Goal plan is required'),\r\n    actvity_factor: Yup.string().trim().required('Activiy factor is required'),\r\n    diet_type: Yup.string().trim().required('Diet type is required'),\r\n    calories: Yup.string().trim().required('Calories is required'),\r\n    protein: Yup.object({\r\n      macros: Yup.string().trim().required('Macros is required'),\r\n      gram: Yup.string().trim().required('Gram is required'),\r\n      calories: Yup.string().trim().required('Calories is required'),\r\n    }),\r\n    fat: Yup.object({\r\n      macros: Yup.string().trim().required('Macros is required'),\r\n      gram: Yup.string().trim().required('Gram is required'),\r\n      calories: Yup.string().trim().required('Calories is required'),\r\n    }),\r\n    carbs: Yup.object({\r\n      macros: Yup.string().trim().required('Macros is required'),\r\n      gram: Yup.string().trim().required('Gram is required'),\r\n      calories: Yup.string().trim().required('Calories is required'),\r\n    }),\r\n    early_morning: Yup.object({\r\n      ingredients: Yup.array().of(\r\n        Yup.object().shape({\r\n          id: Yup.string().trim().required('Workout is Required'),\r\n        })\r\n      ),\r\n    }),\r\n  }),\r\n};\r\n"]},"metadata":{},"sourceType":"module"}