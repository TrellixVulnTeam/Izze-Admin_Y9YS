{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pyramidion\\\\WebApp\\\\Izze-Admin\\\\src\\\\pages\\\\NutritionPlan\\\\NutritionPlan.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$();\n\nimport { Avatar, Box, Button, Card, CardActions, CardContent, CardHeader, CircularProgress, Dialog, DialogActions, DialogContent, Divider, FormControl, FormHelperText, Grid, IconButton, ListItem, ListItemAvatar, makeStyles, Paper, Tab, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, Tooltip, Typography } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AddIcon from '@material-ui/icons/Add';\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { Pagination, TabContext, TabList, TabPanel } from '@material-ui/lab';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { Formik, getIn } from 'formik';\nimport React, { useEffect, useRef, useState } from 'react';\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\nimport Page from '../../components/Page/Page';\nimport useConfModel from '../../hook/useConfModel';\nimport useService from '../../hook/useService';\nimport useSnackbar from '../../hook/useSnackbar';\nimport { initialFormValues, NutMeal, NutMealTime, validation } from './FormikValues';\nimport clsx from 'clsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: theme.breakpoints.values.lg,\n    maxWidth: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(3)\n  },\n  content: {\n    padding: 0\n  },\n  tabCard: {\n    marginTop: theme.spacing(3)\n  },\n  themeButton: {\n    color: theme.palette.white,\n    backgroundColor: theme.palette.green.main,\n    '&:hover': {\n      backgroundColor: theme.palette.green.dark\n    }\n  },\n  sEvenly: {\n    display: 'flex',\n    justifyContent: 'space-evenly'\n  },\n  sBetween: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  iconPadd: {\n    padding: 5\n  },\n  jCenter: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  actions: {\n    padding: theme.spacing(1),\n    justifyContent: 'center'\n  },\n  tabRoot: {\n    minWidth: 0,\n    textTransform: 'none' // margin: '10px 0px',\n\n  },\n  tabIndicator: {\n    backgroundColor: theme.palette.green.main\n  },\n  tabTextColorInherit: {\n    backgroundColor: theme.palette.green.main,\n    color: 'white',\n    border: '1px solid white'\n  },\n  tabPanelRoot: {\n    paddingTop: 0,\n    paddingBottom: 0,\n    width: '100%'\n  },\n  listItemRoot: {\n    backgroundColor: '#7ac0af2b',\n    margin: '10px 0px'\n  },\n  flexDisplay: {\n    display: 'flex'\n  },\n  paperRoot: {\n    display: 'flex',\n    marginTop: '20px'\n  },\n  paperRoot1: {\n    display: 'flex',\n    marginTop: '20px'\n  },\n  tablePanelRoot: {\n    padding: '0px'\n  },\n  largeAvatar: {\n    width: theme.spacing(10),\n    height: theme.spacing(10)\n  },\n  justPadding: {\n    padding: 10,\n    borderRadius: 10\n  },\n  tabBtnIcon: {\n    height: '100%',\n    minWidth: 0,\n    textTransform: 'none'\n  },\n  divTab: {\n    flexDirection: 'column',\n    display: 'flex'\n  },\n  //=========\n  avatarRoot: {\n    borderRadius: 10,\n    marginRight: 15 // width: theme.spacing(10),\n    // height: theme.spacing(10),\n\n  },\n  textPrimary: {\n    fontWeight: 'bold'\n  },\n  textSecondary: {\n    color: '#A0A6B2'\n  },\n  noPadding: {\n    padding: 0\n  },\n  benefitsList: {\n    fontSize: '0.7rem',\n    '&::before': {\n      content: \"'•  '\",\n      color: 'black'\n    }\n  },\n  cardRoot: {\n    borderRadius: theme.spacing(3),\n    position: 'relative'\n  },\n  cardMediaRoot: {\n    height: theme.spacing(25)\n  },\n  cardContentRoot: {\n    backgroundColor: '#EFF1F3',\n    padding: theme.spacing(2),\n    paddingBottom: `${theme.spacing(2)}px !important`\n  },\n  cardActionsRoot: {\n    padding: 0,\n    paddingTop: theme.spacing(1),\n    justifyContent: 'space-between'\n  },\n  cardActionsBenifitsRoot: {\n    padding: 0,\n    paddingTop: theme.spacing(1),\n    display: 'block'\n  },\n  ulRoot: {\n    listStyle: 'none',\n    display: 'flex',\n    padding: 0,\n    margin: 0\n  },\n  liRoot: {\n    paddingLeft: '1em',\n    textIndent: '-.7em'\n  },\n  ulTypo: {\n    marginLeft: theme.spacing(0.5)\n  },\n  colorProtein: {\n    '&::before': {\n      content: \"'•  '\",\n      color: '#9A88FF'\n    }\n  },\n  colorFat: {\n    '&::before': {\n      content: \"'•  '\",\n      color: '#E57B91'\n    }\n  },\n  colorCarbs: {\n    '&::before': {\n      content: \"'•  '\",\n      color: ''\n    }\n  },\n  dividerRoot: {\n    background: 'white',\n    margin: theme.spacing(1, -2)\n  },\n  mealTimeText: {\n    margin: theme.spacing(2, 0)\n  },\n  benefitsText: {\n    color: '#41A58D'\n  },\n  nutritionTextDiv: {\n    border: '1px solid #EFF1F3',\n    color: '#EFF1F3',\n    borderRadius: 20,\n    padding: theme.spacing(0.5, 1),\n    width: 'fit-content',\n    position: 'absolute',\n    top: theme.spacing(2),\n    left: theme.spacing(2)\n  },\n  nutritionText: {\n    fontSize: '0.5rem'\n  },\n  nutCard: {\n    borderRadius: theme.spacing(3),\n    margin: theme.spacing(2, 0)\n  },\n  nutCardRoot: {\n    backgroundColor: '#41A58D',\n    color: 'white'\n  },\n  nutCardTitle: {\n    textAlign: 'center',\n    color: 'inherit'\n  },\n  nutCardAction: {\n    backgroundColor: '#276955',\n    color: 'white',\n    justifyContent: 'space-evenly'\n  },\n  circleBottom: {\n    color: '#eeeeee42'\n  },\n  circleTop: {\n    position: 'absolute',\n    left: 0\n  }\n}));\nconst DietTypeDrop = [{\n  id: 'VEG',\n  name: 'Vegetarian'\n}, {\n  id: 'NONVEG',\n  name: 'Non-Vegetarian'\n}, {\n  id: 'EGG',\n  name: 'Eggetarian'\n}];\nconst CaloriesDrop = [{\n  id: '2000',\n  name: '2000'\n}, {\n  id: '2100',\n  name: '2100'\n}, {\n  id: '2200',\n  name: '2200'\n}, {\n  id: '2300',\n  name: '2300'\n}];\n\nconst NutritionPlan = () => {\n  _s();\n\n  const classes = useStyles();\n  const Snackbar = useSnackbar();\n  const {\n    Post\n  } = useService();\n  const ConfModel = useConfModel();\n  const [loading, setLoading] = useState(true);\n  const [stateData, setStateData] = useState({\n    page_no: 1,\n    page_limit: 10\n  });\n  const [pageCount, setPageCount] = useState(0);\n  const [nutritionPlanList, setNutritionPlanList] = useState([]);\n  const [addEditDialog, setAddEditDialog] = useState({\n    isOpen: false,\n    title: '',\n    okBtnText: '',\n    isEdit: false,\n    data: {}\n  });\n  const [viewDialog, setViewDialog] = useState({\n    isOpen: false,\n    title: '',\n    data: {}\n  });\n\n  const openAddDialog = () => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      title: 'Add Nutrition Plan',\n      isEdit: false,\n      okBtnText: 'Save'\n    }));\n  };\n\n  const openEditDialog = data => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      isEdit: true,\n      data,\n      title: 'Edit Nutrition Plan',\n      okBtnText: 'Edit'\n    }));\n  };\n\n  const onDelete = data => {\n    const {\n      openModel,\n      setLoading,\n      closeModel\n    } = ConfModel;\n\n    const submitFunction = () => {\n      setLoading(true);\n      Post('app/deleteNutritionPlan', {\n        id: data._id\n      }).then(async res => {\n        setLoading(false);\n        closeModel();\n        onSuccessAction();\n        Snackbar.show(res.message, 'success');\n      }).catch(err => {\n        setLoading(false);\n        Snackbar.show('Internal Server Error', 'error');\n      });\n    };\n\n    openModel(submitFunction);\n  };\n\n  const openViewDialog = data => {\n    setViewDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      data,\n      title: 'View Nutrition Plan'\n    }));\n  };\n\n  const listNutritionPlan = async () => {\n    setLoading(true);\n    Post('app/listNutritionPlan', stateData).then(res => {\n      setLoading(false);\n\n      if (!res.error) {\n        setNutritionPlanList(res.data);\n        setPageCount(res.page_count);\n      } else {\n        Snackbar.show(res.message, 'error');\n      }\n    }).catch(err => {\n      console.log('err', err);\n      setLoading(false);\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  const onPageChange = (event, value) => {\n    setStateData(prevState => ({ ...prevState,\n      page_no: value\n    }));\n  };\n\n  const closeAddEditDialog = () => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: false\n    }));\n  };\n\n  const closeViewDialog = () => {\n    setViewDialog(prevState => ({ ...prevState,\n      isOpen: false\n    }));\n  };\n\n  const onSuccessAction = () => {\n    listNutritionPlan();\n    closeAddEditDialog();\n  };\n\n  const getDropValues = (dropValues, value) => {\n    var _dropValues$find;\n\n    return ((_dropValues$find = dropValues.find(({\n      id\n    }) => id == value)) === null || _dropValues$find === void 0 ? void 0 : _dropValues$find.name) || '';\n  };\n\n  React.useEffect(() => {\n    listNutritionPlan();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Page, {\n      title: \"Nutrition Plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      alignItems: \"flex-end\",\n      container: true,\n      justify: \"space-between\",\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h3\",\n          children: \"Nutrition Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => openAddDialog(),\n          className: classes.themeButton,\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 24\n          }, this),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 0,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            size: \"small\",\n            placeholder: \"Name\",\n            variant: \"outlined\",\n            name: \"state\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.tabCard,\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        className: classes.content,\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"#\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Diet Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 442,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Calories\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: [!loading && nutritionPlanList.map((data, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: stateData.page_limit * (stateData.page_no - 1) + index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: getDropValues(DietTypeDrop, data === null || data === void 0 ? void 0 : data.diet_type)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: data === null || data === void 0 ? void 0 : data.calories\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: classes.sEvenly,\n                    children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                      title: \"View\",\n                      arrow: true,\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        className: classes.iconPadd,\n                        onClick: () => openViewDialog(data),\n                        children: /*#__PURE__*/_jsxDEV(CenterFocusStrongIcon, {\n                          color: \"primary\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 465,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 461,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 460,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                      title: \"Edit\",\n                      arrow: true,\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        className: classes.iconPadd,\n                        onClick: () => openEditDialog(data),\n                        children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                          color: \"action\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 473,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 469,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 468,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                      title: \"Delete\",\n                      arrow: true,\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        className: classes.iconPadd,\n                        onClick: () => onDelete(data),\n                        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                          color: \"secondary\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 481,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 477,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 476,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 459,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 21\n              }, this)), loading && /*#__PURE__*/_jsxDEV(TableLoader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 29\n              }, this), !loading && nutritionPlanList.length == 0 && /*#__PURE__*/_jsxDEV(TableNoData, {\n                children: \"No Data Found\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Pagination, {\n          count: pageCount,\n          page: stateData.page_no,\n          onChange: onPageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddEditModel, { ...addEditDialog,\n      onClose: closeAddEditDialog,\n      onSuccess: onSuccessAction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 7\n    }, this), viewDialog.isOpen && /*#__PURE__*/_jsxDEV(ViewNutritionModel, { ...viewDialog,\n      onClose: closeViewDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 399,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NutritionPlan, \"TG3KepaRoOBGBqOAHUL9PPeoICE=\", false, function () {\n  return [useStyles, useSnackbar, useService, useConfModel];\n});\n\n_c = NutritionPlan;\nexport const AddEditModel = props => {\n  _s2();\n\n  const {\n    isEdit,\n    isOpen,\n    okBtnText = 'OK',\n    onClose,\n    data,\n    title,\n    onSuccess\n  } = props;\n  const formikRef = useRef(null);\n  const classes = useStyles();\n  const Snackbar = useSnackbar();\n  const {\n    Post\n  } = useService();\n  const [tabValue, setTabValue] = React.useState('none');\n  const [ingredientList, setIngredientList] = useState([]);\n  const [initialValue, setInitialValue] = React.useState({ ...initialFormValues\n  });\n\n  const onSubmit = (value, helper) => {\n    helper.setSubmitting(true);\n    const postData = { ...value\n    };\n    !isEdit && addData(postData, helper);\n    isEdit && editData(postData, helper);\n  };\n\n  const addData = (data, {\n    setSubmitting,\n    resetForm\n  }) => {\n    setSubmitting(true);\n    Post('app/addNutritionPlan', data).then(res => {\n      Snackbar.show(res.message, 'success');\n      setSubmitting(false);\n      resetForm();\n      onSuccess();\n    }).catch(err => {\n      setSubmitting(false);\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  const editData = (data, {\n    setSubmitting,\n    resetForm\n  }) => {\n    setSubmitting(true);\n    Post('app/editNutritionPlan', data).then(res => {\n      Snackbar.show(res.message, 'success');\n      setSubmitting(false);\n      resetForm();\n      onSuccess();\n    }).catch(err => {\n      setSubmitting(false);\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  const handleChangeTab = newValue => {\n    setTabValue(newValue);\n  };\n\n  const addNewTab = (values, setFieldValue) => {\n    const {\n      nutrition\n    } = values;\n    nutrition.push(NutMealTime);\n    setFieldValue('nutrition', nutrition);\n  };\n\n  const submitMealTime = (i, values, setFieldValue) => {\n    const {\n      nutrition\n    } = values;\n    const NewNutrition = { ...nutrition[i]\n    };\n    NewNutrition.isEdit = false;\n\n    if (NewNutrition.meal_time !== '') {\n      alert('correct');\n    } // nutrition[i] = NewNutrition\n    // setFieldValue('nutrition', nutrition)\n    // handleChangeTab(i.toString())\n\n  };\n\n  const editMealTime = (i, values, setFieldValue) => {\n    const {\n      nutrition\n    } = values;\n    const NewNutrition = { ...nutrition[i]\n    };\n    NewNutrition.isEdit = true;\n    nutrition[i] = NewNutrition;\n    setFieldValue('nutrition', nutrition);\n    handleChangeTab(i.toString());\n  };\n\n  const deleteMealTime = (i, values, setFieldValue) => {\n    const {\n      nutrition\n    } = values;\n    const NewNutrition = nutrition.filter((d, index) => index != i);\n    setFieldValue('nutrition', NewNutrition);\n  };\n\n  const addMeals = (values, i, setFieldValue) => {\n    const FormKey = `nutrition[${i}].meals`;\n    const {\n      nutrition\n    } = values;\n    const meals = [...nutrition[i].meals];\n    meals.push(NutMeal);\n    setFieldValue(FormKey, meals);\n  };\n\n  const listAllMealIngredient = () => {\n    Post('app/listAllMealIngredient', {}).then(response => {\n      if (!response.error) {\n        setIngredientList(response.data);\n      } else {\n        Snackbar.show(response.message, 'error');\n      }\n    }).catch(error => {\n      Snackbar.show(error.message, 'error');\n    });\n  };\n\n  const getArrayError = error => {\n    return typeof error == 'string' ? error : '';\n  };\n\n  const removeMeals = (i, FieldName, values, setFieldValue) => {\n    const MealValue = getIn(values, `${FieldName}.meals`);\n    const FinelMealValue = MealValue.filter((d, index) => i != index);\n    setFieldValue(`${FieldName}.meals`, FinelMealValue);\n  };\n\n  useEffect(() => {\n    if (isEdit) {\n      const {\n        _id,\n        ...rest\n      } = data;\n      const editData = { ...rest,\n        id: _id\n      };\n      let nutrition = editData.nutrition.map(NutData => {\n        const {\n          meals,\n          ...rest\n        } = NutData;\n        let NewMeals = meals.map(MealData => {\n          const {\n            ingredients,\n            ...rest\n          } = MealData;\n          const IngredientIds = ingredientList.map(({\n            _id\n          }) => _id);\n          const NewInc = ingredients.filter(({\n            _id\n          }) => IngredientIds.includes(_id)).map(({\n            _id\n          }) => ({\n            id: _id\n          }));\n          return { ...rest,\n            ingredients: NewInc\n          };\n        });\n        return { ...rest,\n          isEdit: false,\n          meals: NewMeals\n        };\n      });\n      editData.nutrition = nutrition;\n      console.log('editData', editData);\n      setInitialValue(editData);\n    } else {\n      setInitialValue(initialFormValues);\n    }\n  }, [props, ingredientList]);\n  useEffect(() => {\n    listAllMealIngredient();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isOpen,\n      disableBackdropClick: true,\n      disableEscapeKeyDown: true,\n      fullWidth: true,\n      fullScreen: true,\n      maxWidth: \"lg\",\n      \"aria-labelledby\": \"dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"dialog-title\",\n        onClose: onClose,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        innerRef: formikRef,\n        enableReinitialize: true,\n        initialValues: initialValue,\n        validationSchema: validation,\n        onSubmit: onSubmit,\n        children: ({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          setFieldValue,\n          submitForm,\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n            dividers: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  options: DietTypeDrop,\n                  value: DietTypeDrop.find(data => data.id == values.diet_type),\n                  getOptionLabel: option => option.name,\n                  getOptionSelected: option => option.id == values.diet_type,\n                  onChange: (event, newValue) => {\n                    setFieldValue('diet_type', (newValue === null || newValue === void 0 ? void 0 : newValue.id) || '');\n                  },\n                  onBlur: handleBlur,\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    label: \"Diet Types\",\n                    variant: \"outlined\",\n                    error: Boolean(touched.diet_type && errors.diet_type),\n                    helperText: touched.diet_type && errors.diet_type,\n                    inputProps: { ...params.inputProps\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 717,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 707,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 706,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  options: CaloriesDrop,\n                  value: CaloriesDrop.find(data => data.id == values.calories),\n                  getOptionLabel: option => option.name,\n                  getOptionSelected: option => option.id == values.calories,\n                  onChange: (event, newValue) => {\n                    setFieldValue('calories', (newValue === null || newValue === void 0 ? void 0 : newValue.id) || '');\n                  },\n                  onBlur: handleBlur,\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    label: \"Calories\",\n                    variant: \"outlined\",\n                    error: Boolean(touched.calories && errors.calories),\n                    helperText: touched.calories && errors.calories,\n                    inputProps: { ...params.inputProps\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 741,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 731,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 730,\n                columnNumber: 19\n              }, this), [{\n                label: 'Protein',\n                key: 'protein'\n              }, {\n                label: 'Fat',\n                key: 'fat'\n              }, {\n                label: 'Carbs',\n                key: 'carbs'\n              }].map(({\n                label,\n                key\n              }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h5\",\n                    align: \"center\",\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: label\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 759,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 758,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 757,\n                  columnNumber: 23\n                }, this), [{\n                  label: 'Macros',\n                  key: 'macros'\n                }, {\n                  label: 'Gram',\n                  key: 'gram'\n                }, {\n                  label: 'Calories',\n                  key: 'calories'\n                }].map(subData => {\n                  const SubKey = subData.key;\n                  const FieldName = `${key}.${SubKey}`;\n                  return /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      fullWidth: true,\n                      label: subData.label,\n                      name: FieldName,\n                      variant: \"outlined\",\n                      error: Boolean(getIn(touched, FieldName) && getIn(errors, FieldName)),\n                      helperText: getIn(touched, FieldName) && getIn(errors, FieldName),\n                      value: getIn(values, FieldName),\n                      onChange: handleChange,\n                      onBlur: handleBlur\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 768,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 767,\n                    columnNumber: 27\n                  }, this);\n                })]\n              }, void 0, true)), /*#__PURE__*/_jsxDEV(TabContext, {\n                value: tabValue || '',\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 4,\n                  children: /*#__PURE__*/_jsxDEV(TabList, {\n                    classes: {\n                      indicator: classes.tabIndicator\n                    },\n                    orientation: \"vertical\",\n                    variant: \"standard\",\n                    children: [values === null || values === void 0 ? void 0 : values.nutrition.map((nutData, i) => {\n                      let FieldName = `nutrition[${i}]`;\n                      let FieldTouched = getIn(touched, FieldName);\n                      let FieldErrors = getIn(errors, FieldName);\n                      let FieldValues = getIn(values, FieldName);\n                      const TabSelected = i == Number(tabValue);\n                      const SelectedStyle = TabSelected ? {\n                        borderRight: '2px solid #41a58d'\n                      } : {\n                        borderRight: '2px solid white'\n                      };\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: classes.divTab,\n                        children: /*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          container: true,\n                          xs: 12,\n                          spacing: 1,\n                          style: {\n                            margin: 'inherit',\n                            ...SelectedStyle\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(Grid, {\n                            item: true,\n                            xs: nutData.isEdit ? 10 : 8,\n                            children: [nutData.isEdit && /*#__PURE__*/_jsxDEV(TextField, {\n                              fullWidth: true,\n                              size: \"small\",\n                              label: \"Name\",\n                              name: `${FieldName}.meal_time`,\n                              variant: \"outlined\",\n                              error: Boolean((FieldTouched === null || FieldTouched === void 0 ? void 0 : FieldTouched.meal_time) && (FieldErrors === null || FieldErrors === void 0 ? void 0 : FieldErrors.meal_time)),\n                              helperText: (FieldTouched === null || FieldTouched === void 0 ? void 0 : FieldTouched.meal_time) && (FieldErrors === null || FieldErrors === void 0 ? void 0 : FieldErrors.meal_time),\n                              value: nutData === null || nutData === void 0 ? void 0 : nutData.meal_time,\n                              onChange: handleChange,\n                              onBlur: handleBlur\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 808,\n                              columnNumber: 54\n                            }, this), !nutData.isEdit && /*#__PURE__*/_jsxDEV(Button, {\n                              fullWidth: true,\n                              className: !Boolean((FieldTouched === null || FieldTouched === void 0 ? void 0 : FieldTouched.meal_time) && (FieldErrors === null || FieldErrors === void 0 ? void 0 : FieldErrors.meal_time)) ? classes.themeButton : '',\n                              classes: {\n                                fullWidth: classes.tabBtnIcon\n                              },\n                              variant: \"contained\",\n                              color: \"secondary\",\n                              onClick: e => handleChangeTab(i.toString()),\n                              children: !Boolean((FieldTouched === null || FieldTouched === void 0 ? void 0 : FieldTouched.meal_time) && (FieldErrors === null || FieldErrors === void 0 ? void 0 : FieldErrors.meal_time)) ? nutData === null || nutData === void 0 ? void 0 : nutData.meal_time : FieldErrors === null || FieldErrors === void 0 ? void 0 : FieldErrors.meal_time\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 823,\n                              columnNumber: 37\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 806,\n                            columnNumber: 33\n                          }, this), nutData.isEdit && /*#__PURE__*/_jsxDEV(Grid, {\n                            item: true,\n                            xs: 2,\n                            children: /*#__PURE__*/_jsxDEV(Button, {\n                              fullWidth: true,\n                              className: classes.themeButton,\n                              classes: {\n                                fullWidth: classes.tabBtnIcon\n                              },\n                              variant: \"contained\",\n                              color: \"secondary\",\n                              onClick: () => submitMealTime(i, values, setFieldValue),\n                              children: /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 849,\n                                columnNumber: 39\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 839,\n                              columnNumber: 37\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 838,\n                            columnNumber: 35\n                          }, this), !nutData.isEdit && /*#__PURE__*/_jsxDEV(Grid, {\n                            item: true,\n                            xs: 2,\n                            children: /*#__PURE__*/_jsxDEV(Button, {\n                              fullWidth: true,\n                              classes: {\n                                fullWidth: classes.tabBtnIcon\n                              },\n                              variant: \"contained\",\n                              color: \"primary\",\n                              onClick: () => editMealTime(i, values, setFieldValue),\n                              children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 864,\n                                columnNumber: 37\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 855,\n                              columnNumber: 35\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 854,\n                            columnNumber: 53\n                          }, this), !nutData.isEdit && /*#__PURE__*/_jsxDEV(Grid, {\n                            item: true,\n                            xs: 2,\n                            children: /*#__PURE__*/_jsxDEV(Button, {\n                              fullWidth: true,\n                              classes: {\n                                fullWidth: classes.tabBtnIcon\n                              },\n                              variant: \"contained\",\n                              color: \"secondary\",\n                              onClick: () => deleteMealTime(i, values, setFieldValue),\n                              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 880,\n                                columnNumber: 39\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 871,\n                              columnNumber: 37\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 870,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 805,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 804,\n                        columnNumber: 29\n                      }, this);\n                    }), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: classes.divTab,\n                      children: /*#__PURE__*/_jsxDEV(Grid, {\n                        container: true,\n                        xs: 12,\n                        spacing: 1,\n                        style: {\n                          margin: 'inherit'\n                        },\n                        children: /*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          xs: 12,\n                          children: /*#__PURE__*/_jsxDEV(FormControl, {\n                            fullWidth: true,\n                            error: Boolean(getIn(touched, 'nutrition') && getArrayError(getIn(errors, 'nutrition'))),\n                            children: [/*#__PURE__*/_jsxDEV(Button, {\n                              fullWidth: true,\n                              className: classes.themeButton,\n                              variant: \"contained\",\n                              color: \"secondary\",\n                              onClick: () => addNewTab(values, setFieldValue),\n                              children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 905,\n                                columnNumber: 35\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 898,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                              children: getIn(touched, 'nutrition') && getArrayError(getIn(errors, 'nutrition'))\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 908,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 895,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 894,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 893,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 892,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 789,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 788,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 8,\n                  children: values === null || values === void 0 ? void 0 : values.nutrition.map((nutData, i) => {\n                    let FieldMainName = `nutrition[${i}]`;\n                    return /*#__PURE__*/_jsxDEV(TabPanel, {\n                      className: classes.tabPanelRoot,\n                      value: i.toString(),\n                      children: /*#__PURE__*/_jsxDEV(Grid, {\n                        container: true,\n                        spacing: 2,\n                        children: [/*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          xs: 12,\n                          children: /*#__PURE__*/_jsxDEV(Typography, {\n                            variant: \"h5\",\n                            align: \"center\",\n                            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                              children: nutData === null || nutData === void 0 ? void 0 : nutData.meal_time\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 928,\n                              columnNumber: 35\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 927,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 926,\n                          columnNumber: 31\n                        }, this), nutData === null || nutData === void 0 ? void 0 : nutData.meals.map((mealData, i) => {\n                          let FieldName = `${FieldMainName}.meals[${i}]`;\n                          let FieldTouched = getIn(touched, FieldName);\n                          let FieldErrors = getIn(errors, FieldName);\n                          let FieldValues = getIn(values, FieldName);\n                          return /*#__PURE__*/_jsxDEV(_Fragment, {\n                            children: [/*#__PURE__*/_jsxDEV(Grid, {\n                              item: true,\n                              xs: 11,\n                              children: /*#__PURE__*/_jsxDEV(Typography, {\n                                variant: \"h5\",\n                                align: \"center\",\n                                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                                  children: `Meal #${i + 1}`\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 941,\n                                  columnNumber: 41\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 940,\n                                columnNumber: 39\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 939,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                              item: true,\n                              xs: 1,\n                              children: /*#__PURE__*/_jsxDEV(Button, {\n                                fullWidth: true,\n                                classes: {\n                                  fullWidth: classes.tabBtnIcon\n                                },\n                                variant: \"contained\",\n                                color: \"secondary\",\n                                onClick: () => removeMeals(i, FieldMainName, values, setFieldValue),\n                                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 955,\n                                  columnNumber: 41\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 946,\n                                columnNumber: 39\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 945,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                              item: true,\n                              md: 12,\n                              xs: 12,\n                              children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                                multiple: true,\n                                options: ingredientList,\n                                value: ingredientList.filter(data => mealData.ingredients.map(({\n                                  id\n                                }) => id).includes(data._id)),\n                                getOptionLabel: option => option.name,\n                                onChange: (event, newValue) => {\n                                  let IngIds = newValue.map(({\n                                    _id\n                                  }) => ({\n                                    id: _id\n                                  }));\n                                  setFieldValue(`${FieldName}.ingredients`, IngIds || []);\n                                },\n                                onBlur: handleBlur,\n                                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                                  label: \"Ingredient\",\n                                  variant: \"outlined\",\n                                  error: Boolean((FieldTouched === null || FieldTouched === void 0 ? void 0 : FieldTouched.ingredients) && (FieldErrors === null || FieldErrors === void 0 ? void 0 : FieldErrors.ingredients)),\n                                  helperText: (FieldTouched === null || FieldTouched === void 0 ? void 0 : FieldTouched.ingredients) && (FieldErrors === null || FieldErrors === void 0 ? void 0 : FieldErrors.ingredients),\n                                  inputProps: { ...params.inputProps\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 971,\n                                  columnNumber: 43\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 960,\n                                columnNumber: 39\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 959,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                              item: true,\n                              md: 6,\n                              xs: 6,\n                              children: /*#__PURE__*/_jsxDEV(TextField, {\n                                fullWidth: true,\n                                multiline: true,\n                                label: \"Quantity\",\n                                name: `${FieldName}.quantity`,\n                                variant: \"outlined\",\n                                error: Boolean((FieldTouched === null || FieldTouched === void 0 ? void 0 : FieldTouched.quantity) && (FieldErrors === null || FieldErrors === void 0 ? void 0 : FieldErrors.quantity)),\n                                helperText: (FieldTouched === null || FieldTouched === void 0 ? void 0 : FieldTouched.quantity) && (FieldErrors === null || FieldErrors === void 0 ? void 0 : FieldErrors.quantity),\n                                value: mealData.quantity,\n                                onChange: handleChange,\n                                onBlur: handleBlur\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 986,\n                                columnNumber: 39\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 985,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                              item: true,\n                              md: 6,\n                              xs: 6,\n                              children: /*#__PURE__*/_jsxDEV(TextField, {\n                                fullWidth: true,\n                                multiline: true,\n                                label: \"Protein\",\n                                name: `${FieldName}.protein`,\n                                variant: \"outlined\",\n                                error: Boolean((FieldTouched === null || FieldTouched === void 0 ? void 0 : FieldTouched.protein) && (FieldErrors === null || FieldErrors === void 0 ? void 0 : FieldErrors.protein)),\n                                helperText: (FieldTouched === null || FieldTouched === void 0 ? void 0 : FieldTouched.protein) && (FieldErrors === null || FieldErrors === void 0 ? void 0 : FieldErrors.protein),\n                                value: mealData.protein,\n                                onChange: handleChange,\n                                onBlur: handleBlur\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1001,\n                                columnNumber: 39\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1000,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                              item: true,\n                              md: 6,\n                              xs: 6,\n                              children: /*#__PURE__*/_jsxDEV(TextField, {\n                                fullWidth: true,\n                                multiline: true,\n                                label: \"Fat\",\n                                name: `${FieldName}.fat`,\n                                variant: \"outlined\",\n                                error: Boolean((FieldTouched === null || FieldTouched === void 0 ? void 0 : FieldTouched.fat) && (FieldErrors === null || FieldErrors === void 0 ? void 0 : FieldErrors.fat)),\n                                helperText: (FieldTouched === null || FieldTouched === void 0 ? void 0 : FieldTouched.fat) && (FieldErrors === null || FieldErrors === void 0 ? void 0 : FieldErrors.fat),\n                                value: mealData.fat,\n                                onChange: handleChange,\n                                onBlur: handleBlur\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1016,\n                                columnNumber: 39\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1015,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                              item: true,\n                              md: 6,\n                              xs: 6,\n                              children: /*#__PURE__*/_jsxDEV(TextField, {\n                                fullWidth: true,\n                                multiline: true,\n                                label: \"Carbs\",\n                                name: `${FieldName}.carbs`,\n                                variant: \"outlined\",\n                                error: Boolean((FieldTouched === null || FieldTouched === void 0 ? void 0 : FieldTouched.carbs) && (FieldErrors === null || FieldErrors === void 0 ? void 0 : FieldErrors.carbs)),\n                                helperText: (FieldTouched === null || FieldTouched === void 0 ? void 0 : FieldTouched.carbs) && (FieldErrors === null || FieldErrors === void 0 ? void 0 : FieldErrors.carbs),\n                                value: mealData.carbs,\n                                onChange: handleChange,\n                                onBlur: handleBlur\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1031,\n                                columnNumber: 39\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1030,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                              item: true,\n                              md: 6,\n                              xs: 6,\n                              children: /*#__PURE__*/_jsxDEV(TextField, {\n                                fullWidth: true,\n                                multiline: true,\n                                label: \"calories\",\n                                name: `${FieldName}.calories`,\n                                variant: \"outlined\",\n                                error: Boolean((FieldTouched === null || FieldTouched === void 0 ? void 0 : FieldTouched.calories) && (FieldErrors === null || FieldErrors === void 0 ? void 0 : FieldErrors.calories)),\n                                helperText: (FieldTouched === null || FieldTouched === void 0 ? void 0 : FieldTouched.calories) && (FieldErrors === null || FieldErrors === void 0 ? void 0 : FieldErrors.calories),\n                                value: mealData.calories,\n                                onChange: handleChange,\n                                onBlur: handleBlur\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1046,\n                                columnNumber: 39\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1045,\n                              columnNumber: 37\n                            }, this)]\n                          }, void 0, true);\n                        }), /*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          md: 12,\n                          xs: 12,\n                          children: /*#__PURE__*/_jsxDEV(FormControl, {\n                            fullWidth: true,\n                            error: Boolean(getIn(touched, `${FieldMainName}.meals`) && getArrayError(getIn(errors, `${FieldMainName}.meals`))),\n                            children: [/*#__PURE__*/_jsxDEV(Button, {\n                              fullWidth: true,\n                              className: classes.themeButton,\n                              variant: \"contained\",\n                              color: \"default\",\n                              onClick: () => addMeals(values, i, setFieldValue),\n                              endIcon: /*#__PURE__*/_jsxDEV(ControlPointIcon, {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1073,\n                                columnNumber: 46\n                              }, this),\n                              children: \"Add Meals\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1067,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                              children: getIn(touched, `${FieldMainName}.meals`) && getArrayError(getIn(errors, `${FieldMainName}.meals`))\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1078,\n                              columnNumber: 35\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1064,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1063,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 925,\n                        columnNumber: 29\n                      }, this)\n                    }, i, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 923,\n                      columnNumber: 27\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 919,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 787,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 705,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 704,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: onClose,\n              variant: \"outlined\",\n              color: \"secondary\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1099,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: classes.themeButton,\n              onClick: () => submitForm(),\n              disabled: isSubmitting,\n              variant: \"outlined\",\n              children: isSubmitting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 24,\n                style: {\n                  color: 'white'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1109,\n                columnNumber: 21\n              }, this) : okBtnText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1102,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1098,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 683,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s2(AddEditModel, \"FyHtOhE+jWq2qhxzIZM1fGbPxas=\", false, function () {\n  return [useStyles, useSnackbar, useService];\n});\n\n_c2 = AddEditModel;\n\nconst ViewNutritionModel = props => {\n  _s3();\n\n  const {\n    isOpen,\n    title,\n    onClose,\n    data\n  } = props;\n  const classes = useStyles();\n  const [formValue, setFormValue] = useState(data);\n  const [tabValue, setTabValue] = React.useState('0');\n  const [timings, setTimings] = React.useState('Early-Morning');\n\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  const getDropValues = (dropValues, value) => {\n    var _dropValues$find2;\n\n    return ((_dropValues$find2 = dropValues.find(({\n      id\n    }) => id == value)) === null || _dropValues$find2 === void 0 ? void 0 : _dropValues$find2.name) || '';\n  };\n\n  useEffect(() => {\n    setFormValue(data);\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    disableBackdropClick: true,\n    disableEscapeKeyDown: true,\n    fullWidth: true,\n    maxWidth: \"md\",\n    \"aria-labelledby\": \"dialog-view-title\",\n    open: isOpen,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"dialog-view-title\",\n      onClose: onClose,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: /*#__PURE__*/_jsxDEV(TableBody, {\n            children: [/*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Diet Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1161,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: getDropValues(DietTypeDrop, formValue === null || formValue === void 0 ? void 0 : formValue.diet_type)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1162,\n                  columnNumber: 28\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1162,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Calories\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1165,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [formValue === null || formValue === void 0 ? void 0 : formValue.calories, \" Kcal\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1166,\n                  columnNumber: 28\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1166,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1164,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1159,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1158,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.nutCard,\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          classes: {\n            root: classes.nutCardRoot,\n            title: classes.nutCardTitle\n          },\n          title: `${formValue === null || formValue === void 0 ? void 0 : formValue.calories} Kcal`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          className: classes.nutCardAction,\n          children: [/*#__PURE__*/_jsxDEV(NutritionData, {\n            title: \"Protein\",\n            data: formValue === null || formValue === void 0 ? void 0 : formValue.protein\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NutritionData, {\n            title: \"Fat\",\n            data: formValue === null || formValue === void 0 ? void 0 : formValue.fat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NutritionData, {\n            title: \"Carbs\",\n            data: formValue === null || formValue === void 0 ? void 0 : formValue.carbs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        children: /*#__PURE__*/_jsxDEV(TabContext, {\n          value: tabValue || '',\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            container: true,\n            xs: 12,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 3,\n              children: /*#__PURE__*/_jsxDEV(TabList, {\n                classes: {\n                  indicator: classes.tabIndicator\n                },\n                onChange: handleTabChange,\n                orientation: \"vertical\",\n                variant: \"standard\",\n                children: formValue === null || formValue === void 0 ? void 0 : formValue.nutrition.map((nutData, i) => {\n                  const {\n                    meal_time\n                  } = nutData;\n                  return /*#__PURE__*/_jsxDEV(Tab, {\n                    classes: {\n                      root: classes.tabRoot,\n                      textColorInherit: classes.tabTextColorInherit\n                    },\n                    label: meal_time,\n                    value: i.toString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1203,\n                    columnNumber: 23\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1192,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 9,\n              children: formValue === null || formValue === void 0 ? void 0 : formValue.nutrition.map((nutData, i) => {\n                const {\n                  meals = []\n                } = nutData;\n                return /*#__PURE__*/_jsxDEV(TabPanel, {\n                  className: classes.tabPanelRoot,\n                  value: i.toString(),\n                  children: meals.map((mealData, i) => {\n                    const {\n                      ingredients = []\n                    } = mealData;\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 12,\n                        className: classes.mealTimeText,\n                        children: /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"h5\",\n                          align: \"center\",\n                          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                            children: `Meal #${i + 1}`\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1225,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1224,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1223,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        container: true,\n                        xs: 12,\n                        spacing: 2,\n                        children: ingredients.map((incData, i) => {\n                          const {\n                            benfits = []\n                          } = incData;\n                          return /*#__PURE__*/_jsxDEV(Grid, {\n                            item: true,\n                            xs: 12,\n                            sm: 12,\n                            md: 6,\n                            children: /*#__PURE__*/_jsxDEV(Card, {\n                              elevation: 0,\n                              className: classes.cardRoot,\n                              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                                className: classes.cardContentRoot,\n                                children: [/*#__PURE__*/_jsxDEV(List, {\n                                  className: classes.noPadding,\n                                  children: /*#__PURE__*/_jsxDEV(ListItem, {\n                                    disableGutters: true,\n                                    className: classes.noPadding,\n                                    children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                                      children: /*#__PURE__*/_jsxDEV(Avatar, {\n                                        className: classes.avatarRoot,\n                                        src: incData.image\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 1239,\n                                        columnNumber: 47\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 1238,\n                                      columnNumber: 45\n                                    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                                      classes: {\n                                        primary: classes.textPrimary,\n                                        secondary: classes.textSecondary\n                                      },\n                                      primary: incData.name,\n                                      secondary: incData.quantity\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 1241,\n                                      columnNumber: 45\n                                    }, this)]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 1237,\n                                    columnNumber: 43\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1236,\n                                  columnNumber: 41\n                                }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                                  disableSpacing: true,\n                                  className: classes.cardActionsRoot,\n                                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                                      variant: \"body2\",\n                                      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                                        className: classes.ulRoot,\n                                        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                                          className: clsx(classes.liRoot, classes.colorProtein),\n                                          children: \"Protein\"\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 1256,\n                                          columnNumber: 49\n                                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                                          className: classes.ulTypo,\n                                          variant: \"body1\",\n                                          children: incData.protein\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 1257,\n                                          columnNumber: 49\n                                        }, this)]\n                                      }, void 0, true, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 1255,\n                                        columnNumber: 47\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 1254,\n                                      columnNumber: 45\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 1253,\n                                    columnNumber: 43\n                                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                                      variant: \"body2\",\n                                      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                                        className: classes.ulRoot,\n                                        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                                          className: clsx(classes.liRoot, classes.colorFat),\n                                          children: \"Fat\"\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 1266,\n                                          columnNumber: 49\n                                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                                          className: classes.ulTypo,\n                                          variant: \"body1\",\n                                          children: incData.fat\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 1267,\n                                          columnNumber: 49\n                                        }, this)]\n                                      }, void 0, true, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 1265,\n                                        columnNumber: 47\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 1264,\n                                      columnNumber: 45\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 1263,\n                                    columnNumber: 43\n                                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                                      variant: \"body2\",\n                                      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                                        className: classes.ulRoot,\n                                        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                                          className: clsx(classes.liRoot, classes.colorCarbs),\n                                          children: \"Carbs\"\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 1276,\n                                          columnNumber: 49\n                                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                                          className: classes.ulTypo,\n                                          variant: \"body1\",\n                                          children: incData.carbs\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 1277,\n                                          columnNumber: 49\n                                        }, this)]\n                                      }, void 0, true, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 1275,\n                                        columnNumber: 47\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 1274,\n                                      columnNumber: 45\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 1273,\n                                    columnNumber: 43\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1252,\n                                  columnNumber: 41\n                                }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                                  className: classes.dividerRoot\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1284,\n                                  columnNumber: 41\n                                }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                                  disableSpacing: true,\n                                  className: classes.cardActionsBenifitsRoot,\n                                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                                    item: true,\n                                    container: true,\n                                    xs: 12,\n                                    className: classes.benefitsText,\n                                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                                      variant: \"body2\",\n                                      color: \"inherit\",\n                                      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                                        children: \"Benefits:\"\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 1288,\n                                        columnNumber: 47\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 1287,\n                                      columnNumber: 45\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 1286,\n                                    columnNumber: 43\n                                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                                    item: true,\n                                    container: true,\n                                    xs: 12,\n                                    children: benfits.map((benfData, i) => /*#__PURE__*/_jsxDEV(Grid, {\n                                      item: true,\n                                      xs: 12,\n                                      sm: 6,\n                                      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                                        className: classes.ulRoot,\n                                        children: /*#__PURE__*/_jsxDEV(\"li\", {\n                                          className: clsx(classes.liRoot, classes.benefitsList),\n                                          children: benfData\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 1296,\n                                          columnNumber: 51\n                                        }, this)\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 1295,\n                                        columnNumber: 49\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 1294,\n                                      columnNumber: 47\n                                    }, this))\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 1291,\n                                    columnNumber: 43\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1285,\n                                  columnNumber: 41\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1235,\n                                columnNumber: 39\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1234,\n                              columnNumber: 37\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1233,\n                            columnNumber: 35\n                          }, this);\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1228,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true);\n                  })\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1218,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1214,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1190,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1189,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        variant: \"outlined\",\n        color: \"secondary\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1327,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1326,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1143,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(ViewNutritionModel, \"9htdAFByZ/xYE8yA56hEND5dYCw=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = ViewNutritionModel;\n\nconst CircularProgressWithLabel = props => {\n  _s4();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"relative\",\n    display: \"inline-flex\",\n    color: \"inherit\",\n    alignItems: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n      variant: \"determinate\",\n      className: classes.circleBottom,\n      size: 50,\n      thickness: 3,\n      ...props,\n      value: 100\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1339,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CircularProgress, {\n      size: 50,\n      className: classes.circleTop,\n      color: \"inherit\",\n      variant: \"determinate\",\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1347,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      color: \"inherit\",\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      position: \"absolute\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"inherit\",\n        variant: \"caption\",\n        component: \"div\",\n        children: `${Math.round(props.value)}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1359,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1348,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1338,\n    columnNumber: 5\n  }, this);\n};\n\n_s4(CircularProgressWithLabel, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c4 = CircularProgressWithLabel;\n\nconst NutritionData = props => {\n  _s5();\n\n  const [data, setData] = useState(props.data);\n  const [title, setTitle] = useState(props.title);\n  useEffect(() => {\n    setData(props.data);\n    setTitle(props.title);\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      color: \"inherit\",\n      align: \"center\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgressWithLabel, {\n        value: (data === null || data === void 0 ? void 0 : data.macros) || 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1378,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1377,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"inherit\",\n      variant: \"h6\",\n      align: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1381,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1380,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"inherit\",\n      variant: \"body2\",\n      align: \"center\",\n      children: `${data === null || data === void 0 ? void 0 : data.gram} g`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1383,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"inherit\",\n      variant: \"body2\",\n      align: \"center\",\n      children: `${data === null || data === void 0 ? void 0 : data.calories} c`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1386,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1376,\n    columnNumber: 5\n  }, this);\n};\n\n_s5(NutritionData, \"1pfu6AqjTJfRysar0qfxIDT0ThM=\");\n\n_c5 = NutritionData;\nexport default NutritionPlan;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"NutritionPlan\");\n$RefreshReg$(_c2, \"AddEditModel\");\n$RefreshReg$(_c3, \"ViewNutritionModel\");\n$RefreshReg$(_c4, \"CircularProgressWithLabel\");\n$RefreshReg$(_c5, \"NutritionData\");","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/pages/NutritionPlan/NutritionPlan.tsx"],"names":["Avatar","Box","Button","Card","CardActions","CardContent","CardHeader","CircularProgress","Dialog","DialogActions","DialogContent","Divider","FormControl","FormHelperText","Grid","IconButton","ListItem","ListItemAvatar","makeStyles","Paper","Tab","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TextField","Tooltip","Typography","List","ListItemText","AddIcon","CenterFocusStrongIcon","CheckIcon","ControlPointIcon","DeleteIcon","EditIcon","Pagination","TabContext","TabList","TabPanel","Autocomplete","Formik","getIn","React","useEffect","useRef","useState","DialogTitle","TableLoader","TableNoData","Page","useConfModel","useService","useSnackbar","initialFormValues","NutMeal","NutMealTime","validation","clsx","useStyles","theme","root","width","breakpoints","values","lg","maxWidth","margin","padding","spacing","content","tabCard","marginTop","themeButton","color","palette","white","backgroundColor","green","main","dark","sEvenly","display","justifyContent","sBetween","iconPadd","jCenter","actions","tabRoot","minWidth","textTransform","tabIndicator","tabTextColorInherit","border","tabPanelRoot","paddingTop","paddingBottom","listItemRoot","flexDisplay","paperRoot","paperRoot1","tablePanelRoot","largeAvatar","height","justPadding","borderRadius","tabBtnIcon","divTab","flexDirection","avatarRoot","marginRight","textPrimary","fontWeight","textSecondary","noPadding","benefitsList","fontSize","cardRoot","position","cardMediaRoot","cardContentRoot","cardActionsRoot","cardActionsBenifitsRoot","ulRoot","listStyle","liRoot","paddingLeft","textIndent","ulTypo","marginLeft","colorProtein","colorFat","colorCarbs","dividerRoot","background","mealTimeText","benefitsText","nutritionTextDiv","top","left","nutritionText","nutCard","nutCardRoot","nutCardTitle","textAlign","nutCardAction","circleBottom","circleTop","DietTypeDrop","id","name","CaloriesDrop","NutritionPlan","classes","Snackbar","Post","ConfModel","loading","setLoading","stateData","setStateData","page_no","page_limit","pageCount","setPageCount","nutritionPlanList","setNutritionPlanList","addEditDialog","setAddEditDialog","isOpen","title","okBtnText","isEdit","data","viewDialog","setViewDialog","openAddDialog","prevState","openEditDialog","onDelete","openModel","closeModel","submitFunction","_id","then","res","onSuccessAction","show","message","catch","err","openViewDialog","listNutritionPlan","error","page_count","console","log","onPageChange","event","value","closeAddEditDialog","closeViewDialog","getDropValues","dropValues","find","map","index","diet_type","calories","length","AddEditModel","props","onClose","onSuccess","formikRef","tabValue","setTabValue","ingredientList","setIngredientList","initialValue","setInitialValue","onSubmit","helper","setSubmitting","postData","addData","editData","resetForm","handleChangeTab","newValue","addNewTab","setFieldValue","nutrition","push","submitMealTime","i","NewNutrition","meal_time","alert","editMealTime","toString","deleteMealTime","filter","d","addMeals","FormKey","meals","listAllMealIngredient","response","getArrayError","removeMeals","FieldName","MealValue","FinelMealValue","rest","NutData","NewMeals","MealData","ingredients","IngredientIds","NewInc","includes","errors","touched","handleChange","handleBlur","submitForm","isSubmitting","option","params","Boolean","inputProps","label","key","subData","SubKey","indicator","nutData","FieldTouched","FieldErrors","FieldValues","TabSelected","Number","SelectedStyle","borderRight","fullWidth","e","FieldMainName","mealData","IngIds","quantity","protein","fat","carbs","ViewNutritionModel","formValue","setFormValue","timings","setTimings","handleTabChange","textColorInherit","incData","benfits","image","primary","secondary","benfData","CircularProgressWithLabel","Math","round","NutritionData","setData","setTitle","macros","gram"],"mappings":"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","sourcesContent":["import {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  CardMedia,\r\n  CircularProgress,\r\n  CircularProgressProps,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent, Divider, FormControl,\r\n  FormHelperText, Grid,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  makeStyles,\r\n  Paper,\r\n  Tab,\r\n  Table,\r\n  TableBody, TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Tooltip, Typography\r\n} from '@material-ui/core';\r\nimport List from '@material-ui/core/List';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Pagination, TabContext, TabList, TabPanel } from '@material-ui/lab';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Formik, getIn } from 'formik';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\r\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\r\nimport Page from '../../components/Page/Page';\r\nimport useConfModel from '../../hook/useConfModel';\r\nimport useService from '../../hook/useService';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport { initialFormValues, NutMeal, NutMealTime, validation } from './FormikValues';\r\nimport clsx from 'clsx'\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  root: {\r\n    width: theme.breakpoints.values.lg,\r\n    maxWidth: '100%',\r\n    margin: '0 auto',\r\n    padding: theme.spacing(3),\r\n  },\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  tabCard: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  themeButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n  },\r\n  sEvenly: {\r\n    display: 'flex',\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  sBetween: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  iconPadd: {\r\n    padding: 5,\r\n  },\r\n  jCenter: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(1),\r\n    justifyContent: 'center',\r\n  },\r\n  tabRoot: {\r\n    minWidth: 0,\r\n    textTransform: 'none'\r\n    // margin: '10px 0px',\r\n  },\r\n  tabIndicator: {\r\n    backgroundColor: theme.palette.green.main,\r\n  },\r\n  tabTextColorInherit: {\r\n    backgroundColor: theme.palette.green.main,\r\n    color: 'white',\r\n    border: '1px solid white',\r\n  },\r\n  tabPanelRoot: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n    width: '100%',\r\n  },\r\n  listItemRoot: {\r\n    backgroundColor: '#7ac0af2b',\r\n    margin: '10px 0px',\r\n  },\r\n  flexDisplay: {\r\n    display: 'flex',\r\n  },\r\n  paperRoot: {\r\n    display: 'flex',\r\n    marginTop: '20px',\r\n  },\r\n  paperRoot1: {\r\n    display: 'flex',\r\n    marginTop: '20px',\r\n  },\r\n  tablePanelRoot: {\r\n    padding: '0px',\r\n  },\r\n  largeAvatar: {\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10)\r\n  },\r\n  justPadding: {\r\n    padding: 10,\r\n    borderRadius: 10\r\n  },\r\n  tabBtnIcon: {\r\n    height: '100%',\r\n    minWidth: 0,\r\n    textTransform: 'none'\r\n  },\r\n  divTab: {\r\n    flexDirection: 'column',\r\n    display: 'flex'\r\n  },\r\n  //=========\r\n\r\n  avatarRoot: {\r\n    borderRadius: 10,\r\n    marginRight: 15,\r\n    // width: theme.spacing(10),\r\n    // height: theme.spacing(10),\r\n  },\r\n  textPrimary: {\r\n    fontWeight: 'bold'\r\n  },\r\n  textSecondary: {\r\n    color: '#A0A6B2'\r\n  },\r\n  noPadding: {\r\n    padding: 0\r\n  },\r\n  benefitsList: {\r\n    fontSize: '0.7rem',\r\n    '&::before': {\r\n      content: \"'•  '\",\r\n      color: 'black',\r\n    }\r\n  },\r\n  cardRoot: {\r\n    borderRadius: theme.spacing(3),\r\n    position: 'relative'\r\n  },\r\n  cardMediaRoot: {\r\n    height: theme.spacing(25)\r\n  },\r\n  cardContentRoot: {\r\n    backgroundColor: '#EFF1F3',\r\n    padding: theme.spacing(2),\r\n    paddingBottom: `${theme.spacing(2)}px !important`\r\n  },\r\n  cardActionsRoot: {\r\n    padding: 0,\r\n    paddingTop: theme.spacing(1),\r\n    justifyContent: 'space-between'\r\n  },\r\n  cardActionsBenifitsRoot: {\r\n    padding: 0,\r\n    paddingTop: theme.spacing(1),\r\n    display: 'block'\r\n  },\r\n  ulRoot: {\r\n    listStyle: 'none',\r\n    display: 'flex',\r\n    padding: 0,\r\n    margin: 0,\r\n  },\r\n  liRoot: {\r\n    paddingLeft: '1em',\r\n    textIndent: '-.7em',\r\n  },\r\n  ulTypo: {\r\n    marginLeft: theme.spacing(0.5)\r\n  },\r\n  colorProtein: {\r\n    '&::before': {\r\n      content: \"'•  '\",\r\n      color: '#9A88FF',\r\n    }\r\n  },\r\n  colorFat: {\r\n    '&::before': {\r\n      content: \"'•  '\",\r\n      color: '#E57B91',\r\n    }\r\n  },\r\n  colorCarbs: {\r\n    '&::before': {\r\n      content: \"'•  '\",\r\n      color: '',\r\n    }\r\n  },\r\n  dividerRoot: {\r\n    background: 'white',\r\n    margin: theme.spacing(1, -2)\r\n  },\r\n  mealTimeText: {\r\n    margin: theme.spacing(2, 0)\r\n  },\r\n  benefitsText: {\r\n    color: '#41A58D'\r\n  },\r\n  nutritionTextDiv: {\r\n    border: '1px solid #EFF1F3',\r\n    color: '#EFF1F3',\r\n    borderRadius: 20,\r\n    padding: theme.spacing(0.5, 1),\r\n    width: 'fit-content',\r\n    position: 'absolute',\r\n    top: theme.spacing(2),\r\n    left: theme.spacing(2),\r\n  },\r\n  nutritionText: {\r\n    fontSize: '0.5rem',\r\n  },\r\n  nutCard: {\r\n    borderRadius: theme.spacing(3),\r\n    margin: theme.spacing(2, 0)\r\n  },\r\n  nutCardRoot: {\r\n    backgroundColor: '#41A58D',\r\n    color: 'white'\r\n  },\r\n  nutCardTitle: {\r\n    textAlign: 'center',\r\n    color: 'inherit'\r\n  },\r\n  nutCardAction: {\r\n    backgroundColor: '#276955',\r\n    color: 'white',\r\n    justifyContent: 'space-evenly'\r\n  },\r\n  circleBottom: {\r\n    color: '#eeeeee42',\r\n  },\r\n  circleTop: {\r\n    position: 'absolute',\r\n    left: 0,\r\n  },\r\n}));\r\n\r\nconst DietTypeDrop = [\r\n  { id: 'VEG', name: 'Vegetarian' },\r\n  { id: 'NONVEG', name: 'Non-Vegetarian' },\r\n  { id: 'EGG', name: 'Eggetarian' },\r\n];\r\n\r\nconst CaloriesDrop = [\r\n  { id: '2000', name: '2000' },\r\n  { id: '2100', name: '2100' },\r\n  { id: '2200', name: '2200' },\r\n  { id: '2300', name: '2300' },\r\n];\r\n\r\nconst NutritionPlan = () => {\r\n  const classes = useStyles();\r\n  const Snackbar = useSnackbar();\r\n  const { Post } = useService();\r\n  const ConfModel = useConfModel();\r\n  const [loading, setLoading] = useState(true);\r\n  const [stateData, setStateData] = useState({ page_no: 1, page_limit: 10 });\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const [nutritionPlanList, setNutritionPlanList] = useState([]);\r\n  const [addEditDialog, setAddEditDialog] = useState({\r\n    isOpen: false,\r\n    title: '',\r\n    okBtnText: '',\r\n    isEdit: false,\r\n    data: {},\r\n  });\r\n\r\n  const [viewDialog, setViewDialog] = useState({\r\n    isOpen: false,\r\n    title: '',\r\n    data: {},\r\n  });\r\n\r\n  const openAddDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      title: 'Add Nutrition Plan',\r\n      isEdit: false,\r\n      okBtnText: 'Save',\r\n    }));\r\n  };\r\n\r\n  const openEditDialog = (data: any) => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      isEdit: true,\r\n      data,\r\n      title: 'Edit Nutrition Plan',\r\n      okBtnText: 'Edit',\r\n    }));\r\n  };\r\n\r\n  const onDelete = (data: any) => {\r\n    const { openModel, setLoading, closeModel } = ConfModel;\r\n    const submitFunction = () => {\r\n      setLoading(true);\r\n      Post('app/deleteNutritionPlan', { id: data._id })\r\n        .then(async (res: any) => {\r\n          setLoading(false);\r\n          closeModel();\r\n          onSuccessAction();\r\n          Snackbar.show(res.message, 'success');\r\n        })\r\n        .catch((err: any) => {\r\n          setLoading(false);\r\n          Snackbar.show('Internal Server Error', 'error');\r\n        });\r\n    };\r\n    openModel(submitFunction);\r\n  };\r\n\r\n  const openViewDialog = (data: any) => {\r\n    setViewDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      data,\r\n      title: 'View Nutrition Plan',\r\n    }));\r\n  };\r\n\r\n  const listNutritionPlan = async () => {\r\n    setLoading(true);\r\n    Post('app/listNutritionPlan', stateData)\r\n      .then((res: any) => {\r\n        setLoading(false);\r\n        if (!res.error) {\r\n          setNutritionPlanList(res.data);\r\n          setPageCount(res.page_count);\r\n        } else {\r\n          Snackbar.show(res.message, 'error');\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        console.log('err', err);\r\n        setLoading(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const onPageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    setStateData((prevState: any) => ({ ...prevState, page_no: value }));\r\n  };\r\n\r\n  const closeAddEditDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const closeViewDialog = () => {\r\n    setViewDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const onSuccessAction = () => {\r\n    listNutritionPlan();\r\n    closeAddEditDialog();\r\n  };\r\n\r\n  const getDropValues = (dropValues: any, value: string) => {\r\n    return dropValues.find(({ id }: any) => id == value)?.name || ''\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    listNutritionPlan();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Page title='Nutrition Plan' />\r\n\r\n      <Grid alignItems='flex-end' container justify='space-between' spacing={3}>\r\n        <Grid item>\r\n          <Typography component='h1' variant='h3'>\r\n            Nutrition Plan\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant='contained'\r\n            onClick={() => openAddDialog()}\r\n            className={classes.themeButton}\r\n            startIcon={<AddIcon />}\r\n          >\r\n            Add\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* =============Search======== */}\r\n      <Grid container spacing={3}>\r\n        <Grid item>\r\n          <Paper elevation={0}>\r\n            <TextField\r\n              fullWidth\r\n              size='small'\r\n              placeholder='Name'\r\n              variant='outlined'\r\n              name='state'\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Card className={classes.tabCard}>\r\n        <CardContent className={classes.content}>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align='center'>#</TableCell>\r\n                  <TableCell align='center'>Diet Type</TableCell>\r\n                  <TableCell align='center'>Calories</TableCell>\r\n                  <TableCell align='center'>Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {!loading &&\r\n                  nutritionPlanList.map((data: any, index: number) => (\r\n                    <TableRow hover key={index}>\r\n                      <TableCell align='center'>\r\n                        {stateData.page_limit * (stateData.page_no - 1) +\r\n                          index +\r\n                          1}\r\n                      </TableCell>\r\n                      <TableCell align='center'>{getDropValues(DietTypeDrop, data?.diet_type)}</TableCell>\r\n                      <TableCell align='center'>{data?.calories}</TableCell>\r\n                      <TableCell align='center'>\r\n                        <div className={classes.sEvenly}>\r\n                          <Tooltip title='View' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openViewDialog(data)}\r\n                            >\r\n                              <CenterFocusStrongIcon color='primary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Edit' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openEditDialog(data)}\r\n                            >\r\n                              <EditIcon color='action' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Delete' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => onDelete(data)}\r\n                            >\r\n                              <DeleteIcon color='secondary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                {loading && <TableLoader />}\r\n                {!loading && nutritionPlanList.length == 0 && (\r\n                  <TableNoData>No Data Found</TableNoData>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </CardContent>\r\n\r\n        <CardActions className={classes.actions}>\r\n          <Pagination\r\n            count={pageCount}\r\n            page={stateData.page_no}\r\n            onChange={onPageChange}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n\r\n      <AddEditModel\r\n        {...addEditDialog}\r\n        onClose={closeAddEditDialog}\r\n        onSuccess={onSuccessAction}\r\n      />\r\n      {viewDialog.isOpen && (\r\n        <ViewNutritionModel {...viewDialog} onClose={closeViewDialog} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const AddEditModel = (props: any) => {\r\n  const {\r\n    isEdit,\r\n    isOpen,\r\n    okBtnText = 'OK',\r\n    onClose,\r\n    data,\r\n    title,\r\n    onSuccess,\r\n  } = props;\r\n  const formikRef = useRef<any>(null);\r\n  const classes = useStyles();\r\n  const Snackbar = useSnackbar();\r\n  const { Post } = useService();\r\n  const [tabValue, setTabValue] = React.useState('none');\r\n  const [ingredientList, setIngredientList] = useState([])\r\n\r\n\r\n  const [initialValue, setInitialValue] = React.useState({\r\n    ...initialFormValues,\r\n  });\r\n\r\n  const onSubmit = (value: any, helper: any) => {\r\n    helper.setSubmitting(true);\r\n    const postData = { ...value };\r\n    !isEdit && addData(postData, helper);\r\n    isEdit && editData(postData, helper);\r\n  };\r\n\r\n  const addData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n    Post('app/addNutritionPlan', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const editData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n    Post('app/editNutritionPlan', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n\r\n\r\n  const handleChangeTab = (newValue: string) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  const addNewTab = (values: any, setFieldValue: any) => {\r\n    const { nutrition } = values\r\n    nutrition.push(NutMealTime)\r\n    setFieldValue('nutrition', nutrition)\r\n  }\r\n\r\n  const submitMealTime = (i: number, values: any, setFieldValue: any) => {\r\n\r\n    const { nutrition } = values\r\n    const NewNutrition = { ...nutrition[i] }\r\n    NewNutrition.isEdit = false\r\n    if(NewNutrition.meal_time !== ''){\r\n      alert('correct')\r\n    }\r\n    // nutrition[i] = NewNutrition\r\n    // setFieldValue('nutrition', nutrition)\r\n    // handleChangeTab(i.toString())\r\n  }\r\n\r\n  const editMealTime = (i: number, values: any, setFieldValue: any) => {\r\n    const { nutrition } = values\r\n    const NewNutrition = { ...nutrition[i] }\r\n    NewNutrition.isEdit = true\r\n    nutrition[i] = NewNutrition\r\n    setFieldValue('nutrition', nutrition)\r\n    handleChangeTab(i.toString())\r\n  }\r\n\r\n  const deleteMealTime = (i: number, values: any, setFieldValue: any) => {\r\n    const { nutrition } = values\r\n    const NewNutrition = nutrition.filter((d: any, index: number) => index != i)\r\n    setFieldValue('nutrition', NewNutrition)\r\n  }\r\n\r\n  const addMeals = (values: any, i: number, setFieldValue: any) => {\r\n    const FormKey = `nutrition[${i}].meals`\r\n    const { nutrition } = values\r\n    const meals = [...nutrition[i].meals]\r\n    meals.push(NutMeal)\r\n    setFieldValue(FormKey, meals)\r\n  }\r\n\r\n\r\n\r\n  const listAllMealIngredient = () => {\r\n    Post('app/listAllMealIngredient', {})\r\n      .then((response: any) => {\r\n        if (!response.error) {\r\n          setIngredientList(response.data);\r\n        } else {\r\n          Snackbar.show(response.message, 'error');\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        Snackbar.show(error.message, 'error');\r\n      });\r\n  };\r\n\r\n  const getArrayError = (error: any) => {\r\n    return typeof error == 'string' ? error : ''\r\n  }\r\n\r\n  const removeMeals = (i: number, FieldName: string, values: any, setFieldValue: any) => {\r\n    const MealValue = getIn(values, `${FieldName}.meals`)\r\n    const FinelMealValue = MealValue.filter((d: any, index: number) => i != index)\r\n    setFieldValue(`${FieldName}.meals`, FinelMealValue)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isEdit) {\r\n      const { _id, ...rest } = data;\r\n      const editData = { ...rest, id: _id };\r\n      let nutrition = editData.nutrition.map((NutData: any) => {\r\n        const { meals, ...rest } = NutData\r\n        let NewMeals = meals.map((MealData: any) => {\r\n          const { ingredients, ...rest } = MealData\r\n          const IngredientIds = ingredientList.map(({ _id }: any) => _id)\r\n          const NewInc = ingredients.filter(({ _id }: any) => IngredientIds.includes(_id)).map(({ _id }: any) => ({ id: _id }));\r\n          return { ...rest, ingredients: NewInc }\r\n        })\r\n        return { ...rest, isEdit: false, meals: NewMeals }\r\n      })\r\n      editData.nutrition = nutrition\r\n      console.log('editData', editData)\r\n      setInitialValue(editData);\r\n    } else {\r\n      setInitialValue(initialFormValues);\r\n    }\r\n  }, [props, ingredientList]);\r\n\r\n  useEffect(() => {\r\n    listAllMealIngredient();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={isOpen}\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        fullWidth\r\n        fullScreen\r\n        maxWidth='lg'\r\n        aria-labelledby='dialog-title'\r\n      >\r\n        <DialogTitle id='dialog-title' onClose={onClose}>\r\n          {title}\r\n        </DialogTitle>\r\n        <Formik\r\n          innerRef={formikRef}\r\n          enableReinitialize\r\n          initialValues={initialValue}\r\n          validationSchema={validation}\r\n          onSubmit={onSubmit}\r\n        >\r\n          {({ values, errors, touched, handleChange, handleBlur, setFieldValue, submitForm, isSubmitting }) => (\r\n            <>\r\n              <DialogContent dividers>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <Autocomplete\r\n                      options={DietTypeDrop}\r\n                      value={DietTypeDrop.find((data: any) => data.id == values.diet_type)}\r\n                      getOptionLabel={(option: any) => option.name}\r\n                      getOptionSelected={(option) => option.id == values.diet_type}\r\n                      onChange={(event: any, newValue: any) => {\r\n                        setFieldValue('diet_type', newValue?.id || '');\r\n                      }}\r\n                      onBlur={handleBlur}\r\n                      renderInput={(params: any) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label='Diet Types'\r\n                          variant='outlined'\r\n                          error={Boolean(touched.diet_type && errors.diet_type)}\r\n                          helperText={touched.diet_type && errors.diet_type}\r\n                          inputProps={{\r\n                            ...params.inputProps,\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Autocomplete\r\n                      options={CaloriesDrop}\r\n                      value={CaloriesDrop.find((data: any) => data.id == values.calories)}\r\n                      getOptionLabel={(option: any) => option.name}\r\n                      getOptionSelected={(option) => option.id == values.calories}\r\n                      onChange={(event: any, newValue: any) => {\r\n                        setFieldValue('calories', newValue?.id || '');\r\n                      }}\r\n                      onBlur={handleBlur}\r\n                      renderInput={(params: any) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label='Calories'\r\n                          variant='outlined'\r\n                          error={Boolean(touched.calories && errors.calories)}\r\n                          helperText={touched.calories && errors.calories}\r\n                          inputProps={{\r\n                            ...params.inputProps,\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n\r\n                  {[{ label: 'Protein', key: 'protein' }, { label: 'Fat', key: 'fat' }, { label: 'Carbs', key: 'carbs' }].map(({ label, key }) =>\r\n                    <>\r\n                      <Grid item xs={12}>\r\n                        <Typography variant='h5' align='center'>\r\n                          <strong>{label}</strong>\r\n                        </Typography>\r\n                      </Grid>\r\n\r\n                      {[{ label: 'Macros', key: 'macros' }, { label: 'Gram', key: 'gram' }, { label: 'Calories', key: 'calories' }].map((subData) => {\r\n                        const SubKey = subData.key;\r\n                        const FieldName = `${key}.${SubKey}`;\r\n                        return (\r\n                          <Grid item xs={4}>\r\n                            <TextField\r\n                              fullWidth\r\n                              label={subData.label}\r\n                              name={FieldName}\r\n                              variant='outlined'\r\n                              error={Boolean(getIn(touched, FieldName) && getIn(errors, FieldName))}\r\n                              helperText={getIn(touched, FieldName) && getIn(errors, FieldName)}\r\n                              value={getIn(values, FieldName)}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </Grid>\r\n                        )\r\n                      })}\r\n                    </>\r\n                  )}\r\n\r\n                  {/* <Paper className={classes.paperRoot}> */}\r\n\r\n                  <TabContext value={tabValue || ''}>\r\n                    <Grid item xs={4}>\r\n                      <TabList\r\n                        classes={{\r\n                          indicator: classes.tabIndicator\r\n                        }}\r\n                        orientation=\"vertical\"\r\n                        variant=\"standard\"\r\n                      >\r\n                        {values?.nutrition.map((nutData: any, i: number) => {\r\n                          let FieldName: string = `nutrition[${i}]`\r\n                          let FieldTouched: any = getIn(touched, FieldName)\r\n                          let FieldErrors: any = getIn(errors, FieldName)\r\n                          let FieldValues: any = getIn(values, FieldName)\r\n                          const TabSelected = i == Number(tabValue)\r\n                          const SelectedStyle = TabSelected ? { borderRight: '2px solid #41a58d' } : { borderRight: '2px solid white' }\r\n                          return (\r\n                            <div className={classes.divTab}>\r\n                              <Grid item container xs={12} spacing={1} style={{ margin: 'inherit', ...SelectedStyle }}>\r\n                                <Grid item xs={nutData.isEdit ? 10 : 8}>\r\n\r\n                                  {nutData.isEdit && <TextField\r\n                                    fullWidth\r\n                                    size='small'\r\n                                    label='Name'\r\n                                    name={`${FieldName}.meal_time`}\r\n                                    variant='outlined'\r\n                                    error={Boolean(FieldTouched?.meal_time && FieldErrors?.meal_time)}\r\n                                    helperText={FieldTouched?.meal_time && FieldErrors?.meal_time}\r\n                                    value={nutData?.meal_time}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                  />\r\n                                  }\r\n\r\n                                  {!nutData.isEdit &&\r\n                                    <Button\r\n                                      fullWidth\r\n                                      className={!Boolean(FieldTouched?.meal_time && FieldErrors?.meal_time) ? classes.themeButton : ''}\r\n                                      classes={{\r\n                                        fullWidth: classes.tabBtnIcon\r\n                                      }}\r\n                                      variant='contained'\r\n                                      color='secondary'\r\n                                      onClick={(e) => handleChangeTab(i.toString())}\r\n                                    >\r\n                                      {!Boolean(FieldTouched?.meal_time && FieldErrors?.meal_time) ? nutData?.meal_time : FieldErrors?.meal_time}\r\n                                    </Button>}\r\n                                </Grid>\r\n\r\n                                {nutData.isEdit &&\r\n                                  <Grid item xs={2}>\r\n                                    <Button\r\n                                      fullWidth\r\n                                      className={classes.themeButton}\r\n                                      classes={{\r\n                                        fullWidth: classes.tabBtnIcon\r\n                                      }}\r\n                                      variant='contained'\r\n                                      color='secondary'\r\n                                      onClick={() => submitMealTime(i, values, setFieldValue)}\r\n                                    >\r\n                                      <CheckIcon />\r\n                                    </Button>\r\n                                  </Grid>\r\n                                }\r\n\r\n                                {!nutData.isEdit && <Grid item xs={2} >\r\n                                  <Button\r\n                                    fullWidth\r\n                                    classes={{\r\n                                      fullWidth: classes.tabBtnIcon\r\n                                    }}\r\n                                    variant='contained'\r\n                                    color='primary'\r\n                                    onClick={() => editMealTime(i, values, setFieldValue)}\r\n                                  >\r\n                                    <EditIcon />\r\n                                  </Button>\r\n                                </Grid>\r\n                                }\r\n\r\n                                {!nutData.isEdit &&\r\n                                  <Grid item xs={2}>\r\n                                    <Button\r\n                                      fullWidth\r\n                                      classes={{\r\n                                        fullWidth: classes.tabBtnIcon\r\n                                      }}\r\n                                      variant='contained'\r\n                                      color='secondary'\r\n                                      onClick={() => deleteMealTime(i, values, setFieldValue)}\r\n                                    >\r\n                                      <DeleteIcon />\r\n                                    </Button>\r\n                                  </Grid>\r\n                                }\r\n                              </Grid>\r\n                            </div>\r\n\r\n                          )\r\n                        }\r\n                        )}\r\n\r\n\r\n                        <div className={classes.divTab}>\r\n                          <Grid container xs={12} spacing={1} style={{ margin: 'inherit' }}>\r\n                            <Grid item xs={12}>\r\n                              <FormControl fullWidth\r\n                                error={Boolean(getIn(touched, 'nutrition') && getArrayError(getIn(errors, 'nutrition')))}\r\n                              >\r\n                                <Button\r\n                                  fullWidth\r\n                                  className={classes.themeButton}\r\n                                  variant='contained'\r\n                                  color='secondary'\r\n                                  onClick={() => addNewTab(values, setFieldValue)}\r\n                                >\r\n                                  <AddIcon />\r\n                                </Button>\r\n\r\n                                <FormHelperText>\r\n                                  {getIn(touched, 'nutrition') && getArrayError(getIn(errors, 'nutrition'))}\r\n                                </FormHelperText>\r\n                              </FormControl>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </div>\r\n\r\n                      </TabList>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={8}>\r\n                      {values?.nutrition.map((nutData: any, i: number) => {\r\n                        let FieldMainName: string = `nutrition[${i}]`\r\n                        return (\r\n                          <TabPanel key={i} className={classes.tabPanelRoot} value={i.toString()}>\r\n\r\n                            <Grid container spacing={2}>\r\n                              <Grid item xs={12}>\r\n                                <Typography variant='h5' align='center'>\r\n                                  <strong>{nutData?.meal_time}</strong>\r\n                                </Typography>\r\n                              </Grid>\r\n\r\n                              {nutData?.meals.map((mealData: any, i: number) => {\r\n                                let FieldName: string = `${FieldMainName}.meals[${i}]`\r\n                                let FieldTouched: any = getIn(touched, FieldName)\r\n                                let FieldErrors: any = getIn(errors, FieldName)\r\n                                let FieldValues: any = getIn(values, FieldName)\r\n                                return (\r\n                                  <>\r\n                                    <Grid item xs={11}>\r\n                                      <Typography variant='h5' align='center' >\r\n                                        <strong>{`Meal #${i + 1}`}</strong>\r\n                                      </Typography>\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={1}>\r\n                                      <Button\r\n                                        fullWidth\r\n                                        classes={{\r\n                                          fullWidth: classes.tabBtnIcon\r\n                                        }}\r\n                                        variant='contained'\r\n                                        color='secondary'\r\n                                        onClick={() => removeMeals(i, FieldMainName, values, setFieldValue)}\r\n                                      >\r\n                                        <DeleteIcon />\r\n                                      </Button>\r\n                                    </Grid>\r\n\r\n                                    <Grid item md={12} xs={12}>\r\n                                      <Autocomplete\r\n                                        multiple\r\n                                        options={ingredientList}\r\n                                        value={ingredientList.filter((data: any) => mealData.ingredients.map(({ id }: any) => id).includes(data._id))}\r\n                                        getOptionLabel={(option: any) => option.name}\r\n                                        onChange={(event: any, newValue: any) => {\r\n                                          let IngIds = newValue.map(({ _id }: any) => ({ id: _id }))\r\n                                          setFieldValue(`${FieldName}.ingredients`, IngIds || []);\r\n                                        }}\r\n                                        onBlur={handleBlur}\r\n                                        renderInput={(params: any) => (\r\n                                          <TextField\r\n                                            {...params}\r\n                                            label='Ingredient'\r\n                                            variant='outlined'\r\n                                            error={Boolean(FieldTouched?.ingredients && FieldErrors?.ingredients)}\r\n                                            helperText={FieldTouched?.ingredients && FieldErrors?.ingredients}\r\n                                            inputProps={{\r\n                                              ...params.inputProps,\r\n                                            }}\r\n                                          />\r\n                                        )}\r\n                                      />\r\n                                    </Grid>\r\n\r\n                                    <Grid item md={6} xs={6}>\r\n                                      <TextField\r\n                                        fullWidth\r\n                                        multiline\r\n                                        label='Quantity'\r\n                                        name={`${FieldName}.quantity`}\r\n                                        variant='outlined'\r\n                                        error={Boolean(FieldTouched?.quantity && FieldErrors?.quantity)}\r\n                                        helperText={FieldTouched?.quantity && FieldErrors?.quantity}\r\n                                        value={mealData.quantity}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                      />\r\n                                    </Grid>\r\n\r\n                                    <Grid item md={6} xs={6}>\r\n                                      <TextField\r\n                                        fullWidth\r\n                                        multiline\r\n                                        label='Protein'\r\n                                        name={`${FieldName}.protein`}\r\n                                        variant='outlined'\r\n                                        error={Boolean(FieldTouched?.protein && FieldErrors?.protein)}\r\n                                        helperText={FieldTouched?.protein && FieldErrors?.protein}\r\n                                        value={mealData.protein}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                      />\r\n                                    </Grid>\r\n\r\n                                    <Grid item md={6} xs={6}>\r\n                                      <TextField\r\n                                        fullWidth\r\n                                        multiline\r\n                                        label='Fat'\r\n                                        name={`${FieldName}.fat`}\r\n                                        variant='outlined'\r\n                                        error={Boolean(FieldTouched?.fat && FieldErrors?.fat)}\r\n                                        helperText={FieldTouched?.fat && FieldErrors?.fat}\r\n                                        value={mealData.fat}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                      />\r\n                                    </Grid>\r\n\r\n                                    <Grid item md={6} xs={6}>\r\n                                      <TextField\r\n                                        fullWidth\r\n                                        multiline\r\n                                        label='Carbs'\r\n                                        name={`${FieldName}.carbs`}\r\n                                        variant='outlined'\r\n                                        error={Boolean(FieldTouched?.carbs && FieldErrors?.carbs)}\r\n                                        helperText={FieldTouched?.carbs && FieldErrors?.carbs}\r\n                                        value={mealData.carbs}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                      />\r\n                                    </Grid>\r\n\r\n                                    <Grid item md={6} xs={6}>\r\n                                      <TextField\r\n                                        fullWidth\r\n                                        multiline\r\n                                        label='calories'\r\n                                        name={`${FieldName}.calories`}\r\n                                        variant='outlined'\r\n                                        error={Boolean(FieldTouched?.calories && FieldErrors?.calories)}\r\n                                        helperText={FieldTouched?.calories && FieldErrors?.calories}\r\n                                        value={mealData.calories}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                      />\r\n                                    </Grid>\r\n                                  </>\r\n                                )\r\n                              })}\r\n\r\n                              <Grid item md={12} xs={12}>\r\n                                <FormControl fullWidth\r\n                                  error={Boolean(getIn(touched, `${FieldMainName}.meals`) && getArrayError(getIn(errors, `${FieldMainName}.meals`)))}\r\n                                >\r\n                                  <Button\r\n                                    fullWidth\r\n                                    className={classes.themeButton}\r\n                                    variant='contained'\r\n                                    color='default'\r\n                                    onClick={() => addMeals(values, i, setFieldValue)}\r\n                                    endIcon={<ControlPointIcon />}\r\n                                  >\r\n                                    Add Meals\r\n                                  </Button>\r\n\r\n                                  <FormHelperText>\r\n                                    {getIn(touched, `${FieldMainName}.meals`) && getArrayError(getIn(errors, `${FieldMainName}.meals`))}\r\n                                  </FormHelperText>\r\n                                </FormControl>\r\n                              </Grid>\r\n\r\n                            </Grid>\r\n\r\n                          </TabPanel>\r\n                        )\r\n                      }\r\n                      )}\r\n\r\n                    </Grid>\r\n                  </TabContext>\r\n                  {/* </Paper> */}\r\n\r\n                </Grid>\r\n              </DialogContent>\r\n\r\n              <DialogActions>\r\n                <Button onClick={onClose} variant='outlined' color='secondary'>\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  className={classes.themeButton}\r\n                  onClick={() => submitForm()}\r\n                  disabled={isSubmitting}\r\n                  variant='outlined'\r\n                >\r\n                  {isSubmitting ? (\r\n                    <CircularProgress size={24} style={{ color: 'white' }} />\r\n                  ) : (\r\n                    okBtnText\r\n                  )}\r\n                </Button>\r\n              </DialogActions>\r\n            </>\r\n          )}\r\n        </Formik>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ViewNutritionModel = (props: any) => {\r\n  const { isOpen, title, onClose, data } = props;\r\n  const classes = useStyles();\r\n  const [formValue, setFormValue] = useState(data);\r\n  const [tabValue, setTabValue] = React.useState<any>('0');\r\n  const [timings, setTimings] = React.useState('Early-Morning');\r\n\r\n  const handleTabChange = (event: React.ChangeEvent<{}>, newValue: string) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  const getDropValues = (dropValues: any, value: string) => {\r\n    return dropValues.find(({ id }: any) => id == value)?.name || ''\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFormValue(data);\r\n  }, [props]);\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      fullWidth\r\n      maxWidth='md'\r\n      aria-labelledby='dialog-view-title'\r\n      open={isOpen}\r\n    >\r\n      <DialogTitle id='dialog-view-title' onClose={onClose}>\r\n        {title}\r\n      </DialogTitle>\r\n\r\n      <DialogContent dividers>\r\n\r\n        <Paper >\r\n          <Table>\r\n            <TableBody>\r\n              <TableRow >\r\n                <TableCell>Diet Type</TableCell>\r\n                <TableCell><strong>{getDropValues(DietTypeDrop, formValue?.diet_type)}</strong></TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Calories</TableCell>\r\n                <TableCell><strong>{formValue?.calories} Kcal</strong></TableCell>\r\n              </TableRow>\r\n\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n\r\n        <Card className={classes.nutCard}>\r\n          <CardHeader\r\n            classes={{\r\n              root: classes.nutCardRoot,\r\n              title: classes.nutCardTitle\r\n            }}\r\n            title={`${formValue?.calories} Kcal`}\r\n          />\r\n          <CardActions className={classes.nutCardAction}>\r\n            <NutritionData title='Protein' data={formValue?.protein} />\r\n            <NutritionData title='Fat' data={formValue?.fat} />\r\n            <NutritionData title='Carbs' data={formValue?.carbs} />\r\n          </CardActions>\r\n        </Card>\r\n\r\n        <Paper>\r\n          <TabContext value={tabValue || ''}>\r\n            <Grid item container xs={12} spacing={2}>\r\n              <Grid item xs={3}>\r\n                <TabList\r\n                  classes={{\r\n                    indicator: classes.tabIndicator\r\n                  }}\r\n                  onChange={handleTabChange}\r\n                  orientation=\"vertical\"\r\n                  variant=\"standard\"\r\n                >\r\n                  {formValue?.nutrition.map((nutData: any, i: number) => {\r\n                    const { meal_time } = nutData\r\n                    return (\r\n                      <Tab\r\n                        classes={{ root: classes.tabRoot, textColorInherit: classes.tabTextColorInherit }}\r\n                        label={meal_time}\r\n                        value={i.toString()} />\r\n                    )\r\n                  }\r\n                  )}\r\n\r\n                </TabList>\r\n              </Grid>\r\n\r\n              <Grid item xs={9}>\r\n                {formValue?.nutrition.map((nutData: any, i: number) => {\r\n                  const { meals = [] } = nutData\r\n                  return (\r\n                    <TabPanel key={i} className={classes.tabPanelRoot} value={i.toString()}>\r\n                      {meals.map((mealData: any, i: number) => {\r\n                        const { ingredients = [] } = mealData\r\n                        return (\r\n                          <>\r\n                            <Grid item xs={12} className={classes.mealTimeText}>\r\n                              <Typography variant='h5' align='center'>\r\n                                <strong>{`Meal #${i + 1}`}</strong>\r\n                              </Typography>\r\n                            </Grid>\r\n                            <Grid item container xs={12} spacing={2}>\r\n                              {ingredients.map((incData: any, i: number) => {\r\n                                const { benfits = [] } = incData\r\n                                return (\r\n\r\n                                  <Grid item xs={12} sm={12} md={6}>\r\n                                    <Card elevation={0} className={classes.cardRoot}>\r\n                                      <CardContent className={classes.cardContentRoot}>\r\n                                        <List className={classes.noPadding}>\r\n                                          <ListItem disableGutters className={classes.noPadding}>\r\n                                            <ListItemAvatar>\r\n                                              <Avatar className={classes.avatarRoot} src={incData.image} />\r\n                                            </ListItemAvatar>\r\n                                            <ListItemText\r\n                                              classes={{\r\n                                                primary: classes.textPrimary,\r\n                                                secondary: classes.textSecondary\r\n                                              }}\r\n                                              primary={incData.name}\r\n                                              secondary={incData.quantity}\r\n                                            />\r\n                                          </ListItem>\r\n                                        </List>\r\n\r\n                                        <CardActions disableSpacing className={classes.cardActionsRoot}>\r\n                                          <div>\r\n                                            <Typography variant=\"body2\" >\r\n                                              <ul className={classes.ulRoot}>\r\n                                                <li className={clsx(classes.liRoot, classes.colorProtein)}>Protein</li>\r\n                                                <Typography className={classes.ulTypo} variant=\"body1\" >{incData.protein}</Typography>\r\n                                              </ul>\r\n                                            </Typography>\r\n\r\n                                          </div>\r\n\r\n                                          <div>\r\n                                            <Typography variant=\"body2\" >\r\n                                              <ul className={classes.ulRoot}>\r\n                                                <li className={clsx(classes.liRoot, classes.colorFat)}>Fat</li>\r\n                                                <Typography className={classes.ulTypo} variant=\"body1\" >{incData.fat}</Typography>\r\n                                              </ul>\r\n                                            </Typography>\r\n\r\n                                          </div>\r\n\r\n                                          <div>\r\n                                            <Typography variant=\"body2\" >\r\n                                              <ul className={classes.ulRoot}>\r\n                                                <li className={clsx(classes.liRoot, classes.colorCarbs)}>Carbs</li>\r\n                                                <Typography className={classes.ulTypo} variant=\"body1\" >{incData.carbs}</Typography>\r\n                                              </ul>\r\n                                            </Typography>\r\n\r\n                                          </div>\r\n                                        </CardActions>\r\n\r\n                                        <Divider className={classes.dividerRoot} />\r\n                                        <CardActions disableSpacing className={classes.cardActionsBenifitsRoot}>\r\n                                          <Grid item container xs={12} className={classes.benefitsText}>\r\n                                            <Typography variant='body2' color='inherit'>\r\n                                              <strong>Benefits:</strong>\r\n                                            </Typography>\r\n                                          </Grid>\r\n                                          <Grid item container xs={12}>\r\n\r\n                                            {benfits.map((benfData: any, i: number) =>\r\n                                              <Grid item xs={12} sm={6} >\r\n                                                <ul className={classes.ulRoot}>\r\n                                                  <li className={clsx(classes.liRoot, classes.benefitsList)}>{benfData}</li>\r\n\r\n                                                </ul>\r\n                                              </Grid>)}\r\n\r\n                                          </Grid>\r\n                                        </CardActions>\r\n\r\n                                      </CardContent>\r\n                                    </Card>\r\n                                  </Grid>\r\n                                )\r\n                              })}\r\n                            </Grid>\r\n                          </>\r\n                        )\r\n                      })}\r\n                    </TabPanel>\r\n                  )\r\n                })}\r\n              </Grid>\r\n\r\n            </Grid>\r\n\r\n          </TabContext>\r\n        </Paper>\r\n\r\n\r\n      </DialogContent >\r\n\r\n      <DialogActions>\r\n        <Button onClick={onClose} variant='outlined' color='secondary'>\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog >\r\n  );\r\n};\r\n\r\nconst CircularProgressWithLabel = (props: CircularProgressProps & { value: number }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box position=\"relative\" display=\"inline-flex\" color='inherit' alignItems=\"center\">\r\n      <CircularProgress\r\n        variant=\"determinate\"\r\n        className={classes.circleBottom}\r\n        size={50}\r\n        thickness={3}\r\n        {...props}\r\n        value={100}\r\n      />\r\n      <CircularProgress size={50} className={classes.circleTop} color='inherit' variant=\"determinate\" {...props} />\r\n      <Box\r\n        color='inherit'\r\n        top={0}\r\n        left={0}\r\n        bottom={0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Typography color='inherit' variant=\"caption\" component=\"div\" >{`${Math.round(\r\n          props.value,\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst NutritionData = (props: any) => {\r\n  const [data, setData] = useState(props.data)\r\n  const [title, setTitle] = useState(props.title)\r\n\r\n  useEffect(() => {\r\n    setData(props.data)\r\n    setTitle(props.title)\r\n  }, [props])\r\n  return (\r\n    <div >\r\n      <Typography color='inherit' align='center'>\r\n        <CircularProgressWithLabel value={data?.macros || 0} />\r\n      </Typography>\r\n      <Typography color='inherit' variant='h6' align='center'>\r\n        <strong>{title}</strong>\r\n      </Typography>\r\n      <Typography color='inherit' variant='body2' align='center'>\r\n        {`${data?.gram} g`}\r\n      </Typography>\r\n      <Typography color='inherit' variant='body2' align='center'>\r\n        {`${data?.calories} c`}\r\n      </Typography>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NutritionPlan;\r\n"]},"metadata":{},"sourceType":"module"}