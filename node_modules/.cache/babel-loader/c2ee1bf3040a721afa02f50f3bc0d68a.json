{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pyramidion\\\\WebApp\\\\Izze-Admin\\\\src\\\\pages\\\\AdminProfileDetails\\\\AdminProfileDetails.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React from 'react';\nimport { Grid, Button, Paper, makeStyles, Avatar, Table, TableBody, TableCell, TableRow, IconButton, Dialog, DialogActions, DialogContent, TextField } from '@material-ui/core';\nimport Page from '../../components/Page/Page';\nimport useService from '../../hook/useService';\nimport useSnackbar from '../../hook/useSnackbar';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { uploadNewImage } from '../../utils/CloudinaryUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyle = makeStyles(theme => ({\n  root: {\n    width: theme.breakpoints.values.lg,\n    height: '100%',\n    maxWidth: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(3)\n  },\n  paperStyle: {\n    padding: theme.spacing(8, 8)\n  },\n  insidePaperDivStyle: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    margin: 'auto',\n    alignItems: 'center',\n    height: '100%'\n  },\n  themeButton: {\n    color: theme.palette.white,\n    // textTransform: 'capitalize',\n    backgroundColor: theme.palette.green.main,\n    '&:hover': {\n      backgroundColor: theme.palette.green.dark\n    }\n  },\n  avatarStyle: {\n    width: '150px',\n    height: '150px'\n  },\n  lColor: {\n    color: theme.palette.green.main\n  }\n}));\n\nconst AdminProfileDetails = () => {\n  _s();\n\n  var _profileData$image;\n\n  const classes = useStyle();\n  const {\n    Post\n  } = useService();\n  const Snackbar = useSnackbar();\n  const [profileData, setProfileData] = React.useState('');\n  const [isLoading, setIsLoading] = React.useState(true);\n\n  const getProfileDetails = () => {\n    setIsLoading(true);\n    Post('app/getAdminUser', {}).then(res => {\n      setIsLoading(false);\n\n      if (!res.error) {\n        setProfileData(res.data);\n      } else {\n        Snackbar.show(res.message, 'error');\n      }\n    }).catch(err => {\n      setIsLoading(false);\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  React.useEffect(() => {\n    getProfileDetails();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Page, {\n      title: \"Admin Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        xs: true,\n        md: true,\n        item: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paperStyle,\n          children: [!isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.insidePaperDivStyle,\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              className: classes.avatarStyle,\n              src: profileData === null || profileData === void 0 ? void 0 : (_profileData$image = profileData.image) === null || _profileData$image === void 0 ? void 0 : _profileData$image.url,\n              alt: profileData === null || profileData === void 0 ? void 0 : profileData.name,\n              variant: \"square\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              children: /*#__PURE__*/_jsxDEV(TableBody, {\n                children: [/*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"left\",\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: profileData === null || profileData === void 0 ? void 0 : profileData.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: /*#__PURE__*/_jsxDEV(EditProfile, {\n                      data: profileData,\n                      onRefresh: getProfileDetails\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 94,\n                      columnNumber: 48\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"left\",\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: profileData === null || profileData === void 0 ? void 0 : profileData.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"left\",\n                    children: \"Admin Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: profileData === null || profileData === void 0 ? void 0 : profileData.user_type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"left\",\n                    children: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: \"**********\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: /*#__PURE__*/_jsxDEV(ChangePassword, {\n                      onRefresh: getProfileDetails\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 109,\n                      columnNumber: 48\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.insidePaperDivStyle,\n            children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n              className: classes.lColor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 72\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        xs: true,\n        md: true,\n        item: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AdminProfileDetails, \"3cHThxBLfrYTefQr5n/Qm/JrHxY=\", false, function () {\n  return [useStyle, useService, useSnackbar];\n});\n\n_c = AdminProfileDetails;\nconst initialEditValues = {\n  name: '',\n  image: {\n    file: null,\n    prevImage: '',\n    isNew: null\n  }\n};\nexport const EditProfile = props => {\n  _s2();\n\n  const {\n    data,\n    onRefresh\n  } = props;\n  const classes = useStyle();\n  const formikRef = React.useRef(null);\n  const imageRef = React.useRef(null);\n  const {\n    Post\n  } = useService();\n  const Snackbar = useSnackbar();\n  const [isEdit, setIsEdit] = React.useState(false);\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [initialFormValues, setInitialFormValues] = React.useState({ ...initialEditValues\n  });\n  React.useEffect(() => {\n    if (isEdit) {\n      const {\n        image,\n        _id,\n        ...rest\n      } = data;\n      const editData = { ...rest,\n        id: _id\n      };\n      editData.image = {\n        file: image,\n        prevImage: image === null || image === void 0 ? void 0 : image.url,\n        isNew: false\n      };\n      console.log(editData);\n      setInitialFormValues(editData);\n    } else {\n      setInitialFormValues(initialEditValues);\n    }\n  }, [props, isEdit]);\n\n  const editProfileModel = () => {\n    setIsOpen(!isOpen);\n    setIsEdit(true);\n  };\n\n  const onClose = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const onImageChange = e => {\n    e.persist();\n    const files = e.target.files;\n\n    if (files && files.length != 0) {\n      const reader = new FileReader();\n      const file = files[0];\n\n      reader.onloadend = () => {\n        formikRef.current.setFieldValue('image', {\n          file,\n          prevImage: reader.result,\n          isNew: true\n        });\n      };\n\n      reader.readAsDataURL(file);\n    } // else {\n    //   formikRef.current.setFieldValue('image', {\n    //     file: null,\n    //     prevImage: '',\n    //     isNew: null\n    //   });\n    // }\n\n  };\n\n  const onSubmit = async (value, helper) => {\n    const {\n      name,\n      image\n    } = value;\n    const postData = {};\n    postData.name = name;\n    postData.image = await uploadNewImage(image);\n    editProfile(postData, helper);\n  };\n\n  const editProfile = (data, {\n    setSubmitting,\n    resetForm\n  }) => {\n    Post('app/updateAdminDetails', data).then(res => {\n      Snackbar.show(res.message, 'success');\n      setSubmitting(false);\n      resetForm();\n      onClose();\n      onRefresh();\n    }).catch(err => {\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      size: \"small\",\n      onClick: editProfileModel,\n      className: classes.themeButton,\n      children: /*#__PURE__*/_jsxDEV(EditIcon, {\n        fontSize: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 91\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isOpen,\n      disableBackdropClick: true,\n      disableEscapeKeyDown: true,\n      fullWidth: true,\n      maxWidth: \"sm\",\n      \"aria-labelledby\": \"dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"dialog-title\",\n        onClose: onClose,\n        children: \"Edit Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        innerRef: formikRef,\n        enableReinitialize: true,\n        initialValues: initialFormValues,\n        validationSchema: Yup.object().shape({\n          name: Yup.string().required('Name is required'),\n          image: Yup.object({\n            file: Yup.mixed().required('A file is required')\n          })\n        }),\n        onSubmit: onSubmit,\n        children: ({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          setFieldValue,\n          submitForm,\n          isSubmitting\n        }) => {\n          var _values$image;\n\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n              dividers: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    name: \"recipe_image\",\n                    ref: imageRef,\n                    type: \"file\",\n                    accept: \".jpg,.png,jpeg\",\n                    onChange: onImageChange,\n                    onBlur: handleBlur,\n                    hidden: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: 'flex',\n                      justifyContent: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Avatar, {\n                      onClick: () => imageRef.current.click(),\n                      className: classes.avatarStyle,\n                      src: values === null || values === void 0 ? void 0 : (_values$image = values.image) === null || _values$image === void 0 ? void 0 : _values$image.prevImage,\n                      alt: 'profilePic',\n                      variant: \"square\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 249,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Name\",\n                    variant: \"outlined\",\n                    name: \"name\",\n                    value: values.name,\n                    onBlur: handleBlur,\n                    onChange: handleChange,\n                    error: Boolean(touched.name && errors.name),\n                    helperText: touched.name && errors.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: onClose,\n                variant: \"outlined\",\n                color: \"secondary\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: classes.themeButton,\n                onClick: () => submitForm(),\n                disabled: isSubmitting,\n                variant: \"outlined\",\n                children: isSubmitting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  size: 24,\n                  style: {\n                    color: 'white'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 21\n                }, this) : 'Save'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(EditProfile, \"MZpW7o0io7r36E9N45X06DyYB4o=\", false, function () {\n  return [useStyle, useService, useSnackbar];\n});\n\n_c2 = EditProfile;\nconst initialValues = {\n  password: '',\n  confirmPassword: ''\n};\nexport const ChangePassword = props => {\n  _s3();\n\n  const {\n    onRefresh\n  } = props;\n  const classes = useStyle();\n  const formikRef = React.useRef(null);\n  const [isOpen, setIsOpen] = React.useState(false);\n  const {\n    Post\n  } = useService();\n  const Snackbar = useSnackbar();\n  const [initialFormValues, setInitialFormValues] = React.useState({ ...initialValues\n  });\n\n  const changePasswordModel = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const onClose = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const onSubmit = (value, helper) => {\n    const {\n      confirmPassword\n    } = value;\n    let postData = {\n      password: confirmPassword\n    };\n    changePasswordData(postData, helper);\n  };\n\n  const changePasswordData = (data, {\n    setSubmitting,\n    resetForm\n  }) => {\n    Post('app/updateAdminPassword', data).then(res => {\n      if (res.error) {\n        Snackbar.show(res.message, 'success');\n        setSubmitting(false);\n      } else {\n        Snackbar.show(res.message, 'success');\n        setSubmitting(false);\n        resetForm();\n        onClose();\n        onRefresh();\n      }\n    }).catch(err => {\n      setSubmitting(false);\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      size: \"small\",\n      onClick: changePasswordModel,\n      className: classes.themeButton,\n      children: \"Change\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isOpen,\n      disableBackdropClick: true,\n      disableEscapeKeyDown: true,\n      fullWidth: true,\n      maxWidth: \"sm\",\n      \"aria-labelledby\": \"dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"dialog-title\",\n        onClose: onClose,\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        innerRef: formikRef,\n        enableReinitialize: true,\n        initialValues: initialFormValues,\n        validationSchema: Yup.object().shape({\n          password: Yup.string().required('Password is required').min(6, 'Password must be at least 6 characters'),\n          confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Password must be same').required('Confirm password is required')\n        }),\n        onSubmit: onSubmit,\n        children: ({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          setFieldValue,\n          submitForm,\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n            dividers: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"New Password\",\n                  variant: \"outlined\",\n                  name: \"password\",\n                  type: \"password\",\n                  value: values.password,\n                  onBlur: handleBlur,\n                  onChange: handleChange,\n                  error: Boolean(touched.password && errors.password),\n                  helperText: touched.password && errors.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Confirm Password\",\n                  variant: \"outlined\",\n                  name: \"confirmPassword\",\n                  type: \"password\",\n                  value: values.confirmPassword,\n                  onBlur: handleBlur,\n                  onChange: handleChange,\n                  error: Boolean(touched.confirmPassword && errors.confirmPassword),\n                  helperText: touched.confirmPassword && errors.confirmPassword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: onClose,\n              variant: \"outlined\",\n              color: \"secondary\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: classes.themeButton,\n              onClick: () => submitForm(),\n              disabled: isSubmitting,\n              variant: \"outlined\",\n              children: isSubmitting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 24,\n                style: {\n                  color: 'white'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 21\n              }, this) : 'Submit'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s3(ChangePassword, \"L7SOxJ5hTdjlG1giFD/uZ5Ge9N4=\", false, function () {\n  return [useStyle, useService, useSnackbar];\n});\n\n_c3 = ChangePassword;\nexport default AdminProfileDetails;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"AdminProfileDetails\");\n$RefreshReg$(_c2, \"EditProfile\");\n$RefreshReg$(_c3, \"ChangePassword\");","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/pages/AdminProfileDetails/AdminProfileDetails.tsx"],"names":["React","Grid","Button","Paper","makeStyles","Avatar","Table","TableBody","TableCell","TableRow","IconButton","Dialog","DialogActions","DialogContent","TextField","Page","useService","useSnackbar","EditIcon","CircularProgress","DialogTitle","Formik","Yup","uploadNewImage","useStyle","theme","root","width","breakpoints","values","lg","height","maxWidth","margin","padding","spacing","paperStyle","insidePaperDivStyle","display","flexDirection","justifyContent","alignItems","themeButton","color","palette","white","backgroundColor","green","main","dark","avatarStyle","lColor","AdminProfileDetails","classes","Post","Snackbar","profileData","setProfileData","useState","isLoading","setIsLoading","getProfileDetails","then","res","error","data","show","message","catch","err","useEffect","image","url","name","email","user_type","initialEditValues","file","prevImage","isNew","EditProfile","props","onRefresh","formikRef","useRef","imageRef","isEdit","setIsEdit","isOpen","setIsOpen","initialFormValues","setInitialFormValues","_id","rest","editData","id","console","log","editProfileModel","onClose","onImageChange","e","persist","files","target","length","reader","FileReader","onloadend","current","setFieldValue","result","readAsDataURL","onSubmit","value","helper","postData","editProfile","setSubmitting","resetForm","object","shape","string","required","mixed","errors","touched","handleChange","handleBlur","submitForm","isSubmitting","click","Boolean","initialValues","password","confirmPassword","ChangePassword","changePasswordModel","changePasswordData","min","oneOf","ref"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Grid, Button, Paper, makeStyles, Avatar, Table, TableBody, TableCell, TableRow, IconButton, Dialog, DialogActions, DialogContent, TextField, List, ListItem, ListItemAvatar, ListItemText, Typography, } from '@material-ui/core'\r\nimport Page from '../../components/Page/Page';\r\nimport useService from '../../hook/useService';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { uploadNewImage } from '../../utils/CloudinaryUtils';\r\n\r\nconst useStyle = makeStyles((theme: any) => ({\r\n  root: {\r\n    width: theme.breakpoints.values.lg,\r\n    height: '100%',\r\n    maxWidth: '100%',\r\n    margin: '0 auto',\r\n    padding: theme.spacing(3),\r\n  },\r\n  paperStyle: {\r\n    padding: theme.spacing(8, 8)\r\n  },\r\n  insidePaperDivStyle: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    margin: 'auto',\r\n    alignItems: 'center',\r\n    height: '100%'\r\n  },\r\n  themeButton: {\r\n    color: theme.palette.white,\r\n    // textTransform: 'capitalize',\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n  },\r\n  avatarStyle: {\r\n    width: '150px',\r\n    height: '150px'\r\n  },\r\n  lColor: {\r\n    color: theme.palette.green.main,\r\n  }\r\n\r\n}));\r\n\r\nconst AdminProfileDetails = () => {\r\n  const classes = useStyle();\r\n  const { Post } = useService();\r\n  const Snackbar = useSnackbar();\r\n  const [profileData, setProfileData] = React.useState<any>('');\r\n  const [isLoading, setIsLoading] = React.useState(true)\r\n\r\n\r\n  const getProfileDetails = () => {\r\n    setIsLoading(true);\r\n    Post('app/getAdminUser', {})\r\n      .then((res: any) => {\r\n        setIsLoading(false);\r\n        if (!res.error) {\r\n          setProfileData(res.data);\r\n        } else {\r\n          Snackbar.show(res.message, 'error');\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        setIsLoading(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    getProfileDetails()\r\n  }, [])\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Page title='Admin Profile' />\r\n      <Grid container >\r\n        <Grid  xs md item />\r\n        <Grid item xs={12} md={8}>\r\n          <Paper className={classes.paperStyle}>\r\n            {!isLoading && (\r\n              <div className={classes.insidePaperDivStyle}>\r\n                <Avatar className={classes.avatarStyle} src={profileData?.image?.url} alt={profileData?.name} variant='square' />\r\n                <Table >\r\n                  <TableBody>\r\n                    <TableRow >\r\n                      <TableCell align='left'>Name</TableCell>\r\n                      <TableCell align='center'>{profileData?.name}</TableCell>\r\n                      <TableCell align='right'><EditProfile data={profileData} onRefresh={getProfileDetails} /></TableCell>\r\n                    </TableRow>\r\n                    <TableRow >\r\n                      <TableCell align='left'>Email</TableCell>\r\n                      <TableCell align='center'>{profileData?.email}</TableCell>\r\n                      <TableCell align='right'></TableCell>\r\n                    </TableRow>\r\n                    <TableRow >\r\n                      <TableCell align='left'>Admin Type</TableCell>\r\n                      <TableCell align='center'>{profileData?.user_type}</TableCell>\r\n                      <TableCell align='right'></TableCell>\r\n                    </TableRow>\r\n                    <TableRow >\r\n                      <TableCell align='left'>Password</TableCell>\r\n                      <TableCell align='center'>**********</TableCell>\r\n                      <TableCell align='right'><ChangePassword onRefresh={getProfileDetails} /></TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                </Table>\r\n              </div>\r\n            )}\r\n\r\n            {isLoading && <div className={classes.insidePaperDivStyle}><CircularProgress className={classes.lColor} /></div>}\r\n\r\n          </Paper>\r\n        </Grid>\r\n        <Grid xs md item />\r\n      </Grid>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nconst initialEditValues = {\r\n  name: '',\r\n  image: { file: null, prevImage: '', isNew: null },\r\n}\r\n\r\nexport const EditProfile = (props: any) => {\r\n  const { data, onRefresh } = props;\r\n  const classes = useStyle();\r\n  const formikRef = React.useRef<any>(null);\r\n  const imageRef = React.useRef<any>(null);\r\n  const { Post } = useService();\r\n  const Snackbar = useSnackbar();\r\n  const [isEdit, setIsEdit] = React.useState(false)\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const [initialFormValues, setInitialFormValues] = React.useState({ ...initialEditValues });\r\n\r\n  React.useEffect(() => {\r\n    if (isEdit) {\r\n      const { image, _id, ...rest } = data;\r\n      const editData = { ...rest, id: _id }\r\n      editData.image = {\r\n        file: image,\r\n        prevImage: image?.url,\r\n        isNew: false,\r\n      }\r\n      console.log(editData)\r\n      setInitialFormValues(editData)\r\n    }\r\n    else {\r\n      setInitialFormValues(initialEditValues)\r\n    }\r\n  }, [props, isEdit])\r\n\r\n  const editProfileModel = () => {\r\n    setIsOpen(!isOpen);\r\n    setIsEdit(true)\r\n  }\r\n\r\n  const onClose = () => {\r\n    setIsOpen(!isOpen);\r\n  }\r\n\r\n  const onImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    e.persist();\r\n    const files = e.target.files;\r\n    if (files && files.length != 0) {\r\n      const reader = new FileReader();\r\n      const file = files[0];\r\n      reader.onloadend = () => {\r\n        formikRef.current.setFieldValue('image', {\r\n          file,\r\n          prevImage: reader.result,\r\n          isNew: true\r\n        });\r\n      };\r\n      reader.readAsDataURL(file);\r\n    } \r\n    // else {\r\n    //   formikRef.current.setFieldValue('image', {\r\n    //     file: null,\r\n    //     prevImage: '',\r\n    //     isNew: null\r\n    //   });\r\n    // }\r\n  };\r\n\r\n  const onSubmit = async (value: any, helper: any) => {\r\n    const { name, image } = value;\r\n    const postData: any = {};\r\n    postData.name = name;\r\n    postData.image = await uploadNewImage(image);\r\n    editProfile(postData, helper)\r\n  }\r\n\r\n  const editProfile = (data: any, { setSubmitting, resetForm }: any) => {\r\n    Post('app/updateAdminDetails', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onClose();\r\n        onRefresh();\r\n      })\r\n      .catch((err: any) => {\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <IconButton size='small' onClick={editProfileModel} className={classes.themeButton}><EditIcon fontSize='small' /></IconButton>\r\n      <Dialog open={isOpen} disableBackdropClick disableEscapeKeyDown fullWidth maxWidth='sm' aria-labelledby='dialog-title'>\r\n        <DialogTitle id='dialog-title' onClose={onClose}>\r\n          Edit Profile\r\n        </DialogTitle>\r\n\r\n        <Formik\r\n          innerRef={formikRef}\r\n          enableReinitialize\r\n          initialValues={initialFormValues}\r\n          validationSchema={Yup.object().shape({\r\n            name: Yup.string().required('Name is required'),\r\n            image: Yup.object({ file: Yup.mixed().required('A file is required') })\r\n          })}\r\n          onSubmit={onSubmit}\r\n        >\r\n          {({ values, errors, touched, handleChange, handleBlur, setFieldValue, submitForm, isSubmitting }) => (\r\n            <>\r\n              <DialogContent dividers>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12}>\r\n                    <input\r\n                      name='recipe_image'\r\n                      ref={imageRef}\r\n                      type='file'\r\n                      accept='.jpg,.png,jpeg'\r\n                      onChange={onImageChange}\r\n                      onBlur={handleBlur}\r\n                      hidden\r\n                    />\r\n                    <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                      <Avatar onClick={() => imageRef.current.click()} className={classes.avatarStyle} src={values?.image?.prevImage} alt={'profilePic'} variant='square' />\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label='Name'\r\n                      variant='outlined'\r\n                      name='name'\r\n                      value={values.name}\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      error={Boolean(touched.name && errors.name)}\r\n                      helperText={touched.name && errors.name}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </DialogContent>\r\n\r\n              <DialogActions>\r\n                <Button onClick={onClose} variant='outlined' color='secondary'>\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  className={classes.themeButton}\r\n                  onClick={() => submitForm()}\r\n                  disabled={isSubmitting}\r\n                  variant='outlined'\r\n                >\r\n                  {isSubmitting ? (\r\n                    <CircularProgress size={24} style={{ color: 'white' }} />\r\n                  ) : (\r\n                    'Save'\r\n                  )}\r\n                </Button>\r\n              </DialogActions>\r\n            </>\r\n          )}\r\n        </Formik>\r\n      </Dialog>\r\n    </>\r\n  )\r\n}\r\n\r\nconst initialValues = {\r\n  password: '',\r\n  confirmPassword: '',\r\n}\r\nexport const ChangePassword = (props: any) => {\r\n  const { onRefresh } = props;\r\n  const classes = useStyle();\r\n  const formikRef = React.useRef<any>(null);\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const { Post } = useService();\r\n  const Snackbar = useSnackbar();\r\n  const [initialFormValues, setInitialFormValues] = React.useState({ ...initialValues })\r\n\r\n  const changePasswordModel = () => {\r\n    setIsOpen(!isOpen)\r\n  }\r\n\r\n  const onClose = () => {\r\n    setIsOpen(!isOpen);\r\n  }\r\n\r\n  const onSubmit = (value: any, helper: any) => {\r\n    const { confirmPassword } = value\r\n    let postData = {\r\n      password: confirmPassword\r\n    }\r\n    changePasswordData(postData, helper)\r\n  }\r\n\r\n  const changePasswordData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    Post('app/updateAdminPassword', data)\r\n      .then((res: any) => {\r\n        if(res.error){\r\n          Snackbar.show(res.message, 'success');\r\n          setSubmitting(false);\r\n        }\r\n        else {\r\n          Snackbar.show(res.message, 'success');\r\n          setSubmitting(false);\r\n          resetForm();\r\n          onClose();\r\n          onRefresh()\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button size='small' onClick={changePasswordModel} className={classes.themeButton}>Change</Button>\r\n      <Dialog\r\n        open={isOpen}\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        fullWidth\r\n        maxWidth='sm'\r\n        aria-labelledby='dialog-title'\r\n      >\r\n        <DialogTitle id='dialog-title' onClose={onClose}>\r\n          Change Password\r\n        </DialogTitle>\r\n        <Formik\r\n          innerRef={formikRef}\r\n          enableReinitialize\r\n          initialValues={initialFormValues}\r\n          validationSchema={Yup.object().shape({\r\n            password: Yup.string().required('Password is required').min(6, 'Password must be at least 6 characters'),\r\n            confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Password must be same').required('Confirm password is required')\r\n          })}\r\n          onSubmit={onSubmit}\r\n        >\r\n          {({ values, errors, touched, handleChange, handleBlur, setFieldValue, submitForm, isSubmitting }) => (\r\n            <>\r\n              <DialogContent dividers>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label='New Password'\r\n                      variant='outlined'\r\n                      name='password'\r\n                      type='password'\r\n                      value={values.password}\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      error={Boolean(touched.password && errors.password)}\r\n                      helperText={touched.password && errors.password}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label='Confirm Password'\r\n                      variant='outlined'\r\n                      name='confirmPassword'\r\n                      type='password'\r\n                      value={values.confirmPassword}\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      error={Boolean(touched.confirmPassword && errors.confirmPassword)}\r\n                      helperText={touched.confirmPassword && errors.confirmPassword}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </DialogContent>\r\n\r\n              <DialogActions>\r\n                <Button onClick={onClose} variant='outlined' color='secondary'>\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  className={classes.themeButton}\r\n                  onClick={() => submitForm()}\r\n                  disabled={isSubmitting}\r\n                  variant='outlined'\r\n                >\r\n                  {isSubmitting ? (\r\n                    <CircularProgress size={24} style={{ color: 'white' }} />\r\n                  ) : (\r\n                    'Submit'\r\n                  )}\r\n                </Button>\r\n              </DialogActions>\r\n            </>\r\n          )}\r\n        </Formik>\r\n      </Dialog>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AdminProfileDetails;\r\n"]},"metadata":{},"sourceType":"module"}