{"ast":null,"code":"import { Mark, mergeAttributes, markInputRule, markPasteRule } from '@tiptap/core';\nvar inputRegex = /(?:^|\\s)((?:`)((?:[^`]+))(?:`))$/gm;\nvar pasteRegex = /(?:^|\\s)((?:`)((?:[^`]+))(?:`))/gm;\nvar Code = Mark.create({\n  name: 'code',\n  defaultOptions: {\n    HTMLAttributes: {}\n  },\n  excludes: '_',\n  parseHTML: function parseHTML() {\n    return [{\n      tag: 'code'\n    }];\n  },\n  renderHTML: function renderHTML(_ref) {\n    var HTMLAttributes = _ref.HTMLAttributes;\n    return ['code', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n  },\n  addCommands: function addCommands() {\n    return {\n      setCode: function setCode() {\n        return function (_ref2) {\n          var commands = _ref2.commands;\n          return commands.setMark('code');\n        };\n      },\n      toggleCode: function toggleCode() {\n        return function (_ref3) {\n          var commands = _ref3.commands;\n          return commands.toggleMark('code');\n        };\n      },\n      unsetCode: function unsetCode() {\n        return function (_ref4) {\n          var commands = _ref4.commands;\n          return commands.unsetMark('code');\n        };\n      }\n    };\n  },\n  addKeyboardShortcuts: function addKeyboardShortcuts() {\n    var _this = this;\n\n    return {\n      'Mod-e': function ModE() {\n        return _this.editor.commands.toggleCode();\n      }\n    };\n  },\n  addInputRules: function addInputRules() {\n    return [markInputRule(inputRegex, this.type)];\n  },\n  addPasteRules: function addPasteRules() {\n    return [markPasteRule(inputRegex, this.type)];\n  }\n});\nexport default Code;\nexport { Code, inputRegex, pasteRegex };","map":null,"metadata":{},"sourceType":"module"}