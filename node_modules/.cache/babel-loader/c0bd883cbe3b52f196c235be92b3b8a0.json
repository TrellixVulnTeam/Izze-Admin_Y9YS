{"ast":null,"code":"import { Mark, mergeAttributes, markInputRule, markPasteRule } from '@tiptap/core';\nconst starInputRegex = /(?:^|\\s)((?:\\*\\*)((?:[^*]+))(?:\\*\\*))$/gm;\nconst starPasteRegex = /(?:^|\\s)((?:\\*\\*)((?:[^*]+))(?:\\*\\*))/gm;\nconst underscoreInputRegex = /(?:^|\\s)((?:__)((?:[^__]+))(?:__))$/gm;\nconst underscorePasteRegex = /(?:^|\\s)((?:__)((?:[^__]+))(?:__))/gm;\nconst Bold = Mark.create({\n  name: 'bold',\n  defaultOptions: {\n    HTMLAttributes: {}\n  },\n\n  parseHTML() {\n    return [{\n      tag: 'strong'\n    }, {\n      tag: 'b',\n      getAttrs: node => node.style.fontWeight !== 'normal' && null\n    }, {\n      style: 'font-weight',\n      getAttrs: value => /^(bold(er)?|[5-9]\\d{2,})$/.test(value) && null\n    }];\n  },\n\n  renderHTML({\n    HTMLAttributes\n  }) {\n    return ['strong', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n  },\n\n  addCommands() {\n    return {\n      setBold: () => ({\n        commands\n      }) => {\n        return commands.setMark('bold');\n      },\n      toggleBold: () => ({\n        commands\n      }) => {\n        return commands.toggleMark('bold');\n      },\n      unsetBold: () => ({\n        commands\n      }) => {\n        return commands.unsetMark('bold');\n      }\n    };\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-b': () => this.editor.commands.toggleBold()\n    };\n  },\n\n  addInputRules() {\n    return [markInputRule(starInputRegex, this.type), markInputRule(underscoreInputRegex, this.type)];\n  },\n\n  addPasteRules() {\n    return [markPasteRule(starPasteRegex, this.type), markPasteRule(underscorePasteRegex, this.type)];\n  }\n\n});\nexport default Bold;\nexport { Bold, starInputRegex, starPasteRegex, underscoreInputRegex, underscorePasteRegex };","map":null,"metadata":{},"sourceType":"module"}