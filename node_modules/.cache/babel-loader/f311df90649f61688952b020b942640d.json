{"ast":null,"code":"import { Mark, mergeAttributes, markInputRule, markPasteRule } from '@tiptap/core';\nconst starInputRegex = /(?:^|\\s)((?:\\*)((?:[^*]+))(?:\\*))$/gm;\nconst starPasteRegex = /(?:^|\\s)((?:\\*)((?:[^*]+))(?:\\*))/gm;\nconst underscoreInputRegex = /(?:^|\\s)((?:_)((?:[^_]+))(?:_))$/gm;\nconst underscorePasteRegex = /(?:^|\\s)((?:_)((?:[^_]+))(?:_))/gm;\nconst Italic = Mark.create({\n  name: 'italic',\n  defaultOptions: {\n    HTMLAttributes: {}\n  },\n\n  parseHTML() {\n    return [{\n      tag: 'em'\n    }, {\n      tag: 'i',\n      getAttrs: node => node.style.fontStyle !== 'normal' && null\n    }, {\n      style: 'font-style=italic'\n    }];\n  },\n\n  renderHTML({\n    HTMLAttributes\n  }) {\n    return ['em', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n  },\n\n  addCommands() {\n    return {\n      setItalic: () => ({\n        commands\n      }) => {\n        return commands.setMark('italic');\n      },\n      toggleItalic: () => ({\n        commands\n      }) => {\n        return commands.toggleMark('italic');\n      },\n      unsetItalic: () => ({\n        commands\n      }) => {\n        return commands.unsetMark('italic');\n      }\n    };\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-i': () => this.editor.commands.toggleItalic()\n    };\n  },\n\n  addInputRules() {\n    return [markInputRule(starInputRegex, this.type), markInputRule(underscoreInputRegex, this.type)];\n  },\n\n  addPasteRules() {\n    return [markPasteRule(starPasteRegex, this.type), markPasteRule(underscorePasteRegex, this.type)];\n  }\n\n});\nexport default Italic;\nexport { Italic, starInputRegex, starPasteRegex, underscoreInputRegex, underscorePasteRegex };","map":null,"metadata":{},"sourceType":"module"}