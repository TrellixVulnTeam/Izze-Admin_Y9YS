{"ast":null,"code":"import { Node, mergeAttributes } from '@tiptap/core';\nimport { wrappingInputRule } from 'prosemirror-inputrules';\nconst inputRegex = /^\\s*([-+*])\\s$/;\nconst BulletList = Node.create({\n  name: 'bulletList',\n  defaultOptions: {\n    HTMLAttributes: {}\n  },\n  group: 'block list',\n  content: 'listItem+',\n\n  parseHTML() {\n    return [{\n      tag: 'ul'\n    }];\n  },\n\n  renderHTML({\n    HTMLAttributes\n  }) {\n    return ['ul', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n  },\n\n  addCommands() {\n    return {\n      toggleBulletList: () => ({\n        commands\n      }) => {\n        return commands.toggleList('bulletList', 'listItem');\n      }\n    };\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Shift-8': () => this.editor.commands.toggleBulletList()\n    };\n  },\n\n  addInputRules() {\n    return [wrappingInputRule(inputRegex, this.type)];\n  }\n\n});\nexport default BulletList;\nexport { BulletList, inputRegex };","map":null,"metadata":{},"sourceType":"module"}