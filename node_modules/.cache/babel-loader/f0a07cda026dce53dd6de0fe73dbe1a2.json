{"ast":null,"code":"import _defineProperty from \"D:/Pyramidion/WebApp/Izze-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:/Pyramidion/WebApp/Izze-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { Node, mergeAttributes } from '@tiptap/core';\nimport { textblockTypeInputRule } from 'prosemirror-inputrules';\nvar Heading = Node.create({\n  name: 'heading',\n  defaultOptions: {\n    levels: [1, 2, 3, 4, 5, 6],\n    HTMLAttributes: {}\n  },\n  content: 'inline*',\n  group: 'block',\n  defining: true,\n  addAttributes: function addAttributes() {\n    return {\n      level: {\n        default: 1,\n        rendered: false\n      }\n    };\n  },\n  parseHTML: function parseHTML() {\n    return this.options.levels.map(function (level) {\n      return {\n        tag: \"h\".concat(level),\n        attrs: {\n          level: level\n        }\n      };\n    });\n  },\n  renderHTML: function renderHTML(_ref) {\n    var node = _ref.node,\n        HTMLAttributes = _ref.HTMLAttributes;\n    var hasLevel = this.options.levels.includes(node.attrs.level);\n    var level = hasLevel ? node.attrs.level : this.options.levels[0];\n    return [\"h\".concat(level), mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n  },\n  addCommands: function addCommands() {\n    var _this = this;\n\n    return {\n      setHeading: function setHeading(attributes) {\n        return function (_ref2) {\n          var commands = _ref2.commands;\n\n          if (!_this.options.levels.includes(attributes.level)) {\n            return false;\n          }\n\n          return commands.setNode('heading', attributes);\n        };\n      },\n      toggleHeading: function toggleHeading(attributes) {\n        return function (_ref3) {\n          var commands = _ref3.commands;\n\n          if (!_this.options.levels.includes(attributes.level)) {\n            return false;\n          }\n\n          return commands.toggleNode('heading', 'paragraph', attributes);\n        };\n      }\n    };\n  },\n  addKeyboardShortcuts: function addKeyboardShortcuts() {\n    var _this2 = this;\n\n    return this.options.levels.reduce(function (items, level) {\n      return _objectSpread(_objectSpread({}, items), _defineProperty({}, \"Mod-Alt-\".concat(level), function ModAlt() {\n        return _this2.editor.commands.toggleHeading({\n          level: level\n        });\n      }));\n    }, {});\n  },\n  addInputRules: function addInputRules() {\n    var _this3 = this;\n\n    return this.options.levels.map(function (level) {\n      return textblockTypeInputRule(new RegExp(\"^(#{1,\".concat(level, \"})\\\\s$\")), _this3.type, {\n        level: level\n      });\n    });\n  }\n});\nexport default Heading;\nexport { Heading };","map":null,"metadata":{},"sourceType":"module"}