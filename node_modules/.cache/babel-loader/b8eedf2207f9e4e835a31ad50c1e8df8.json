{"ast":null,"code":"import _objectSpread from\"D:/Pyramidion/WebApp/Izze-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:/Pyramidion/WebApp/Izze-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useLayoutEffect,useRef,useState}from'react';import{Button,Card,CircularProgress,Grid,Table,TableBody,TableCell,TableRow,TextField}from'@material-ui/core';import{Autocomplete}from'@material-ui/lab';import{makeStyles}from'@material-ui/styles';import{Formik}from'formik';import clsx from'clsx';import*as Yup from'yup';import getDropValues,{CurrentClimateDrop,getSubSkinIrregular,NoOption,SkinIrregularDrop,SkinTextureDrop,SkinTypeDrop}from'../../utils/PlanDropdowns';import useSnackbar from'../../hook/useSnackbar';import useService from'../../hook/useService';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{editCardRoot:{padding:theme.spacing(2)},marginLeft1:{marginLeft:theme.spacing(1)},themeButton:{color:theme.palette.white,backgroundColor:theme.palette.green.main,'&:hover':{backgroundColor:theme.palette.green.dark}},actionGrid:{display:'flex',alignItems:\"center\",justifyContent:\"flex-end\"},editButtonDiv:{display:'flex',alignItems:\"center\",justifyContent:\"flex-end\",paddingBottom:theme.spacing(2)}};});var AppNutrition=function AppNutrition(props){var classes=useStyles();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isEdit=_useState2[0],setIsEdit=_useState2[1];var data=props.data,onRefresh=props.onRefresh;var _useState3=useState(data),_useState4=_slicedToArray(_useState3,2),formData=_useState4[0],setFormData=_useState4[1];useEffect(function(){setFormData(props.data);},[props.data]);return/*#__PURE__*/_jsxs(_Fragment,{children:[!isEdit&&/*#__PURE__*/_jsx(\"div\",{className:classes.editButtonDiv,children:/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return setIsEdit(true);},className:classes.themeButton,variant:\"outlined\",children:\"Edit\"})}),!isEdit&&/*#__PURE__*/_jsx(ViewCard,{data:formData}),isEdit&&/*#__PURE__*/_jsx(EditCard,{data:formData,onClose:function onClose(){return setIsEdit(false);},onSuccess:function onSuccess(){return onRefresh();}})]});};var EditCard=function EditCard(props){var classes=useStyles();var onClose=props.onClose,onSuccess=props.onSuccess;var formikRef=useRef(null);var Snackbar=useSnackbar();var _useService=useService(),Post=_useService.Post;var formInitialValue={id:\"\",skin_type:\"\",current_climate:\"\",skin_irregular:\"\",skin_irregular_sub:\"\",skin_texture:\"\"};var _useState5=useState(formInitialValue),_useState6=_slicedToArray(_useState5,2),initialValue=_useState6[0],setInitialValue=_useState6[1];var onSubmit=function onSubmit(value,_ref){var setSubmitting=_ref.setSubmitting,resetForm=_ref.resetForm;setSubmitting(true);Post('app/updateSkincarePlan',value).then(function(res){Snackbar.show(res.message,'success');setSubmitting(false);resetForm();onClose();onSuccess();}).catch(function(err){setSubmitting(false);if(err.message==='Request failed with status code 500'){Snackbar.show('No combination found','error');}else{Snackbar.show(err.message,'error');}});};useLayoutEffect(function(){var _props$data=props.data,_id=_props$data._id,skin_type=_props$data.skin_type,current_climate=_props$data.current_climate,skin_irregular=_props$data.skin_irregular,skin_irregular_sub=_props$data.skin_irregular_sub,skin_texture=_props$data.skin_texture;setInitialValue(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{id:_id,skin_type:skin_type,current_climate:current_climate,skin_irregular:skin_irregular,skin_irregular_sub:skin_irregular_sub,skin_texture:skin_texture});});},[props.data]);return/*#__PURE__*/_jsx(Card,{className:classes.editCardRoot,children:/*#__PURE__*/_jsx(Formik,{innerRef:formikRef,enableReinitialize:true,initialValues:initialValue,validationSchema:Yup.object().shape({skin_type:Yup.string().trim().required('Skin Type is required'),current_climate:Yup.string().trim().required('Current Climate is required'),skin_irregular:Yup.string().trim().required('Skin Irregularites is required'),skin_irregular_sub:Yup.string().trim().required('Sub Skin Irregularites is required'),skin_texture:Yup.string().trim().required('Skin Texture is required')}),onSubmit:onSubmit,children:function children(_ref2){var values=_ref2.values,errors=_ref2.errors,touched=_ref2.touched,handleChange=_ref2.handleChange,handleBlur=_ref2.handleBlur,setFieldValue=_ref2.setFieldValue,submitForm=_ref2.submitForm,isSubmitting=_ref2.isSubmitting;return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:/*#__PURE__*/_jsx(Autocomplete,{options:SkinTypeDrop,value:SkinTypeDrop.find(function(data){return data.id==values.skin_type;})||NoOption,getOptionLabel:function getOptionLabel(option){return option.name;},getOptionSelected:function getOptionSelected(option){return option.id==values.skin_type;},onChange:function onChange(event,newValue){setFieldValue('skin_type',(newValue===null||newValue===void 0?void 0:newValue.id)||'');},onBlur:handleBlur,renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{label:\"Skin Type\",variant:\"outlined\",error:Boolean(touched.skin_type&&errors.skin_type),helperText:touched.skin_type&&errors.skin_type,inputProps:_objectSpread({},params.inputProps)}));}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:/*#__PURE__*/_jsx(Autocomplete,{options:CurrentClimateDrop,value:CurrentClimateDrop.find(function(data){return data.id==values.current_climate;})||NoOption,getOptionLabel:function getOptionLabel(option){return option.name;},getOptionSelected:function getOptionSelected(option){return option.id==values.current_climate;},onChange:function onChange(event,newValue){setFieldValue('current_climate',(newValue===null||newValue===void 0?void 0:newValue.id)||'');},onBlur:handleBlur,renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{label:\"Current Climate\",variant:\"outlined\",error:Boolean(touched.current_climate&&errors.current_climate),helperText:touched.current_climate&&errors.current_climate,inputProps:_objectSpread({},params.inputProps)}));}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:/*#__PURE__*/_jsx(Autocomplete,{options:SkinTextureDrop,value:SkinTextureDrop.find(function(data){return data.id==values.skin_texture;})||NoOption,getOptionLabel:function getOptionLabel(option){return option.name;},getOptionSelected:function getOptionSelected(option){return option.id==values.skin_texture;},onChange:function onChange(event,newValue){setFieldValue('skin_texture',(newValue===null||newValue===void 0?void 0:newValue.id)||'');},onBlur:handleBlur,renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{label:\"Skin Texture\",variant:\"outlined\",error:Boolean(touched.skin_texture&&errors.skin_texture),helperText:touched.skin_texture&&errors.skin_texture,inputProps:_objectSpread({},params.inputProps)}));}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(Autocomplete,{options:SkinIrregularDrop,value:SkinIrregularDrop.find(function(data){return data.id==values.skin_irregular;})||NoOption,getOptionLabel:function getOptionLabel(option){return option.name;},getOptionSelected:function getOptionSelected(option){return option.id==values.skin_irregular;},onChange:function onChange(event,newValue){setFieldValue('skin_irregular',(newValue===null||newValue===void 0?void 0:newValue.id)||'');setFieldValue('skin_irregular_sub','');},onBlur:handleBlur,renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{label:\"Skin Irregularites\",variant:\"outlined\",error:Boolean(touched.skin_irregular&&errors.skin_irregular),helperText:touched.skin_irregular&&errors.skin_irregular,inputProps:_objectSpread({},params.inputProps)}));}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(Autocomplete,{options:getSubSkinIrregular(values.skin_irregular),value:getSubSkinIrregular(values.skin_irregular).find(function(data){return data.id==values.skin_irregular_sub;})||NoOption,getOptionLabel:function getOptionLabel(option){return option.name;},getOptionSelected:function getOptionSelected(option){return option.id==values.skin_irregular_sub;},onChange:function onChange(event,newValue){setFieldValue('skin_irregular_sub',(newValue===null||newValue===void 0?void 0:newValue.id)||'');},onBlur:handleBlur,renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{label:\"Sub Skin Irregularites\",variant:\"outlined\",error:Boolean(touched.skin_irregular_sub&&errors.skin_irregular_sub),helperText:touched.skin_irregular_sub&&errors.skin_irregular_sub,inputProps:_objectSpread({},params.inputProps)}));}})}),/*#__PURE__*/_jsxs(Grid,{className:classes.actionGrid,item:true,xs:12,children:[/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return onClose();},variant:\"outlined\",color:\"secondary\",children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{className:clsx(classes.themeButton,classes.marginLeft1),onClick:function onClick(){return submitForm();},disabled:isSubmitting,variant:\"outlined\",children:isSubmitting?/*#__PURE__*/_jsx(CircularProgress,{size:24,style:{color:'white'}}):'Update'})]})]})});}})});};var ViewCard=function ViewCard(props){var classes=useStyles();var data=props.data;var _useState7=useState({}),_useState8=_slicedToArray(_useState7,2),formData=_useState8[0],setFormData=_useState8[1];useEffect(function(){setFormData(data);},[props]);return/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(Table,{children:/*#__PURE__*/_jsxs(TableBody,{children:[/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Skin Type\"}),/*#__PURE__*/_jsx(TableCell,{children:getDropValues(SkinTypeDrop,formData===null||formData===void 0?void 0:formData.skin_type)})]}),/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Current Climate\"}),/*#__PURE__*/_jsx(TableCell,{children:getDropValues(CurrentClimateDrop,formData===null||formData===void 0?void 0:formData.current_climate)})]}),/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Skin Irregularities\"}),/*#__PURE__*/_jsx(TableCell,{children:getDropValues(SkinIrregularDrop,formData===null||formData===void 0?void 0:formData.skin_irregular)})]}),/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Sub Skin Irregularities\"}),/*#__PURE__*/_jsx(TableCell,{children:getDropValues(getSubSkinIrregular(formData===null||formData===void 0?void 0:formData.skin_irregular),formData===null||formData===void 0?void 0:formData.skin_irregular_sub)})]}),/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Skin Texture\"}),/*#__PURE__*/_jsx(TableCell,{children:getDropValues(SkinTextureDrop,formData===null||formData===void 0?void 0:formData.skin_texture)})]})]})})});};export default AppNutrition;","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/pages/AppUsers/AppSkinCare.tsx"],"names":["React","useEffect","useLayoutEffect","useRef","useState","Button","Card","CircularProgress","Grid","Table","TableBody","TableCell","TableRow","TextField","Autocomplete","makeStyles","Formik","clsx","Yup","getDropValues","CurrentClimateDrop","getSubSkinIrregular","NoOption","SkinIrregularDrop","SkinTextureDrop","SkinTypeDrop","useSnackbar","useService","useStyles","theme","editCardRoot","padding","spacing","marginLeft1","marginLeft","themeButton","color","palette","white","backgroundColor","green","main","dark","actionGrid","display","alignItems","justifyContent","editButtonDiv","paddingBottom","AppNutrition","props","classes","isEdit","setIsEdit","data","onRefresh","formData","setFormData","EditCard","onClose","onSuccess","formikRef","Snackbar","Post","formInitialValue","id","skin_type","current_climate","skin_irregular","skin_irregular_sub","skin_texture","initialValue","setInitialValue","onSubmit","value","setSubmitting","resetForm","then","res","show","message","catch","err","_id","prevState","object","shape","string","trim","required","values","errors","touched","handleChange","handleBlur","setFieldValue","submitForm","isSubmitting","find","option","name","event","newValue","params","Boolean","inputProps","ViewCard"],"mappings":"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","sourcesContent":["import React, { memo, useEffect, useLayoutEffect, useRef, useState } from 'react';\r\nimport {\r\n  Button,\r\n  Card, CircularProgress, Grid, Table, TableBody, TableCell,\r\n  TableRow,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Formik } from 'formik';\r\nimport clsx from 'clsx';\r\nimport * as Yup from 'yup';\r\nimport getDropValues, { CurrentClimateDrop, DietTypeDrop, FitnessGoalDrop, getSubSkinIrregular, LifeStyleDrop, NoOption, SkinIrregularDrop, SkinTextureDrop, SkinTypeDrop } from '../../utils/PlanDropdowns';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport useService from '../../hook/useService';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  editCardRoot: {\r\n    padding: theme.spacing(2)\r\n  },\r\n  marginLeft1: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  themeButton: {\r\n    color: theme.palette.white,\r\n\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n  },\r\n  actionGrid: {\r\n    display: 'flex',\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\"\r\n  },\r\n  editButtonDiv: {\r\n    display: 'flex',\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    paddingBottom: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst AppNutrition = (props: any) => {\r\n  const classes = useStyles();\r\n  const [isEdit, setIsEdit] = useState(false)\r\n  const { data, onRefresh } = props;\r\n  const [formData, setFormData] = useState<any>(data);\r\n  useEffect(() => {\r\n    setFormData(props.data)\r\n  }, [props.data]);\r\n\r\n  return (\r\n    <>\r\n      {!isEdit && <div className={classes.editButtonDiv}>\r\n        <Button onClick={() => setIsEdit(true)} className={classes.themeButton} variant='outlined'>\r\n          Edit\r\n        </Button>\r\n      </div>\r\n      }\r\n      {!isEdit && <ViewCard data={formData} />}\r\n      {isEdit && <EditCard data={formData} onClose={() => setIsEdit(false)} onSuccess={() => onRefresh()} />}\r\n    </>\r\n  );\r\n};\r\n\r\nconst EditCard = (props: any) => {\r\n  const classes = useStyles();\r\n  const { onClose, onSuccess } = props;\r\n  const formikRef = useRef<any>(null);\r\n  const Snackbar = useSnackbar();\r\n  const { Post } = useService();\r\n\r\n  const formInitialValue = {\r\n    id: \"\",\r\n    skin_type: \"\",\r\n    current_climate: \"\",\r\n    skin_irregular: \"\",\r\n    skin_irregular_sub: \"\",\r\n    skin_texture: \"\",\r\n\r\n  }\r\n\r\n  const [initialValue, setInitialValue] = useState<any>(formInitialValue);\r\n\r\n  const onSubmit = (value: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n\r\n    Post('app/updateSkincarePlan', value)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onClose();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        if(err.message === 'Request failed with status code 500'){\r\n          Snackbar.show('No combination found', 'error');\r\n        }\r\n        else {\r\n          Snackbar.show(err.message, 'error');\r\n        }\r\n      });\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    const { _id, skin_type, current_climate, skin_irregular, skin_irregular_sub, skin_texture } = props.data\r\n    setInitialValue((prevState: any) => ({ ...prevState, id: _id, skin_type, current_climate, skin_irregular, skin_irregular_sub, skin_texture }))\r\n  }, [props.data]);\r\n\r\n  return (\r\n    <Card className={classes.editCardRoot}>\r\n      <Formik\r\n        innerRef={formikRef}\r\n        enableReinitialize\r\n        initialValues={initialValue}\r\n        validationSchema={\r\n          Yup.object().shape({\r\n            skin_type: Yup.string().trim().required('Skin Type is required'),\r\n            current_climate: Yup.string().trim().required('Current Climate is required'),\r\n            skin_irregular: Yup.string().trim().required('Skin Irregularites is required'),\r\n            skin_irregular_sub: Yup.string().trim().required('Sub Skin Irregularites is required'),\r\n            skin_texture: Yup.string().trim().required('Skin Texture is required'),\r\n          })\r\n        }\r\n        onSubmit={onSubmit}\r\n      >\r\n        {({ values, errors, touched, handleChange, handleBlur, setFieldValue, submitForm, isSubmitting }) => (\r\n          <>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={4}>\r\n\r\n                <Autocomplete\r\n                  options={SkinTypeDrop}\r\n                  value={SkinTypeDrop.find((data: any) => data.id == values.skin_type) || NoOption}\r\n                  getOptionLabel={(option: any) => option.name}\r\n                  getOptionSelected={(option) => option.id == values.skin_type}\r\n                  onChange={(event: any, newValue: any) => {\r\n                    setFieldValue('skin_type', newValue?.id || '');\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  renderInput={(params: any) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label='Skin Type'\r\n                      variant='outlined'\r\n                      error={Boolean(touched.skin_type && errors.skin_type)}\r\n                      helperText={touched.skin_type && errors.skin_type}\r\n                      inputProps={{\r\n                        ...params.inputProps,\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={4}>\r\n                <Autocomplete\r\n                  options={CurrentClimateDrop}\r\n                  value={CurrentClimateDrop.find((data: any) => data.id == values.current_climate) || NoOption}\r\n                  getOptionLabel={(option: any) => option.name}\r\n                  getOptionSelected={(option) => option.id == values.current_climate}\r\n                  onChange={(event: any, newValue: any) => {\r\n                    setFieldValue('current_climate', newValue?.id || '');\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  renderInput={(params: any) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label='Current Climate'\r\n                      variant='outlined'\r\n                      error={Boolean(touched.current_climate && errors.current_climate)}\r\n                      helperText={touched.current_climate && errors.current_climate}\r\n                      inputProps={{\r\n                        ...params.inputProps,\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={4}>\r\n                <Autocomplete\r\n                  options={SkinTextureDrop}\r\n                  value={SkinTextureDrop.find((data: any) => data.id == values.skin_texture) || NoOption}\r\n                  getOptionLabel={(option: any) => option.name}\r\n                  getOptionSelected={(option) => option.id == values.skin_texture}\r\n                  onChange={(event: any, newValue: any) => {\r\n                    setFieldValue('skin_texture', newValue?.id || '');\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  renderInput={(params: any) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label='Skin Texture'\r\n                      variant='outlined'\r\n                      error={Boolean(touched.skin_texture && errors.skin_texture)}\r\n                      helperText={touched.skin_texture && errors.skin_texture}\r\n                      inputProps={{\r\n                        ...params.inputProps,\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={6}>\r\n                <Autocomplete\r\n                  options={SkinIrregularDrop}\r\n                  value={SkinIrregularDrop.find((data: any) => data.id == values.skin_irregular) || NoOption}\r\n                  getOptionLabel={(option: any) => option.name}\r\n                  getOptionSelected={(option) => option.id == values.skin_irregular}\r\n                  onChange={(event: any, newValue: any) => {\r\n                    setFieldValue('skin_irregular', newValue?.id || '');\r\n                    setFieldValue('skin_irregular_sub', '');\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  renderInput={(params: any) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label='Skin Irregularites'\r\n                      variant='outlined'\r\n                      error={Boolean(touched.skin_irregular && errors.skin_irregular)}\r\n                      helperText={touched.skin_irregular && errors.skin_irregular}\r\n                      inputProps={{\r\n                        ...params.inputProps,\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={6}>\r\n                <Autocomplete\r\n                  options={getSubSkinIrregular(values.skin_irregular)}\r\n                  value={getSubSkinIrregular(values.skin_irregular).find((data: any) => data.id == values.skin_irregular_sub) || NoOption}\r\n                  getOptionLabel={(option: any) => option.name}\r\n                  getOptionSelected={(option) => option.id == values.skin_irregular_sub}\r\n                  onChange={(event: any, newValue: any) => {\r\n                    setFieldValue('skin_irregular_sub', newValue?.id || '');\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  renderInput={(params: any) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label='Sub Skin Irregularites'\r\n                      variant='outlined'\r\n                      error={Boolean(touched.skin_irregular_sub && errors.skin_irregular_sub)}\r\n                      helperText={touched.skin_irregular_sub && errors.skin_irregular_sub}\r\n                      inputProps={{\r\n                        ...params.inputProps,\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid className={classes.actionGrid} item xs={12}>\r\n                <Button onClick={() => onClose()} variant='outlined' color='secondary'>\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  className={clsx(classes.themeButton, classes.marginLeft1)}\r\n                  onClick={() => submitForm()}\r\n                  disabled={isSubmitting}\r\n                  variant='outlined'\r\n                >\r\n                  {isSubmitting ? (\r\n                    <CircularProgress size={24} style={{ color: 'white' }} />\r\n                  ) : 'Update'}\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst ViewCard = (props: any) => {\r\n  const classes = useStyles();\r\n\r\n  const { data } = props;\r\n  const [formData, setFormData] = useState<any>({});\r\n  useEffect(() => {\r\n    setFormData(data)\r\n  }, [props]);\r\n\r\n  return (\r\n    <Card>\r\n      <Table>\r\n        <TableBody>\r\n          <TableRow >\r\n            <TableCell>Skin Type</TableCell>\r\n            <TableCell>{getDropValues(SkinTypeDrop, formData?.skin_type)}</TableCell>\r\n          </TableRow>\r\n          <TableRow >\r\n            <TableCell>Current Climate</TableCell>\r\n            <TableCell>{getDropValues(CurrentClimateDrop, formData?.current_climate)}</TableCell>\r\n          </TableRow>\r\n          <TableRow >\r\n            <TableCell>Skin Irregularities</TableCell>\r\n            <TableCell>{getDropValues(SkinIrregularDrop, formData?.skin_irregular)}</TableCell>\r\n          </TableRow>\r\n          <TableRow >\r\n            <TableCell>Sub Skin Irregularities</TableCell>\r\n            <TableCell>{getDropValues(getSubSkinIrregular(formData?.skin_irregular), formData?.skin_irregular_sub)}</TableCell>\r\n          </TableRow>\r\n          <TableRow >\r\n            <TableCell>Skin Texture</TableCell>\r\n            <TableCell>{getDropValues(SkinTextureDrop, formData?.skin_texture)}</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </Card>\r\n  );\r\n};\r\n\r\n\r\nexport default AppNutrition;\r\n"]},"metadata":{},"sourceType":"module"}