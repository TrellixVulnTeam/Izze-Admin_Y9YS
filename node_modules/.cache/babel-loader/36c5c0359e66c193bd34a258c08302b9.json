{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pyramidion\\\\WebApp\\\\Izze-Admin\\\\src\\\\pages\\\\MealRecipe\\\\MealRecipe.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { Avatar, Button, Card, CardActions, CardContent, CircularProgress, Dialog, DialogActions, DialogContent, Grid, IconButton, makeStyles, Table, TableBody, FormControl, FormHelperText, TableCell, TableContainer, TableHead, TableRow, TextField, Tooltip, Typography } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AddIcon from '@material-ui/icons/Add';\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { Pagination } from '@material-ui/lab';\nimport TipTapEditor from '../../components/TipTapEditor/TipTapEditor';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { Formik, getIn, useFormikContext, FieldArray } from 'formik';\nimport * as Yup from 'yup';\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\nimport Page from '../../components/Page/Page';\nimport useConfModel from '../../hook/useConfModel';\nimport useService from '../../hook/useService';\nimport useSnackbar from '../../hook/useSnackbar';\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport TimerIcon from '@material-ui/icons/Timer';\nimport CarbsImages from '../../assets/Images/Carbs.png';\nimport ProteinsImages from '../../assets/Images/Protein.png';\nimport FatImages from '../../assets/Images/Fat.png';\nimport UnitSelect from '../../components/UnitSelect/UnitSelect';\nimport UnitDropdown from '../../utils/MetricUnits';\nimport { uploadNewImage } from '../../utils/CloudinaryUtils';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: theme.breakpoints.values.lg,\n    maxWidth: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(3)\n  },\n  themeButton: {\n    color: theme.palette.white,\n    backgroundColor: theme.palette.green.main,\n    '&:hover': {\n      backgroundColor: theme.palette.green.dark\n    }\n  },\n  workouttermsavatar: {\n    width: '100%',\n    height: '100%'\n  },\n  deleteButton: {\n    width: '100%',\n    height: '50px'\n  },\n  timeText: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 700\n  },\n  actions: {\n    padding: theme.spacing(1),\n    justifyContent: 'center'\n  },\n  tabCard: {\n    marginTop: theme.spacing(3)\n  },\n  sEvenly: {\n    display: 'flex',\n    justifyContent: 'space-evenly'\n  },\n  iconPadd: {\n    padding: 5\n  },\n  jCenter: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  imageView: {\n    width: '100%',\n    height: '100%'\n  },\n  avatarRoot: {\n    borderRadius: 10,\n    marginRight: 15,\n    width: theme.spacing(10),\n    height: theme.spacing(10)\n  },\n  textPrimary: {\n    marginTop: 10,\n    fontWeight: 'bold'\n  },\n  textSecondary: {\n    marginTop: 10\n  },\n  ingrdientsGridMain: {\n    marginTop: 10\n  },\n  ingredientsAvatarRoot: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n    margin: 'auto'\n  },\n  htmlContentGrid: {\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingTop: theme.spacing(1)\n  },\n  noIngredientsText: {\n    marginBottom: theme.spacing(3),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  textareaAdornedEnd: {\n    paddingRight: 0\n  },\n  htmlContent: {\n    '& ul': {\n      paddingLeft: '1.2rem'\n    },\n    '& p': {\n      textAlign: 'justify'\n    }\n  }\n}));\n\nfunction MealRecipe() {\n  _s();\n\n  const classes = useStyles();\n  const ConfModel = useConfModel();\n  const [loading, setLoading] = React.useState(false);\n  const [mealRecipeTableData, setMealRecipeTableData] = React.useState([]);\n  const [stateData, setStateData] = React.useState({\n    page_no: 1,\n    page_limit: 10\n  });\n  const [pageCount, setPageCount] = React.useState(0);\n  const {\n    Post\n  } = useService();\n  const Snackbar = useSnackbar();\n  const [addEditDialog, setAddEditDialog] = React.useState({\n    isOpen: false,\n    isDuplicate: false,\n    title: '',\n    okBtnText: '',\n    isEdit: false,\n    data: {}\n  });\n  const [viewDialog, setViewDialog] = React.useState({\n    isOpen: false,\n    title: '',\n    data: {}\n  });\n\n  const openAddDialog = () => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      title: 'Add Meal Recipe',\n      isEdit: false,\n      okBtnText: 'Save'\n    }));\n  };\n\n  const openEditDialog = data => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      isEdit: true,\n      data,\n      title: 'Edit Meal Recipe',\n      okBtnText: 'Edit'\n    }));\n  };\n\n  const openViewDialog = data => {\n    setViewDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      data,\n      title: 'View Meal Recipe'\n    }));\n  };\n\n  const listMealRecipies = async () => {\n    setLoading(true);\n    Post('app/listMealRecipe', stateData).then(res => {\n      setLoading(false);\n\n      if (!res.error) {\n        setMealRecipeTableData(res.data);\n        setPageCount(res.page_count);\n      } else {\n        Snackbar.show(res.message, 'error');\n      }\n    }).catch(err => {\n      setLoading(false);\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  const onDelete = data => {\n    const {\n      openModel,\n      setLoading,\n      closeModel\n    } = ConfModel;\n\n    const submitFunction = () => {\n      setLoading(true);\n      Post('app/deleteMealRecipe', {\n        id: data._id\n      }).then(async res => {\n        setLoading(false);\n        closeModel();\n        onSuccessAction();\n        Snackbar.show(res.message, 'success');\n      }).catch(err => {\n        setLoading(false);\n        Snackbar.show('Internal Server Error', 'error');\n      });\n    };\n\n    openModel(submitFunction);\n  };\n\n  const onPageChange = (event, value) => {\n    setStateData(prevState => ({ ...prevState,\n      page_no: value\n    }));\n  };\n\n  const closeAddEditDialog = () => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: false\n    }));\n  };\n\n  const closeViewDialog = () => {\n    setViewDialog(prevState => ({ ...prevState,\n      isOpen: false\n    }));\n  };\n\n  const onSuccessAction = () => {\n    listMealRecipies();\n    closeAddEditDialog();\n  };\n\n  const setElipsis = text => {\n    return (text === null || text === void 0 ? void 0 : text.length) >= 25 ? `${text.substring(0, 40)}...` : text;\n  };\n\n  React.useEffect(() => {\n    listMealRecipies();\n  }, [stateData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Page, {\n      title: \"Meal Recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      alignItems: \"flex-end\",\n      container: true,\n      justify: \"space-between\",\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h3\",\n          children: \"Meal Recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => openAddDialog(),\n          className: classes.themeButton,\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 24\n          }, this),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.tabCard,\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        className: classes.content,\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"#\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Meal Recipe Image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Meal Recipe Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: [!loading && mealRecipeTableData.map((data, index) => {\n                var _data$image;\n\n                return /*#__PURE__*/_jsxDEV(TableRow, {\n                  hover: true,\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: stateData.page_limit * (stateData.page_no - 1) + index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: classes.jCenter,\n                      children: /*#__PURE__*/_jsxDEV(Avatar, {\n                        variant: \"square\",\n                        src: data === null || data === void 0 ? void 0 : (_data$image = data.image) === null || _data$image === void 0 ? void 0 : _data$image.url\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 310,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 309,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 308,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: data === null || data === void 0 ? void 0 : data.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: classes.sEvenly,\n                      children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                        title: \"View\",\n                        arrow: true,\n                        children: /*#__PURE__*/_jsxDEV(IconButton, {\n                          className: classes.iconPadd,\n                          onClick: () => openViewDialog(data),\n                          children: /*#__PURE__*/_jsxDEV(CenterFocusStrongIcon, {\n                            color: \"primary\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 321,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 317,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 316,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                        title: \"Edit\",\n                        arrow: true,\n                        children: /*#__PURE__*/_jsxDEV(IconButton, {\n                          className: classes.iconPadd,\n                          onClick: () => openEditDialog(data),\n                          children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                            color: \"action\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 329,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 325,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 324,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                        title: \"Duplicate\",\n                        arrow: true,\n                        children: /*#__PURE__*/_jsxDEV(IconButton, {\n                          className: classes.iconPadd,\n                          onClick: () => openEditDialog(data),\n                          children: /*#__PURE__*/_jsxDEV(FileCopyIcon, {\n                            color: \"action\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 337,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 333,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 332,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                        title: \"Delete\",\n                        arrow: true,\n                        children: /*#__PURE__*/_jsxDEV(IconButton, {\n                          className: classes.iconPadd,\n                          onClick: () => onDelete(data),\n                          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                            color: \"secondary\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 345,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 341,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 340,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 315,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 23\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 21\n                }, this);\n              }), loading && /*#__PURE__*/_jsxDEV(TableLoader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 29\n              }, this), !loading && mealRecipeTableData.length == 0 && /*#__PURE__*/_jsxDEV(TableNoData, {\n                children: \"No Data Found\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Pagination, {\n          count: pageCount,\n          page: stateData.page_no,\n          onChange: onPageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddEditModel, { ...addEditDialog,\n      onClose: closeAddEditDialog,\n      onSuccess: onSuccessAction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ViewModel, { ...viewDialog,\n      onClose: closeViewDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MealRecipe, \"7RFWHJKvWnmgt/DRMVC+1IlYrEU=\", false, function () {\n  return [useStyles, useConfModel, useService, useSnackbar];\n});\n\n_c = MealRecipe;\nconst mealTerms = {\n  name: '',\n  image: {\n    file: null,\n    prevImage: '',\n    isNew: null\n  },\n  term: ''\n};\nconst ingredientsSelect = {\n  id: '',\n  quantity: '',\n  quantity_unit: ''\n};\nconst initialFormValues = {\n  name: '',\n  image: {\n    file: null,\n    prevImage: '',\n    isNew: null\n  },\n  nutrition: '',\n  description: '',\n  protein: '',\n  fat: '',\n  carbs: '',\n  terms: [mealTerms],\n  ingredients: [ingredientsSelect],\n  preparation_time: '',\n  preparation_description: ''\n};\nexport const AddEditModel = props => {\n  _s2();\n\n  const {\n    isEdit,\n    isOpen,\n    okBtnText = 'OK',\n    onClose,\n    data,\n    title,\n    onSuccess\n  } = props;\n  const classes = useStyles();\n  const [initialValues, setInitialValues] = React.useState({ ...initialFormValues\n  });\n  const formikRef = React.useRef(null);\n  const imageRef = React.useRef(null);\n  const [ingredientsList, setIngredientsList] = React.useState([]);\n  const {\n    Post\n  } = useService();\n  const Snackbar = useSnackbar();\n\n  const onImageChange = event => {\n    event.persist();\n    const files = event.target.files;\n\n    if (files && files.length != 0) {\n      const reader = new FileReader();\n      const file = files[0];\n\n      reader.onloadend = () => {\n        formikRef.current.setFieldValue('image', {\n          file,\n          prevImage: reader.result,\n          isNew: true\n        });\n      };\n\n      reader.readAsDataURL(file);\n    } // else {\n    //   formikRef.current.setFieldValue('image', {\n    //     workoutTermsName: '',\n    //     image: { file: null, prevImage: '', isNew: null },\n    //     description: '',\n    //   });\n    // }\n\n  };\n\n  const onSubmit = (value, helper) => {\n    try {\n      helper.setSubmitting(true);\n\n      const renderSubmit = async () => {\n        const {\n          terms,\n          ...rest\n        } = value;\n        const postData = rest;\n        const TermPromiseArray = Promise.all(terms.map(({\n          image,\n          ...rest\n        }) => uploadNewImage(image).then(imgResponse => ({\n          image: imgResponse,\n          ...rest\n        }))));\n        const [imageResponse, TermImageResponse] = await Promise.all([uploadNewImage(postData.image), TermPromiseArray]);\n        postData.terms = TermImageResponse;\n        postData.image = imageResponse;\n        !isEdit && addData(postData, helper);\n        isEdit && editData(postData, helper); // const TermPromiseArray = terms.map(async (termData: any) => {\n        //   let { image, ...rest } = termData\n        //   return uploadNewImage(image)\n        // })\n        // Promise.all(TermPromiseArray).then((termData: any) => {\n        //   postData.terms = termData;\n        //   return uploadNewImage(postData.image)\n        // }).then((imageUrl: any) => {\n        //   postData.image = imageUrl\n        //   !isEdit && addData(postData, helper);\n        //   isEdit && editData(postData, helper);\n        // }).catch((err: any) => {\n        //   Snackbar.show('Internal Server Error', 'error');\n        // });\n      };\n\n      renderSubmit();\n    } catch {\n      Snackbar.show('Image Upload Failed', 'error');\n    }\n  };\n\n  const addData = async (value, {\n    setSubmitting,\n    resetForm\n  }) => {\n    await Post('app/addMealRecipe', value).then(res => {\n      Snackbar.show(res.message, 'success');\n      setSubmitting(false);\n      resetForm();\n      onSuccess();\n    }).catch(err => {\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  const editData = async (data, {\n    setSubmitting,\n    resetForm\n  }) => {\n    setSubmitting(true);\n    await Post('app/editMealRecipe', data).then(res => {\n      Snackbar.show(res.message, 'success');\n      setSubmitting(false);\n      resetForm();\n      onSuccess();\n    }).catch(err => {\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  const listAllMealRecipe = () => {\n    Post('app/listAllMealIngredient', {}).then(res => {\n      if (!res.error) {\n        let getequipmentList = res.data.map(data => {\n          data.id = data._id;\n          return data;\n        });\n        setIngredientsList(getequipmentList);\n      } else {\n        Snackbar.show(res.message, 'error');\n      }\n    }).catch(err => {\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  const addMealRecipeTerms = (values, push) => {\n    const {\n      terms\n    } = values;\n    push(mealTerms);\n  };\n\n  const addIngredients = (values, push) => {\n    const {\n      ingredients\n    } = values;\n    push(ingredientsSelect);\n  };\n\n  const removeIngredients = (values, items, setFieldValue) => {\n    const {\n      ingredients\n    } = values;\n    const sampleDummyArray = [...ingredients];\n    sampleDummyArray.splice(sampleDummyArray.indexOf(items), 1);\n    setFieldValue('ingredients', sampleDummyArray);\n  };\n\n  const handleOptionChange = (event, value, index) => {\n    formikRef.current.setFieldValue(`ingredients[${index}].id`, value === null || value === void 0 ? void 0 : value.id);\n  };\n\n  React.useEffect(() => {\n    listAllMealRecipe();\n  }, []);\n  React.useEffect(() => {\n    if (isEdit) {\n      console.log(data);\n      const {\n        terms,\n        image,\n        _id,\n        ingredients,\n        ...rest\n      } = data;\n      const editData = { ...rest,\n        id: _id\n      };\n      const RecipeIds = ingredientsList.map(({\n        _id\n      }) => _id);\n      editData.image = {\n        file: image,\n        prevImage: image === null || image === void 0 ? void 0 : image.url,\n        isNew: false\n      };\n      editData.ingredients = ingredients.filter(({\n        _id\n      }) => RecipeIds.includes(_id)).map(({\n        _id,\n        quantity,\n        quantity_unit\n      }) => ({\n        id: _id,\n        quantity,\n        quantity_unit\n      }));\n      editData.terms = terms.map(items => {\n        return {\n          name: items.name,\n          image: {\n            file: items.image,\n            prevImage: items.image.url,\n            isNew: false\n          },\n          term: items.term\n        };\n      });\n      setInitialValues(editData);\n    } else {\n      setInitialValues(initialFormValues);\n    }\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isOpen,\n      disableBackdropClick: true,\n      disableEscapeKeyDown: true,\n      fullWidth: true,\n      maxWidth: \"md\",\n      \"aria-labelledby\": \"dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"dialog-title\",\n        onClose: onClose,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        innerRef: formikRef,\n        enableReinitialize: true,\n        initialValues: initialValues,\n        onSubmit: onSubmit,\n        validationSchema: Yup.object().shape({\n          name: Yup.string().trim().required('Name is required'),\n          nutrition: Yup.string().trim().required('Nutrition is required'),\n          // description: Yup.string().trim().max(250, 'Must be 250 characters or less').required('Description is required'),\n          protein: Yup.number().typeError('Protein must be in number').required('Protein is required'),\n          fat: Yup.number().typeError('Fat must be in number').required('Fat is required'),\n          carbs: Yup.number().typeError('Carbs must be in number').required('Carbs is required'),\n          terms: Yup.array().of(Yup.object().shape({\n            name: Yup.string().trim().required('Meal recipe name is Required'),\n            image: Yup.object({\n              file: Yup.mixed().required('required')\n            }),\n            term: Yup.string().trim().max(250, 'Must be 250 characters or less').required('Meal Recipe terms is Required')\n          })),\n          ingredients: Yup.array().of(Yup.object().shape({\n            id: Yup.string().trim().required('Ingredients is Required'),\n            quantity: Yup.mixed().required('Quality is required').when('quantity_unit', {\n              is: 'None',\n              then: Yup.string(),\n              otherwise: Yup.number().typeError('Quantity must be in number')\n            }),\n            quantity_unit: Yup.string().trim().required('Quantity unit is required')\n          })),\n          preparation_time: Yup.string().trim().required('Preparation time is required'),\n          preparation_description: Yup.string().required('Preparation description is required'),\n          image: Yup.object({\n            file: Yup.mixed().required('A file is required')\n          })\n        }),\n        children: ({\n          values,\n          errors,\n          touched,\n          handleBlur,\n          handleChange,\n          setFieldValue,\n          submitForm,\n          setFieldTouched,\n          isSubmitting\n        }) => {\n          var _touched$image, _errors$image, _touched$image2, _errors$image2, _values$image, _values$image2;\n\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n              dividers: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Name\",\n                    name: \"name\",\n                    variant: \"outlined\",\n                    value: values.name,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.name && errors.name),\n                    helperText: touched.name && errors.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 668,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 667,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Nutrition\",\n                    name: \"nutrition\",\n                    variant: \"outlined\",\n                    value: values.nutrition,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.nutrition && errors.nutrition),\n                    helperText: touched.nutrition && errors.nutrition\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 703,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 702,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Protein ( g )\",\n                    name: \"protein\",\n                    variant: \"outlined\",\n                    value: values.protein,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.protein && errors.protein),\n                    helperText: touched.protein && errors.protein\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 720,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 719,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Fat ( g )\",\n                    name: \"fat\",\n                    variant: \"outlined\",\n                    value: values.fat,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.fat && errors.fat),\n                    helperText: touched.fat && errors.fat\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 737,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 736,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Carbs ( g )\",\n                    name: \"carbs\",\n                    variant: \"outlined\",\n                    value: values.carbs,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.carbs && errors.carbs),\n                    helperText: touched.carbs && errors.carbs\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 754,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 753,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FieldArray, {\n                  name: \"terms\",\n                  validateOnChange: true,\n                  children: ({\n                    push,\n                    remove\n                  }) => {\n                    var _values$terms;\n\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        md: 12,\n                        xs: 12,\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          fullWidth: true,\n                          className: classes.themeButton,\n                          variant: \"contained\",\n                          color: \"default\",\n                          onClick: () => addMealRecipeTerms(values, push),\n                          endIcon: /*#__PURE__*/_jsxDEV(ControlPointIcon, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 780,\n                            columnNumber: 38\n                          }, this),\n                          children: \"Add Terms\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 774,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 773,\n                        columnNumber: 25\n                      }, this), values === null || values === void 0 ? void 0 : (_values$terms = values.terms) === null || _values$terms === void 0 ? void 0 : _values$terms.map((items, index) => {\n                        var _values$terms2;\n\n                        return /*#__PURE__*/_jsxDEV(TermsComponent, {\n                          index: index,\n                          remove: remove,\n                          getLength: values === null || values === void 0 ? void 0 : (_values$terms2 = values.terms) === null || _values$terms2 === void 0 ? void 0 : _values$terms2.length\n                        }, index, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 786,\n                          columnNumber: 73\n                        }, this);\n                      })]\n                    }, void 0, true);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 770,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FieldArray, {\n                  name: \"ingredients\",\n                  children: ({\n                    push,\n                    remove\n                  }) => {\n                    var _values$ingredients;\n\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        md: 12,\n                        xs: 12,\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          fullWidth: true,\n                          className: classes.themeButton,\n                          variant: \"contained\",\n                          color: \"default\",\n                          onClick: () => addIngredients(values, push),\n                          endIcon: /*#__PURE__*/_jsxDEV(ControlPointIcon, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 800,\n                            columnNumber: 38\n                          }, this),\n                          children: \"Add Ingredients\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 794,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 793,\n                        columnNumber: 25\n                      }, this), values === null || values === void 0 ? void 0 : (_values$ingredients = values.ingredients) === null || _values$ingredients === void 0 ? void 0 : _values$ingredients.map((items, index) => {\n                        var _touched$ingredients$3, _errors$ingredients$i3, _touched$ingredients$4, _errors$ingredients$i4, _values$ingredients2;\n\n                        return /*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          container: true,\n                          md: 12,\n                          xs: 12,\n                          direction: \"row\",\n                          spacing: 2,\n                          children: [/*#__PURE__*/_jsxDEV(Grid, {\n                            item: true,\n                            md: 5,\n                            xs: 12,\n                            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                              fullWidth: true,\n                              options: ingredientsList,\n                              value: ingredientsList.find(data => data._id == items.id),\n                              getOptionLabel: option => option.name,\n                              getOptionSelected: option => option.id == items.id,\n                              onChange: (event, newValue) => handleOptionChange(event, newValue, index),\n                              onBlur: handleBlur,\n                              renderInput: params => {\n                                var _touched$ingredients$, _errors$ingredients$i, _touched$ingredients$2, _errors$ingredients$i2;\n\n                                return /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                                  label: \"Ingredients\",\n                                  variant: \"outlined\",\n                                  error: Boolean((touched === null || touched === void 0 ? void 0 : touched.ingredients) && (touched === null || touched === void 0 ? void 0 : (_touched$ingredients$ = touched.ingredients[index]) === null || _touched$ingredients$ === void 0 ? void 0 : _touched$ingredients$.id) && (errors === null || errors === void 0 ? void 0 : errors.ingredients) && (errors === null || errors === void 0 ? void 0 : (_errors$ingredients$i = errors.ingredients[index]) === null || _errors$ingredients$i === void 0 ? void 0 : _errors$ingredients$i.id)),\n                                  helperText: (touched === null || touched === void 0 ? void 0 : touched.ingredients) && (touched === null || touched === void 0 ? void 0 : (_touched$ingredients$2 = touched.ingredients[index]) === null || _touched$ingredients$2 === void 0 ? void 0 : _touched$ingredients$2.id) && (errors === null || errors === void 0 ? void 0 : errors.ingredients) && (errors === null || errors === void 0 ? void 0 : (_errors$ingredients$i2 = errors.ingredients[index]) === null || _errors$ingredients$i2 === void 0 ? void 0 : _errors$ingredients$i2.id),\n                                  inputProps: { ...params.inputProps\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 829,\n                                  columnNumber: 35\n                                }, this);\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 816,\n                              columnNumber: 31\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 815,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                            item: true,\n                            md: 6,\n                            xs: 8,\n                            children: /*#__PURE__*/_jsxDEV(TextField, {\n                              fullWidth: true,\n                              label: \"Quantity\",\n                              name: `ingredients[${index}].quantity`,\n                              variant: \"outlined\",\n                              error: Boolean((touched === null || touched === void 0 ? void 0 : touched.ingredients) && (touched === null || touched === void 0 ? void 0 : (_touched$ingredients$3 = touched.ingredients[index]) === null || _touched$ingredients$3 === void 0 ? void 0 : _touched$ingredients$3.quantity) && (errors === null || errors === void 0 ? void 0 : errors.ingredients) && (errors === null || errors === void 0 ? void 0 : (_errors$ingredients$i3 = errors.ingredients[index]) === null || _errors$ingredients$i3 === void 0 ? void 0 : _errors$ingredients$i3.quantity)),\n                              helperText: (touched === null || touched === void 0 ? void 0 : touched.ingredients) && (touched === null || touched === void 0 ? void 0 : (_touched$ingredients$4 = touched.ingredients[index]) === null || _touched$ingredients$4 === void 0 ? void 0 : _touched$ingredients$4.quantity) && (errors === null || errors === void 0 ? void 0 : errors.ingredients) && (errors === null || errors === void 0 ? void 0 : (_errors$ingredients$i4 = errors.ingredients[index]) === null || _errors$ingredients$i4 === void 0 ? void 0 : _errors$ingredients$i4.quantity),\n                              value: items.quantity,\n                              onChange: handleChange,\n                              onBlur: handleBlur,\n                              InputProps: {\n                                classes: {\n                                  adornedEnd: classes.textareaAdornedEnd\n                                },\n                                endAdornment: /*#__PURE__*/_jsxDEV(UnitSelect, {\n                                  id: `ingredients[${index}].quantity_unit`,\n                                  option: UnitDropdown,\n                                  name: `ingredients[${index}].quantity_unit`,\n                                  value: items.quantity_unit,\n                                  onChange: handleChange,\n                                  onBlur: handleBlur\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 866,\n                                  columnNumber: 49\n                                }, this)\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 849,\n                              columnNumber: 31\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 848,\n                            columnNumber: 29\n                          }, this), (values === null || values === void 0 ? void 0 : (_values$ingredients2 = values.ingredients) === null || _values$ingredients2 === void 0 ? void 0 : _values$ingredients2.length) > 1 && /*#__PURE__*/_jsxDEV(Grid, {\n                            item: true,\n                            md: 1,\n                            xs: 4,\n                            children: /*#__PURE__*/_jsxDEV(Button, {\n                              fullWidth: true,\n                              className: classes.deleteButton,\n                              variant: \"contained\",\n                              color: \"secondary\",\n                              onClick: () => remove(index),\n                              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 879,\n                                columnNumber: 35\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 872,\n                              columnNumber: 33\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 871,\n                            columnNumber: 31\n                          }, this)]\n                        }, index, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 806,\n                          columnNumber: 27\n                        }, this);\n                      })]\n                    }, void 0, true);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 790,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Preparation Time\",\n                    name: \"preparation_time\",\n                    variant: \"outlined\",\n                    value: values.preparation_time,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.preparation_time && errors.preparation_time),\n                    helperText: touched.preparation_time && errors.preparation_time\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 890,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 889,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 12,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    fullWidth: true,\n                    error: Boolean((touched === null || touched === void 0 ? void 0 : touched.preparation_description) && (errors === null || errors === void 0 ? void 0 : errors.preparation_description)),\n                    children: [/*#__PURE__*/_jsxDEV(TipTapEditor, {\n                      value: values.preparation_description,\n                      onChange: value => setFieldValue('preparation_description', value),\n                      onBlur: () => setFieldTouched('preparation_description', true, true)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 915,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                      children: (touched === null || touched === void 0 ? void 0 : touched.preparation_description) && (errors === null || errors === void 0 ? void 0 : errors.preparation_description)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 921,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 908,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 907,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 12,\n                  xs: 12,\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    name: \"image\",\n                    ref: imageRef,\n                    type: \"file\",\n                    accept: \".jpg,.png,jpeg\",\n                    onChange: onImageChange,\n                    onBlur: handleBlur,\n                    hidden: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 929,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    fullWidth: true,\n                    className: classes.themeButton,\n                    variant: \"contained\",\n                    color: \"default\",\n                    onClick: () => imageRef.current.click(),\n                    startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 944,\n                      columnNumber: 34\n                    }, this),\n                    children: \"Upload Image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 938,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                    error: Boolean((touched === null || touched === void 0 ? void 0 : (_touched$image = touched.image) === null || _touched$image === void 0 ? void 0 : _touched$image.file) && (errors === null || errors === void 0 ? void 0 : (_errors$image = errors.image) === null || _errors$image === void 0 ? void 0 : _errors$image.file)),\n                    children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n                      children: (touched === null || touched === void 0 ? void 0 : (_touched$image2 = touched.image) === null || _touched$image2 === void 0 ? void 0 : _touched$image2.file) && (errors === null || errors === void 0 ? void 0 : (_errors$image2 = errors.image) === null || _errors$image2 === void 0 ? void 0 : _errors$image2.file)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 953,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 948,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 928,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 12,\n                  xs: 12,\n                  children: ((_values$image = values.image) === null || _values$image === void 0 ? void 0 : _values$image.prevImage) && /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: classes.imageView,\n                    src: (_values$image2 = values.image) === null || _values$image2 === void 0 ? void 0 : _values$image2.prevImage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 961,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 959,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 666,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: onClose,\n                variant: \"outlined\",\n                color: \"secondary\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 970,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: classes.themeButton,\n                onClick: () => submitForm(),\n                disabled: isSubmitting,\n                variant: \"outlined\",\n                children: isSubmitting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  size: 24,\n                  style: {\n                    color: 'white'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 981,\n                  columnNumber: 21\n                }, this) : okBtnText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 974,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 969,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s2(AddEditModel, \"DsMifFTxsXND0tlayLQwBzeEbGA=\", false, function () {\n  return [useStyles, useService, useSnackbar];\n});\n\n_c2 = AddEditModel;\n\nconst TermsComponent = props => {\n  _s3();\n\n  var _FieldValue$image, _FieldTouched$image, _FieldError$image, _FieldTouched$image2, _FieldError$image2;\n\n  const FormikContext = useFormikContext();\n  const {\n    values,\n    errors,\n    touched,\n    setFieldValue,\n    handleBlur,\n    handleChange\n  } = FormikContext;\n  const {\n    index\n  } = props;\n  const classes = useStyles();\n  const imgRef = useRef(null);\n  const FieldName = `terms[${index}]`;\n  const FieldValue = getIn(values, `terms[${index}]`);\n  const FieldError = getIn(errors, `terms[${index}]`);\n  const FieldTouched = getIn(touched, `terms[${index}]`);\n\n  const onImageChange = event => {\n    event.persist();\n    const files = event.target.files;\n\n    if (files && files.length != 0) {\n      const reader = new FileReader();\n      const file = files[0];\n\n      reader.onloadend = () => {\n        setFieldValue(`${FieldName}.image`, {\n          file,\n          prevImage: reader.result,\n          isNew: true\n        });\n      };\n\n      reader.readAsDataURL(file);\n    } else {\n      setFieldValue(`${FieldName}.image`, {\n        file: null,\n        prevImage: '',\n        isNew: null\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    container: true,\n    md: 12,\n    xs: 12,\n    direction: \"row\",\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      md: 1,\n      xs: 12,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: `${FieldName}.image`,\n        ref: imgRef,\n        type: \"file\",\n        accept: \".jpg,.png,jpeg\",\n        onChange: e => onImageChange(e),\n        onBlur: handleBlur,\n        hidden: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1031,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.workouttermsavatar,\n        variant: \"square\",\n        onClick: () => {\n          var _imgRef$current;\n\n          return imgRef === null || imgRef === void 0 ? void 0 : (_imgRef$current = imgRef.current) === null || _imgRef$current === void 0 ? void 0 : _imgRef$current.click();\n        },\n        src: FieldValue === null || FieldValue === void 0 ? void 0 : (_FieldValue$image = FieldValue.image) === null || _FieldValue$image === void 0 ? void 0 : _FieldValue$image.prevImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1040,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        error: Boolean((FieldTouched === null || FieldTouched === void 0 ? void 0 : (_FieldTouched$image = FieldTouched.image) === null || _FieldTouched$image === void 0 ? void 0 : _FieldTouched$image.file) && (FieldError === null || FieldError === void 0 ? void 0 : (_FieldError$image = FieldError.image) === null || _FieldError$image === void 0 ? void 0 : _FieldError$image.file)),\n        children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n          children: (FieldTouched === null || FieldTouched === void 0 ? void 0 : (_FieldTouched$image2 = FieldTouched.image) === null || _FieldTouched$image2 === void 0 ? void 0 : _FieldTouched$image2.file) && (FieldError === null || FieldError === void 0 ? void 0 : (_FieldError$image2 = FieldError.image) === null || _FieldError$image2 === void 0 ? void 0 : _FieldError$image2.file)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1047,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1046,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1030,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      md: 5,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        multiline: true,\n        label: \"Terms name\",\n        name: `${FieldName}.name`,\n        variant: \"outlined\",\n        error: Boolean((FieldTouched === null || FieldTouched === void 0 ? void 0 : FieldTouched.name) && (FieldError === null || FieldError === void 0 ? void 0 : FieldError.name)),\n        helperText: (FieldTouched === null || FieldTouched === void 0 ? void 0 : FieldTouched.name) && (FieldError === null || FieldError === void 0 ? void 0 : FieldError.name),\n        value: FieldValue.name,\n        onChange: handleChange,\n        onBlur: handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1052,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1051,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      md: 5,\n      xs: 8,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        multiline: true,\n        label: \"Terms description\",\n        name: `${FieldName}.term`,\n        variant: \"outlined\",\n        error: Boolean((FieldTouched === null || FieldTouched === void 0 ? void 0 : FieldTouched.term) && (FieldError === null || FieldError === void 0 ? void 0 : FieldError.term)),\n        helperText: (FieldTouched === null || FieldTouched === void 0 ? void 0 : FieldTouched.term) && (FieldError === null || FieldError === void 0 ? void 0 : FieldError.term),\n        value: FieldValue.term,\n        onChange: handleChange,\n        onBlur: handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1066,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1065,\n      columnNumber: 7\n    }, this), props.getLength > 1 && /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      md: 1,\n      xs: 4,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        className: classes.deleteButton,\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: () => props.remove(index),\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1088,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1081,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1080,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1022,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(TermsComponent, \"4E7x5zL9OsRHtqsF0kZoWATHByA=\", false, function () {\n  return [useFormikContext, useStyles];\n});\n\n_c3 = TermsComponent;\nexport const ViewModel = props => {\n  _s4();\n\n  var _formValue$image, _formValue$terms, _formValue$workout_te, _formValue$ingredient;\n\n  const {\n    isOpen,\n    title,\n    onClose,\n    data\n  } = props;\n  const classes = useStyles();\n  const [formValue, setFormValue] = React.useState(data);\n  React.useEffect(() => {\n    setFormValue(data);\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    disableBackdropClick: true,\n    disableEscapeKeyDown: true,\n    fullWidth: true,\n    maxWidth: \"sm\",\n    \"aria-labelledby\": \"dialog-view-title\",\n    open: isOpen,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"dialog-view-title\",\n      onClose: onClose,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: formValue === null || formValue === void 0 ? void 0 : (_formValue$image = formValue.image) === null || _formValue$image === void 0 ? void 0 : _formValue$image.url,\n          alt: 'Workout image',\n          className: classes.imageView\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: formValue === null || formValue === void 0 ? void 0 : formValue.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1126,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        className: classes.ingrdientsGridMain,\n        justify: \"center\",\n        children: [formValue === null || formValue === void 0 ? void 0 : (_formValue$terms = formValue.terms) === null || _formValue$terms === void 0 ? void 0 : _formValue$terms.map((value, index) => {\n          var _value$image;\n\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            md: 3,\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              className: classes.ingredientsAvatarRoot,\n              src: value === null || value === void 0 ? void 0 : (_value$image = value.image) === null || _value$image === void 0 ? void 0 : _value$image.url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              align: \"center\",\n              children: value === null || value === void 0 ? void 0 : value.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              align: \"center\",\n              children: value.term.length >= 25 ? `${value.term.substring(0, 30)}...` : value.term\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1143,\n              columnNumber: 15\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1135,\n            columnNumber: 13\n          }, this);\n        }), (formValue === null || formValue === void 0 ? void 0 : (_formValue$workout_te = formValue.workout_terms) === null || _formValue$workout_te === void 0 ? void 0 : _formValue$workout_te.length) == 0 && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 12,\n          className: classes.noIngredientsText,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"No Ingredients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1152,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1151,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        align: \"left\",\n        style: {\n          color: '#41A58D'\n        },\n        className: classes.textPrimary,\n        children: \"INGREDIENTS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1157,\n        columnNumber: 9\n      }, this), formValue === null || formValue === void 0 ? void 0 : (_formValue$ingredient = formValue.ingredients) === null || _formValue$ingredient === void 0 ? void 0 : _formValue$ingredient.map((items, index) => {\n        var _items$image;\n\n        return /*#__PURE__*/_jsxDEV(List, {\n          children: /*#__PURE__*/_jsxDEV(ListItem, {\n            children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                className: classes.avatarRoot,\n                src: (_items$image = items.image) === null || _items$image === void 0 ? void 0 : _items$image.url\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1166,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1165,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: items === null || items === void 0 ? void 0 : items.name,\n              secondary: items === null || items === void 0 ? void 0 : items.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1168,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [items.quantity, \" \", items.quantity_unit]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1169,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1164,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1163,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        align: \"left\",\n        style: {\n          color: '#41A58D'\n        },\n        className: classes.textPrimary,\n        children: \"NUTRITIONAL INFORMATION\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        className: classes.ingrdientsGridMain,\n        justify: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          md: 3,\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            className: classes.ingredientsAvatarRoot,\n            src: CarbsImages\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            align: \"center\",\n            children: \"Carbs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            align: \"center\",\n            children: [formValue === null || formValue === void 0 ? void 0 : formValue.carbs, \"g\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1191,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          md: 3,\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            className: classes.ingredientsAvatarRoot,\n            src: ProteinsImages\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            align: \"center\",\n            children: \"Protein\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            align: \"center\",\n            children: [formValue === null || formValue === void 0 ? void 0 : formValue.protein, \"g\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          md: 3,\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            className: classes.ingredientsAvatarRoot,\n            src: FatImages\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            align: \"center\",\n            children: \"Fat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            align: \"center\",\n            children: [formValue === null || formValue === void 0 ? void 0 : formValue.fat, \"g\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1207,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        align: \"left\",\n        style: {\n          color: '#41A58D',\n          marginTop: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"PREPARATION\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1211,\n          columnNumber: 95\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        align: \"center\",\n        className: classes.timeText,\n        children: [/*#__PURE__*/_jsxDEV(TimerIcon, {\n          fontSize: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: formValue === null || formValue === void 0 ? void 0 : formValue.preparation_time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 12,\n          className: classes.htmlContentGrid,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.htmlContent,\n            dangerouslySetInnerHTML: {\n              __html: formValue === null || formValue === void 0 ? void 0 : formValue.preparation_description\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1219,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1218,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        variant: \"outlined\",\n        color: \"secondary\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1226,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1225,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1106,\n    columnNumber: 5\n  }, this);\n};\n\n_s4(ViewModel, \"9fAd9pqRjf29KhbDlYBUKf2/COQ=\", false, function () {\n  return [useStyles];\n});\n\n_c4 = ViewModel;\nexport default MealRecipe;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"MealRecipe\");\n$RefreshReg$(_c2, \"AddEditModel\");\n$RefreshReg$(_c3, \"TermsComponent\");\n$RefreshReg$(_c4, \"ViewModel\");","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/pages/MealRecipe/MealRecipe.tsx"],"names":["React","useRef","Avatar","Button","Card","CardActions","CardContent","CircularProgress","Dialog","DialogActions","DialogContent","Grid","IconButton","makeStyles","Table","TableBody","FormControl","FormHelperText","TableCell","TableContainer","TableHead","TableRow","TextField","Tooltip","Typography","List","ListItem","ListItemAvatar","ListItemText","AddIcon","CenterFocusStrongIcon","DeleteIcon","EditIcon","Pagination","TipTapEditor","Autocomplete","Formik","getIn","useFormikContext","FieldArray","Yup","DialogTitle","TableLoader","TableNoData","Page","useConfModel","useService","useSnackbar","ControlPointIcon","CloudUploadIcon","TimerIcon","CarbsImages","ProteinsImages","FatImages","UnitSelect","UnitDropdown","uploadNewImage","FileCopyIcon","useStyles","theme","root","width","breakpoints","values","lg","maxWidth","margin","padding","spacing","themeButton","color","palette","white","backgroundColor","green","main","dark","workouttermsavatar","height","deleteButton","timeText","display","alignItems","content","inner","minWidth","actions","justifyContent","tabCard","marginTop","sEvenly","iconPadd","jCenter","imageView","avatarRoot","borderRadius","marginRight","textPrimary","fontWeight","textSecondary","ingrdientsGridMain","ingredientsAvatarRoot","htmlContentGrid","paddingLeft","paddingRight","paddingTop","noIngredientsText","marginBottom","textareaAdornedEnd","htmlContent","textAlign","MealRecipe","classes","ConfModel","loading","setLoading","useState","mealRecipeTableData","setMealRecipeTableData","stateData","setStateData","page_no","page_limit","pageCount","setPageCount","Post","Snackbar","addEditDialog","setAddEditDialog","isOpen","isDuplicate","title","okBtnText","isEdit","data","viewDialog","setViewDialog","openAddDialog","prevState","openEditDialog","openViewDialog","listMealRecipies","then","res","error","page_count","show","message","catch","err","onDelete","openModel","closeModel","submitFunction","id","_id","onSuccessAction","onPageChange","event","value","closeAddEditDialog","closeViewDialog","setElipsis","text","length","substring","useEffect","map","index","image","url","name","mealTerms","file","prevImage","isNew","term","ingredientsSelect","quantity","quantity_unit","initialFormValues","nutrition","description","protein","fat","carbs","terms","ingredients","preparation_time","preparation_description","AddEditModel","props","onClose","onSuccess","initialValues","setInitialValues","formikRef","imageRef","ingredientsList","setIngredientsList","onImageChange","persist","files","target","reader","FileReader","onloadend","current","setFieldValue","result","readAsDataURL","onSubmit","helper","setSubmitting","renderSubmit","rest","postData","TermPromiseArray","Promise","all","imgResponse","imageResponse","TermImageResponse","addData","editData","resetForm","listAllMealRecipe","getequipmentList","addMealRecipeTerms","push","addIngredients","removeIngredients","items","sampleDummyArray","splice","indexOf","handleOptionChange","console","log","RecipeIds","filter","includes","object","shape","string","trim","required","number","typeError","array","of","mixed","max","when","is","otherwise","errors","touched","handleBlur","handleChange","submitForm","setFieldTouched","isSubmitting","Boolean","remove","find","option","newValue","params","inputProps","adornedEnd","endAdornment","click","TermsComponent","FormikContext","imgRef","FieldName","FieldValue","FieldError","FieldTouched","e","getLength","ViewModel","formValue","setFormValue","workout_terms","__html"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react'\r\nimport { Avatar, Button, Card, CardActions, CardContent, CircularProgress, Dialog, DialogActions, DialogContent, Grid, IconButton, makeStyles, Paper, Tab, Table, TableBody, FormControl, FormHelperText, TableCell, TableContainer, TableHead, TableRow, TextField, Tooltip, Divider, Typography, Tabs } from '@material-ui/core';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Pagination, TabContext, TabList, TabPanel } from '@material-ui/lab';\r\nimport TipTapEditor from '../../components/TipTapEditor/TipTapEditor';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { imageUpload } from '../../utils/FirebaseUtils';\r\nimport { Formik, getIn, useFormikContext, FieldArray } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\r\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\r\nimport Page from '../../components/Page/Page';\r\nimport useConfModel from '../../hook/useConfModel';\r\nimport useService from '../../hook/useService';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport CarbsImages from '../../assets/Images/Carbs.png'\r\nimport ProteinsImages from '../../assets/Images/Protein.png'\r\nimport FatImages from '../../assets/Images/Fat.png'\r\nimport { useEffect } from 'react';\r\nimport UnitSelect from '../../components/UnitSelect/UnitSelect';\r\nimport UnitDropdown from '../../utils/MetricUnits';\r\nimport { uploadNewImage } from '../../utils/CloudinaryUtils';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  root: {\r\n    width: theme.breakpoints.values.lg,\r\n    maxWidth: '100%',\r\n    margin: '0 auto',\r\n    padding: theme.spacing(3),\r\n  },\r\n  themeButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n  },\r\n  workouttermsavatar: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  deleteButton: {\r\n    width: '100%',\r\n    height: '50px',\r\n  },\r\n  timeText: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  inner: {\r\n    minWidth: 700,\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(1),\r\n    justifyContent: 'center',\r\n  },\r\n  tabCard: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  sEvenly: {\r\n    display: 'flex',\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  iconPadd: {\r\n    padding: 5,\r\n  },\r\n  jCenter: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  imageView: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  avatarRoot: {\r\n    borderRadius: 10,\r\n    marginRight: 15,\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10),\r\n  },\r\n  textPrimary: {\r\n    marginTop: 10,\r\n    fontWeight: 'bold',\r\n  },\r\n  textSecondary: {\r\n    marginTop: 10,\r\n  },\r\n  ingrdientsGridMain: {\r\n    marginTop: 10,\r\n  },\r\n  ingredientsAvatarRoot: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n    margin: 'auto',\r\n  },\r\n  htmlContentGrid: {\r\n    paddingLeft: theme.spacing(3),\r\n    paddingRight: theme.spacing(3),\r\n    paddingTop: theme.spacing(1),\r\n  },\r\n  noIngredientsText: {\r\n    marginBottom: theme.spacing(3),\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  textareaAdornedEnd: {\r\n    paddingRight: 0\r\n  },\r\n  htmlContent: {\r\n    '& ul': {\r\n      paddingLeft: '1.2rem',\r\n    },\r\n    '& p': {\r\n      textAlign: 'justify',\r\n    },\r\n  },\r\n}))\r\n\r\nfunction MealRecipe() {\r\n  const classes = useStyles();\r\n  const ConfModel = useConfModel();\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [mealRecipeTableData, setMealRecipeTableData] = React.useState([]);\r\n  const [stateData, setStateData] = React.useState({ page_no: 1, page_limit: 10 });\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const { Post } = useService();\r\n  const Snackbar = useSnackbar();\r\n  const [addEditDialog, setAddEditDialog] = React.useState({\r\n    isOpen: false,\r\n    isDuplicate : false,\r\n    title: '',\r\n    okBtnText: '',\r\n    isEdit: false,\r\n    data: {},\r\n  });\r\n  const [viewDialog, setViewDialog] = React.useState({\r\n    isOpen: false,\r\n    title: '',\r\n    data: {},\r\n  });\r\n\r\n  const openAddDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      title: 'Add Meal Recipe',\r\n      isEdit: false,\r\n      okBtnText: 'Save',\r\n    }));\r\n  };\r\n\r\n  const openEditDialog = (data: any) => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      isEdit: true,\r\n      data,\r\n      title: 'Edit Meal Recipe',\r\n      okBtnText: 'Edit',\r\n    }));\r\n  };\r\n\r\n  const openViewDialog = (data: any) => {\r\n    setViewDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      data,\r\n      title: 'View Meal Recipe',\r\n    }));\r\n  };\r\n\r\n  const listMealRecipies = async () => {\r\n    setLoading(true);\r\n    Post('app/listMealRecipe', stateData)\r\n      .then((res: any) => {\r\n        setLoading(false);\r\n        if (!res.error) {\r\n          setMealRecipeTableData(res.data);\r\n          setPageCount(res.page_count);\r\n        } else {\r\n          Snackbar.show(res.message, 'error');\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        setLoading(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const onDelete = (data: any) => {\r\n    const { openModel, setLoading, closeModel } = ConfModel;\r\n    const submitFunction = () => {\r\n      setLoading(true);\r\n      Post('app/deleteMealRecipe', { id: data._id })\r\n        .then(async (res: any) => {\r\n          setLoading(false);\r\n          closeModel();\r\n          onSuccessAction();\r\n          Snackbar.show(res.message, 'success');\r\n        })\r\n        .catch((err: any) => {\r\n          setLoading(false);\r\n          Snackbar.show('Internal Server Error', 'error');\r\n        });\r\n    };\r\n    openModel(submitFunction);\r\n  };\r\n\r\n  const onPageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    setStateData((prevState: any) => ({ ...prevState, page_no: value }));\r\n  };\r\n\r\n  const closeAddEditDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const closeViewDialog = () => {\r\n    setViewDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const onSuccessAction = () => {\r\n    listMealRecipies();\r\n    closeAddEditDialog();\r\n  };\r\n\r\n\r\n  const setElipsis = (text: any) => {\r\n    return text?.length >= 25 ? `${text.substring(0, 40)}...` : text;\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    listMealRecipies();\r\n  }, [stateData]);\r\n  return (\r\n    <div className={classes.root}>\r\n      <Page title='Meal Recipe' />\r\n      <Grid alignItems='flex-end' container justify='space-between' spacing={3}>\r\n        <Grid item>\r\n          <Typography component='h1' variant='h3'>\r\n            Meal Recipe\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant='contained'\r\n            onClick={() => openAddDialog()}\r\n            className={classes.themeButton}\r\n            startIcon={<AddIcon />}\r\n          >\r\n            Add\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* =============Search======== */}\r\n      {/* <Grid container spacing={3}>\r\n        <Grid item>\r\n          <Paper elevation={0}>\r\n            <TextField\r\n              fullWidth\r\n              size='small'\r\n              placeholder='Name'\r\n              variant='outlined'\r\n              name='state'\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid> */}\r\n\r\n      <Card className={classes.tabCard}>\r\n        <CardContent className={classes.content}>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align='center'>#</TableCell>\r\n                  <TableCell align='center'>Meal Recipe Image</TableCell>\r\n                  <TableCell align='center'>Meal Recipe Name</TableCell>\r\n                  <TableCell align='center'>Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {!loading &&\r\n                  mealRecipeTableData.map((data: any, index: number) => (\r\n                    <TableRow hover key={index}>\r\n                      <TableCell align='center'>\r\n                        {stateData.page_limit * (stateData.page_no - 1) +\r\n                          index +\r\n                          1}\r\n                      </TableCell>\r\n                      <TableCell align='center'>\r\n                        <div className={classes.jCenter}>\r\n                          <Avatar variant='square' src={data?.image?.url} />\r\n                        </div>\r\n                      </TableCell>\r\n                      <TableCell align='center'>{data?.name}</TableCell>\r\n                      <TableCell align='center'>\r\n                        <div className={classes.sEvenly}>\r\n                          <Tooltip title='View' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openViewDialog(data)}\r\n                            >\r\n                              <CenterFocusStrongIcon color='primary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Edit' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openEditDialog(data)}\r\n                            >\r\n                              <EditIcon color='action' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Duplicate' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openEditDialog(data)}\r\n                            >\r\n                              <FileCopyIcon color='action' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Delete' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => onDelete(data)}\r\n                            >\r\n                              <DeleteIcon color='secondary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                {loading && <TableLoader />}\r\n                {!loading && mealRecipeTableData.length == 0 && (\r\n                  <TableNoData>No Data Found</TableNoData>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </CardContent>\r\n\r\n        <CardActions className={classes.actions}>\r\n          <Pagination\r\n            count={pageCount}\r\n            page={stateData.page_no}\r\n            onChange={onPageChange}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n\r\n      <AddEditModel\r\n        {...addEditDialog}\r\n        onClose={closeAddEditDialog}\r\n        onSuccess={onSuccessAction}\r\n      />\r\n\r\n      <ViewModel {...viewDialog} onClose={closeViewDialog} />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\ninterface MealTerms {\r\n  name: string,\r\n  image: { file: string | null, prevImage: string, isNew: boolean | null },\r\n  term: string\r\n}\r\n\r\ninterface Ingredients {\r\n  id: string,\r\n  quantity: string,\r\n  quantity_unit: string,\r\n}\r\n\r\ninterface MealPlan {\r\n  name: string,\r\n  image: { file: string | null, prevImage: string, isNew: boolean | null },\r\n  nutrition: string,\r\n  description: string,\r\n  protein: string,\r\n  fat: string,\r\n  carbs: string,\r\n  terms: MealTerms[],\r\n  ingredients: Ingredients[],\r\n  preparation_time: string,\r\n  preparation_description: string\r\n\r\n}\r\n\r\nconst mealTerms: MealTerms = {\r\n  name: '',\r\n  image: { file: null, prevImage: '', isNew: null },\r\n  term: ''\r\n}\r\n\r\nconst ingredientsSelect: Ingredients = {\r\n  id: '',\r\n  quantity: '',\r\n  quantity_unit: '',\r\n}\r\n\r\nconst initialFormValues: MealPlan = {\r\n  name: '',\r\n  image: { file: null, prevImage: '', isNew: null },\r\n  nutrition: '',\r\n  description: '',\r\n  protein: '',\r\n  fat: '',\r\n  carbs: '',\r\n  terms: [mealTerms],\r\n  ingredients: [ingredientsSelect],\r\n  preparation_time: '',\r\n  preparation_description: ''\r\n}\r\n\r\nexport const AddEditModel = (props: any) => {\r\n  const { isEdit, isOpen, okBtnText = 'OK', onClose, data, title, onSuccess } = props;\r\n  const classes = useStyles()\r\n  const [initialValues, setInitialValues] = React.useState({ ...initialFormValues });\r\n  const formikRef = React.useRef<any>(null);\r\n  const imageRef = React.useRef<any>(null);\r\n  const [ingredientsList, setIngredientsList] = React.useState([])\r\n  const { Post } = useService();\r\n  const Snackbar = useSnackbar();\r\n\r\n  const onImageChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    event.persist();\r\n    const files = event.target.files;\r\n    if (files && files.length != 0) {\r\n      const reader = new FileReader();\r\n      const file = files[0];\r\n      reader.onloadend = () => {\r\n        formikRef.current.setFieldValue('image', {\r\n          file,\r\n          prevImage: reader.result,\r\n          isNew: true,\r\n        });\r\n      };\r\n      reader.readAsDataURL(file);\r\n    } \r\n    // else {\r\n    //   formikRef.current.setFieldValue('image', {\r\n    //     workoutTermsName: '',\r\n    //     image: { file: null, prevImage: '', isNew: null },\r\n    //     description: '',\r\n    //   });\r\n    // }\r\n  }\r\n\r\n  const onSubmit = (value: any, helper: any) => {\r\n    try {\r\n      helper.setSubmitting(true)\r\n\r\n      const renderSubmit = async () => {\r\n        const { terms, ...rest } = value;\r\n        const postData = rest;\r\n\r\n        const TermPromiseArray = Promise.all(terms.map(({image, ...rest}: any)=>uploadNewImage(image).then((imgResponse)=>({image:imgResponse , ...rest}))));\r\n        const [imageResponse,TermImageResponse] = await Promise.all([uploadNewImage(postData.image),TermPromiseArray]);\r\n\r\n        postData.terms = TermImageResponse;\r\n        postData.image = imageResponse\r\n\r\n          !isEdit && addData(postData, helper);\r\n          isEdit && editData(postData, helper);\r\n\r\n        // const TermPromiseArray = terms.map(async (termData: any) => {\r\n        //   let { image, ...rest } = termData\r\n        //   return uploadNewImage(image)\r\n        // })\r\n\r\n        // Promise.all(TermPromiseArray).then((termData: any) => {\r\n\r\n        //   postData.terms = termData;\r\n        //   return uploadNewImage(postData.image)\r\n\r\n        // }).then((imageUrl: any) => {\r\n\r\n        //   postData.image = imageUrl\r\n        //   !isEdit && addData(postData, helper);\r\n        //   isEdit && editData(postData, helper);\r\n\r\n        // }).catch((err: any) => {\r\n\r\n        //   Snackbar.show('Internal Server Error', 'error');\r\n        // });\r\n      }\r\n      renderSubmit()\r\n    }\r\n    catch {\r\n      Snackbar.show('Image Upload Failed', 'error');\r\n    }\r\n  }\r\n\r\n  const addData = async (value: any, { setSubmitting, resetForm }: any) => {\r\n    await Post('app/addMealRecipe', value)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const editData = async (data: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n    await Post('app/editMealRecipe', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const listAllMealRecipe = () => {\r\n    Post('app/listAllMealIngredient', {})\r\n      .then((res: any) => {\r\n        if (!res.error) {\r\n          let getequipmentList = res.data.map((data: any) => {\r\n            data.id = data._id;\r\n            return data;\r\n          });\r\n          setIngredientsList(getequipmentList);\r\n        } else {\r\n          Snackbar.show(res.message, 'error');\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  }\r\n\r\n  const addMealRecipeTerms = (values: MealPlan, push: any) => {\r\n    const { terms } = values\r\n    push(mealTerms);\r\n  }\r\n\r\n  const addIngredients = (values: MealPlan, push: any) => {\r\n    const { ingredients } = values;\r\n    push(ingredientsSelect)\r\n  }\r\n\r\n  const removeIngredients = (values: MealPlan, items: any, setFieldValue: any) => {\r\n    const { ingredients } = values;\r\n    const sampleDummyArray = [...ingredients];\r\n    sampleDummyArray.splice(sampleDummyArray.indexOf(items), 1)\r\n    setFieldValue('ingredients', sampleDummyArray)\r\n  }\r\n\r\n  const handleOptionChange = (event: React.ChangeEvent<HTMLInputElement>, value: any, index: any) => {\r\n    formikRef.current.setFieldValue(`ingredients[${index}].id`, value?.id);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    listAllMealRecipe();\r\n  }, [])\r\n\r\n  React.useEffect(() => {\r\n    if (isEdit) {\r\n      console.log(data)\r\n      const { terms, image, _id, ingredients, ...rest } = data;\r\n      const editData = { ...rest, id: _id };\r\n      const RecipeIds = ingredientsList.map(({ _id }: any) => _id)\r\n      editData.image = { file: image, prevImage: image?.url, isNew: false };\r\n      editData.ingredients = ingredients.filter(({ _id }: any) => RecipeIds.includes(_id)).map(({ _id, quantity, quantity_unit }: any) => ({ id: _id, quantity , quantity_unit}))\r\n \r\n      editData.terms = terms.map((items: any) => {\r\n        return {\r\n          name: items.name,\r\n          image: { file: items.image, prevImage: items.image.url, isNew: false },\r\n          term: items.term\r\n        }\r\n      })\r\n      setInitialValues(editData)\r\n    }\r\n    else {\r\n      setInitialValues(initialFormValues)\r\n    }\r\n  }, [props])\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={isOpen}\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        fullWidth\r\n        maxWidth='md'\r\n        aria-labelledby='dialog-title'\r\n      >\r\n        <DialogTitle id='dialog-title' onClose={onClose}>\r\n          {title}\r\n        </DialogTitle>\r\n        <Formik\r\n          innerRef={formikRef}\r\n          enableReinitialize\r\n          initialValues={initialValues}\r\n          onSubmit={onSubmit}\r\n          validationSchema={Yup.object().shape({\r\n            name: Yup.string().trim().required('Name is required'),\r\n            nutrition: Yup.string().trim().required('Nutrition is required'),\r\n            // description: Yup.string().trim().max(250, 'Must be 250 characters or less').required('Description is required'),\r\n            protein: Yup.number().typeError('Protein must be in number').required('Protein is required'),\r\n            fat: Yup.number().typeError('Fat must be in number').required('Fat is required'),\r\n            carbs: Yup.number().typeError('Carbs must be in number').required('Carbs is required'),\r\n            terms: Yup.array().of(\r\n              Yup.object().shape({\r\n                name: Yup.string()\r\n                  .trim()\r\n                  .required('Meal recipe name is Required'),\r\n                image: Yup.object({\r\n                  file: Yup.mixed().required('required'),\r\n                }),\r\n                term: Yup.string()\r\n                  .trim()\r\n                  .max(250, 'Must be 250 characters or less')\r\n                  .required('Meal Recipe terms is Required'),\r\n              })\r\n            ),\r\n            ingredients: Yup.array().of(\r\n              Yup.object().shape({\r\n                id: Yup.string().trim().required('Ingredients is Required'),\r\n                quantity: Yup.mixed().required('Quality is required').when('quantity_unit', {\r\n                  is: 'None',\r\n                  then: Yup.string(),\r\n                  otherwise: Yup.number().typeError('Quantity must be in number')\r\n                }),\r\n                quantity_unit: Yup.string().trim().required('Quantity unit is required'),\r\n              })),\r\n            preparation_time: Yup.string().trim().required('Preparation time is required'),\r\n            preparation_description: Yup.string().required('Preparation description is required'),\r\n            image: Yup.object({\r\n              file: Yup.mixed().required('A file is required'),\r\n            }),\r\n          })}\r\n        >\r\n          {({ values, errors, touched, handleBlur, handleChange, setFieldValue, submitForm, setFieldTouched, isSubmitting, }) => (\r\n            <>\r\n              <DialogContent dividers>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} md={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label='Name'\r\n                      name='name'\r\n                      variant='outlined'\r\n                      value={values.name}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      error={Boolean(\r\n                        touched.name && errors.name\r\n                      )}\r\n                      helperText={\r\n                        touched.name && errors.name\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                  {/* <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      multiline\r\n                      label='Description'\r\n                      name='description'\r\n                      variant='outlined'\r\n                      value={values.description}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      error={Boolean(\r\n                        touched.description && errors.description\r\n                      )}\r\n                      helperText={\r\n                        touched.description && errors.description\r\n                      }\r\n                    />\r\n                  </Grid> */}\r\n                  <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label='Nutrition'\r\n                      name='nutrition'\r\n                      variant='outlined'\r\n                      value={values.nutrition}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      error={Boolean(\r\n                        touched.nutrition && errors.nutrition\r\n                      )}\r\n                      helperText={\r\n                        touched.nutrition && errors.nutrition\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label='Protein ( g )'\r\n                      name='protein'\r\n                      variant='outlined'\r\n                      value={values.protein}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      error={Boolean(\r\n                        touched.protein && errors.protein\r\n                      )}\r\n                      helperText={\r\n                        touched.protein && errors.protein\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label='Fat ( g )'\r\n                      name='fat'\r\n                      variant='outlined'\r\n                      value={values.fat}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      error={Boolean(\r\n                        touched.fat && errors.fat\r\n                      )}\r\n                      helperText={\r\n                        touched.fat && errors.fat\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label='Carbs ( g )'\r\n                      name='carbs'\r\n                      variant='outlined'\r\n                      value={values.carbs}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      error={Boolean(\r\n                        touched.carbs && errors.carbs\r\n                      )}\r\n                      helperText={\r\n                        touched.carbs && errors.carbs\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                  <FieldArray name='terms' validateOnChange>\r\n                    {({push, remove})=>(\r\n                      <>\r\n                        <Grid item md={12} xs={12}>\r\n                          <Button\r\n                            fullWidth\r\n                            className={classes.themeButton}\r\n                            variant='contained'\r\n                            color='default'\r\n                            onClick={() => addMealRecipeTerms(values, push)}\r\n                            endIcon={<ControlPointIcon />}\r\n                          >\r\n                            Add Terms\r\n                          </Button>\r\n                        </Grid>\r\n\r\n                        {values?.terms?.map((items: any, index: any) => <TermsComponent key={index} index={index} remove={remove} getLength = {values?.terms?.length} />)}\r\n                      </>\r\n                    )}\r\n                  </FieldArray>\r\n                  <FieldArray name='ingredients'>\r\n                    {({push,remove})=>(\r\n                      <>\r\n                        <Grid item md={12} xs={12}>\r\n                          <Button\r\n                            fullWidth\r\n                            className={classes.themeButton}\r\n                            variant='contained'\r\n                            color='default'\r\n                            onClick={() => addIngredients(values, push)}\r\n                            endIcon={<ControlPointIcon />}\r\n                          >\r\n                            Add Ingredients\r\n                          </Button>\r\n                        </Grid>\r\n                        {values?.ingredients?.map((items: any, index: any) => (\r\n                          <Grid\r\n                            key={index}\r\n                            item\r\n                            container\r\n                            md={12}\r\n                            xs={12}\r\n                            direction='row'\r\n                            spacing={2}\r\n                          >\r\n                            <Grid item md={5} xs={12}>\r\n                              <Autocomplete\r\n                                fullWidth\r\n                                options={ingredientsList}\r\n                                value={ingredientsList.find(\r\n                                  (data: any) => data._id == items.id\r\n                                )}\r\n                                getOptionLabel={(option: any) => option.name}\r\n                                getOptionSelected={(option) =>\r\n                                  option.id == items.id\r\n                                }\r\n                                onChange={(event: any, newValue) => handleOptionChange(event, newValue, index)}\r\n                                onBlur={handleBlur}\r\n                                renderInput={(params) => (\r\n                                  <TextField\r\n                                    {...params}\r\n                                    label='Ingredients'\r\n                                    variant='outlined'\r\n                                    error={Boolean(\r\n                                      touched?.ingredients && touched?.ingredients[index]?.id &&\r\n                                      errors?.ingredients && (errors?.ingredients[index] as Ingredients)?.id\r\n                                    )}\r\n                                    helperText={\r\n                                      touched?.ingredients && touched?.ingredients[index]?.id &&\r\n                                      errors?.ingredients && (errors?.ingredients[index] as Ingredients)?.id\r\n                                    }\r\n                                    inputProps={{\r\n                                      ...params.inputProps,\r\n                                    }}\r\n                                  />\r\n                                )}\r\n                              />\r\n                            </Grid>\r\n                            <Grid item md={6} xs={8}>\r\n                              <TextField\r\n                                fullWidth\r\n                                label='Quantity'\r\n                                name={`ingredients[${index}].quantity`}\r\n                                variant='outlined'\r\n                                error={Boolean(touched?.ingredients && touched?.ingredients[index]?.quantity && errors?.ingredients &&\r\n                                  (errors?.ingredients[index] as any)?.quantity)}\r\n                                helperText={\r\n                                  touched?.ingredients && touched?.ingredients[index]?.quantity &&\r\n                                  errors?.ingredients && (errors?.ingredients[index] as any)?.quantity }\r\n                                value={items.quantity}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                InputProps={{\r\n                                  classes: {\r\n                                    adornedEnd: classes.textareaAdornedEnd\r\n                                  },\r\n                                  endAdornment: <UnitSelect id={`ingredients[${index}].quantity_unit`} option={UnitDropdown} name={`ingredients[${index}].quantity_unit`} value={items.quantity_unit} onChange={handleChange} onBlur={handleBlur} />\r\n                                }}\r\n                              />\r\n                            </Grid>\r\n                            {values?.ingredients?.length > 1 && (\r\n                              <Grid item md={1} xs={4}>\r\n                                <Button\r\n                                  fullWidth\r\n                                  className={classes.deleteButton}\r\n                                  variant='contained'\r\n                                  color='secondary'\r\n                                  onClick={() => remove(index)}\r\n                                >\r\n                                  <DeleteIcon />\r\n                                </Button>\r\n                              </Grid>\r\n                            )}\r\n                          </Grid>\r\n                        ))}\r\n                      </>\r\n                    )}\r\n                  </FieldArray>\r\n\r\n                  <Grid item xs={12} md={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label='Preparation Time'\r\n                      name='preparation_time'\r\n                      variant='outlined'\r\n                      value={values.preparation_time}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      error={Boolean(\r\n                        touched.preparation_time && errors.preparation_time\r\n                      )}\r\n                      helperText={\r\n                        touched.preparation_time && errors.preparation_time\r\n                      }\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item md={12} xs={12}>\r\n                    <FormControl\r\n                      fullWidth\r\n                      error={Boolean(\r\n                        touched?.preparation_description &&\r\n                        errors?.preparation_description\r\n                      )}\r\n                    >\r\n                      <TipTapEditor\r\n                        value={values.preparation_description}\r\n                        onChange={(value: any) => setFieldValue('preparation_description', value)}\r\n                        onBlur={() => setFieldTouched('preparation_description', true, true)}\r\n                      />\r\n\r\n                      <FormHelperText>\r\n                        {touched?.preparation_description &&\r\n                          errors?.preparation_description}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item md={12} xs={12}>\r\n                    <input\r\n                      name='image'\r\n                      ref={imageRef}\r\n                      type='file'\r\n                      accept='.jpg,.png,jpeg'\r\n                      onChange={onImageChange}\r\n                      onBlur={handleBlur}\r\n                      hidden\r\n                    />\r\n                    <Button\r\n                      fullWidth\r\n                      className={classes.themeButton}\r\n                      variant='contained'\r\n                      color='default'\r\n                      onClick={() => imageRef.current.click()}\r\n                      startIcon={<CloudUploadIcon />}\r\n                    >\r\n                      Upload Image\r\n                    </Button>\r\n                    <FormControl\r\n                      error={Boolean(\r\n                        touched?.image?.file && errors?.image?.file\r\n                      )}\r\n                    >\r\n                      <FormHelperText>\r\n                        {touched?.image?.file &&\r\n                          errors?.image?.file}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item md={12} xs={12}>\r\n                    {values.image?.prevImage && (\r\n                      <img\r\n                        className={classes.imageView}\r\n                        src={values.image?.prevImage}\r\n                      />\r\n                    )}\r\n                  </Grid>\r\n                </Grid>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={onClose} variant='outlined' color='secondary'>\r\n                  Cancel\r\n                </Button>\r\n\r\n                <Button\r\n                  className={classes.themeButton}\r\n                  onClick={() => submitForm()}\r\n                  disabled={isSubmitting}\r\n                  variant='outlined'\r\n                >\r\n                  {isSubmitting ? (\r\n                    <CircularProgress size={24} style={{ color: 'white' }} />\r\n                  ) : (\r\n                    okBtnText\r\n                  )}\r\n                </Button>\r\n              </DialogActions>\r\n            </>\r\n          )}\r\n        </Formik>\r\n      </Dialog>\r\n    </>\r\n  )\r\n}\r\n\r\nconst TermsComponent = (props: any) => {\r\n  const FormikContext = useFormikContext();\r\n  const { values, errors, touched, setFieldValue, handleBlur, handleChange }: any = FormikContext;\r\n  const { index } = props;\r\n  const classes = useStyles()\r\n  const imgRef = useRef<any>(null)\r\n  const FieldName = `terms[${index}]`;\r\n  const FieldValue = getIn(values, `terms[${index}]`);\r\n  const FieldError = getIn(errors, `terms[${index}]`);\r\n  const FieldTouched = getIn(touched, `terms[${index}]`);\r\n\r\n  const onImageChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    event.persist();\r\n    const files = event.target.files;\r\n    if (files && files.length != 0) {\r\n      const reader = new FileReader();\r\n      const file = files[0];\r\n      reader.onloadend = () => {\r\n        setFieldValue(`${FieldName}.image`, { file, prevImage: reader.result, isNew: true, });\r\n      };\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      setFieldValue(`${FieldName}.image`, { file: null, prevImage: '', isNew: null });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid\r\n      item\r\n      container\r\n      md={12}\r\n      xs={12}\r\n      direction='row'\r\n      spacing={2}\r\n    >\r\n      <Grid item md={1} xs={12}>\r\n        <input\r\n          name={`${FieldName}.image`}\r\n          ref={imgRef}\r\n          type='file'\r\n          accept='.jpg,.png,jpeg'\r\n          onChange={(e) => onImageChange(e)}\r\n          onBlur={handleBlur}\r\n          hidden\r\n        />\r\n        <Avatar\r\n          className={classes.workouttermsavatar}\r\n          variant='square'\r\n          onClick={() => imgRef?.current?.click()}\r\n          src={FieldValue?.image?.prevImage}\r\n        />\r\n        <FormControl error={Boolean(FieldTouched?.image?.file && FieldError?.image?.file)}>\r\n          <FormHelperText>{FieldTouched?.image?.file && FieldError?.image?.file}</FormHelperText>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item md={5} xs={12}>\r\n        <TextField\r\n          fullWidth\r\n          multiline\r\n          label='Terms name'\r\n          name={`${FieldName}.name`}\r\n          variant='outlined'\r\n          error={Boolean(FieldTouched?.name && FieldError?.name)}\r\n          helperText={FieldTouched?.name && FieldError?.name}\r\n          value={FieldValue.name}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n      <Grid item md={5} xs={8}>\r\n        <TextField\r\n          fullWidth\r\n          multiline\r\n          label='Terms description'\r\n          name={`${FieldName}.term`}\r\n          variant='outlined'\r\n          error={Boolean(FieldTouched?.term && FieldError?.term)}\r\n          helperText={FieldTouched?.term && FieldError?.term}\r\n          value={FieldValue.term}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n      {props.getLength > 1 && (\r\n        <Grid item md={1} xs={4}>\r\n          <Button\r\n            fullWidth\r\n            className={classes.deleteButton}\r\n            variant='contained'\r\n            color='secondary'\r\n            onClick={() => props.remove(index)}\r\n          >\r\n            <DeleteIcon />\r\n          </Button>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n\r\n  )\r\n}\r\n\r\nexport const ViewModel = (props: any) => {\r\n  const { isOpen, title, onClose, data } = props;\r\n  const classes = useStyles();\r\n  const [formValue, setFormValue] = React.useState(data);\r\n  React.useEffect(() => {\r\n    setFormValue(data);\r\n  }, [props]);\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      fullWidth\r\n      maxWidth='sm'\r\n      aria-labelledby='dialog-view-title'\r\n      open={isOpen}\r\n    >\r\n      <DialogTitle id='dialog-view-title' onClose={onClose}>\r\n        {title}\r\n      </DialogTitle>\r\n\r\n      <DialogContent dividers>\r\n        <div>\r\n          <img\r\n            src={formValue?.image?.url}\r\n            alt={'Workout image'}\r\n            className={classes.imageView}\r\n          />\r\n        </div>\r\n        <Typography variant='h4'><strong>{formValue?.name}</strong></Typography>\r\n\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          className={classes.ingrdientsGridMain}\r\n          justify='center'\r\n        >\r\n          {formValue?.terms?.map((value: any, index: any) => (\r\n            <Grid key={index} item xs={4} md={3}>\r\n              <Avatar\r\n                className={classes.ingredientsAvatarRoot}\r\n                src={value?.image?.url}\r\n              />\r\n              <Typography variant='h6' align='center'>\r\n                {value?.name}\r\n              </Typography>\r\n              <Typography variant='subtitle2' align='center'>\r\n                {value.term.length >= 25\r\n                  ? `${value.term.substring(0, 30)}...`\r\n                  : value.term}\r\n              </Typography>\r\n            </Grid>\r\n          ))}\r\n          {formValue?.workout_terms?.length == 0 && (\r\n            <Grid item xs={12} md={12} className={classes.noIngredientsText}>\r\n              <div>No Ingredients</div>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n\r\n        <Typography variant='h5' align='left' style={{ color: '#41A58D' }} className={classes.textPrimary}>\r\n          INGREDIENTS\r\n        </Typography>\r\n\r\n        {formValue?.ingredients?.map((items: any, index: any) => {\r\n          return (\r\n            <List>\r\n              <ListItem>\r\n                <ListItemAvatar>\r\n                  <Avatar className={classes.avatarRoot} src={items.image?.url} />\r\n                </ListItemAvatar>\r\n                <ListItemText primary={items?.name} secondary={items?.description} />\r\n                <Typography>{items.quantity} {items.quantity_unit}</Typography>\r\n              </ListItem>\r\n            </List>\r\n          )\r\n        })}\r\n\r\n        <Typography variant='h5' align='left' style={{ color: '#41A58D' }} className={classes.textPrimary}>\r\n          NUTRITIONAL INFORMATION\r\n        </Typography>\r\n\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          className={classes.ingrdientsGridMain}\r\n          justify='center'\r\n        >\r\n          <Grid item xs={4} md={3}>\r\n            <Avatar\r\n              className={classes.ingredientsAvatarRoot}\r\n              src={CarbsImages}\r\n            />\r\n            <Typography align='center'>Carbs</Typography>\r\n            <Typography align='center'>{formValue?.carbs}g</Typography>\r\n          </Grid>\r\n          <Grid item xs={4} md={3}>\r\n            <Avatar\r\n              className={classes.ingredientsAvatarRoot}\r\n              src={ProteinsImages}\r\n            />\r\n            <Typography align='center'>Protein</Typography>\r\n            <Typography align='center'>{formValue?.protein}g</Typography>\r\n          </Grid>\r\n          <Grid item xs={4} md={3}>\r\n            <Avatar\r\n              className={classes.ingredientsAvatarRoot}\r\n              src={FatImages}\r\n            />\r\n            <Typography align='center'>Fat</Typography>\r\n            <Typography align='center'>{formValue?.fat}g</Typography>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Typography variant='h6' align='left' style={{ color: '#41A58D', marginTop: '20px' }}><strong>PREPARATION</strong></Typography>\r\n        <Typography variant='body2' align='center' className={classes.timeText}>\r\n          <TimerIcon fontSize='inherit' />\r\n          <span>{formValue?.preparation_time}</span>\r\n        </Typography>\r\n\r\n        <Grid container >\r\n          <Grid item xs={12} md={12} className={classes.htmlContentGrid}>\r\n            <div className={classes.htmlContent} dangerouslySetInnerHTML={{ __html: formValue?.preparation_description }} />\r\n          </Grid>\r\n        </Grid>\r\n\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={onClose} variant='outlined' color='secondary'>\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default MealRecipe\r\n"]},"metadata":{},"sourceType":"module"}