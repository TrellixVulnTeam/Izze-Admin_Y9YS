{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pyramidion\\\\WebApp\\\\Izze-Admin\\\\src\\\\pages\\\\SkinCarePlan\\\\SkinCarePlan.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { makeStyles, Card, CardActions, CardContent, Dialog, DialogActions, DialogContent, Grid, IconButton, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Tooltip, Typography, TextField, Button, CircularProgress } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport AddIcon from '@material-ui/icons/Add';\nimport Page from '../../components/Page/Page';\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { Pagination } from '@material-ui/lab';\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\nimport useSnackbar from '../../hook/useSnackbar';\nimport useService from '../../hook/useService';\nimport useConfModel from '../../hook/useConfModel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: theme.breakpoints.values.lg,\n    maxWidth: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(3)\n  },\n  themeButton: {\n    color: theme.palette.white,\n    backgroundColor: theme.palette.green.main,\n    '&:hover': {\n      backgroundColor: theme.palette.green.dark\n    }\n  },\n  widthAndHeight: {\n    width: '100%',\n    height: '100%'\n  },\n  addIngredients: {\n    width: '100%',\n    height: theme.spacing(6.5),\n    backgroundColor: theme.palette.green.main,\n    color: 'white',\n    padding: theme.spacing(2)\n  },\n  lColor: {\n    color: 'white'\n  },\n  tabCard: {\n    marginTop: theme.spacing(3)\n  },\n  content: {\n    padding: 0\n  },\n  mTop: {\n    marginTop: theme.spacing(3)\n  },\n  jCenter: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  sEvenly: {\n    display: 'flex',\n    justifyContent: 'space-evenly'\n  },\n  iconPadd: {\n    padding: 5\n  },\n  actions: {\n    padding: theme.spacing(1),\n    justifyContent: 'center'\n  }\n}));\nconst skinTypes = [{\n  title: 'Dry',\n  id: 1\n}, {\n  title: 'Oily',\n  id: 2\n}, {\n  title: 'Mixed',\n  id: 3\n}];\nconst skinIssues = [{\n  title: 'Acne',\n  id: 1\n}, {\n  title: 'Dry Skin',\n  id: 2\n}];\n\nfunction SkinCarePlan() {\n  _s();\n\n  const classes = useStyles();\n  const {\n    Post\n  } = useService();\n  const Snackbar = useSnackbar();\n  const ConfModel = useConfModel();\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [stateData, setStateData] = React.useState({\n    page_no: 1,\n    page_limit: 10\n  });\n  const [pageCount, setPageCount] = React.useState(0);\n  const [tableData, setTableData] = React.useState([]);\n  const [addEditDialog, setAddEditDialog] = React.useState({\n    isOpen: false,\n    title: '',\n    okBtnText: '',\n    isEdit: false,\n    data: {}\n  });\n  const [viewDialog, setViewDialog] = useState({\n    isOpen: false,\n    title: '',\n    data: {}\n  });\n\n  const getListofSkinCareplan = () => {\n    Post('app/listSkinCarePlan', stateData).then(res => {\n      setIsLoading(false);\n\n      if (!res.error) {\n        setPageCount(res.page_count);\n        setTableData(res.data);\n      } else {\n        Snackbar.show(res.message, 'error');\n      }\n    }).catch(error => {\n      setIsLoading(false);\n      Snackbar.show(error.message, 'error');\n    });\n  };\n\n  const openAddDialog = () => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      title: 'Add Skin Care Plan',\n      isEdit: false,\n      okBtnText: 'Save'\n    }));\n  };\n\n  const openEditDialog = data => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      isEdit: true,\n      data,\n      title: 'Edit Skin care Plan',\n      okBtnText: 'Edit'\n    }));\n  };\n\n  const openViewDialog = data => {\n    setViewDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      data,\n      title: 'View Skincare Plan'\n    }));\n  };\n\n  const onDelete = data => {\n    const {\n      openModel,\n      setLoading,\n      closeModel\n    } = ConfModel;\n\n    const submitFunction = () => {\n      setLoading(true);\n      Post('app/deleteSkinCarePlan', {\n        id: data._id\n      }).then(async res => {\n        setLoading(false);\n        closeModel();\n        onSuccessAction();\n        Snackbar.show(res.message, 'success');\n      }).catch(err => {\n        setLoading(false);\n        Snackbar.show('Internal Server Error', 'error');\n      });\n    };\n\n    openModel(submitFunction);\n  };\n\n  const onSuccessAction = () => {\n    getListofSkinCareplan();\n    closeAddEditDialog();\n  };\n\n  const closeAddEditDialog = () => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: false\n    }));\n  };\n\n  const closeViewDialog = () => {\n    setViewDialog(prevState => ({ ...prevState,\n      isOpen: false\n    }));\n  };\n\n  const onPageChange = (event, value) => {\n    setStateData(prevState => ({ ...prevState,\n      page_no: value\n    }));\n  };\n\n  useEffect(() => {\n    getListofSkinCareplan();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Page, {\n      title: \"Skin Care Plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      alignItems: \"flex-end\",\n      container: true,\n      justify: \"space-between\",\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h3\",\n          children: \"Skin Care Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => openAddDialog(),\n          className: classes.themeButton,\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 24\n          }, this),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 0,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            size: \"small\",\n            placeholder: \"Name\",\n            variant: \"outlined\",\n            name: \"state\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.tabCard,\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        className: classes.content,\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"#\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Skin Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Skin Issues\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Recipes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: [!isLoading && tableData.map((data, index) => {\n                return /*#__PURE__*/_jsxDEV(TableRow, {\n                  hover: true,\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: \"1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: data === null || data === void 0 ? void 0 : data.skin_type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: [' ', data === null || data === void 0 ? void 0 : data.skin_issues, ' ']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: data === null || data === void 0 ? void 0 : data.recipes[0].recipe.recipe_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: classes.sEvenly,\n                      children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                        title: \"View\",\n                        arrow: true,\n                        children: /*#__PURE__*/_jsxDEV(IconButton, {\n                          className: classes.iconPadd,\n                          onClick: () => openViewDialog(data),\n                          children: /*#__PURE__*/_jsxDEV(CenterFocusStrongIcon, {\n                            color: \"primary\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 295,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 291,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 290,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                        title: \"Edit\",\n                        arrow: true,\n                        children: /*#__PURE__*/_jsxDEV(IconButton, {\n                          className: classes.iconPadd,\n                          onClick: () => openEditDialog(data),\n                          children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                            color: \"action\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 303,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 299,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 298,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                        title: \"Delete\",\n                        arrow: true,\n                        children: /*#__PURE__*/_jsxDEV(IconButton, {\n                          className: classes.iconPadd,\n                          onClick: () => onDelete(data),\n                          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                            color: \"secondary\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 311,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 307,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 306,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 289,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 23\n                }, this);\n              }), isLoading && /*#__PURE__*/_jsxDEV(TableLoader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 31\n              }, this), !isLoading && tableData.length == 0 && /*#__PURE__*/_jsxDEV(TableNoData, {\n                children: \"No Data Found\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Pagination, {\n          count: pageCount,\n          page: stateData.page_no,\n          onChange: onPageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddEditDialog, { ...addEditDialog,\n      onClose: closeAddEditDialog,\n      onSuccess: onSuccessAction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ViewSkincarePlan, { ...viewDialog,\n      onClose: closeViewDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SkinCarePlan, \"aBSSO2HcRTNYwajZ5vqkuMHONew=\", false, function () {\n  return [useStyles, useService, useSnackbar, useConfModel];\n});\n\n_c = SkinCarePlan;\n\nconst AddEditDialog = props => {\n  _s2();\n\n  const {\n    isEdit,\n    isOpen,\n    okBtnText = 'OK',\n    onClose,\n    title,\n    onSuccess\n  } = props;\n  const classes = useStyles();\n  const {\n    Post\n  } = useService();\n  const Snackbar = useSnackbar();\n  const formikRef = useRef(null);\n  const [skinCareRecipeList, setSkinCareRecipeList] = React.useState([]);\n  const [storedRecipe, seStoredRecipe] = React.useState([]);\n  const days = [1, 2, 3, 4, 5, 6, 7];\n  const initialFormValues = {\n    skinType: '',\n    skinIssues: '',\n    recipe: [{\n      id: '',\n      day: ''\n    }]\n  };\n\n  const listSKinCareList = () => {\n    Post('app/listAllSkinCareRecipe', {}).then(response => {\n      if (!response.error) {\n        let ingredients = response.data.map(data => {\n          data.id = data._id;\n          return data;\n        });\n        setSkinCareRecipeList(ingredients);\n      } else {\n        Snackbar.show(response.message, 'error');\n      }\n    }).catch(error => {\n      Snackbar.show(error.message, 'error');\n    });\n  };\n\n  const onSubmit = (value, helper) => {\n    helper.setSubmitting(false);\n    let postData = {\n      skin_type: value.skinType,\n      skin_issues: value.skinIssues,\n      recipes: storedRecipe\n    };\n    console.log(value); // addData(postData, helper);\n  };\n\n  const addData = (data, {\n    setSubmitting,\n    resetForm\n  }) => {\n    setSubmitting(true);\n    Post('app/addSkinCarePlan', data).then(res => {\n      Snackbar.show(res.message, 'success');\n      setSubmitting(false);\n      resetForm();\n      onSuccess();\n      seStoredRecipe([]);\n    }).catch(err => {\n      setSubmitting(false);\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  const handleOnchange = (event, newValue, date) => {\n    let sampleData = [...storedRecipe];\n    let recipeData = {\n      id: newValue.id,\n      day: date\n    };\n    sampleData.push(recipeData);\n    seStoredRecipe(sampleData);\n    formikRef.current.setFieldValue('recipe', sampleData);\n  };\n\n  const handleSkinType = (event, newValue) => {\n    formikRef.current.setFieldValue('skinType', newValue.title);\n  };\n\n  const handleSkinIssues = (event, newValue) => {\n    formikRef.current.setFieldValue('skinIssues', newValue.title);\n  };\n\n  useEffect(() => {\n    listSKinCareList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isOpen,\n      disableBackdropClick: true,\n      disableEscapeKeyDown: true,\n      fullWidth: true,\n      maxWidth: \"md\",\n      \"aria-labelledby\": \"dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"dialog-title\",\n        onClose: onClose,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        innerRef: formikRef,\n        enableReinitialize: true,\n        initialValues: initialFormValues,\n        onSubmit: onSubmit,\n        validationSchema: Yup.object().shape({\n          skinType: Yup.string().trim().required('Skin type is required'),\n          skinIssues: Yup.string().trim().required('Skin issues is required'),\n          recipe: Yup.array().of(Yup.object().shape({\n            id: Yup.string().trim().required('Recipes is Required'),\n            day: Yup.string().trim().notRequired()\n          }))\n        }),\n        children: ({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          submitForm,\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [console.log(errors), /*#__PURE__*/_jsxDEV(DialogContent, {\n            dividers: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  options: skinTypes,\n                  getOptionLabel: option => option.title,\n                  onChange: handleSkinType,\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    label: \"Skin Types\",\n                    variant: \"outlined\",\n                    error: Boolean(touched.skinType && errors.skinType),\n                    helperText: touched.skinType && errors.skinType,\n                    inputProps: { ...params.inputProps\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 492,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  options: skinIssues,\n                  getOptionLabel: option => option.title,\n                  onChange: handleSkinIssues,\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    label: \"Skin Issues\",\n                    variant: \"outlined\",\n                    error: Boolean(touched.skinIssues && errors.skinIssues),\n                    helperText: touched.skinIssues && errors.skinIssues,\n                    inputProps: { ...params.inputProps\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 511,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 506,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 19\n              }, this), days.map((data, index) => {\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 1,\n                    children: /*#__PURE__*/_jsxDEV(Paper, {\n                      elevation: 0,\n                      component: \"div\",\n                      className: classes.addIngredients,\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        className: classes.lColor,\n                        align: 'center',\n                        variant: 'h6',\n                        children: data\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 535,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 530,\n                      columnNumber: 27\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 529,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 11,\n                    children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                      id: \"combo-box-demo\",\n                      options: skinCareRecipeList // value={skinCareRecipeList.find(\n                      //   (data: any) => data._id\n                      // )}\n                      ,\n                      getOptionLabel: option => option.recipe_name,\n                      getOptionSelected: option => option._id,\n                      onChange: (event, newValue) => handleOnchange(event, newValue, data),\n                      onBlur: handleBlur,\n                      renderInput: params => {\n                        var _touched$recipe$index, _errors$recipe$index, _touched$recipe$index2, _errors$recipe$index2;\n\n                        return /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                          label: \"Recipes\",\n                          name: \"Recipes1\",\n                          error: Boolean((touched === null || touched === void 0 ? void 0 : touched.recipe) && (touched === null || touched === void 0 ? void 0 : (_touched$recipe$index = touched.recipe[index]) === null || _touched$recipe$index === void 0 ? void 0 : _touched$recipe$index.id) && (errors === null || errors === void 0 ? void 0 : errors.recipe) && (errors === null || errors === void 0 ? void 0 : (_errors$recipe$index = errors.recipe[index]) === null || _errors$recipe$index === void 0 ? void 0 : _errors$recipe$index.id)),\n                          helperText: (touched === null || touched === void 0 ? void 0 : touched.recipe) && (touched === null || touched === void 0 ? void 0 : (_touched$recipe$index2 = touched.recipe[index]) === null || _touched$recipe$index2 === void 0 ? void 0 : _touched$recipe$index2.id) && (errors === null || errors === void 0 ? void 0 : errors.recipe) && (errors === null || errors === void 0 ? void 0 : (_errors$recipe$index2 = errors.recipe[index]) === null || _errors$recipe$index2 === void 0 ? void 0 : _errors$recipe$index2.id),\n                          variant: \"outlined\",\n                          inputProps: { ...params.inputProps\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 558,\n                          columnNumber: 31\n                        }, this);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 545,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 544,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: onClose,\n              variant: \"outlined\",\n              color: \"secondary\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: classes.themeButton,\n              onClick: () => submitForm(),\n              disabled: isSubmitting,\n              variant: \"outlined\",\n              children: isSubmitting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 24,\n                className: classes.lColor\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 600,\n                columnNumber: 21\n              }, this) : okBtnText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 444,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(AddEditDialog, \"IYF7M8huAbuMEI862c6JxKcMAbg=\", false, function () {\n  return [useStyles, useService, useSnackbar];\n});\n\n_c2 = AddEditDialog;\n\nconst ViewSkincarePlan = props => {\n  _s3();\n\n  var _formDatas$recipes;\n\n  const {\n    isOpen,\n    title,\n    onClose,\n    data\n  } = props;\n  const classes = useStyles();\n  const [formDatas, setFormDatas] = React.useState(data);\n  React.useEffect(() => {\n    setFormDatas(data);\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    disableBackdropClick: true,\n    disableEscapeKeyDown: true,\n    fullWidth: true,\n    maxWidth: \"md\",\n    \"aria-labelledby\": \"dialog-view-title\",\n    open: isOpen,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"dialog-view-title\",\n      onClose: onClose,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 5,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: \"Skin Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.mTop,\n            variant: \"h5\",\n            children: \"Skin Issues\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.mTop,\n            variant: \"h5\",\n            children: \"Skin Recipies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 5,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: formDatas === null || formDatas === void 0 ? void 0 : formDatas.skin_type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.mTop,\n            variant: \"body1\",\n            children: formDatas === null || formDatas === void 0 ? void 0 : formDatas.skin_issues\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 13\n          }, this), formDatas === null || formDatas === void 0 ? void 0 : (_formDatas$recipes = formDatas.recipes) === null || _formDatas$recipes === void 0 ? void 0 : _formDatas$recipes.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.mTop,\n              style: {\n                paddingLeft: 18\n              },\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: item.recipe.recipe_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 657,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 656,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 636,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        variant: \"outlined\",\n        color: \"secondary\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 667,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 624,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(ViewSkincarePlan, \"VgBe2AKzYByxWyrQJz/C5URb/80=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = ViewSkincarePlan;\nexport default SkinCarePlan;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SkinCarePlan\");\n$RefreshReg$(_c2, \"AddEditDialog\");\n$RefreshReg$(_c3, \"ViewSkincarePlan\");","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/pages/SkinCarePlan/SkinCarePlan.tsx"],"names":["React","useEffect","useRef","useState","makeStyles","Card","CardActions","CardContent","Dialog","DialogActions","DialogContent","Grid","IconButton","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Tooltip","Typography","TextField","Button","CircularProgress","Autocomplete","AddIcon","Page","DialogTitle","Formik","Yup","DeleteIcon","EditIcon","Pagination","CenterFocusStrongIcon","TableLoader","TableNoData","useSnackbar","useService","useConfModel","useStyles","theme","root","width","breakpoints","values","lg","maxWidth","margin","padding","spacing","themeButton","color","palette","white","backgroundColor","green","main","dark","widthAndHeight","height","addIngredients","lColor","tabCard","marginTop","content","mTop","jCenter","display","justifyContent","sEvenly","iconPadd","actions","skinTypes","title","id","skinIssues","SkinCarePlan","classes","Post","Snackbar","ConfModel","isLoading","setIsLoading","stateData","setStateData","page_no","page_limit","pageCount","setPageCount","tableData","setTableData","addEditDialog","setAddEditDialog","isOpen","okBtnText","isEdit","data","viewDialog","setViewDialog","getListofSkinCareplan","then","res","error","page_count","show","message","catch","openAddDialog","prevState","openEditDialog","openViewDialog","onDelete","openModel","setLoading","closeModel","submitFunction","_id","onSuccessAction","err","closeAddEditDialog","closeViewDialog","onPageChange","event","value","map","index","skin_type","skin_issues","recipes","recipe","recipe_name","length","AddEditDialog","props","onClose","onSuccess","formikRef","skinCareRecipeList","setSkinCareRecipeList","storedRecipe","seStoredRecipe","days","initialFormValues","skinType","day","listSKinCareList","response","ingredients","onSubmit","helper","setSubmitting","postData","console","log","addData","resetForm","handleOnchange","newValue","date","sampleData","recipeData","push","current","setFieldValue","handleSkinType","handleSkinIssues","object","shape","string","trim","required","array","of","notRequired","errors","touched","handleChange","handleBlur","submitForm","isSubmitting","option","params","Boolean","inputProps","ViewSkincarePlan","formDatas","setFormDatas","item","paddingLeft"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport {\r\n  makeStyles,\r\n  Avatar,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  InputLabel,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  FormControl,\r\n  FormHelperText,\r\n  Grid,\r\n  IconButton,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Tooltip,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  CircularProgress,\r\n  Select,\r\n} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Page from '../../components/Page/Page';\r\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\r\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport useService from '../../hook/useService';\r\nimport useConfModel from '../../hook/useConfModel';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  root: {\r\n    width: theme.breakpoints.values.lg,\r\n    maxWidth: '100%',\r\n    margin: '0 auto',\r\n    padding: theme.spacing(3),\r\n  },\r\n  themeButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n  },\r\n  widthAndHeight: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  addIngredients: {\r\n    width: '100%',\r\n    height: theme.spacing(6.5),\r\n    backgroundColor: theme.palette.green.main,\r\n    color: 'white',\r\n    padding: theme.spacing(2),\r\n  },\r\n  lColor: {\r\n    color: 'white',\r\n  },\r\n  tabCard: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  mTop: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  jCenter: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  sEvenly: {\r\n    display: 'flex',\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  iconPadd: {\r\n    padding: 5,\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(1),\r\n    justifyContent: 'center',\r\n  },\r\n}));\r\n\r\nconst skinTypes = [\r\n  { title: 'Dry', id: 1 },\r\n  { title: 'Oily', id: 2 },\r\n  { title: 'Mixed', id: 3 },\r\n];\r\n\r\nconst skinIssues = [\r\n  { title: 'Acne', id: 1 },\r\n  { title: 'Dry Skin', id: 2 },\r\n];\r\n\r\nfunction SkinCarePlan() {\r\n  const classes = useStyles();\r\n  const { Post } = useService();\r\n  const Snackbar = useSnackbar();\r\n  const ConfModel = useConfModel();\r\n  const [isLoading, setIsLoading] = React.useState(true);\r\n  const [stateData, setStateData] = React.useState({\r\n    page_no: 1,\r\n    page_limit: 10,\r\n  });\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [tableData, setTableData] = React.useState([]);\r\n  const [addEditDialog, setAddEditDialog] = React.useState({\r\n    isOpen: false,\r\n    title: '',\r\n    okBtnText: '',\r\n    isEdit: false,\r\n    data: {},\r\n  });\r\n  const [viewDialog, setViewDialog] = useState({\r\n    isOpen: false,\r\n    title: '',\r\n    data: {},\r\n  });\r\n\r\n  const getListofSkinCareplan = () => {\r\n    Post('app/listSkinCarePlan', stateData)\r\n      .then((res: any) => {\r\n        setIsLoading(false);\r\n        if (!res.error) {\r\n          setPageCount(res.page_count);\r\n          setTableData(res.data);\r\n        } else {\r\n          Snackbar.show(res.message, 'error');\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        setIsLoading(false);\r\n        Snackbar.show(error.message, 'error');\r\n      });\r\n  };\r\n\r\n  const openAddDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      title: 'Add Skin Care Plan',\r\n      isEdit: false,\r\n      okBtnText: 'Save',\r\n    }));\r\n  };\r\n\r\n  const openEditDialog = (data: any) => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      isEdit: true,\r\n      data,\r\n      title: 'Edit Skin care Plan',\r\n      okBtnText: 'Edit',\r\n    }));\r\n  };\r\n\r\n  const openViewDialog = (data: any) => {\r\n    setViewDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      data,\r\n      title: 'View Skincare Plan',\r\n    }));\r\n  };\r\n\r\n  const onDelete = (data: any) => {\r\n    const { openModel, setLoading, closeModel } = ConfModel;\r\n    const submitFunction = () => {\r\n      setLoading(true);\r\n      Post('app/deleteSkinCarePlan', { id: data._id })\r\n        .then(async (res: any) => {\r\n          setLoading(false);\r\n          closeModel();\r\n          onSuccessAction();\r\n          Snackbar.show(res.message, 'success');\r\n        })\r\n        .catch((err: any) => {\r\n          setLoading(false);\r\n          Snackbar.show('Internal Server Error', 'error');\r\n        });\r\n    };\r\n    openModel(submitFunction);\r\n  };\r\n\r\n  const onSuccessAction = () => {\r\n    getListofSkinCareplan();\r\n    closeAddEditDialog();\r\n  };\r\n\r\n  const closeAddEditDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const closeViewDialog = () => {\r\n    setViewDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const onPageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    setStateData((prevState: any) => ({ ...prevState, page_no: value }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getListofSkinCareplan();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Page title='Skin Care Plan' />\r\n\r\n      {/* =======Header====== */}\r\n      <Grid alignItems='flex-end' container justify='space-between' spacing={3}>\r\n        <Grid item>\r\n          <Typography component='h1' variant='h3'>\r\n            Skin Care Plan\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant='contained'\r\n            onClick={() => openAddDialog()}\r\n            className={classes.themeButton}\r\n            startIcon={<AddIcon />}\r\n          >\r\n            Add\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* =============Search======== */}\r\n      <Grid container spacing={3}>\r\n        <Grid item>\r\n          <Paper elevation={0}>\r\n            <TextField\r\n              fullWidth\r\n              size='small'\r\n              placeholder='Name'\r\n              variant='outlined'\r\n              name='state'\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* ========Table With Pagination========= */}\r\n      <Card className={classes.tabCard}>\r\n        <CardContent className={classes.content}>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align='center'>#</TableCell>\r\n                  <TableCell align='center'>Skin Type</TableCell>\r\n                  <TableCell align='center'>Skin Issues</TableCell>\r\n                  <TableCell align='center'>Recipes</TableCell>\r\n                  <TableCell align='center'>Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {!isLoading &&\r\n                  tableData.map((data: any, index: any) => {\r\n                    return (\r\n                      <TableRow hover>\r\n                        <TableCell align='center'>1</TableCell>\r\n                        <TableCell align='center'>{data?.skin_type}</TableCell>\r\n                        <TableCell align='center'>\r\n                          {' '}\r\n                          {data?.skin_issues}{' '}\r\n                        </TableCell>\r\n                        <TableCell align='center'>\r\n                          {data?.recipes[0].recipe.recipe_name}\r\n                        </TableCell>\r\n                        <TableCell align='center'>\r\n                          <div className={classes.sEvenly}>\r\n                            <Tooltip title='View' arrow>\r\n                              <IconButton\r\n                                className={classes.iconPadd}\r\n                                onClick={() => openViewDialog(data)}\r\n                              >\r\n                                <CenterFocusStrongIcon color='primary' />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip title='Edit' arrow>\r\n                              <IconButton\r\n                                className={classes.iconPadd}\r\n                                onClick={() => openEditDialog(data)}\r\n                              >\r\n                                <EditIcon color='action' />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip title='Delete' arrow>\r\n                              <IconButton\r\n                                className={classes.iconPadd}\r\n                                onClick={() => onDelete(data)}\r\n                              >\r\n                                <DeleteIcon color='secondary' />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                          </div>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                {isLoading && <TableLoader />}\r\n                {!isLoading && tableData.length == 0 && (\r\n                  <TableNoData>No Data Found</TableNoData>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </CardContent>\r\n\r\n        <CardActions className={classes.actions}>\r\n          <Pagination\r\n            count={pageCount}\r\n            page={stateData.page_no}\r\n            onChange={onPageChange}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n\r\n      {/* ==========Add & Edit Dialoge======== */}\r\n\r\n      <AddEditDialog\r\n        {...addEditDialog}\r\n        onClose={closeAddEditDialog}\r\n        onSuccess={onSuccessAction}\r\n      />\r\n      <ViewSkincarePlan {...viewDialog} onClose={closeViewDialog} />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface Recpie {\r\n  id: number;\r\n  day: number;\r\n}\r\n\r\nconst AddEditDialog = (props: any) => {\r\n  const { isEdit, isOpen, okBtnText = 'OK', onClose, title, onSuccess } = props;\r\n  const classes = useStyles();\r\n  const { Post } = useService();\r\n  const Snackbar = useSnackbar();\r\n  const formikRef = useRef<any>(null);\r\n  const [skinCareRecipeList, setSkinCareRecipeList] = React.useState<any>([]);\r\n  const [storedRecipe, seStoredRecipe] = React.useState<any>([]);\r\n  const days = [1, 2, 3, 4, 5, 6, 7];\r\n\r\n  const initialFormValues = {\r\n    skinType: '',\r\n    skinIssues: '',\r\n    recipe: [\r\n      {\r\n        id: '',\r\n        day: '',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const listSKinCareList = () => {\r\n    Post('app/listAllSkinCareRecipe', {})\r\n      .then((response: any) => {\r\n        if (!response.error) {\r\n          let ingredients = response.data.map((data: any) => {\r\n            data.id = data._id;\r\n            return data;\r\n          });\r\n          setSkinCareRecipeList(ingredients);\r\n        } else {\r\n          Snackbar.show(response.message, 'error');\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        Snackbar.show(error.message, 'error');\r\n      });\r\n  };\r\n\r\n  const onSubmit = (value: any, helper: any) => {\r\n    helper.setSubmitting(false);\r\n    let postData = {\r\n      skin_type: value.skinType,\r\n      skin_issues: value.skinIssues,\r\n      recipes: storedRecipe,\r\n    };\r\n    console.log(value);\r\n    // addData(postData, helper);\r\n  };\r\n\r\n  const addData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n    Post('app/addSkinCarePlan', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n        seStoredRecipe([]);\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const handleOnchange = (event: any, newValue: any, date: any) => {\r\n    let sampleData = [...storedRecipe];\r\n    let recipeData = {\r\n      id: newValue.id as number,\r\n      day: date as number,\r\n    };\r\n    sampleData.push(recipeData);\r\n    seStoredRecipe(sampleData);\r\n    formikRef.current.setFieldValue('recipe', sampleData);\r\n  };\r\n\r\n  const handleSkinType = (event: any, newValue: any) => {\r\n    formikRef.current.setFieldValue('skinType', newValue.title);\r\n  };\r\n\r\n  const handleSkinIssues = (event: any, newValue: any) => {\r\n    formikRef.current.setFieldValue('skinIssues', newValue.title);\r\n  };\r\n\r\n  useEffect(() => {\r\n    listSKinCareList();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={isOpen}\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        fullWidth\r\n        maxWidth='md'\r\n        aria-labelledby='dialog-title'\r\n      >\r\n        <DialogTitle id='dialog-title' onClose={onClose}>\r\n          {title}\r\n        </DialogTitle>\r\n        <Formik\r\n          innerRef={formikRef}\r\n          enableReinitialize\r\n          initialValues={initialFormValues}\r\n          onSubmit={onSubmit}\r\n          validationSchema={Yup.object().shape({\r\n            skinType: Yup.string().trim().required('Skin type is required'),\r\n            skinIssues: Yup.string().trim().required('Skin issues is required'),\r\n            recipe: Yup.array().of(\r\n              Yup.object().shape({\r\n                id: Yup.string().trim().required('Recipes is Required'),\r\n                day: Yup.string().trim().notRequired(),\r\n              })\r\n            ),\r\n          })}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            submitForm,\r\n            isSubmitting,\r\n          }) => (\r\n            <>\r\n              {console.log(errors)}\r\n              {/* {console.log(values)} */}\r\n              <DialogContent dividers>\r\n                <Grid container spacing={3}>\r\n                  <Grid item xs={6}>\r\n                    <Autocomplete\r\n                      options={skinTypes}\r\n                      getOptionLabel={(option: any) => option.title}\r\n                      onChange={handleSkinType}\r\n                      renderInput={(params: any) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label='Skin Types'\r\n                          variant='outlined'\r\n                          error={Boolean(touched.skinType && errors.skinType)}\r\n                          helperText={touched.skinType && errors.skinType}\r\n                          inputProps={{\r\n                            ...params.inputProps,\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Autocomplete\r\n                      options={skinIssues}\r\n                      getOptionLabel={(option: any) => option.title}\r\n                      onChange={handleSkinIssues}\r\n                      renderInput={(params: any) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label='Skin Issues'\r\n                          variant='outlined'\r\n                          error={Boolean(\r\n                            touched.skinIssues && errors.skinIssues\r\n                          )}\r\n                          helperText={touched.skinIssues && errors.skinIssues}\r\n                          inputProps={{\r\n                            ...params.inputProps,\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                  {days.map((data: any, index: number) => {\r\n                    return (\r\n                      <>\r\n                        <Grid key={index} item xs={1}>\r\n                          <Paper\r\n                            elevation={0}\r\n                            component='div'\r\n                            className={classes.addIngredients}\r\n                          >\r\n                            <Typography\r\n                              className={classes.lColor}\r\n                              align={'center'}\r\n                              variant={'h6'}\r\n                            >\r\n                              {data}\r\n                            </Typography>\r\n                          </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={11}>\r\n                          <Autocomplete\r\n                            id='combo-box-demo'\r\n                            options={skinCareRecipeList}\r\n                            // value={skinCareRecipeList.find(\r\n                            //   (data: any) => data._id\r\n                            // )}\r\n                            getOptionLabel={(option: any) => option.recipe_name}\r\n                            getOptionSelected={(option) => option._id}\r\n                            onChange={(event: any, newValue: any) =>\r\n                              handleOnchange(event, newValue, data)\r\n                            }\r\n                            onBlur={handleBlur}\r\n                            renderInput={(params: any) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label='Recipes'\r\n                                name='Recipes1'\r\n                                error={Boolean(\r\n                                  touched?.recipe &&\r\n                                    touched?.recipe[index]?.id &&\r\n                                    errors?.recipe &&\r\n                                    (errors?.recipe[index] as any)?.id\r\n                                )}\r\n                                helperText={\r\n                                  touched?.recipe &&\r\n                                  touched?.recipe[index]?.id &&\r\n                                  errors?.recipe &&\r\n                                  (errors?.recipe[index] as any)?.id\r\n                                }\r\n                                variant='outlined'\r\n                                inputProps={{\r\n                                  ...params.inputProps,\r\n                                }}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                      </>\r\n                    );\r\n                  })}\r\n                </Grid>\r\n              </DialogContent>\r\n\r\n              <DialogActions>\r\n                <Button onClick={onClose} variant='outlined' color='secondary'>\r\n                  Cancel\r\n                </Button>\r\n\r\n                <Button\r\n                  className={classes.themeButton}\r\n                  onClick={() => submitForm()}\r\n                  disabled={isSubmitting}\r\n                  variant='outlined'\r\n                >\r\n                  {isSubmitting ? (\r\n                    <CircularProgress size={24} className={classes.lColor} />\r\n                  ) : (\r\n                    okBtnText\r\n                  )}\r\n                </Button>\r\n              </DialogActions>\r\n            </>\r\n          )}\r\n        </Formik>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ViewSkincarePlan = (props: any) => {\r\n  const { isOpen, title, onClose, data } = props;\r\n  const classes = useStyles();\r\n  const [formDatas, setFormDatas] = React.useState(data);\r\n\r\n  React.useEffect(() => {\r\n    setFormDatas(data);\r\n  }, [props]);\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      fullWidth\r\n      maxWidth='md'\r\n      aria-labelledby='dialog-view-title'\r\n      open={isOpen}\r\n    >\r\n      <DialogTitle id='dialog-view-title' onClose={onClose}>\r\n        {title}\r\n      </DialogTitle>\r\n\r\n      <DialogContent dividers>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={1}></Grid>\r\n          <Grid item xs={5}>\r\n            <Typography variant='h5'>Skin Type</Typography>\r\n            <Typography className={classes.mTop} variant='h5'>\r\n              Skin Issues\r\n            </Typography>\r\n            <Typography className={classes.mTop} variant='h5'>\r\n              Skin Recipies\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <Typography variant='body1'>{formDatas?.skin_type}</Typography>\r\n            <Typography className={classes.mTop} variant='body1'>\r\n              {formDatas?.skin_issues}\r\n            </Typography>\r\n            {formDatas?.recipes?.map((item: any, index: any) => {\r\n              return (\r\n                <div className={classes.mTop} style={{ paddingLeft: 18 }}>\r\n                  <ul>\r\n                    <li>{item.recipe.recipe_name}</li>\r\n                  </ul>\r\n                </div>\r\n              );\r\n            })}\r\n          </Grid>\r\n          <Grid item xs={1}></Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={onClose} variant='outlined' color='secondary'>\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SkinCarePlan;\r\n"]},"metadata":{},"sourceType":"module"}