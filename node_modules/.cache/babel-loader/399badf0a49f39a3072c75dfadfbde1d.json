{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pyramidion\\\\WebApp\\\\Izze-Admin\\\\src\\\\pages\\\\MealRecipe\\\\MealRecipe.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React from 'react';\nimport { Avatar, Button, Card, CardActions, CardContent, CircularProgress, Dialog, DialogActions, DialogContent, Grid, IconButton, makeStyles, Paper, Table, TableBody, FormControl, FormHelperText, TableCell, TableContainer, TableHead, TableRow, TextField, Tooltip, Typography } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { Pagination } from '@material-ui/lab';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { imageUpload } from '../../utils/FirebaseUtils';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\nimport useConfModel from '../../hook/useConfModel';\nimport useService from '../../hook/useService';\nimport useSnackbar from '../../hook/useSnackbar';\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: theme.breakpoints.values.lg,\n    maxWidth: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(3)\n  },\n  themeButton: {\n    color: theme.palette.white,\n    backgroundColor: theme.palette.green.main,\n    '&:hover': {\n      backgroundColor: theme.palette.green.dark\n    }\n  },\n  workouttermsavatar: {\n    width: '100%',\n    height: '100%'\n  },\n  deleteButton: {\n    width: '100%',\n    height: '50px'\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 700\n  },\n  actions: {\n    padding: theme.spacing(1),\n    justifyContent: 'center'\n  },\n  tabCard: {\n    marginTop: theme.spacing(3)\n  },\n  sEvenly: {\n    display: 'flex',\n    justifyContent: 'space-evenly'\n  },\n  iconPadd: {\n    padding: 5\n  },\n  jCenter: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  imageView: {\n    width: '100%',\n    height: '100%'\n  },\n  avatarRoot: {\n    borderRadius: 10,\n    marginRight: 15,\n    width: theme.spacing(10),\n    height: theme.spacing(10)\n  },\n  textPrimary: {\n    marginTop: 10,\n    fontWeight: 'bold'\n  },\n  textSecondary: {\n    marginTop: 10,\n    color: '#f0c100'\n  },\n  ingrdientsGridMain: {\n    marginTop: 10\n  },\n  ingredientsAvatarRoot: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n    margin: 'auto'\n  },\n  htmlContentGrid: {\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingTop: theme.spacing(1)\n  },\n  noIngredientsText: {\n    marginBottom: theme.spacing(3),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  htmlContent: {\n    '& ul': {\n      paddingLeft: '1.2rem'\n    },\n    '& p': {\n      textAlign: 'justify'\n    }\n  }\n}));\n\nfunction MealRecipe() {\n  _s();\n\n  const classes = useStyles();\n  const ConfModel = useConfModel();\n  const [loading, setLoading] = React.useState(false);\n  const [mealRecipeTableData, setMealRecipeTableData] = React.useState([]);\n  const [stateData, setStateData] = React.useState({\n    page_no: 1,\n    page_limit: 10\n  });\n  const [pageCount, setPageCount] = React.useState(0);\n  const {\n    Post\n  } = useService();\n  const Snackbar = useSnackbar();\n  const [addEditDialog, setAddEditDialog] = React.useState({\n    isOpen: false,\n    title: '',\n    okBtnText: '',\n    isEdit: false,\n    data: {}\n  });\n  const [viewDialog, setViewDialog] = React.useState({\n    isOpen: false,\n    title: '',\n    data: {}\n  });\n\n  const openAddDialog = () => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      title: 'Add Meal Recipe',\n      isEdit: false,\n      okBtnText: 'Save'\n    }));\n  };\n\n  const openEditDialog = data => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      isEdit: true,\n      data,\n      title: 'Edit Meal Recipe',\n      okBtnText: 'Edit'\n    }));\n  };\n\n  const openViewDialog = data => {\n    setViewDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      data,\n      title: 'View Meal Recipe'\n    }));\n  };\n\n  const listMealRecipies = async () => {\n    setLoading(true);\n    Post('app/listMealRecipe', stateData).then(res => {\n      setLoading(false);\n\n      if (!res.error) {\n        setMealRecipeTableData(res.data);\n        setPageCount(res.page_count);\n      } else {\n        Snackbar.show(res.message, 'error');\n      }\n    }).catch(err => {\n      setLoading(false);\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  const onDelete = data => {\n    const {\n      openModel,\n      setLoading,\n      closeModel\n    } = ConfModel;\n\n    const submitFunction = () => {\n      setLoading(true);\n      Post('app/deleteMealRecipe', {\n        id: data._id\n      }).then(async res => {\n        setLoading(false);\n        closeModel();\n        onSuccessAction();\n        Snackbar.show(res.message, 'success');\n      }).catch(err => {\n        setLoading(false);\n        Snackbar.show('Internal Server Error', 'error');\n      });\n    };\n\n    openModel(submitFunction);\n  };\n\n  const closeAddEditDialog = () => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: false\n    }));\n  };\n\n  const closeViewDialog = () => {\n    setViewDialog(prevState => ({ ...prevState,\n      isOpen: false\n    }));\n  };\n\n  const onSuccessAction = () => {\n    listMealRecipies();\n    closeAddEditDialog();\n  };\n\n  const setElipsis = text => {\n    return (text === null || text === void 0 ? void 0 : text.length) >= 25 ? `${text.substring(0, 40)}...` : text;\n  };\n\n  React.useEffect(() => {\n    listMealRecipies();\n  }, [stateData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      alignItems: \"flex-end\",\n      container: true,\n      justify: \"space-between\",\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h3\",\n          children: \"Meal Recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => openAddDialog(),\n          className: classes.themeButton,\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 28\n          }, this),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 0,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            size: \"small\",\n            placeholder: \"Name\",\n            variant: \"outlined\",\n            name: \"state\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.tabCard,\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        className: classes.content,\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"#\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Meal Recipe Image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Meal Recipe Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Meal Recipe Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: [!loading && mealRecipeTableData.map((data, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: stateData.page_limit * (stateData.page_no - 1) + index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: classes.jCenter,\n                    children: /*#__PURE__*/_jsxDEV(Avatar, {\n                      variant: \"square\",\n                      src: data === null || data === void 0 ? void 0 : data.image\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: data === null || data === void 0 ? void 0 : data.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: data === null || data === void 0 ? void 0 : data.preparation_description,\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: setElipsis(data === null || data === void 0 ? void 0 : data.preparation_description)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 292,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: classes.sEvenly,\n                    children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                      title: \"View\",\n                      arrow: true,\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        className: classes.iconPadd,\n                        onClick: () => openViewDialog(data),\n                        children: /*#__PURE__*/_jsxDEV(CenterFocusStrongIcon, {\n                          color: \"primary\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 302,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 298,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 297,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                      title: \"Edit\",\n                      arrow: true,\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        className: classes.iconPadd,\n                        onClick: () => openEditDialog(data),\n                        children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                          color: \"action\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 310,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 306,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 305,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                      title: \"Delete\",\n                      arrow: true,\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        className: classes.iconPadd,\n                        onClick: () => onDelete(data),\n                        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                          color: \"secondary\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 318,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 314,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 313,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 296,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 21\n              }, this)), loading && /*#__PURE__*/_jsxDEV(TableLoader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 29\n              }, this), !loading && mealRecipeTableData.length == 0 && /*#__PURE__*/_jsxDEV(TableNoData, {\n                children: \"No Data Found\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Pagination, {\n          count: pageCount,\n          page: stateData.page_no // onChange={onPageChange}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AddEditModel, { ...addEditDialog,\n      onClose: closeAddEditDialog,\n      onSuccess: onSuccessAction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ViewModel, { ...viewDialog,\n      onClose: closeViewDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MealRecipe, \"XfnaDB4sT1zZ07Xu63DtxeOgblM=\", false, function () {\n  return [useStyles, useConfModel, useService, useSnackbar];\n});\n\n_c = MealRecipe;\nconst mealTerms = {\n  name: '',\n  image: {\n    file: null,\n    prevImage: '',\n    isNew: null\n  },\n  term: ''\n};\nconst ingredientsSelect = {\n  id: '',\n  quantity: ''\n};\nconst initialFormValues = {\n  name: '',\n  image: {\n    file: null,\n    prevImage: '',\n    isNew: null\n  },\n  nutrition: '',\n  description: '',\n  protein: '',\n  fat: '',\n  carbs: '',\n  terms: [mealTerms],\n  ingredients: [ingredientsSelect],\n  preparation_time: '',\n  preparation_description: ''\n};\nexport const AddEditModel = props => {\n  _s2();\n\n  const {\n    isEdit,\n    isOpen,\n    okBtnText = 'OK',\n    onClose,\n    data,\n    title,\n    onSuccess\n  } = props;\n  const classes = useStyles();\n  const [initialValues, setInitialValues] = React.useState({ ...initialFormValues\n  });\n  const formikRef = React.useRef(null);\n  const imageRef = React.useRef(null);\n  const avatharimgRef = React.useRef(null);\n  const [allIngredients, setAllIngredients] = React.useState([]);\n  const {\n    Post\n  } = useService();\n  const Snackbar = useSnackbar();\n\n  const onAvatarImageChange = (event, index) => {\n    event.persist();\n    const files = event.target.files;\n\n    if (files && files.length != 0) {\n      const reader = new FileReader();\n      const file = files[0];\n\n      reader.onloadend = () => {\n        formikRef.current.setFieldValue(`terms[${index}].image`, {\n          file,\n          prevImage: reader.result,\n          isNew: true\n        });\n      };\n\n      reader.readAsDataURL(file);\n    } else {\n      formikRef.current.setFieldValue('terms', {\n        workoutTermsName: '',\n        image: {\n          file: null,\n          prevImage: '',\n          isNew: null\n        },\n        description: ''\n      });\n    }\n  };\n\n  const onImageChange = event => {\n    event.persist();\n    const files = event.target.files;\n\n    if (files && files.length != 0) {\n      const reader = new FileReader();\n      const file = files[0];\n\n      reader.onloadend = () => {\n        formikRef.current.setFieldValue('image', {\n          file,\n          prevImage: reader.result,\n          isNew: true\n        });\n      };\n\n      reader.readAsDataURL(file);\n    } else {\n      formikRef.current.setFieldValue('image', {\n        workoutTermsName: '',\n        image: {\n          file: null,\n          prevImage: '',\n          isNew: null\n        },\n        description: ''\n      });\n    }\n  };\n\n  const onSubmit = (value, helper) => {\n    try {\n      helper.setSubmitting(true);\n\n      const renderSubmit = async () => {\n        const {\n          image,\n          terms,\n          ...rest\n        } = value;\n        const {\n          isNew,\n          file\n        } = image;\n        const postData = rest;\n        const uploadTermsImage = terms.map(async data => {\n          var _data$image;\n\n          if (data === null || data === void 0 ? void 0 : (_data$image = data.image) === null || _data$image === void 0 ? void 0 : _data$image.isNew) {\n            const getUploadedImage = await imageUpload(data.image.file);\n            data.image = getUploadedImage;\n            return data;\n          } else {\n            data.image = await data.image.file;\n            return data;\n          }\n        });\n        let tempdatas = Promise.all(uploadTermsImage).then(dataWithImageUrl => {\n          postData.terms = dataWithImageUrl;\n        });\n\n        if (isNew) {\n          postData.image = await imageUpload(file);\n        } else {\n          postData.image = file;\n        }\n\n        !isEdit && (await addData(postData, helper));\n        isEdit && (await editData(postData, helper));\n      };\n\n      renderSubmit();\n    } catch {\n      Snackbar.show('Image Upload Failed', 'error');\n    }\n  };\n\n  const addData = async (value, {\n    setSubmitting,\n    resetForm\n  }) => {\n    await Post('app/addMealRecipe', value).then(res => {\n      Snackbar.show(res.message, 'success');\n      setSubmitting(false);\n      resetForm();\n      onSuccess();\n    }).catch(err => {\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  const editData = async (data, {\n    setSubmitting,\n    resetForm\n  }) => {\n    setSubmitting(true);\n    console.log(data); //  await Post('app/editMealRecipe', data)\n    //     .then((res: any) => {\n    //       Snackbar.show(res.message, 'success');\n    //       setSubmitting(false);\n    //       resetForm();\n    //       onSuccess();\n    //     })\n    //     .catch((err: any) => {\n    //       Snackbar.show(err.message, 'error');\n    //     });\n  };\n\n  const listAllMealRecipe = () => {\n    Post('app/listAllMealIngredient', {}).then(res => {\n      if (!res.error) {\n        let getequipmentList = res.data.map(data => {\n          data.id = data._id;\n          return data;\n        });\n        setAllIngredients(getequipmentList);\n      } else {\n        Snackbar.show(res.message, 'error');\n      }\n    }).catch(err => {\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  React.useEffect(() => {\n    listAllMealRecipe();\n  }, []);\n  React.useEffect(() => {\n    if (isEdit) {\n      const {\n        terms,\n        image,\n        _id,\n        ingredients,\n        ...rest\n      } = data;\n      const editData = { ...rest,\n        id: _id\n      };\n      editData.image = {\n        file: image,\n        prevImage: image,\n        isNew: false\n      };\n      editData.ingredients = ingredients.map(data => {\n        return {\n          id: data._id,\n          quantity: data.quantity\n        };\n      });\n      editData.terms = terms.map(items => {\n        return {\n          name: items.name,\n          image: {\n            file: items.image,\n            prevImage: items.image,\n            isNew: false\n          },\n          term: items.term\n        };\n      });\n      setInitialValues(editData);\n    } else {\n      setInitialValues(initialFormValues);\n    }\n  }, [props]);\n\n  const addMealRecipeTerms = (values, setFieldValue) => {\n    const {\n      terms\n    } = values;\n    terms.push(mealTerms);\n    setFieldValue('terms', terms);\n  };\n\n  const removeMealRecipeTerms = (values, index, items) => {\n    const {\n      terms\n    } = values;\n    const sampleDummyArray = [...terms];\n    sampleDummyArray.splice(sampleDummyArray.indexOf(items), 1);\n    formikRef.current.setFieldValue('terms', sampleDummyArray);\n  };\n\n  const addIngredients = (values, setFieldValue) => {\n    const {\n      ingredients\n    } = values;\n    ingredients.push(ingredientsSelect);\n    setFieldValue('ingredients', ingredients);\n  };\n\n  const handleOptionChange = (event, value, index) => {\n    formikRef.current.setFieldValue(`ingredients[${index}].id`, value === null || value === void 0 ? void 0 : value.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isOpen,\n      disableBackdropClick: true,\n      disableEscapeKeyDown: true,\n      fullWidth: true,\n      maxWidth: \"md\",\n      \"aria-labelledby\": \"dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"dialog-title\",\n        onClose: onClose,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        innerRef: formikRef,\n        enableReinitialize: true,\n        initialValues: initialValues,\n        onSubmit: onSubmit,\n        validationSchema: Yup.object().shape({\n          name: Yup.string().trim().required('Name is required'),\n          nutrition: Yup.string().trim().required('Nutrition is required'),\n          description: Yup.string().trim().required('Description is required'),\n          protein: Yup.string().trim().required('Protein is required'),\n          fat: Yup.string().trim().required('Fat is required'),\n          carbs: Yup.string().trim().required('Carbs is required'),\n          terms: Yup.array().of(Yup.object().shape({\n            name: Yup.string().trim().required('Meal recipe name is Required'),\n            image: Yup.object({\n              file: Yup.mixed().required('required')\n            }),\n            term: Yup.string().trim().required('Meal Recipe terms is Required')\n          })),\n          ingredients: Yup.array().of(Yup.object().shape({\n            id: Yup.string().trim().required('Ingredients is Required'),\n            quantity: Yup.string().trim().required('Quantity is Required')\n          })),\n          preparation_time: Yup.string().trim().required('Preparation time is required'),\n          preparation_description: Yup.string().trim().required('Preparation description is required'),\n          image: Yup.object({\n            file: Yup.mixed().required('A file is required')\n          })\n        }),\n        children: ({\n          values,\n          errors,\n          touched,\n          handleBlur,\n          handleChange,\n          setFieldValue,\n          submitForm,\n          isSubmitting\n        }) => {\n          var _values$terms, _values$ingredients, _touched$image, _errors$image, _touched$image2, _errors$image2, _values$image, _values$image2;\n\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n              dividers: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Name\",\n                    name: \"name\",\n                    variant: \"outlined\",\n                    value: values.name,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.name && errors.name),\n                    helperText: touched.name && errors.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 657,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 656,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Nutrition\",\n                    name: \"nutrition\",\n                    variant: \"outlined\",\n                    value: values.nutrition,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.nutrition && errors.nutrition),\n                    helperText: touched.nutrition && errors.nutrition\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 674,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 673,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    multiline: true,\n                    label: \"Description\",\n                    name: \"description\",\n                    variant: \"outlined\",\n                    value: values.description,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.description && errors.description),\n                    helperText: touched.description && errors.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 691,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 690,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Protein\",\n                    name: \"protein\",\n                    variant: \"outlined\",\n                    value: values.protein,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.protein && errors.protein),\n                    helperText: touched.protein && errors.protein\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 709,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 708,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Fat\",\n                    name: \"fat\",\n                    variant: \"outlined\",\n                    value: values.fat,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.fat && errors.fat),\n                    helperText: touched.fat && errors.fat\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 726,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 725,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Carbs\",\n                    name: \"carbs\",\n                    variant: \"outlined\",\n                    value: values.carbs,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.carbs && errors.carbs),\n                    helperText: touched.carbs && errors.carbs\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 743,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 742,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 12,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    fullWidth: true,\n                    className: classes.themeButton,\n                    variant: \"contained\",\n                    color: \"default\",\n                    onClick: () => addMealRecipeTerms(values, setFieldValue),\n                    endIcon: /*#__PURE__*/_jsxDEV(ControlPointIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 766,\n                      columnNumber: 42\n                    }, this),\n                    children: \"Add Terms\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 760,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 759,\n                  columnNumber: 25\n                }, this), values === null || values === void 0 ? void 0 : (_values$terms = values.terms) === null || _values$terms === void 0 ? void 0 : _values$terms.map((items, index) => {\n                  var _items$image, _touched$terms$index, _touched$terms$index$, _errors$terms$index, _errors$terms$index$i, _touched$terms$index2, _touched$terms$index3, _errors$terms$index2, _errors$terms$index2$, _touched$terms$index4, _errors$terms$index3, _touched$terms$index5, _errors$terms$index4, _touched$terms$index6, _errors$terms$index5, _touched$terms$index7, _errors$terms$index6;\n\n                  return /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    container: true,\n                    md: 12,\n                    xs: 12,\n                    direction: \"row\",\n                    spacing: 2,\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      md: 1,\n                      xs: 12,\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        ref: avatharimgRef,\n                        type: \"file\",\n                        accept: \".jpg,.png,jpeg\",\n                        onChange: e => onAvatarImageChange(e, index),\n                        onBlur: handleBlur,\n                        hidden: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 783,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n                        className: classes.workouttermsavatar,\n                        variant: \"square\",\n                        onClick: () => avatharimgRef.current.click(),\n                        src: items === null || items === void 0 ? void 0 : (_items$image = items.image) === null || _items$image === void 0 ? void 0 : _items$image.prevImage\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 791,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                        error: Boolean((touched === null || touched === void 0 ? void 0 : touched.terms) && (touched === null || touched === void 0 ? void 0 : (_touched$terms$index = touched.terms[index]) === null || _touched$terms$index === void 0 ? void 0 : (_touched$terms$index$ = _touched$terms$index.image) === null || _touched$terms$index$ === void 0 ? void 0 : _touched$terms$index$.file) && (errors === null || errors === void 0 ? void 0 : errors.terms) && (errors === null || errors === void 0 ? void 0 : (_errors$terms$index = errors.terms[index]) === null || _errors$terms$index === void 0 ? void 0 : (_errors$terms$index$i = _errors$terms$index.image) === null || _errors$terms$index$i === void 0 ? void 0 : _errors$terms$index$i.file)),\n                        children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n                          children: (touched === null || touched === void 0 ? void 0 : touched.terms) && (touched === null || touched === void 0 ? void 0 : (_touched$terms$index2 = touched.terms[index]) === null || _touched$terms$index2 === void 0 ? void 0 : (_touched$terms$index3 = _touched$terms$index2.image) === null || _touched$terms$index3 === void 0 ? void 0 : _touched$terms$index3.file) && (errors === null || errors === void 0 ? void 0 : errors.terms) && (errors === null || errors === void 0 ? void 0 : (_errors$terms$index2 = errors.terms[index]) === null || _errors$terms$index2 === void 0 ? void 0 : (_errors$terms$index2$ = _errors$terms$index2.image) === null || _errors$terms$index2$ === void 0 ? void 0 : _errors$terms$index2$.file)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 805,\n                          columnNumber: 37\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 797,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 782,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      md: 5,\n                      xs: 12,\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        fullWidth: true,\n                        multiline: true,\n                        label: \"Terms name\",\n                        name: `terms[${index}].name`,\n                        variant: \"outlined\",\n                        error: Boolean((touched === null || touched === void 0 ? void 0 : touched.terms) && (touched === null || touched === void 0 ? void 0 : (_touched$terms$index4 = touched.terms[index]) === null || _touched$terms$index4 === void 0 ? void 0 : _touched$terms$index4.name) && (errors === null || errors === void 0 ? void 0 : errors.terms) && (errors === null || errors === void 0 ? void 0 : (_errors$terms$index3 = errors.terms[index]) === null || _errors$terms$index3 === void 0 ? void 0 : _errors$terms$index3.name)),\n                        helperText: (touched === null || touched === void 0 ? void 0 : touched.terms) && (touched === null || touched === void 0 ? void 0 : (_touched$terms$index5 = touched.terms[index]) === null || _touched$terms$index5 === void 0 ? void 0 : _touched$terms$index5.name) && (errors === null || errors === void 0 ? void 0 : errors.terms) && (errors === null || errors === void 0 ? void 0 : (_errors$terms$index4 = errors.terms[index]) === null || _errors$terms$index4 === void 0 ? void 0 : _errors$terms$index4.name),\n                        value: items.name,\n                        onChange: handleChange,\n                        onBlur: handleBlur\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 815,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 814,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      md: 5,\n                      xs: 8,\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        fullWidth: true,\n                        multiline: true,\n                        label: \"Terms description\",\n                        name: `terms[${index}].term`,\n                        variant: \"outlined\",\n                        error: Boolean((touched === null || touched === void 0 ? void 0 : touched.terms) && (touched === null || touched === void 0 ? void 0 : (_touched$terms$index6 = touched.terms[index]) === null || _touched$terms$index6 === void 0 ? void 0 : _touched$terms$index6.term) && (errors === null || errors === void 0 ? void 0 : errors.terms) && (errors === null || errors === void 0 ? void 0 : (_errors$terms$index5 = errors.terms[index]) === null || _errors$terms$index5 === void 0 ? void 0 : _errors$terms$index5.term)),\n                        helperText: (touched === null || touched === void 0 ? void 0 : touched.terms) && (touched === null || touched === void 0 ? void 0 : (_touched$terms$index7 = touched.terms[index]) === null || _touched$terms$index7 === void 0 ? void 0 : _touched$terms$index7.term) && (errors === null || errors === void 0 ? void 0 : errors.terms) && (errors === null || errors === void 0 ? void 0 : (_errors$terms$index6 = errors.terms[index]) === null || _errors$terms$index6 === void 0 ? void 0 : _errors$terms$index6.term),\n                        value: items.term,\n                        onChange: handleChange,\n                        onBlur: handleBlur\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 839,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 838,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      md: 1,\n                      xs: 4,\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        fullWidth: true,\n                        className: classes.deleteButton,\n                        variant: \"contained\",\n                        color: \"secondary\",\n                        onClick: () => removeMealRecipeTerms(values, index, items),\n                        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 871,\n                          columnNumber: 37\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 864,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 863,\n                      columnNumber: 33\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 773,\n                    columnNumber: 33\n                  }, this);\n                }), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 12,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    fullWidth: true,\n                    className: classes.themeButton,\n                    variant: \"contained\",\n                    color: \"default\",\n                    onClick: () => addIngredients(values, setFieldValue),\n                    endIcon: /*#__PURE__*/_jsxDEV(ControlPointIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 884,\n                      columnNumber: 42\n                    }, this),\n                    children: \"Add Ingredients\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 878,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 877,\n                  columnNumber: 25\n                }, this), values === null || values === void 0 ? void 0 : (_values$ingredients = values.ingredients) === null || _values$ingredients === void 0 ? void 0 : _values$ingredients.map((items, index) => {\n                  var _touched$ingredients$3, _errors$ingredients$i3, _touched$ingredients$4, _errors$ingredients$i4;\n\n                  return /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    container: true,\n                    md: 12,\n                    xs: 12,\n                    direction: \"row\",\n                    spacing: 2,\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      md: 5,\n                      xs: 12,\n                      children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                        fullWidth: true,\n                        options: allIngredients,\n                        value: allIngredients.find(data => data._id == items.id),\n                        getOptionLabel: option => option.name,\n                        getOptionSelected: option => option.id == items.id,\n                        onChange: (event, newValue) => handleOptionChange(event, newValue, index),\n                        onBlur: handleBlur,\n                        renderInput: params => {\n                          var _touched$ingredients$, _errors$ingredients$i, _touched$ingredients$2, _errors$ingredients$i2;\n\n                          return /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                            label: \"Ingredients\",\n                            variant: \"outlined\",\n                            error: Boolean((touched === null || touched === void 0 ? void 0 : touched.ingredients) && (touched === null || touched === void 0 ? void 0 : (_touched$ingredients$ = touched.ingredients[index]) === null || _touched$ingredients$ === void 0 ? void 0 : _touched$ingredients$.id) && (errors === null || errors === void 0 ? void 0 : errors.ingredients) && (errors === null || errors === void 0 ? void 0 : (_errors$ingredients$i = errors.ingredients[index]) === null || _errors$ingredients$i === void 0 ? void 0 : _errors$ingredients$i.id)),\n                            helperText: (touched === null || touched === void 0 ? void 0 : touched.ingredients) && (touched === null || touched === void 0 ? void 0 : (_touched$ingredients$2 = touched.ingredients[index]) === null || _touched$ingredients$2 === void 0 ? void 0 : _touched$ingredients$2.id) && (errors === null || errors === void 0 ? void 0 : errors.ingredients) && (errors === null || errors === void 0 ? void 0 : (_errors$ingredients$i2 = errors.ingredients[index]) === null || _errors$ingredients$i2 === void 0 ? void 0 : _errors$ingredients$i2.id),\n                            inputProps: { ...params.inputProps\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 914,\n                            columnNumber: 37\n                          }, this);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 901,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 900,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      md: 6,\n                      xs: 8,\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        fullWidth: true,\n                        multiline: true,\n                        label: \"Quantity\",\n                        name: `ingredients[${index}].quantity`,\n                        variant: \"outlined\",\n                        error: Boolean((touched === null || touched === void 0 ? void 0 : touched.ingredients) && (touched === null || touched === void 0 ? void 0 : (_touched$ingredients$3 = touched.ingredients[index]) === null || _touched$ingredients$3 === void 0 ? void 0 : _touched$ingredients$3.quantity) && (errors === null || errors === void 0 ? void 0 : errors.ingredients) && (errors === null || errors === void 0 ? void 0 : (_errors$ingredients$i3 = errors.ingredients[index]) === null || _errors$ingredients$i3 === void 0 ? void 0 : _errors$ingredients$i3.quantity)),\n                        helperText: (touched === null || touched === void 0 ? void 0 : touched.ingredients) && (touched === null || touched === void 0 ? void 0 : (_touched$ingredients$4 = touched.ingredients[index]) === null || _touched$ingredients$4 === void 0 ? void 0 : _touched$ingredients$4.quantity) && (errors === null || errors === void 0 ? void 0 : errors.ingredients) && (errors === null || errors === void 0 ? void 0 : (_errors$ingredients$i4 = errors.ingredients[index]) === null || _errors$ingredients$i4 === void 0 ? void 0 : _errors$ingredients$i4.quantity),\n                        value: items.quantity,\n                        onChange: handleChange,\n                        onBlur: handleBlur\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 938,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 937,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      md: 1,\n                      xs: 4,\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        fullWidth: true,\n                        className: classes.deleteButton,\n                        variant: \"contained\",\n                        color: \"secondary\" // onClick={() =>\n                        //   removeIngredients(values, index, setFieldValue)\n                        // }\n                        ,\n                        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 972,\n                          columnNumber: 37\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 963,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 962,\n                      columnNumber: 33\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 891,\n                    columnNumber: 33\n                  }, this);\n                }), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Preparation Time\",\n                    name: \"preparation_time\",\n                    variant: \"outlined\",\n                    value: values.preparation_time,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.preparation_time && errors.preparation_time),\n                    helperText: touched.preparation_time && errors.preparation_time\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 979,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 978,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    multiline: true,\n                    label: \"Preparation Description\",\n                    name: \"preparation_description\",\n                    variant: \"outlined\",\n                    value: values.preparation_description,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.preparation_description && errors.preparation_description),\n                    helperText: touched.preparation_description && errors.preparation_description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 996,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 995,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 12,\n                  xs: 12,\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    name: \"image\",\n                    ref: imageRef,\n                    type: \"file\",\n                    accept: \".jpg,.png,jpeg\",\n                    onChange: onImageChange,\n                    onBlur: handleBlur,\n                    hidden: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1014,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    fullWidth: true,\n                    className: classes.themeButton,\n                    variant: \"contained\",\n                    color: \"default\",\n                    onClick: () => imageRef.current.click(),\n                    startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1029,\n                      columnNumber: 40\n                    }, this),\n                    children: \"Upload Image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1023,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                    error: Boolean((touched === null || touched === void 0 ? void 0 : (_touched$image = touched.image) === null || _touched$image === void 0 ? void 0 : _touched$image.file) && (errors === null || errors === void 0 ? void 0 : (_errors$image = errors.image) === null || _errors$image === void 0 ? void 0 : _errors$image.file)),\n                    children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n                      children: (touched === null || touched === void 0 ? void 0 : (_touched$image2 = touched.image) === null || _touched$image2 === void 0 ? void 0 : _touched$image2.file) && (errors === null || errors === void 0 ? void 0 : (_errors$image2 = errors.image) === null || _errors$image2 === void 0 ? void 0 : _errors$image2.file)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1038,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1033,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1013,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 12,\n                  xs: 12,\n                  children: ((_values$image = values.image) === null || _values$image === void 0 ? void 0 : _values$image.prevImage) && /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: classes.imageView,\n                    src: (_values$image2 = values.image) === null || _values$image2 === void 0 ? void 0 : _values$image2.prevImage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1046,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1044,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 655,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 654,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: onClose,\n                variant: \"outlined\",\n                color: \"secondary\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1055,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: classes.themeButton,\n                onClick: () => submitForm(),\n                disabled: isSubmitting,\n                variant: \"outlined\",\n                children: isSubmitting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  size: 24,\n                  style: {\n                    color: 'white'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1066,\n                  columnNumber: 25\n                }, this) : okBtnText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1059,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1054,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s2(AddEditModel, \"yS4LvF6K1ZfyMhN56exs7f5D28w=\", false, function () {\n  return [useStyles, useService, useSnackbar];\n});\n\n_c2 = AddEditModel;\nexport const ViewModel = props => {\n  _s3();\n\n  var _formValue$ingredient, _formValue$workout_te, _formValue$required_e, _formValue$required_e2;\n\n  const {\n    isOpen,\n    title,\n    onClose,\n    data\n  } = props;\n  const classes = useStyles();\n  const [formValue, setFormValue] = React.useState(data);\n  React.useEffect(() => {\n    setFormValue(data);\n  }, [props]);\n  console.log(formValue);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    disableBackdropClick: true,\n    disableEscapeKeyDown: true,\n    fullWidth: true,\n    maxWidth: \"md\",\n    \"aria-labelledby\": \"dialog-view-title\",\n    open: isOpen,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"dialog-view-title\",\n      onClose: onClose,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1097,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: formValue === null || formValue === void 0 ? void 0 : formValue.image,\n          alt: 'Workout image',\n          className: classes.imageView\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        align: \"left\",\n        className: classes.textPrimary,\n        children: formValue === null || formValue === void 0 ? void 0 : formValue.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        align: \"left\",\n        className: classes.textPrimary,\n        children: formValue === null || formValue === void 0 ? void 0 : formValue.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        style: {\n          marginTop: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: /*#__PURE__*/_jsxDEV(TableBody, {\n            children: [/*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Nutrition\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1116,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: formValue === null || formValue === void 0 ? void 0 : formValue.nutrition\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1118,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1117,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Proteins\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1122,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: formValue === null || formValue === void 0 ? void 0 : formValue.protein\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1124,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1123,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Fat\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1128,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: formValue === null || formValue === void 0 ? void 0 : formValue.fat\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1130,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1129,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Carbs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1134,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: formValue === null || formValue === void 0 ? void 0 : formValue.carbs\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1136,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1135,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1133,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        align: \"left\",\n        style: {\n          color: '#41A58D'\n        },\n        className: classes.textPrimary,\n        children: \"Ingredients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        className: classes.ingrdientsGridMain,\n        justify: \"center\",\n        children: [formValue === null || formValue === void 0 ? void 0 : (_formValue$ingredient = formValue.ingredients) === null || _formValue$ingredient === void 0 ? void 0 : _formValue$ingredient.map((value, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          md: 3,\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            className: classes.ingredientsAvatarRoot,\n            src: value === null || value === void 0 ? void 0 : value.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            align: \"center\",\n            children: value === null || value === void 0 ? void 0 : value.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            align: \"center\",\n            children: value.description.length >= 25 ? `${value.description.substring(0, 30)}...` : value.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1162,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1154,\n          columnNumber: 13\n        }, this)), (formValue === null || formValue === void 0 ? void 0 : (_formValue$workout_te = formValue.workout_terms) === null || _formValue$workout_te === void 0 ? void 0 : _formValue$workout_te.length) == 0 && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 12,\n          className: classes.noIngredientsText,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"No Ingredients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1171,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1170,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        align: \"left\",\n        className: classes.textSecondary,\n        children: formValue === null || formValue === void 0 ? void 0 : formValue.workout_description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        align: \"left\",\n        style: {\n          color: '#41A58D'\n        },\n        className: classes.textPrimary,\n        children: \"Meal Recipe Terms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        className: classes.ingrdientsGridMain,\n        justify: \"center\",\n        children: [formValue === null || formValue === void 0 ? void 0 : (_formValue$required_e = formValue.required_equipments) === null || _formValue$required_e === void 0 ? void 0 : _formValue$required_e.map((value, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          md: 3,\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            className: classes.ingredientsAvatarRoot,\n            src: value === null || value === void 0 ? void 0 : value.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            align: \"center\",\n            children: value === null || value === void 0 ? void 0 : value.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1195,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1190,\n          columnNumber: 13\n        }, this)), (formValue === null || formValue === void 0 ? void 0 : (_formValue$required_e2 = formValue.required_equipments) === null || _formValue$required_e2 === void 0 ? void 0 : _formValue$required_e2.length) == 0 && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 12,\n          className: classes.noIngredientsText,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"No Ingredients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1207,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1206,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        variant: \"outlined\",\n        color: \"secondary\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1214,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1213,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1089,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(ViewModel, \"9fAd9pqRjf29KhbDlYBUKf2/COQ=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = ViewModel;\nexport default MealRecipe;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MealRecipe\");\n$RefreshReg$(_c2, \"AddEditModel\");\n$RefreshReg$(_c3, \"ViewModel\");","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/pages/MealRecipe/MealRecipe.tsx"],"names":["React","Avatar","Button","Card","CardActions","CardContent","CircularProgress","Dialog","DialogActions","DialogContent","Grid","IconButton","makeStyles","Paper","Table","TableBody","FormControl","FormHelperText","TableCell","TableContainer","TableHead","TableRow","TextField","Tooltip","Typography","AddIcon","CenterFocusStrongIcon","DeleteIcon","EditIcon","Pagination","Autocomplete","imageUpload","Formik","Yup","DialogTitle","TableLoader","TableNoData","useConfModel","useService","useSnackbar","ControlPointIcon","CloudUploadIcon","useStyles","theme","root","width","breakpoints","values","lg","maxWidth","margin","padding","spacing","themeButton","color","palette","white","backgroundColor","green","main","dark","workouttermsavatar","height","deleteButton","content","inner","minWidth","actions","justifyContent","tabCard","marginTop","sEvenly","display","iconPadd","jCenter","imageView","avatarRoot","borderRadius","marginRight","textPrimary","fontWeight","textSecondary","ingrdientsGridMain","ingredientsAvatarRoot","htmlContentGrid","paddingLeft","paddingRight","paddingTop","noIngredientsText","marginBottom","htmlContent","textAlign","MealRecipe","classes","ConfModel","loading","setLoading","useState","mealRecipeTableData","setMealRecipeTableData","stateData","setStateData","page_no","page_limit","pageCount","setPageCount","Post","Snackbar","addEditDialog","setAddEditDialog","isOpen","title","okBtnText","isEdit","data","viewDialog","setViewDialog","openAddDialog","prevState","openEditDialog","openViewDialog","listMealRecipies","then","res","error","page_count","show","message","catch","err","onDelete","openModel","closeModel","submitFunction","id","_id","onSuccessAction","closeAddEditDialog","closeViewDialog","setElipsis","text","length","substring","useEffect","map","index","image","name","preparation_description","mealTerms","file","prevImage","isNew","term","ingredientsSelect","quantity","initialFormValues","nutrition","description","protein","fat","carbs","terms","ingredients","preparation_time","AddEditModel","props","onClose","onSuccess","initialValues","setInitialValues","formikRef","useRef","imageRef","avatharimgRef","allIngredients","setAllIngredients","onAvatarImageChange","event","persist","files","target","reader","FileReader","onloadend","current","setFieldValue","result","readAsDataURL","workoutTermsName","onImageChange","onSubmit","value","helper","setSubmitting","renderSubmit","rest","postData","uploadTermsImage","getUploadedImage","tempdatas","Promise","all","dataWithImageUrl","addData","editData","resetForm","console","log","listAllMealRecipe","getequipmentList","items","addMealRecipeTerms","push","removeMealRecipeTerms","sampleDummyArray","splice","indexOf","addIngredients","handleOptionChange","object","shape","string","trim","required","array","of","mixed","errors","touched","handleBlur","handleChange","submitForm","isSubmitting","Boolean","e","click","find","option","newValue","params","inputProps","ViewModel","formValue","setFormValue","workout_terms","workout_description","required_equipments"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Avatar, Button, Card, CardActions, CardContent, CircularProgress, Dialog, DialogActions, DialogContent, Grid, IconButton, makeStyles, Paper, Tab,  Table, TableBody, FormControl, FormHelperText, TableCell, TableContainer, TableHead, TableRow, TextField, Tooltip,  Divider, Typography, Tabs} from '@material-ui/core';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Pagination, TabContext, TabList, TabPanel } from '@material-ui/lab';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { imageUpload } from '../../utils/FirebaseUtils';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\r\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\r\nimport Page from '../../components/Page/Page';\r\nimport useConfModel from '../../hook/useConfModel';\r\nimport useService from '../../hook/useService';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\n\r\n\r\nconst useStyles = makeStyles((theme: any)=>({\r\n    root: {\r\n        width: theme.breakpoints.values.lg,\r\n        maxWidth: '100%',\r\n        margin: '0 auto',\r\n        padding: theme.spacing(3),\r\n    },\r\n    themeButton: {\r\n        color: theme.palette.white,\r\n        backgroundColor: theme.palette.green.main,\r\n        '&:hover': {\r\n          backgroundColor: theme.palette.green.dark,\r\n        },\r\n    },\r\n    workouttermsavatar: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    deleteButton: {\r\n        width: '100%',\r\n        height: '50px',\r\n    },\r\n    content: {\r\n      padding: 0,\r\n    },\r\n    inner: {\r\n      minWidth: 700,\r\n    },\r\n    actions: {\r\n      padding: theme.spacing(1),\r\n      justifyContent: 'center',\r\n    },\r\n    tabCard: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    sEvenly: {\r\n      display: 'flex',\r\n      justifyContent: 'space-evenly',\r\n    },\r\n    iconPadd: {\r\n      padding: 5,\r\n    },\r\n    jCenter: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n    },\r\n    imageView : {\r\n      width : '100%',\r\n      height : '100%',\r\n    },\r\n    avatarRoot: {\r\n      borderRadius: 10,\r\n      marginRight: 15,\r\n      width: theme.spacing(10),\r\n      height: theme.spacing(10),\r\n    },\r\n    textPrimary: {\r\n      marginTop: 10,\r\n      fontWeight: 'bold',\r\n    },\r\n    textSecondary: {\r\n      marginTop: 10,\r\n      color: '#f0c100',\r\n    },\r\n    ingrdientsGridMain: {\r\n      marginTop: 10,\r\n    },\r\n    ingredientsAvatarRoot: {\r\n      width: theme.spacing(7),\r\n      height: theme.spacing(7),\r\n      margin: 'auto',\r\n    },\r\n    htmlContentGrid: {\r\n      paddingLeft: theme.spacing(3),\r\n      paddingRight: theme.spacing(3),\r\n      paddingTop: theme.spacing(1),\r\n    },\r\n    noIngredientsText: {\r\n      marginBottom: theme.spacing(3),\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n    },\r\n    htmlContent: {\r\n      '& ul': {\r\n        paddingLeft: '1.2rem',\r\n      },\r\n      '& p': {\r\n        textAlign: 'justify',\r\n      },\r\n    },\r\n}))\r\nfunction MealRecipe() {\r\n  const classes = useStyles();\r\n  const ConfModel = useConfModel();\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [mealRecipeTableData, setMealRecipeTableData] = React.useState([]);\r\n  const [stateData, setStateData] =React.useState({ page_no: 1, page_limit: 10 });\r\n  const [pageCount, setPageCount] =React.useState(0);\r\n  const { Post } = useService();\r\n  const Snackbar = useSnackbar();\r\n  const [addEditDialog, setAddEditDialog] = React.useState({\r\n    isOpen: false,\r\n    title: '',\r\n    okBtnText: '',\r\n    isEdit: false,\r\n    data: {},\r\n  });\r\n  const [viewDialog, setViewDialog] = React.useState({\r\n    isOpen: false,\r\n    title: '',\r\n    data: {},\r\n  });\r\n\r\n  const openAddDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      title: 'Add Meal Recipe',\r\n      isEdit: false,\r\n      okBtnText: 'Save',\r\n    }));\r\n  };\r\n\r\n  const openEditDialog = (data: any) => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      isEdit: true,\r\n      data,\r\n      title: 'Edit Meal Recipe',\r\n      okBtnText: 'Edit',\r\n    }));\r\n  };\r\n\r\n  const openViewDialog = (data: any) => {\r\n    setViewDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      data,\r\n      title: 'View Meal Recipe',\r\n    }));\r\n  };\r\n\r\n  const listMealRecipies = async () => {\r\n    setLoading(true);\r\n    Post('app/listMealRecipe', stateData)\r\n      .then((res: any) => {\r\n        setLoading(false);\r\n        if (!res.error) {\r\n          setMealRecipeTableData(res.data);\r\n          setPageCount(res.page_count);\r\n        } else {\r\n          Snackbar.show(res.message, 'error');\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        setLoading(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const onDelete = (data: any) => {\r\n    const { openModel, setLoading, closeModel } = ConfModel;\r\n    const submitFunction = () => {\r\n      setLoading(true);\r\n      Post('app/deleteMealRecipe', { id: data._id })\r\n        .then(async (res: any) => {\r\n          setLoading(false);\r\n          closeModel();\r\n          onSuccessAction();\r\n          Snackbar.show(res.message, 'success');\r\n        })\r\n        .catch((err: any) => {\r\n          setLoading(false);\r\n          Snackbar.show('Internal Server Error', 'error');\r\n        });\r\n    };\r\n    openModel(submitFunction);\r\n  };\r\n\r\n  const closeAddEditDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const closeViewDialog = () => {\r\n    setViewDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const onSuccessAction = () => {\r\n    listMealRecipies();\r\n    closeAddEditDialog();\r\n  };\r\n\r\n\r\n  const setElipsis = (text: any) => {\r\n    return text?.length >= 25 ? `${text.substring(0, 40)}...` : text;\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    listMealRecipies();\r\n  }, [stateData]);\r\n  return (\r\n    <div className={classes.root}>\r\n        <Grid alignItems='flex-end' container justify='space-between' spacing={3}>\r\n            <Grid item>\r\n            <Typography component='h1' variant='h3'>\r\n                Meal Recipe\r\n            </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n            <Button\r\n                variant='contained'\r\n                onClick={() => openAddDialog()}\r\n                className={classes.themeButton}\r\n                startIcon={<AddIcon />}\r\n            >\r\n                Add\r\n            </Button>\r\n            </Grid>\r\n        </Grid>\r\n\r\n      {/* =============Search======== */}\r\n        <Grid container spacing={3}>\r\n            <Grid item>\r\n                <Paper elevation={0}>\r\n                    <TextField\r\n                    fullWidth\r\n                    size='small'\r\n                    placeholder='Name'\r\n                    variant='outlined'\r\n                    name='state'\r\n                    />\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n\r\n        <Card className={classes.tabCard}>\r\n        <CardContent className={classes.content}>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align='center'>#</TableCell>\r\n                  <TableCell align='center'>Meal Recipe Image</TableCell>\r\n                  <TableCell align='center'>Meal Recipe Name</TableCell>\r\n                  <TableCell align='center'>Meal Recipe Description</TableCell>\r\n                  <TableCell align='center'>Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {!loading &&\r\n                  mealRecipeTableData.map((data: any, index: number) => (\r\n                    <TableRow hover key={index}>\r\n                      <TableCell align='center'>\r\n                        {stateData.page_limit * (stateData.page_no - 1) +\r\n                          index +\r\n                          1}\r\n                      </TableCell>\r\n                      <TableCell align='center'>\r\n                        <div className={classes.jCenter}>\r\n                          <Avatar variant='square' src={data?.image} />\r\n                        </div>\r\n                      </TableCell>\r\n                      <TableCell align='center'>{data?.name}</TableCell>\r\n                      <TableCell align='center'>\r\n                        <Tooltip title={data?.preparation_description}>\r\n                          <span>{setElipsis(data?.preparation_description)}</span>\r\n                        </Tooltip>\r\n                      </TableCell>\r\n                      <TableCell align='center'>\r\n                        <div className={classes.sEvenly}>\r\n                          <Tooltip title='View' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openViewDialog(data)}\r\n                            >\r\n                              <CenterFocusStrongIcon color='primary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Edit' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openEditDialog(data)}\r\n                            >\r\n                              <EditIcon color='action' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Delete' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => onDelete(data)}\r\n                            >\r\n                              <DeleteIcon color='secondary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                {loading && <TableLoader />}\r\n                {!loading && mealRecipeTableData.length == 0 && (\r\n                  <TableNoData>No Data Found</TableNoData>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </CardContent>\r\n\r\n        <CardActions className={classes.actions}>\r\n          <Pagination\r\n            count={pageCount}\r\n            page={stateData.page_no}\r\n            // onChange={onPageChange}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n\r\n        <AddEditModel\r\n            {...addEditDialog}\r\n            onClose={closeAddEditDialog}\r\n            onSuccess={onSuccessAction}\r\n         />\r\n\r\n         <ViewModel {...viewDialog} onClose={closeViewDialog} />\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\ninterface MealTerms {\r\n    name : string,\r\n    image : {file:string | null, prevImage : string, isNew: boolean | null},\r\n    term : string\r\n}\r\n\r\ninterface Ingredients {\r\n    id : string,\r\n    quantity : string\r\n}\r\n\r\ninterface MealPlan {\r\n    name : string,\r\n    image : {file:string | null, prevImage : string, isNew: boolean | null},\r\n    nutrition : string,\r\n    description : string,\r\n    protein : string,\r\n    fat : string,\r\n    carbs : string,\r\n    terms : MealTerms[],\r\n    ingredients : Ingredients[],\r\n    preparation_time : string,\r\n    preparation_description : string\r\n\r\n}\r\n\r\nconst mealTerms: MealTerms = {\r\n    name : '',\r\n    image : { file:null , prevImage : '', isNew: null},\r\n    term : ''\r\n}\r\n\r\nconst ingredientsSelect: Ingredients = {\r\n    id : '',\r\n    quantity:''\r\n}\r\n\r\nconst initialFormValues: MealPlan = {\r\n    name : '',\r\n    image : { file:null, prevImage : '', isNew : null },\r\n    nutrition : '',\r\n    description : '',\r\n    protein : '',\r\n    fat : '',\r\n    carbs : '',\r\n    terms : [mealTerms],\r\n    ingredients : [ingredientsSelect],\r\n    preparation_time : '',\r\n    preparation_description : ''\r\n}\r\n\r\nexport const AddEditModel = (props: any) =>{\r\n    const { isEdit, isOpen, okBtnText = 'OK', onClose, data, title, onSuccess } = props;\r\n    const classes = useStyles()\r\n    const [initialValues, setInitialValues] = React.useState({...initialFormValues});\r\n    const formikRef = React.useRef<any>(null);\r\n    const imageRef = React.useRef<any>(null);\r\n    const avatharimgRef = React.useRef<any>(null);\r\n    const [allIngredients, setAllIngredients] = React.useState([])\r\n    const { Post } = useService();\r\n    const Snackbar = useSnackbar();\r\n\r\n    const onAvatarImageChange = (event: React.ChangeEvent<HTMLInputElement>, index: any) =>{\r\n      event.persist();\r\n      const files = event.target.files;\r\n      if (files && files.length != 0) {\r\n        const reader = new FileReader();\r\n        const file = files[0];\r\n        reader.onloadend = () => {\r\n          formikRef.current.setFieldValue(`terms[${index}].image`, {\r\n            file,\r\n            prevImage: reader.result,\r\n            isNew: true,\r\n          });\r\n        };\r\n        reader.readAsDataURL(file);\r\n      } else {\r\n        formikRef.current.setFieldValue('terms', {\r\n          workoutTermsName: '',\r\n          image: { file: null, prevImage: '', isNew: null },\r\n          description: '',\r\n        });\r\n      }\r\n    }\r\n\r\n    const onImageChange = (event: React.ChangeEvent<HTMLInputElement>) =>{\r\n      event.persist();\r\n      const files = event.target.files;\r\n      if (files && files.length != 0) {\r\n        const reader = new FileReader();\r\n        const file = files[0];\r\n        reader.onloadend = () => {\r\n          formikRef.current.setFieldValue('image', {\r\n            file,\r\n            prevImage: reader.result,\r\n            isNew: true,\r\n          });\r\n        };\r\n        reader.readAsDataURL(file);\r\n      } else {\r\n        formikRef.current.setFieldValue('image', {\r\n          workoutTermsName: '',\r\n          image: { file: null, prevImage: '', isNew: null },\r\n          description: '',\r\n        });\r\n      }\r\n    }\r\n\r\n    const onSubmit = (value: any,helper: any) =>{\r\n      try{\r\n        helper.setSubmitting(true)\r\n        const renderSubmit = async () =>{\r\n          const { image, terms, ...rest} = value;\r\n          const { isNew, file} = image;\r\n          const postData = rest;\r\n          const uploadTermsImage = terms.map(async (data: any)=>{\r\n            if(data?.image?.isNew){\r\n              const getUploadedImage = await imageUpload(data.image.file);\r\n              data.image = getUploadedImage;\r\n              return data;\r\n            }\r\n            else {\r\n              data.image = await data.image.file;\r\n              return data;\r\n            }\r\n          })\r\n\r\n          let tempdatas = Promise.all(uploadTermsImage).then(\r\n            (dataWithImageUrl: any) => {\r\n              postData.terms = dataWithImageUrl;\r\n            }\r\n          );\r\n\r\n          if(isNew){\r\n            postData.image = await imageUpload(file)\r\n          }\r\n          else {\r\n            postData.image = file;\r\n          }\r\n          !isEdit && await addData(postData, helper);\r\n          isEdit && await editData(postData, helper);\r\n        }\r\n        renderSubmit()\r\n      }\r\n      catch{\r\n        Snackbar.show('Image Upload Failed', 'error');\r\n      }\r\n    }\r\n\r\n    const addData = async (value: any, { setSubmitting, resetForm }: any) => {\r\n     await Post('app/addMealRecipe', value)\r\n        .then((res: any) => {\r\n          Snackbar.show(res.message, 'success');\r\n          setSubmitting(false);\r\n          resetForm();\r\n          onSuccess();\r\n        })\r\n        .catch((err: any) => {\r\n          Snackbar.show(err.message, 'error');\r\n        });\r\n    };\r\n  \r\n    const editData = async (data: any, { setSubmitting, resetForm }: any) => {\r\n      setSubmitting(true);\r\n      console.log(data)\r\n    //  await Post('app/editMealRecipe', data)\r\n    //     .then((res: any) => {\r\n    //       Snackbar.show(res.message, 'success');\r\n    //       setSubmitting(false);\r\n    //       resetForm();\r\n    //       onSuccess();\r\n    //     })\r\n    //     .catch((err: any) => {\r\n    //       Snackbar.show(err.message, 'error');\r\n    //     });\r\n    };\r\n\r\n    const listAllMealRecipe = () =>{\r\n      Post('app/listAllMealIngredient', {})\r\n      .then((res: any) => {\r\n        if (!res.error) {\r\n          let getequipmentList = res.data.map((data: any) => {\r\n            data.id = data._id;\r\n            return data;\r\n          });\r\n          setAllIngredients(getequipmentList);\r\n        } else {\r\n          Snackbar.show(res.message, 'error');\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n    }\r\n\r\n    React.useEffect(()=>{\r\n      listAllMealRecipe();\r\n    },[])\r\n\r\n    React.useEffect(()=>{\r\n      if(isEdit){\r\n        const {terms, image, _id, ingredients, ...rest} = data;\r\n        const editData = {...rest, id: _id};\r\n        editData.image = { file: image, prevImage: image, isNew: false };\r\n        editData.ingredients = ingredients.map((data: any)=>{\r\n          return {\r\n            id : data._id,\r\n            quantity: data.quantity\r\n        }\r\n        })\r\n\r\n        editData.terms = terms.map((items: any)=>{\r\n          return {\r\n            name : items.name,\r\n            image : { file:items.image , prevImage : items.image, isNew: false},\r\n            term : items.term\r\n        }\r\n        })\r\n        setInitialValues(editData)\r\n      } \r\n      else {\r\n        setInitialValues(initialFormValues)\r\n      }\r\n    },[props])\r\n\r\n    const addMealRecipeTerms = (values:MealPlan, setFieldValue: any) =>{\r\n      const { terms } = values\r\n      terms.push(mealTerms);\r\n      setFieldValue('terms',terms)\r\n    }\r\n\r\n    const removeMealRecipeTerms = (values: MealPlan, index: any, items: any) =>{\r\n      const { terms } = values;\r\n      const sampleDummyArray = [...terms];\r\n      sampleDummyArray.splice(sampleDummyArray.indexOf(items), 1)\r\n      formikRef.current.setFieldValue('terms',sampleDummyArray);\r\n    }\r\n\r\n    const addIngredients = (values:MealPlan, setFieldValue: any) =>{\r\n      const { ingredients } = values;\r\n      ingredients.push(ingredientsSelect)\r\n      setFieldValue('ingredients',ingredients)\r\n    }\r\n    \r\n    const handleOptionChange = (event: React.ChangeEvent<HTMLInputElement>, value : any, index: any) =>{\r\n      formikRef.current.setFieldValue(`ingredients[${index}].id`,value?.id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Dialog\r\n            open={isOpen}\r\n            disableBackdropClick\r\n            disableEscapeKeyDown\r\n            fullWidth\r\n            maxWidth='md'\r\n            aria-labelledby='dialog-title'\r\n        >\r\n            <DialogTitle id='dialog-title' onClose={onClose}>\r\n             {title}\r\n            </DialogTitle>\r\n            <Formik\r\n                innerRef={formikRef}\r\n                enableReinitialize\r\n                initialValues={initialValues}\r\n                onSubmit={onSubmit}\r\n                validationSchema={Yup.object().shape({\r\n                    name: Yup.string().trim().required('Name is required'),\r\n                    nutrition: Yup.string().trim().required('Nutrition is required'),\r\n                    description: Yup.string().trim().required('Description is required'),\r\n                    protein: Yup.string().trim().required('Protein is required'),\r\n                    fat: Yup.string().trim().required('Fat is required'),\r\n                    carbs: Yup.string().trim().required('Carbs is required'),\r\n                    terms : Yup.array().of(\r\n                        Yup.object().shape({\r\n                            name: Yup.string()\r\n                              .trim()\r\n                              .required('Meal recipe name is Required'),\r\n                            image: Yup.object({\r\n                              file: Yup.mixed().required('required'),\r\n                            }),\r\n                            term: Yup.string()\r\n                              .trim()\r\n                              .required('Meal Recipe terms is Required'),\r\n                        })\r\n                      ),\r\n                    ingredients : Yup.array().of(\r\n                      Yup.object().shape({\r\n                        id: Yup.string().trim().required('Ingredients is Required'),\r\n                        quantity : Yup.string().trim().required('Quantity is Required')\r\n                      })),\r\n                    preparation_time : Yup.string().trim().required('Preparation time is required'),\r\n                    preparation_description :  Yup.string().trim().required('Preparation description is required'),\r\n                    image :  Yup.object({ file: Yup.mixed().required('A file is required'),\r\n                    }),\r\n                  })}\r\n            >\r\n                {({values, errors, touched, handleBlur,handleChange,setFieldValue, submitForm, isSubmitting,})=>(\r\n                <>\r\n                <DialogContent dividers>\r\n                    <Grid container spacing = {2}>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label='Name'\r\n                                name='name'\r\n                                variant='outlined'\r\n                                value={values.name}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                error={Boolean(\r\n                                  touched.name && errors.name\r\n                                )}\r\n                                helperText={\r\n                                  touched.name && errors.name\r\n                                }\r\n                            />\r\n                        </Grid>                        \r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label='Nutrition'\r\n                                name='nutrition'\r\n                                variant='outlined'\r\n                                value={values.nutrition}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                error={Boolean(\r\n                                  touched.nutrition && errors.nutrition\r\n                                )}\r\n                                helperText={\r\n                                  touched.nutrition && errors.nutrition\r\n                                }\r\n                            />\r\n                        </Grid>                        \r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                multiline\r\n                                label='Description'\r\n                                name='description'\r\n                                variant='outlined'\r\n                                value={values.description}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                error={Boolean(\r\n                                  touched.description && errors.description\r\n                                )}\r\n                                helperText={\r\n                                  touched.description && errors.description\r\n                                }\r\n                            />\r\n                        </Grid>                        \r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label='Protein'\r\n                                name='protein'\r\n                                variant='outlined'\r\n                                value={values.protein}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                error={Boolean(\r\n                                  touched.protein && errors.protein\r\n                                )}\r\n                                helperText={\r\n                                  touched.protein && errors.protein\r\n                                }\r\n                            />\r\n                        </Grid>                        \r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label='Fat'\r\n                                name='fat'\r\n                                variant='outlined'\r\n                                value={values.fat}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                error={Boolean(\r\n                                  touched.fat && errors.fat\r\n                                )}\r\n                                helperText={\r\n                                  touched.fat && errors.fat\r\n                                }\r\n                            />\r\n                        </Grid>                        \r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label='Carbs'\r\n                                name='carbs'\r\n                                variant='outlined'\r\n                                value={values.carbs}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                error={Boolean(\r\n                                  touched.carbs && errors.carbs\r\n                                )}\r\n                                helperText={\r\n                                  touched.carbs && errors.carbs\r\n                                }\r\n                            />\r\n                        </Grid>  \r\n                        <Grid item md={12} xs={12}>\r\n                            <Button\r\n                                fullWidth\r\n                                className={classes.themeButton}\r\n                                variant='contained'\r\n                                color='default'\r\n                                onClick={() => addMealRecipeTerms(values, setFieldValue)}\r\n                                endIcon={<ControlPointIcon />}\r\n                            >\r\n                                Add Terms\r\n                            </Button>\r\n                        </Grid>\r\n\r\n                        {values?.terms?.map((items: any, index: any)=>(\r\n                                <Grid\r\n                                key={index}\r\n                                item\r\n                                container\r\n                                md={12}\r\n                                xs={12}\r\n                                direction='row'\r\n                                spacing={2}\r\n                              >\r\n                                <Grid item md={1} xs={12}>\r\n                                  <input\r\n                                    ref={avatharimgRef}\r\n                                    type='file'\r\n                                    accept='.jpg,.png,jpeg'\r\n                                    onChange={(e) => onAvatarImageChange(e, index)}\r\n                                    onBlur={handleBlur}\r\n                                    hidden\r\n                                  />\r\n                                  <Avatar\r\n                                    className={classes.workouttermsavatar}\r\n                                    variant='square'\r\n                                    onClick={() => avatharimgRef.current.click()}\r\n                                    src={items?.image?.prevImage}\r\n                                  />\r\n                                  <FormControl\r\n                                    error={Boolean(\r\n                                      touched?.terms &&\r\n                                        touched?.terms[index]?.image?.file &&\r\n                                        errors?.terms &&\r\n                                        (errors?.terms[index] as any)?.image?.file\r\n                                    )}\r\n                                  >\r\n                                    <FormHelperText>\r\n                                      {touched?.terms &&\r\n                                        touched?.terms[index]?.image?.file &&\r\n                                        errors?.terms &&\r\n                                        (errors?.terms[index] as any)?.image?.file}\r\n                                    </FormHelperText>\r\n                                  </FormControl>\r\n                                </Grid>\r\n          \r\n                                <Grid item md={5} xs={12}>\r\n                                  <TextField\r\n                                    fullWidth\r\n                                    multiline\r\n                                    label='Terms name'\r\n                                    name={`terms[${index}].name`}\r\n                                    variant='outlined'\r\n                                    error={Boolean(\r\n                                      touched?.terms &&\r\n                                        touched?.terms[index]?.name &&\r\n                                        errors?.terms &&\r\n                                        (errors?.terms[index] as any)?.name\r\n                                    )}\r\n                                    helperText={\r\n                                      touched?.terms &&\r\n                                      touched?.terms[index]?.name &&\r\n                                      errors?.terms &&\r\n                                      (errors?.terms[index] as any)?.name\r\n                                    }\r\n                                    value={items.name}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                  />\r\n                                </Grid>\r\n                                <Grid item md={5} xs={8}>\r\n                                  <TextField\r\n                                    fullWidth\r\n                                    multiline\r\n                                    label='Terms description'\r\n                                    name={`terms[${index}].term`}\r\n                                    variant='outlined'\r\n                                    error={Boolean(\r\n                                      touched?.terms &&\r\n                                        touched?.terms[index]?.term &&\r\n                                        errors?.terms &&\r\n                                        (errors?.terms[index] as any)?.term\r\n                                    )}\r\n                                    helperText={\r\n                                      touched?.terms &&\r\n                                      touched?.terms[index]?.term &&\r\n                                      errors?.terms &&\r\n                                      (errors?.terms[index] as any)?.term\r\n                                    }\r\n                                    value={items.term}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                  />\r\n                                </Grid>\r\n          \r\n                                <Grid item md={1} xs={4}>\r\n                                  <Button\r\n                                    fullWidth\r\n                                    className={classes.deleteButton}\r\n                                    variant='contained'\r\n                                    color='secondary'\r\n                                    onClick={()=>removeMealRecipeTerms(values, index, items)}\r\n                                  >\r\n                                    <DeleteIcon />\r\n                                  </Button>\r\n                                </Grid>\r\n                              </Grid>\r\n                            ))}\r\n\r\n                        <Grid item md={12} xs={12}>\r\n                            <Button\r\n                                fullWidth\r\n                                className={classes.themeButton}\r\n                                variant='contained'\r\n                                color='default'\r\n                                onClick={() => addIngredients(values, setFieldValue)}\r\n                                endIcon={<ControlPointIcon />}\r\n                            >\r\n                                Add Ingredients\r\n                            </Button>\r\n                        </Grid>\r\n\r\n                        {values?.ingredients?.map((items: any, index: any)=>(\r\n                                <Grid\r\n                                key={index}\r\n                                item\r\n                                container\r\n                                md={12}\r\n                                xs={12}\r\n                                direction='row'\r\n                                spacing={2}\r\n                              >          \r\n                                <Grid item md={5} xs={12}>\r\n                                <Autocomplete\r\n                                  fullWidth\r\n                                  options={allIngredients}\r\n                                  value={allIngredients.find(\r\n                                    (data: any) => data._id == items.id\r\n                                  )}\r\n                                  getOptionLabel={(option: any) => option.name}\r\n                                  getOptionSelected={(option) =>\r\n                                    option.id == items.id\r\n                                  }\r\n                                  onChange={(event: any,  newValue)=>handleOptionChange(event, newValue, index)}\r\n                                  onBlur={handleBlur}\r\n                                  renderInput={(params) => (\r\n                                    <TextField\r\n                                      {...params}\r\n                                      label='Ingredients'\r\n                                      variant='outlined'\r\n                                      error={Boolean(\r\n                                        touched?.ingredients &&\r\n                                        touched?.ingredients[index]?.id &&\r\n                                        errors?.ingredients &&\r\n                                        (errors?.ingredients[index] as any)?.id\r\n                                      )}\r\n                                      helperText={\r\n                                        touched?.ingredients &&\r\n                                        touched?.ingredients[index]?.id &&\r\n                                        errors?.ingredients &&\r\n                                        (errors?.ingredients[index] as any)?.id\r\n                                      }\r\n                                      inputProps={{\r\n                                        ...params.inputProps,\r\n                                      }}\r\n                                    />\r\n                                  )}\r\n                                />\r\n                                </Grid>\r\n                                <Grid item md={6} xs={8}>\r\n                                  <TextField\r\n                                    fullWidth\r\n                                    multiline\r\n                                    label='Quantity'\r\n                                    name={`ingredients[${index}].quantity`}\r\n                                    variant='outlined'\r\n                                    error={Boolean(\r\n                                      touched?.ingredients &&\r\n                                        touched?.ingredients[index]?.quantity &&\r\n                                        errors?.ingredients &&\r\n                                        (errors?.ingredients[index] as any)?.quantity\r\n                                    )}\r\n                                    helperText={\r\n                                      touched?.ingredients &&\r\n                                      touched?.ingredients[index]?.quantity &&\r\n                                      errors?.ingredients &&\r\n                                      (errors?.ingredients[index] as any)?.quantity\r\n                                    }\r\n                                    value={items.quantity}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                  />\r\n                                </Grid>\r\n          \r\n                                <Grid item md={1} xs={4}>\r\n                                  <Button\r\n                                    fullWidth\r\n                                    className={classes.deleteButton}\r\n                                    variant='contained'\r\n                                    color='secondary'\r\n                                    // onClick={() =>\r\n                                    //   removeIngredients(values, index, setFieldValue)\r\n                                    // }\r\n                                  >\r\n                                    <DeleteIcon />\r\n                                  </Button>\r\n                                </Grid>\r\n                              </Grid>\r\n                        ))}\r\n\r\n                        <Grid item xs={12} md={12}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label='Preparation Time'\r\n                                name='preparation_time'\r\n                                variant='outlined'\r\n                                value={values.preparation_time}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                error={Boolean(\r\n                                  touched.preparation_time && errors.preparation_time\r\n                                )}\r\n                                helperText={\r\n                                  touched.preparation_time && errors.preparation_time\r\n                                }\r\n                            />\r\n                        </Grid>                        \r\n                        <Grid item xs={12} md={12}>\r\n                            <TextField\r\n                                fullWidth\r\n                                multiline\r\n                                label='Preparation Description'\r\n                                name='preparation_description'\r\n                                variant='outlined'\r\n                                value={values.preparation_description}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                error={Boolean(\r\n                                  touched.preparation_description && errors.preparation_description\r\n                                )}\r\n                                helperText={\r\n                                  touched.preparation_description && errors.preparation_description\r\n                                }\r\n                            />\r\n                        </Grid> \r\n                        <Grid item md={12} xs={12}>\r\n                          <input\r\n                            name='image'\r\n                            ref={imageRef}\r\n                            type='file'\r\n                            accept='.jpg,.png,jpeg'\r\n                            onChange={onImageChange}\r\n                            onBlur={handleBlur}\r\n                            hidden\r\n                          />\r\n                          <Button\r\n                            fullWidth\r\n                            className={classes.themeButton}\r\n                            variant='contained'\r\n                            color='default'\r\n                            onClick={() => imageRef.current.click()}\r\n                            startIcon={<CloudUploadIcon />}\r\n                          >\r\n                            Upload Image\r\n                          </Button>\r\n                          <FormControl\r\n                            error={Boolean(\r\n                              touched?.image?.file && errors?.image?.file\r\n                            )}\r\n                          >\r\n                            <FormHelperText>\r\n                              {touched?.image?.file &&\r\n                                errors?.image?.file}\r\n                            </FormHelperText>\r\n                          </FormControl>\r\n                        </Grid>    \r\n                        <Grid item md={12} xs={12}>\r\n                          {values.image?.prevImage && (\r\n                            <img\r\n                              className={classes.imageView}\r\n                              src={values.image?.prevImage}\r\n                            />\r\n                          )}\r\n                        </Grid>       \r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onClose} variant='outlined' color='secondary'>\r\n                      Cancel\r\n                    </Button>\r\n\r\n                    <Button\r\n                      className={classes.themeButton}\r\n                      onClick={() => submitForm()}\r\n                      disabled={isSubmitting}\r\n                      variant='outlined'\r\n                    >\r\n                      {isSubmitting ? (\r\n                        <CircularProgress size={24} style={{color : 'white'}} />\r\n                      ) : (\r\n                        okBtnText\r\n                       )}\r\n                    </Button>\r\n                  </DialogActions>\r\n                </>\r\n            )}\r\n            </Formik>\r\n         </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const ViewModel = (props: any) =>{\r\n  const { isOpen, title, onClose, data } = props;\r\n  const classes = useStyles();\r\n  const [formValue, setFormValue] = React.useState(data);\r\n  React.useEffect(() => {\r\n    setFormValue(data);\r\n  }, [props]);\r\n  console.log(formValue)\r\n  return (\r\n    <Dialog \r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      fullWidth\r\n      maxWidth='md'\r\n      aria-labelledby='dialog-view-title'\r\n      open={isOpen}\r\n    >\r\n       <DialogTitle id='dialog-view-title' onClose={onClose}>\r\n        {title}\r\n      </DialogTitle>\r\n\r\n      <DialogContent dividers>\r\n        <div>\r\n          <img\r\n            src={formValue?.image}\r\n            alt={'Workout image'}\r\n            className={classes.imageView}\r\n          />\r\n        </div>\r\n        <Typography variant='h5' align='left' className={classes.textPrimary}>{formValue?.name}</Typography>\r\n        <Typography variant='h5' align='left' className={classes.textPrimary}>{formValue?.description}</Typography>\r\n\r\n        <Paper style={{marginTop:'20px'}}>\r\n          <Table>\r\n            <TableBody>\r\n              <TableRow>\r\n                <TableCell>Nutrition</TableCell>\r\n                <TableCell>\r\n                  <strong>{formValue?.nutrition}</strong>\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Proteins</TableCell>\r\n                <TableCell>\r\n                  <strong>{formValue?.protein}</strong>\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Fat</TableCell>\r\n                <TableCell>\r\n                  <strong>{formValue?.fat}</strong>\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Carbs</TableCell>\r\n                <TableCell>\r\n                  <strong>{formValue?.carbs}</strong>\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n\r\n        <Typography variant='h5' align='left' style={{ color: '#41A58D' }} className={classes.textPrimary}>\r\n          Ingredients\r\n        </Typography>\r\n\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          className={classes.ingrdientsGridMain}\r\n          justify='center'\r\n        >\r\n          {formValue?.ingredients?.map((value: any, index: any) => (\r\n            <Grid key={index} item xs={4} md={3}>\r\n              <Avatar\r\n                className={classes.ingredientsAvatarRoot}\r\n                src={value?.image}\r\n              />\r\n              <Typography variant='h6' align='center'>\r\n                {value?.name}\r\n              </Typography>\r\n              <Typography variant='subtitle2' align='center'>\r\n                {value.description.length >= 25\r\n                  ? `${value.description.substring(0, 30)}...`\r\n                  : value.description}\r\n              </Typography>\r\n            </Grid>\r\n          ))}\r\n          {formValue?.workout_terms?.length == 0 && (\r\n            <Grid item xs={12} md={12} className={classes.noIngredientsText}>\r\n              <div>No Ingredients</div>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n        <Typography variant='h6' align='left' className={classes.textSecondary}>{formValue?.workout_description}</Typography>\r\n\r\n        \r\n\r\n        <Typography variant='h5' align='left' style={{ color: '#41A58D' }} className={classes.textPrimary}>\r\n          Meal Recipe Terms\r\n        </Typography>\r\n\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          className={classes.ingrdientsGridMain}\r\n          justify='center'\r\n        >\r\n          {formValue?.required_equipments?.map((value: any, index: any) => (\r\n            <Grid key={index} item xs={4} md={3}>\r\n              <Avatar\r\n                className={classes.ingredientsAvatarRoot}\r\n                src={value?.image}\r\n              />\r\n              <Typography variant='h6' align='center'>\r\n                {value?.name}\r\n              </Typography>\r\n              {/* <Typography variant='subtitle2' align='center'>\r\n                {value.description.length >= 25\r\n                  ? `${value.description.substring(0, 30)}...`\r\n                  : value.description}\r\n              </Typography> */}\r\n            </Grid>\r\n          ))}\r\n          {formValue?.required_equipments?.length == 0 && (\r\n            <Grid item xs={12} md={12} className={classes.noIngredientsText}>\r\n              <div>No Ingredients</div>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={onClose} variant='outlined' color='secondary'>\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default MealRecipe\r\n"]},"metadata":{},"sourceType":"module"}