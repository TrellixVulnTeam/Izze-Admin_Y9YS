{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pyramidion\\\\WebApp\\\\Izze-Admin\\\\src\\\\pages\\\\SignIn\\\\SignIn.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport { useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport firebase from '../../firebase';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { LoginApi } from '../../Services/Api/Api';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  loginStyle: {\n    width: '80%',\n    backgroundColor: 'white',\n    margin: 'auto',\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(15),\n    borderRadius: '10px',\n    boxShadow: ' 0px 20px 40px #0000001F',\n    [theme.breakpoints.down('md')]: {\n      width: '90%'\n    }\n  },\n  SigninTextStyle: {\n    textAlign: 'start',\n    paddingLeft: theme.spacing(4),\n    paddingBottom: theme.spacing(2),\n    paddingTop: theme.spacing(1),\n    fontWeight: 500,\n    color: '#41A58D',\n    [theme.breakpoints.down('sm')]: {\n      paddingLeft: theme.spacing(2)\n    }\n  },\n  textboxStyle: {\n    paddingTop: theme.spacing(1)\n  },\n  textboxStyle1: {\n    paddingTop: theme.spacing(3)\n  },\n  textfieldStyle: {\n    width: '90%'\n  },\n  forgotpasswordStyle: {\n    paddingTop: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    textAlign: 'end',\n    textDecoration: 'underline',\n    cursor: 'pointer'\n  },\n  buttonStyle: {\n    display: 'flex',\n    flex: 1,\n    justifyContent: 'space-between',\n    padding: theme.spacing(3.5)\n  },\n  signUpbutton: {\n    width: '40%',\n    backgroundColor: 'white',\n    border: '2px solid #41A58D',\n    color: '#41A58D',\n    textTransform: 'capitalize',\n    '&:hover': {\n      backgroundColor: '#41A58D',\n      color: 'white'\n    }\n  },\n  signinButton: {\n    width: '40%',\n    backgroundColor: '#41A58D',\n    color: 'white',\n    textTransform: 'capitalize',\n    '&:hover': {\n      backgroundColor: 'white',\n      color: '#41A58D',\n      border: '2px solid #41A58D'\n    }\n  }\n}));\nconst validationSchema = Yup.object().shape({\n  userEmail: Yup.string().email('Enter the valid Email.').required('Required *.'),\n  userPassword: Yup.string().min(8, 'Password must be atleast 8 character.').required('Required *.')\n});\n\nfunction SignIn(props) {\n  _s();\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [invalidUserEmail, setInvalidUserEmail] = React.useState(false);\n  const [invalidUserPassword, setInvalidUserPassword] = React.useState(false);\n\n  const loginUser = (userEmail, userPassword) => {\n    setIsLoading(true);\n    firebase.auth().signInWithEmailAndPassword(userEmail, userPassword).then(response => {\n      localStorage.setItem('uid', response.user.uid);\n    }).then(() => {\n      setIsLoading(false);\n      LoginApi({}, onSuccessLogin);\n    }).catch(error => {\n      setIsLoading(false);\n      console.log('error', error);\n\n      if (error.code === 'auth/user-not-found') {\n        setInvalidUserEmail(true);\n      } else if (error.code === 'auth/wrong-password') {\n        setInvalidUserEmail(false);\n        setInvalidUserPassword(true);\n      } else {\n        setInvalidUserPassword(false);\n      }\n    });\n  };\n\n  const onSuccessLogin = response => {\n    setIsLoading(false);\n    props.history.push('/dashboard');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 12,\n        lg: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 12,\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.loginStyle,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              className: classes.SigninTextStyle,\n              children: \"SignIn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              style: isMobile ? {\n                width: '90%',\n                marginLeft: theme.spacing(2)\n              } : {\n                width: '90%',\n                marginLeft: '30px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Formik, {\n                validationSchema: validationSchema,\n                initialValues: {\n                  userEmail: '',\n                  userPassword: ''\n                },\n                onSubmit: value => {\n                  loginUser(value.userEmail, value.userPassword);\n                },\n                children: props => {\n                  const {\n                    values,\n                    errors,\n                    handleChange,\n                    handleSubmit\n                  } = props;\n                  return /*#__PURE__*/_jsxDEV(\"form\", {\n                    onSubmit: handleSubmit,\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: classes.textboxStyle,\n                      children: [/*#__PURE__*/_jsxDEV(TextField, {\n                        className: classes.textfieldStyle,\n                        value: values.userEmail,\n                        onChange: handleChange('userEmail'),\n                        label: \"Enter Email\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 164,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: isMobile ? {\n                          paddingLeft: theme.spacing(2),\n                          paddingTop: theme.spacing(2)\n                        } : {\n                          paddingLeft: theme.spacing(4),\n                          paddingTop: theme.spacing(2)\n                        },\n                        children: /*#__PURE__*/_jsxDEV(Typography, {\n                          style: {\n                            textAlign: 'initial',\n                            fontWeight: 400,\n                            fontSize: 12,\n                            color: 'red'\n                          },\n                          children: invalidUserEmail ? 'Invalid email, Please enter the valid email.' : errors.userEmail\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 183,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 170,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 163,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: classes.textboxStyle1,\n                      children: [/*#__PURE__*/_jsxDEV(TextField, {\n                        type: \"password\",\n                        value: values.userPassword,\n                        onChange: handleChange('userPassword'),\n                        className: classes.textfieldStyle,\n                        label: \"Enter Password\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 198,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: isMobile ? {\n                          paddingLeft: theme.spacing(2),\n                          paddingTop: theme.spacing(2)\n                        } : {\n                          paddingLeft: theme.spacing(4),\n                          paddingTop: theme.spacing(2)\n                        },\n                        children: /*#__PURE__*/_jsxDEV(Typography, {\n                          style: {\n                            textAlign: 'initial',\n                            fontWeight: 400,\n                            fontSize: 12,\n                            color: 'red'\n                          },\n                          children: invalidUserPassword ? 'Invalid password, Please enter the valid password.' : errors.userPassword\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 218,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 205,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 197,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      className: classes.forgotpasswordStyle,\n                      children: \"Forgot Password ?\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 232,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: classes.buttonStyle,\n                      children: [/*#__PURE__*/_jsxDEV(Button, {\n                        className: classes.signUpbutton,\n                        children: \"SignUp\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 236,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Button, {\n                        type: \"submit\",\n                        style: isMobile && isLoading ? {\n                          width: '50%'\n                        } : {},\n                        className: classes.signinButton,\n                        children: [isLoading ? 'Signing In' : 'Sign In', isLoading ? /*#__PURE__*/_jsxDEV(\"i\", {\n                          style: {\n                            fontSize: 15,\n                            marginLeft: 20\n                          },\n                          className: \"fas fa-spinner fa-pulse\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 248,\n                          columnNumber: 31\n                        }, this) : '']\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 239,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 235,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 23\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 12,\n        lg: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignIn, \"gdnhGM5ScbNhphnctZUXJo4XSGY=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery];\n});\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/pages/SignIn/SignIn.tsx"],"names":["React","Typography","Grid","TextField","Button","Divider","useTheme","useMediaQuery","firebase","makeStyles","LoginApi","Formik","Yup","useStyles","theme","loginStyle","width","backgroundColor","margin","padding","spacing","marginTop","borderRadius","boxShadow","breakpoints","down","SigninTextStyle","textAlign","paddingLeft","paddingBottom","paddingTop","fontWeight","color","textboxStyle","textboxStyle1","textfieldStyle","forgotpasswordStyle","paddingRight","textDecoration","cursor","buttonStyle","display","flex","justifyContent","signUpbutton","border","textTransform","signinButton","validationSchema","object","shape","userEmail","string","email","required","userPassword","min","SignIn","props","classes","isMobile","isLoading","setIsLoading","useState","invalidUserEmail","setInvalidUserEmail","invalidUserPassword","setInvalidUserPassword","loginUser","auth","signInWithEmailAndPassword","then","response","localStorage","setItem","user","uid","onSuccessLogin","catch","error","console","log","code","history","push","marginLeft","value","values","errors","handleChange","handleSubmit","fontSize"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport firebase from '../../firebase';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { LoginApi } from '../../Services/Api/Api';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  loginStyle: {\r\n    width: '80%',\r\n    backgroundColor: 'white',\r\n    margin: 'auto',\r\n    padding: theme.spacing(2),\r\n    marginTop: theme.spacing(15),\r\n    borderRadius: '10px',\r\n    boxShadow: ' 0px 20px 40px #0000001F',\r\n    [theme.breakpoints.down('md')]: {\r\n      width: '90%',\r\n    },\r\n  },\r\n  SigninTextStyle: {\r\n    textAlign: 'start',\r\n    paddingLeft: theme.spacing(4),\r\n    paddingBottom: theme.spacing(2),\r\n    paddingTop: theme.spacing(1),\r\n    fontWeight: 500,\r\n    color: '#41A58D',\r\n    [theme.breakpoints.down('sm')]: {\r\n      paddingLeft: theme.spacing(2),\r\n    },\r\n  },\r\n  textboxStyle: {\r\n    paddingTop: theme.spacing(1),\r\n  },\r\n  textboxStyle1: {\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  textfieldStyle: {\r\n    width: '90%',\r\n  },\r\n  forgotpasswordStyle: {\r\n    paddingTop: theme.spacing(3),\r\n    paddingRight: theme.spacing(3),\r\n    textAlign: 'end',\r\n    textDecoration: 'underline',\r\n    cursor: 'pointer',\r\n  },\r\n  buttonStyle: {\r\n    display: 'flex',\r\n    flex: 1,\r\n    justifyContent: 'space-between',\r\n    padding: theme.spacing(3.5),\r\n  },\r\n  signUpbutton: {\r\n    width: '40%',\r\n    backgroundColor: 'white',\r\n    border: '2px solid #41A58D',\r\n    color: '#41A58D',\r\n    textTransform: 'capitalize',\r\n    '&:hover': {\r\n      backgroundColor: '#41A58D',\r\n      color: 'white',\r\n    },\r\n  },\r\n  signinButton: {\r\n    width: '40%',\r\n    backgroundColor: '#41A58D',\r\n    color: 'white',\r\n    textTransform: 'capitalize',\r\n    '&:hover': {\r\n      backgroundColor: 'white',\r\n      color: '#41A58D',\r\n      border: '2px solid #41A58D',\r\n    },\r\n  },\r\n}));\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  userEmail: Yup.string()\r\n    .email('Enter the valid Email.')\r\n    .required('Required *.'),\r\n  userPassword: Yup.string()\r\n    .min(8, 'Password must be atleast 8 character.')\r\n    .required('Required *.'),\r\n});\r\n\r\nfunction SignIn(props: any) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n  const [invalidUserEmail, setInvalidUserEmail] = React.useState(false);\r\n  const [invalidUserPassword, setInvalidUserPassword] = React.useState(false);\r\n\r\n  const loginUser = (userEmail: any, userPassword: any) => {\r\n    setIsLoading(true);\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(userEmail, userPassword)\r\n      .then((response: any) => {\r\n        localStorage.setItem('uid', response.user.uid);\r\n      })\r\n      .then(() => {\r\n        setIsLoading(false);\r\n        LoginApi({}, onSuccessLogin);\r\n      })\r\n      .catch((error: any) => {\r\n        setIsLoading(false);\r\n        console.log('error', error);\r\n        if (error.code === 'auth/user-not-found') {\r\n          setInvalidUserEmail(true);\r\n        } else if (error.code === 'auth/wrong-password') {\r\n          setInvalidUserEmail(false);\r\n          setInvalidUserPassword(true);\r\n        } else {\r\n          setInvalidUserPassword(false);\r\n        }\r\n      });\r\n  };\r\n\r\n  const onSuccessLogin = (response: any) => {\r\n    setIsLoading(false);\r\n    props.history.push('/dashboard');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Grid container>\r\n        <Grid item xs={12} md={12} lg={3}></Grid>\r\n        <Grid item xs={12} md={12} lg={6}>\r\n          <div className={classes.loginStyle}>\r\n            <div>\r\n              <Typography variant='h5' className={classes.SigninTextStyle}>\r\n                SignIn\r\n              </Typography>\r\n              <Divider\r\n                style={\r\n                  isMobile\r\n                    ? { width: '90%', marginLeft: theme.spacing(2) }\r\n                    : { width: '90%', marginLeft: '30px' }\r\n                }\r\n              />\r\n              <div>\r\n                <Formik\r\n                  validationSchema={validationSchema}\r\n                  initialValues={{ userEmail: '', userPassword: '' }}\r\n                  onSubmit={(value) => {\r\n                    loginUser(value.userEmail, value.userPassword);\r\n                  }}\r\n                >\r\n                  {(props) => {\r\n                    const { values, errors, handleChange, handleSubmit } =\r\n                      props;\r\n                    return (\r\n                      <form onSubmit={handleSubmit}>\r\n                        <div className={classes.textboxStyle}>\r\n                          <TextField\r\n                            className={classes.textfieldStyle}\r\n                            value={values.userEmail}\r\n                            onChange={handleChange('userEmail')}\r\n                            label='Enter Email'\r\n                          />\r\n                          <div\r\n                            style={\r\n                              isMobile\r\n                                ? {\r\n                                    paddingLeft: theme.spacing(2),\r\n                                    paddingTop: theme.spacing(2),\r\n                                  }\r\n                                : {\r\n                                    paddingLeft: theme.spacing(4),\r\n                                    paddingTop: theme.spacing(2),\r\n                                  }\r\n                            }\r\n                          >\r\n                            <Typography\r\n                              style={{\r\n                                textAlign: 'initial',\r\n                                fontWeight: 400,\r\n                                fontSize: 12,\r\n                                color: 'red',\r\n                              }}\r\n                            >\r\n                              {invalidUserEmail\r\n                                ? 'Invalid email, Please enter the valid email.'\r\n                                : errors.userEmail}\r\n                            </Typography>\r\n                          </div>\r\n                        </div>\r\n                        <div className={classes.textboxStyle1}>\r\n                          <TextField\r\n                            type='password'\r\n                            value={values.userPassword}\r\n                            onChange={handleChange('userPassword')}\r\n                            className={classes.textfieldStyle}\r\n                            label='Enter Password'\r\n                          />\r\n                          <div\r\n                            style={\r\n                              isMobile\r\n                                ? {\r\n                                    paddingLeft: theme.spacing(2),\r\n                                    paddingTop: theme.spacing(2),\r\n                                  }\r\n                                : {\r\n                                    paddingLeft: theme.spacing(4),\r\n                                    paddingTop: theme.spacing(2),\r\n                                  }\r\n                            }\r\n                          >\r\n                            <Typography\r\n                              style={{\r\n                                textAlign: 'initial',\r\n                                fontWeight: 400,\r\n                                fontSize: 12,\r\n                                color: 'red',\r\n                              }}\r\n                            >\r\n                              {invalidUserPassword\r\n                                ? 'Invalid password, Please enter the valid password.'\r\n                                : errors.userPassword}\r\n                            </Typography>\r\n                          </div>\r\n                        </div>\r\n                        <Typography className={classes.forgotpasswordStyle}>\r\n                          Forgot Password ?\r\n                        </Typography>\r\n                        <div className={classes.buttonStyle}>\r\n                          <Button className={classes.signUpbutton}>\r\n                            SignUp\r\n                          </Button>\r\n                          <Button\r\n                            type='submit'\r\n                            style={\r\n                              isMobile && isLoading ? { width: '50%' } : {}\r\n                            }\r\n                            className={classes.signinButton}\r\n                          >\r\n                            {isLoading ? 'Signing In' : 'Sign In'}\r\n                            {isLoading ? (\r\n                              <i\r\n                                style={{ fontSize: 15, marginLeft: 20 }}\r\n                                className='fas fa-spinner fa-pulse'\r\n                              ></i>\r\n                            ) : (\r\n                              ''\r\n                            )}\r\n                          </Button>\r\n                        </div>\r\n                      </form>\r\n                    );\r\n                  }}\r\n                </Formik>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12} md={12} lg={3}></Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n"]},"metadata":{},"sourceType":"module"}