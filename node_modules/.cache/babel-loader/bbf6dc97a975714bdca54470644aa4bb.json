{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pyramidion\\\\WebApp\\\\Izze-Admin\\\\src\\\\pages\\\\AdminProfileDetails\\\\AdminProfileDetails.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, Avatar, CircularProgress, Dialog, DialogActions, DialogContent, Grid, IconButton, makeStyles, Paper, Table, TableBody, TableCell, TableRow, TextField } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport useService from '../../hook/useService';\nimport useSnackbar from '../../hook/useSnackbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height: '91vh'\n  },\n  displayFlex: {\n    padding: theme.spacing(10),\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100%'\n  },\n  spaceEvenly: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    height: '100%',\n    width: '80%',\n    margin: 'auto'\n  },\n  paperStyle: {\n    width: '100%',\n    height: '100%'\n  },\n  avatharStyle: {\n    width: theme.spacing(20),\n    height: theme.spacing(20)\n  },\n  themeButton: {\n    color: theme.palette.white,\n    backgroundColor: theme.palette.green.main,\n    '&:hover': {\n      backgroundColor: theme.palette.green.dark\n    }\n  }\n}));\n\nfunction AdminProfileDetails() {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.displayFlex,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paperStyle,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.spaceEvenly,\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            variant: \"square\",\n            className: classes.avatharStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            style: {\n              width: '65%'\n            },\n            children: /*#__PURE__*/_jsxDEV(TableBody, {\n              children: [/*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: \"SomeName\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    className: classes.themeButton,\n                    children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 61,\n                      columnNumber: 104\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 60\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: \"SomeName@123.com\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: \"Admin Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: \"Nutritionist\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: \"**********\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: /*#__PURE__*/_jsxDEV(ChangePassword, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 60\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AdminProfileDetails, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = AdminProfileDetails;\nconst initialValues = {\n  password: '',\n  confirmPassword: ''\n};\nexport const ChangePassword = () => {\n  _s2();\n\n  const classes = useStyles();\n  const formikRef = React.useRef(null);\n  const [isOpen, setIsOpen] = React.useState(false);\n  const {\n    Post\n  } = useService();\n  const Snackbar = useSnackbar();\n  const [initialFormValues, setInitialFormValues] = React.useState({ ...initialValues\n  });\n\n  const changePasswordModel = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const onClose = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const onSubmit = (value, helper) => {\n    const {\n      confirmPassword\n    } = value;\n    let postData = {\n      password: confirmPassword\n    };\n    changePasswordData(postData, helper);\n  };\n\n  const changePasswordData = (data, {\n    setSubmitting,\n    resetForm\n  }) => {\n    Post('app/addAdminUser', data).then(res => {\n      Snackbar.show(res.message, 'success');\n      setSubmitting(false);\n      resetForm();\n      onClose();\n    }).catch(err => {\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: changePasswordModel,\n      className: classes.themeButton,\n      children: \"ChangePassword\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isOpen,\n      disableBackdropClick: true,\n      disableEscapeKeyDown: true,\n      fullWidth: true,\n      maxWidth: \"sm\",\n      \"aria-labelledby\": \"dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"dialog-title\",\n        onClose: onClose,\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        innerRef: formikRef,\n        enableReinitialize: true,\n        initialValues: initialFormValues,\n        validationSchema: Yup.object().shape({\n          password: Yup.string().required('Password is required'),\n          confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Password must be same').required('Confirm password is required')\n        }),\n        onSubmit: onSubmit,\n        children: ({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          setFieldValue,\n          submitForm,\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n            dividers: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Password\",\n                  variant: \"outlined\",\n                  name: \"password\",\n                  type: \"password\",\n                  value: values.password,\n                  onBlur: handleBlur,\n                  onChange: handleChange,\n                  error: Boolean(touched.password && errors.password),\n                  helperText: touched.password && errors.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Confirm Password\",\n                  variant: \"outlined\",\n                  name: \"confirmPassword\",\n                  type: \"password\",\n                  value: values.confirmPassword,\n                  onBlur: handleBlur,\n                  onChange: handleChange,\n                  error: Boolean(touched.confirmPassword && errors.confirmPassword),\n                  helperText: touched.confirmPassword && errors.confirmPassword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: onClose,\n              variant: \"outlined\",\n              color: \"secondary\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: classes.themeButton,\n              onClick: () => submitForm(),\n              disabled: isSubmitting,\n              variant: \"outlined\",\n              children: isSubmitting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 24,\n                style: {\n                  color: 'white'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 29\n              }, this) : 'ChangePassword'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(ChangePassword, \"TMoobh1khZM7I8MBm2b2LZnwVsQ=\", false, function () {\n  return [useStyles, useService, useSnackbar];\n});\n\n_c2 = ChangePassword;\nexport default AdminProfileDetails;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AdminProfileDetails\");\n$RefreshReg$(_c2, \"ChangePassword\");","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/pages/AdminProfileDetails/AdminProfileDetails.tsx"],"names":["React","Button","Avatar","CircularProgress","Dialog","DialogActions","DialogContent","Grid","IconButton","makeStyles","Paper","Table","TableBody","TableCell","TableRow","TextField","EditIcon","DialogTitle","Formik","Yup","useService","useSnackbar","useStyles","theme","root","width","height","displayFlex","padding","spacing","display","justifyContent","alignItems","spaceEvenly","flexDirection","margin","paperStyle","avatharStyle","themeButton","color","palette","white","backgroundColor","green","main","dark","AdminProfileDetails","classes","initialValues","password","confirmPassword","ChangePassword","formikRef","useRef","isOpen","setIsOpen","useState","Post","Snackbar","initialFormValues","setInitialFormValues","changePasswordModel","onClose","onSubmit","value","helper","postData","changePasswordData","data","setSubmitting","resetForm","then","res","show","message","catch","err","object","shape","string","required","oneOf","ref","values","errors","touched","handleChange","handleBlur","setFieldValue","submitForm","isSubmitting","Boolean"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Button, Card, CardActionArea, CardActions, Avatar, CardContent, CardMedia, CircularProgress, Dialog, DialogActions, DialogContent, Divider, FormControl, FormHelperText, Grid, IconButton, makeStyles, Paper, Tab, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, Tooltip, Typography } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport useService from '../../hook/useService';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\n\r\nconst useStyles = makeStyles((theme: any)=>({\r\n    root : {\r\n        width : '100%',\r\n        height : '91vh'\r\n    },\r\n    displayFlex : {\r\n        padding :theme.spacing(10),\r\n        display : 'flex',\r\n        justifyContent : 'center',\r\n        alignItems : 'center',\r\n        height : '100%'\r\n    },\r\n    spaceEvenly : {\r\n        display : 'flex',\r\n        flexDirection : 'column',\r\n        justifyContent : 'space-evenly',\r\n        alignItems : 'center',\r\n        height : '100%',\r\n        width : '80%',\r\n        margin:'auto'\r\n    },\r\n    paperStyle : {\r\n        width : '100%',\r\n        height : '100%'\r\n    },\r\n    avatharStyle : {\r\n        width : theme.spacing(20),\r\n        height : theme.spacing(20)\r\n    },\r\n    themeButton: {\r\n        color: theme.palette.white,\r\n        backgroundColor: theme.palette.green.main,\r\n        '&:hover': {\r\n          backgroundColor: theme.palette.green.dark,\r\n        },\r\n    },\r\n}))\r\n\r\nfunction AdminProfileDetails() {\r\n    const classes = useStyles()\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.displayFlex}>\r\n                <Paper className = {classes.paperStyle}>\r\n                    <div className={classes.spaceEvenly}>\r\n                        <Avatar variant='square' className={classes.avatharStyle} />\r\n                        <Table style={{width : '65%'}}>\r\n                            <TableBody>\r\n                            <TableRow >\r\n                                <TableCell align = 'right'>Name</TableCell>\r\n                                <TableCell align = 'right'>SomeName</TableCell>\r\n                                <TableCell align = 'right'><IconButton className={classes.themeButton}><EditIcon /></IconButton></TableCell>\r\n                            </TableRow>\r\n                            <TableRow >\r\n                                <TableCell align = 'right'>Email</TableCell>\r\n                                <TableCell align = 'right'>SomeName@123.com</TableCell>\r\n                                <TableCell align = 'right'></TableCell>\r\n                            </TableRow>\r\n                            <TableRow >\r\n                                <TableCell align = 'right'>Admin Type</TableCell>\r\n                                <TableCell align = 'right'>Nutritionist</TableCell>\r\n                                <TableCell align = 'right'></TableCell>\r\n                            </TableRow>\r\n                            <TableRow >\r\n                                <TableCell align = 'right'>Password</TableCell>\r\n                                <TableCell align = 'right'>**********</TableCell>\r\n                                <TableCell align = 'right'><ChangePassword /></TableCell>\r\n                            </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                    </div>\r\n                </Paper>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst initialValues = {\r\n    password : '',\r\n    confirmPassword : '',\r\n}\r\nexport const ChangePassword = () =>{\r\n    const classes = useStyles();\r\n    const formikRef = React.useRef<any>(null);\r\n    const [isOpen, setIsOpen] = React.useState(false);\r\n    const { Post } = useService();\r\n    const Snackbar = useSnackbar();\r\n    const [initialFormValues, setInitialFormValues] = React.useState({...initialValues})\r\n\r\n    const changePasswordModel = () =>{\r\n        setIsOpen(!isOpen)\r\n    }\r\n\r\n    const onClose = () =>{\r\n        setIsOpen(!isOpen)\r\n    }\r\n\r\n    const onSubmit = (value: any, helper: any) =>{\r\n        const { confirmPassword } = value\r\n        let postData = {\r\n            password : confirmPassword\r\n        }\r\n        changePasswordData(postData, helper)\r\n    }\r\n\r\n    const changePasswordData = (data: any, { setSubmitting, resetForm }: any) =>{\r\n        Post('app/addAdminUser', data)\r\n        .then((res: any) => {\r\n            Snackbar.show(res.message, 'success');\r\n            setSubmitting(false);\r\n            resetForm();\r\n            onClose();\r\n        })\r\n        .catch((err: any) => {\r\n            Snackbar.show(err.message, 'error');\r\n        });\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <Button onClick={changePasswordModel} className={classes.themeButton}>ChangePassword</Button>\r\n            <Dialog\r\n                open={isOpen}\r\n                disableBackdropClick\r\n                disableEscapeKeyDown\r\n                fullWidth\r\n                maxWidth='sm'\r\n                aria-labelledby='dialog-title'\r\n            >\r\n                <DialogTitle id='dialog-title' onClose={onClose}>\r\n                    Change Password\r\n                </DialogTitle>\r\n                <Formik\r\n                    innerRef={formikRef}\r\n                    enableReinitialize\r\n                    initialValues={initialFormValues}\r\n                    validationSchema={Yup.object().shape({\r\n                        password : Yup.string().required('Password is required'),\r\n                        confirmPassword : Yup.string().oneOf([Yup.ref('password'),null], 'Password must be same').required('Confirm password is required')\r\n                    })}\r\n                    onSubmit={onSubmit}\r\n                >\r\n                {({ values, errors, touched, handleChange, handleBlur, setFieldValue, submitForm, isSubmitting }) => (\r\n                    <>\r\n                    <DialogContent dividers>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                                <TextField \r\n                                    fullWidth \r\n                                    label = 'Password'\r\n                                    variant='outlined' \r\n                                    name = 'password'\r\n                                    type = 'password'\r\n                                    value={values.password}\r\n                                    onBlur={handleBlur}\r\n                                    onChange={handleChange}\r\n                                    error={Boolean(touched.password && errors.password)}\r\n                                    helperText={touched.password && errors.password}\r\n                                />    \r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField \r\n                                    fullWidth \r\n                                    label = 'Confirm Password'\r\n                                    variant='outlined'\r\n                                    name = 'confirmPassword'\r\n                                    type = 'password'\r\n                                    value={values.confirmPassword}\r\n                                    onBlur={handleBlur}\r\n                                    onChange={handleChange}\r\n                                    error={Boolean(touched.confirmPassword && errors.confirmPassword)}\r\n                                    helperText={touched.confirmPassword && errors.confirmPassword}\r\n                                />   \r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContent>\r\n\r\n                    <DialogActions>\r\n                        <Button onClick={onClose} variant='outlined' color='secondary'>\r\n                        Cancel\r\n                        </Button>\r\n                        <Button\r\n                        className={classes.themeButton}\r\n                        onClick={() => submitForm()}\r\n                        disabled={isSubmitting}\r\n                        variant='outlined'\r\n                        >\r\n                        {isSubmitting ? (\r\n                            <CircularProgress size={24} style={{ color: 'white' }} />\r\n                        ) : (\r\n                            'ChangePassword'\r\n                        )}\r\n                        </Button>\r\n                    </DialogActions>\r\n                    </>\r\n                )}\r\n                </Formik>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default AdminProfileDetails\r\n"]},"metadata":{},"sourceType":"module"}