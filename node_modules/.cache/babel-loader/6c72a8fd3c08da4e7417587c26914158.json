{"ast":null,"code":"import { Mark, mergeAttributes, markInputRule, markPasteRule } from '@tiptap/core';\nvar starInputRegex = /(?:^|\\s)((?:\\*\\*)((?:[^*]+))(?:\\*\\*))$/gm;\nvar starPasteRegex = /(?:^|\\s)((?:\\*\\*)((?:[^*]+))(?:\\*\\*))/gm;\nvar underscoreInputRegex = /(?:^|\\s)((?:__)((?:[^__]+))(?:__))$/gm;\nvar underscorePasteRegex = /(?:^|\\s)((?:__)((?:[^__]+))(?:__))/gm;\nvar Bold = Mark.create({\n  name: 'bold',\n  defaultOptions: {\n    HTMLAttributes: {}\n  },\n  parseHTML: function parseHTML() {\n    return [{\n      tag: 'strong'\n    }, {\n      tag: 'b',\n      getAttrs: function getAttrs(node) {\n        return node.style.fontWeight !== 'normal' && null;\n      }\n    }, {\n      style: 'font-weight',\n      getAttrs: function getAttrs(value) {\n        return /^(bold(er)?|[5-9]\\d{2,})$/.test(value) && null;\n      }\n    }];\n  },\n  renderHTML: function renderHTML(_ref) {\n    var HTMLAttributes = _ref.HTMLAttributes;\n    return ['strong', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n  },\n  addCommands: function addCommands() {\n    return {\n      setBold: function setBold() {\n        return function (_ref2) {\n          var commands = _ref2.commands;\n          return commands.setMark('bold');\n        };\n      },\n      toggleBold: function toggleBold() {\n        return function (_ref3) {\n          var commands = _ref3.commands;\n          return commands.toggleMark('bold');\n        };\n      },\n      unsetBold: function unsetBold() {\n        return function (_ref4) {\n          var commands = _ref4.commands;\n          return commands.unsetMark('bold');\n        };\n      }\n    };\n  },\n  addKeyboardShortcuts: function addKeyboardShortcuts() {\n    var _this = this;\n\n    return {\n      'Mod-b': function ModB() {\n        return _this.editor.commands.toggleBold();\n      }\n    };\n  },\n  addInputRules: function addInputRules() {\n    return [markInputRule(starInputRegex, this.type), markInputRule(underscoreInputRegex, this.type)];\n  },\n  addPasteRules: function addPasteRules() {\n    return [markPasteRule(starPasteRegex, this.type), markPasteRule(underscorePasteRegex, this.type)];\n  }\n});\nexport default Bold;\nexport { Bold, starInputRegex, starPasteRegex, underscoreInputRegex, underscorePasteRegex };","map":null,"metadata":{},"sourceType":"module"}