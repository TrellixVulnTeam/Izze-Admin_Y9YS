{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pyramidion\\\\WebApp\\\\Izze-Admin\\\\src\\\\hook\\\\SnackbarProvider.tsx\";\n\n/* eslint-disable react/prop-types */\n// eslint-disable-next-line\nimport React from 'react';\nimport { IconButton, Snackbar } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Alert } from '@material-ui/lab';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SnackbarContext = /*#__PURE__*/React.createContext(undefined);\nconst initialOrigin = {\n  vertical: 'top',\n  horizontal: 'center'\n};\nconst SnackbarAutoHideDuration = 3000;\nconst initialState = {\n  open: false,\n  message: '',\n  origin: initialOrigin,\n  severity: undefined,\n  autoHide: true,\n  autoHideDuration: SnackbarAutoHideDuration\n};\n\nclass SnackbarProvider extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.showSnackBar = (message, severity, position, autoHide, autoHideDuration) => {\n      this.setState({\n        open: true,\n        message,\n        origin: position || initialState.origin,\n        severity,\n        autoHide: autoHide || initialState.autoHide,\n        autoHideDuration: autoHideDuration || initialState.autoHideDuration\n      });\n    };\n\n    this.handleClose = (event, reason) => {\n      if (reason === 'clickaway') {\n        return;\n      }\n\n      this.setState(initialState);\n    };\n  }\n\n  render() {\n    const {\n      open,\n      origin,\n      severity,\n      message,\n      autoHide,\n      autoHideDuration\n    } = this.state;\n    const ProviderValue = {\n      show: this.showSnackBar\n    };\n    return /*#__PURE__*/_jsxDEV(SnackbarContext.Provider, {\n      value: ProviderValue,\n      children: [severity ? /*#__PURE__*/_jsxDEV(Snackbar, {\n        anchorOrigin: origin,\n        open: open,\n        onClose: this.handleClose,\n        autoHideDuration: autoHide ? autoHideDuration : null,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: this.handleClose,\n          severity: severity,\n          variant: \"filled\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Snackbar, {\n        anchorOrigin: origin,\n        open: open,\n        onClose: this.handleClose,\n        autoHideDuration: autoHide ? autoHideDuration : null,\n        message: message,\n        action: /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          \"aria-label\": \"close\",\n          color: \"inherit\",\n          onClick: this.handleClose,\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), this.props.children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default SnackbarProvider;","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/hook/SnackbarProvider.tsx"],"names":["React","IconButton","Snackbar","CloseIcon","Alert","SnackbarContext","createContext","undefined","initialOrigin","vertical","horizontal","SnackbarAutoHideDuration","initialState","open","message","origin","severity","autoHide","autoHideDuration","SnackbarProvider","Component","state","showSnackBar","position","setState","handleClose","event","reason","render","ProviderValue","show","props","children"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\r\n// eslint-disable-next-line\r\nimport React from 'react';\r\nimport { IconButton, Snackbar, SnackbarOrigin } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nexport const SnackbarContext = React.createContext(undefined);\r\n\r\nconst initialOrigin: SnackbarOrigin = {\r\n  vertical: 'top',\r\n  horizontal: 'center'\r\n};\r\n\r\nconst SnackbarAutoHideDuration: number = 3000;\r\n\r\nexport type Severity = 'success' | 'info' | 'warning' | 'error' | undefined;\r\n\r\ninterface stateType {\r\n  open: boolean;\r\n  message: string;\r\n  origin: SnackbarOrigin;\r\n  severity: Severity;\r\n  autoHide?: boolean;\r\n  autoHideDuration: number;\r\n}\r\n\r\nconst initialState: stateType = {\r\n  open: false,\r\n  message: '',\r\n  origin: initialOrigin,\r\n  severity: undefined,\r\n  autoHide: true,\r\n  autoHideDuration: SnackbarAutoHideDuration\r\n};\r\n\r\nclass SnackbarProvider extends React.Component {\r\n  state: stateType = initialState;\r\n\r\n  showSnackBar = (\r\n    message: string,\r\n    severity?: Severity,\r\n    position?: SnackbarOrigin,\r\n    autoHide?: boolean,\r\n    autoHideDuration?: number\r\n  ) => {\r\n    this.setState({\r\n      open: true,\r\n      message,\r\n      origin: position || initialState.origin,\r\n      severity,\r\n      autoHide: autoHide || initialState.autoHide,\r\n      autoHideDuration: autoHideDuration || initialState.autoHideDuration\r\n    });\r\n  };\r\n\r\n  handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    this.setState(initialState);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      open,\r\n      origin,\r\n      severity,\r\n      message,\r\n      autoHide,\r\n      autoHideDuration\r\n    } = this.state;\r\n    const ProviderValue: any = {\r\n      show: this.showSnackBar\r\n    };\r\n    return (\r\n      <SnackbarContext.Provider value={ProviderValue}>\r\n        {severity ? (\r\n          <Snackbar\r\n            anchorOrigin={origin}\r\n            open={open}\r\n            onClose={this.handleClose}\r\n            autoHideDuration={autoHide ? autoHideDuration : null}\r\n          >\r\n            <Alert\r\n              onClose={this.handleClose}\r\n              severity={severity}\r\n              variant=\"filled\"\r\n            >\r\n              {message}\r\n            </Alert>\r\n          </Snackbar>\r\n        ) : (\r\n          <Snackbar\r\n            anchorOrigin={origin}\r\n            open={open}\r\n            onClose={this.handleClose}\r\n            autoHideDuration={autoHide ? autoHideDuration : null}\r\n            message={message}\r\n            action={\r\n              <IconButton\r\n                size=\"small\"\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                onClick={this.handleClose}\r\n              >\r\n                <CloseIcon fontSize=\"small\" />\r\n              </IconButton>\r\n            }\r\n          />\r\n        )}\r\n        {this.props.children}\r\n      </SnackbarContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SnackbarProvider;\r\n"]},"metadata":{},"sourceType":"module"}