{"ast":null,"code":"import _objectWithoutProperties from \"D:/Pyramidion/WebApp/Izze-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"D:/Pyramidion/WebApp/Izze-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"D:/Pyramidion/WebApp/Izze-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _createClass from \"D:/Pyramidion/WebApp/Izze-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _slicedToArray from \"D:/Pyramidion/WebApp/Izze-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"D:/Pyramidion/WebApp/Izze-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _inherits from \"D:/Pyramidion/WebApp/Izze-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:/Pyramidion/WebApp/Izze-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Editor as Editor$1, NodeView } from '@tiptap/core';\nexport * from '@tiptap/core';\nimport React, { useRef, useEffect, useState, createContext, useContext } from 'react';\nimport { BubbleMenuPlugin, BubbleMenuPluginKey } from '@tiptap/extension-bubble-menu';\nimport { FloatingMenuPlugin, FloatingMenuPluginKey } from '@tiptap/extension-floating-menu';\nimport ReactDOM from 'react-dom';\n\nvar BubbleMenu = function BubbleMenu(props) {\n  var element = useRef(null);\n  useEffect(function () {\n    var editor = props.editor,\n        tippyOptions = props.tippyOptions;\n    editor.registerPlugin(BubbleMenuPlugin({\n      editor: editor,\n      element: element.current,\n      tippyOptions: tippyOptions\n    }));\n    return function () {\n      editor.unregisterPlugin(BubbleMenuPluginKey);\n    };\n  }, []);\n  return React.createElement(\"div\", {\n    ref: element,\n    className: props.className,\n    style: {\n      visibility: 'hidden'\n    }\n  }, props.children);\n};\n\nvar Editor = /*#__PURE__*/function (_Editor$) {\n  _inherits(Editor, _Editor$);\n\n  var _super = _createSuper(Editor);\n\n  function Editor() {\n    var _this;\n\n    _classCallCheck(this, Editor);\n\n    _this = _super.apply(this, arguments);\n    _this.contentComponent = null;\n    return _this;\n  }\n\n  return Editor;\n}(Editor$1);\n\nvar FloatingMenu = function FloatingMenu(props) {\n  var element = useRef(null);\n  useEffect(function () {\n    var editor = props.editor,\n        tippyOptions = props.tippyOptions;\n    editor.registerPlugin(FloatingMenuPlugin({\n      editor: editor,\n      element: element.current,\n      tippyOptions: tippyOptions\n    }));\n    return function () {\n      editor.unregisterPlugin(FloatingMenuPluginKey);\n    };\n  }, []);\n  return React.createElement(\"div\", {\n    ref: element,\n    className: props.className,\n    style: {\n      visibility: 'hidden'\n    }\n  }, props.children);\n};\n\nfunction useForceUpdate() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      setValue = _useState2[1];\n\n  return function () {\n    return setValue(function (value) {\n      return value + 1;\n    });\n  };\n}\n\nvar useEditor = function useEditor() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var deps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      editor = _useState4[0],\n      setEditor = _useState4[1];\n\n  var forceUpdate = useForceUpdate();\n  useEffect(function () {\n    var instance = new Editor(options);\n    setEditor(instance);\n    instance.on('transaction', forceUpdate);\n    return function () {\n      instance.destroy();\n    };\n  }, deps);\n  return editor;\n};\n\nfunction isClassComponent(Component) {\n  return !!(typeof Component === 'function' && Component.prototype && Component.prototype.isReactComponent);\n}\n\nvar ReactRenderer = /*#__PURE__*/function () {\n  function ReactRenderer(component, _ref) {\n    var editor = _ref.editor,\n        _ref$props = _ref.props,\n        props = _ref$props === void 0 ? {} : _ref$props,\n        _ref$as = _ref.as,\n        as = _ref$as === void 0 ? 'div' : _ref$as;\n\n    _classCallCheck(this, ReactRenderer);\n\n    this.ref = null;\n    this.id = Math.floor(Math.random() * 0xFFFFFFFF).toString();\n    this.component = component;\n    this.editor = editor;\n    this.props = props;\n    this.element = document.createElement(as);\n    this.element.classList.add('react-renderer');\n    this.render();\n  }\n\n  _createClass(ReactRenderer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _a;\n\n      var Component = this.component;\n      var props = this.props;\n\n      if (isClassComponent(Component)) {\n        props.ref = function (ref) {\n          _this2.ref = ref;\n        };\n      }\n\n      this.reactElement = React.createElement(Component, _objectSpread({}, props));\n\n      if ((_a = this.editor) === null || _a === void 0 ? void 0 : _a.contentComponent) {\n        this.editor.contentComponent.setState({\n          renderers: this.editor.contentComponent.state.renderers.set(this.id, this)\n        });\n      }\n    }\n  }, {\n    key: \"updateProps\",\n    value: function updateProps() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.props = _objectSpread(_objectSpread({}, this.props), props);\n      this.render();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _a;\n\n      if ((_a = this.editor) === null || _a === void 0 ? void 0 : _a.contentComponent) {\n        var renderers = this.editor.contentComponent.state.renderers;\n        renderers.delete(this.id);\n        this.editor.contentComponent.setState({\n          renderers: renderers\n        });\n      }\n    }\n  }]);\n\n  return ReactRenderer;\n}();\n\nvar ReactNodeViewContext = createContext({\n  onDragStart: undefined\n});\n\nvar useReactNodeView = function useReactNodeView() {\n  return useContext(ReactNodeViewContext);\n};\n\nvar ReactNodeView = /*#__PURE__*/function (_NodeView) {\n  _inherits(ReactNodeView, _NodeView);\n\n  var _super2 = _createSuper(ReactNodeView);\n\n  function ReactNodeView() {\n    _classCallCheck(this, ReactNodeView);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(ReactNodeView, [{\n    key: \"mount\",\n    value: function mount() {\n      var _this3 = this;\n\n      var props = {\n        editor: this.editor,\n        node: this.node,\n        decorations: this.decorations,\n        selected: false,\n        extension: this.extension,\n        getPos: function getPos() {\n          return _this3.getPos();\n        },\n        updateAttributes: function updateAttributes() {\n          var attributes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          return _this3.updateAttributes(attributes);\n        },\n        deleteNode: function deleteNode() {\n          return _this3.deleteNode();\n        }\n      };\n\n      if (!this.component.displayName) {\n        var capitalizeFirstChar = function capitalizeFirstChar(string) {\n          return string.charAt(0).toUpperCase() + string.substring(1);\n        };\n\n        this.component.displayName = capitalizeFirstChar(this.extension.name);\n      }\n\n      var ReactNodeViewProvider = function ReactNodeViewProvider(componentProps) {\n        var onDragStart = _this3.onDragStart.bind(_this3);\n\n        var Component = _this3.component;\n        return React.createElement(ReactNodeViewContext.Provider, {\n          value: {\n            onDragStart: onDragStart\n          }\n        }, React.createElement(Component, _objectSpread({}, componentProps)));\n      };\n\n      ReactNodeViewProvider.displayName = 'ReactNodeView';\n      this.contentDOMElement = this.node.isLeaf ? null : document.createElement(this.node.isInline ? 'span' : 'div');\n\n      if (this.contentDOMElement) {\n        // For some reason the whiteSpace prop is not inherited properly in Chrome and Safari\n        // With this fix it seems to work fine\n        // See: https://github.com/ueberdosis/tiptap/issues/1197\n        this.contentDOMElement.style.whiteSpace = 'inherit';\n      }\n\n      this.renderer = new ReactRenderer(ReactNodeViewProvider, {\n        editor: this.editor,\n        props: props,\n        as: this.node.isInline ? 'span' : 'div'\n      });\n    }\n  }, {\n    key: \"dom\",\n    get: function get() {\n      var _a;\n\n      if (this.renderer.element.firstElementChild && !((_a = this.renderer.element.firstElementChild) === null || _a === void 0 ? void 0 : _a.hasAttribute('data-node-view-wrapper'))) {\n        throw Error('Please use the NodeViewWrapper component for your node view.');\n      }\n\n      return this.renderer.element;\n    }\n  }, {\n    key: \"contentDOM\",\n    get: function get() {\n      if (this.node.isLeaf) {\n        return null;\n      }\n\n      this.maybeMoveContentDOM();\n      return this.contentDOMElement;\n    }\n  }, {\n    key: \"maybeMoveContentDOM\",\n    value: function maybeMoveContentDOM() {\n      var contentElement = this.dom.querySelector('[data-node-view-content]');\n\n      if (this.contentDOMElement && contentElement && !contentElement.contains(this.contentDOMElement)) {\n        contentElement.appendChild(this.contentDOMElement);\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(node, decorations) {\n      if (typeof this.options.update === 'function') {\n        return this.options.update(node, decorations);\n      }\n\n      if (node.type !== this.node.type) {\n        return false;\n      }\n\n      if (node === this.node && this.decorations === decorations) {\n        return true;\n      }\n\n      this.node = node;\n      this.decorations = decorations;\n      this.renderer.updateProps({\n        node: node,\n        decorations: decorations\n      });\n      this.maybeMoveContentDOM();\n      return true;\n    }\n  }, {\n    key: \"selectNode\",\n    value: function selectNode() {\n      this.renderer.updateProps({\n        selected: true\n      });\n    }\n  }, {\n    key: \"deselectNode\",\n    value: function deselectNode() {\n      this.renderer.updateProps({\n        selected: false\n      });\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.renderer.destroy();\n      this.contentDOMElement = null;\n    }\n  }]);\n\n  return ReactNodeView;\n}(NodeView);\n\nfunction ReactNodeViewRenderer(component, options) {\n  return function (props) {\n    // try to get the parent component\n    // this is important for vue devtools to show the component hierarchy correctly\n    // maybe it’s `undefined` because <editor-content> isn’t rendered yet\n    if (!props.editor.contentComponent) {\n      return {};\n    }\n\n    return new ReactNodeView(component, props, options);\n  };\n}\n\nvar Portals = function Portals(_ref2) {\n  var renderers = _ref2.renderers;\n  return React.createElement(React.Fragment, null, Array.from(renderers).map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        key = _ref4[0],\n        renderer = _ref4[1];\n\n    return ReactDOM.createPortal(renderer.reactElement, renderer.element, key);\n  }));\n};\n\nvar PureEditorContent = /*#__PURE__*/function (_React$Component) {\n  _inherits(PureEditorContent, _React$Component);\n\n  var _super3 = _createSuper(PureEditorContent);\n\n  function PureEditorContent(props) {\n    var _this4;\n\n    _classCallCheck(this, PureEditorContent);\n\n    _this4 = _super3.call(this, props);\n    _this4.editorContentRef = React.createRef();\n    _this4.state = {\n      renderers: new Map()\n    };\n    return _this4;\n  }\n\n  _createClass(PureEditorContent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.init();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.init();\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var editor = this.props.editor;\n\n      if (editor && editor.options.element) {\n        if (editor.contentComponent) {\n          return;\n        }\n\n        var element = this.editorContentRef.current;\n        element.append.apply(element, _toConsumableArray(editor.options.element.childNodes));\n        editor.setOptions({\n          element: element\n        });\n        editor.contentComponent = this; // TODO: alternative to setTimeout?\n\n        setTimeout(function () {\n          return editor.createNodeViews();\n        }, 0);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var editor = this.props.editor;\n\n      if (!editor) {\n        return;\n      }\n\n      if (!editor.isDestroyed) {\n        editor.view.setProps({\n          nodeViews: {}\n        });\n      }\n\n      editor.contentComponent = null;\n\n      if (!editor.options.element.firstChild) {\n        return;\n      }\n\n      var newElement = document.createElement('div');\n      newElement.append.apply(newElement, _toConsumableArray(editor.options.element.childNodes));\n      editor.setOptions({\n        element: newElement\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          editor = _this$props.editor,\n          rest = _objectWithoutProperties(_this$props, [\"editor\"]);\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", _objectSpread({\n        ref: this.editorContentRef\n      }, rest)), React.createElement(Portals, {\n        renderers: this.state.renderers\n      }));\n    }\n  }]);\n\n  return PureEditorContent;\n}(React.Component);\n\nvar EditorContent = React.memo(PureEditorContent);\n\nvar NodeViewWrapper = function NodeViewWrapper(props) {\n  var _useReactNodeView = useReactNodeView(),\n      onDragStart = _useReactNodeView.onDragStart;\n\n  var Tag = props.as || 'div';\n  return React.createElement(Tag, _objectSpread(_objectSpread({}, props), {}, {\n    \"data-node-view-wrapper\": \"\",\n    onDragStart: onDragStart,\n    style: _objectSpread(_objectSpread({}, props.style), {}, {\n      whiteSpace: 'normal'\n    })\n  }));\n};\n\nvar NodeViewContent = function NodeViewContent(props) {\n  var Tag = props.as || 'div';\n  return React.createElement(Tag, _objectSpread(_objectSpread({}, props), {}, {\n    \"data-node-view-content\": \"\",\n    style: _objectSpread(_objectSpread({}, props.style), {}, {\n      whiteSpace: 'pre-wrap'\n    })\n  }));\n};\n\nexport { BubbleMenu, Editor, EditorContent, FloatingMenu, NodeViewContent, NodeViewWrapper, PureEditorContent, ReactNodeViewRenderer, ReactRenderer, useEditor };","map":{"version":3,"sources":["../src/BubbleMenu.tsx","../src/Editor.ts","../src/FloatingMenu.tsx","../src/useEditor.ts","../src/ReactRenderer.tsx","../src/useReactNodeView.ts","../src/ReactNodeViewRenderer.tsx","../src/EditorContent.tsx","../src/NodeViewWrapper.tsx","../src/NodeViewContent.tsx"],"names":["CoreEditor"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport { BubbleMenuPlugin, BubbleMenuPluginKey, BubbleMenuPluginProps } from '@tiptap/extension-bubble-menu'\n\nexport type BubbleMenuProps = Omit<BubbleMenuPluginProps, 'element'> & {\n  className?: string,\n}\n\nexport const BubbleMenu: React.FC<BubbleMenuProps> = props => {\n  const element = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    const { editor, tippyOptions } = props\n\n    editor.registerPlugin(BubbleMenuPlugin({\n      editor,\n      element: element.current as HTMLElement,\n      tippyOptions,\n    }))\n\n    return () => {\n      editor.unregisterPlugin(BubbleMenuPluginKey)\n    }\n  }, [])\n\n  return (\n    <div ref={element} className={props.className} style={{ visibility: 'hidden' }}>\n      {props.children}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Editor as CoreEditor } from '@tiptap/core'\nimport { EditorContentProps, EditorContentState } from './EditorContent'\n\nexport class Editor extends CoreEditor {\n  public contentComponent: React.Component<EditorContentProps, EditorContentState> | null = null\n}\n","import React, { useEffect, useRef } from 'react'\nimport { FloatingMenuPlugin, FloatingMenuPluginKey, FloatingMenuPluginProps } from '@tiptap/extension-floating-menu'\n\nexport type FloatingMenuProps = Omit<FloatingMenuPluginProps, 'element'> & {\n  className?: string,\n}\n\nexport const FloatingMenu: React.FC<FloatingMenuProps> = props => {\n  const element = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    const { editor, tippyOptions } = props\n\n    editor.registerPlugin(FloatingMenuPlugin({\n      editor,\n      element: element.current as HTMLElement,\n      tippyOptions,\n    }))\n\n    return () => {\n      editor.unregisterPlugin(FloatingMenuPluginKey)\n    }\n  }, [])\n\n  return (\n    <div ref={element} className={props.className} style={{ visibility: 'hidden' }}>\n      {props.children}\n    </div>\n  )\n}\n","import { useState, useEffect, DependencyList } from 'react'\nimport { EditorOptions } from '@tiptap/core'\nimport { Editor } from './Editor'\n\nfunction useForceUpdate() {\n  const [, setValue] = useState(0)\n\n  return () => setValue(value => value + 1)\n}\n\nexport const useEditor = (options: Partial<EditorOptions> = {}, deps: DependencyList = []) => {\n  const [editor, setEditor] = useState<Editor | null>(null)\n  const forceUpdate = useForceUpdate()\n\n  useEffect(() => {\n    const instance = new Editor(options)\n\n    setEditor(instance)\n\n    instance.on('transaction', forceUpdate)\n\n    return () => {\n      instance.destroy()\n    }\n  }, deps)\n\n  return editor\n}\n","import React from 'react'\nimport { Editor } from './Editor'\n\nfunction isClassComponent(Component: any) {\n  return !!(\n    typeof Component === 'function'\n    && Component.prototype\n    && Component.prototype.isReactComponent\n  )\n}\n\nexport interface ReactRendererOptions {\n  editor: Editor,\n  props?: Record<string, any>,\n  as?: string,\n}\n\nexport class ReactRenderer {\n  id: string\n\n  editor: Editor\n\n  component: any\n\n  element: Element\n\n  props: Record<string, any>\n\n  reactElement: React.ReactNode\n\n  ref: React.Component | null = null\n\n  constructor(component: React.Component | React.FunctionComponent, { editor, props = {}, as = 'div' }: ReactRendererOptions) {\n    this.id = Math.floor(Math.random() * 0xFFFFFFFF).toString()\n    this.component = component\n    this.editor = editor\n    this.props = props\n    this.element = document.createElement(as)\n    this.element.classList.add('react-renderer')\n    this.render()\n  }\n\n  render(): void {\n    const Component = this.component\n    const props = this.props\n\n    if (isClassComponent(Component)) {\n      props.ref = (ref: React.Component) => {\n        this.ref = ref\n      }\n    }\n\n    this.reactElement = <Component {...props } />\n\n    if (this.editor?.contentComponent) {\n      this.editor.contentComponent.setState({\n        renderers: this.editor.contentComponent.state.renderers.set(\n          this.id,\n          this,\n        ),\n      })\n    }\n  }\n\n  updateProps(props: Record<string, any> = {}): void {\n    this.props = {\n      ...this.props,\n      ...props,\n    }\n\n    this.render()\n  }\n\n  destroy(): void {\n    if (this.editor?.contentComponent) {\n      const { renderers } = this.editor.contentComponent.state\n\n      renderers.delete(this.id)\n\n      this.editor.contentComponent.setState({\n        renderers,\n      })\n    }\n  }\n}\n","import { createContext, useContext } from 'react'\n\nexport interface ReactNodeViewContextProps {\n  onDragStart: (event: DragEvent) => void,\n}\n\nexport const ReactNodeViewContext = createContext<Partial<ReactNodeViewContextProps>>({\n  onDragStart: undefined,\n})\n\nexport const useReactNodeView = () => useContext(ReactNodeViewContext)\n","import React from 'react'\nimport {\n  NodeView,\n  NodeViewProps,\n  NodeViewRenderer,\n  NodeViewRendererProps,\n} from '@tiptap/core'\nimport { Decoration, NodeView as ProseMirrorNodeView } from 'prosemirror-view'\nimport { Node as ProseMirrorNode } from 'prosemirror-model'\nimport { Editor } from './Editor'\nimport { ReactRenderer } from './ReactRenderer'\nimport { ReactNodeViewContext } from './useReactNodeView'\n\ninterface ReactNodeViewRendererOptions {\n  stopEvent: ((event: Event) => boolean) | null,\n  update: ((node: ProseMirrorNode, decorations: Decoration[]) => boolean) | null,\n}\n\nclass ReactNodeView extends NodeView<React.FunctionComponent, Editor> {\n\n  renderer!: ReactRenderer\n\n  contentDOMElement!: HTMLElement | null\n\n  mount() {\n    const props: NodeViewProps = {\n      editor: this.editor,\n      node: this.node,\n      decorations: this.decorations,\n      selected: false,\n      extension: this.extension,\n      getPos: () => this.getPos(),\n      updateAttributes: (attributes = {}) => this.updateAttributes(attributes),\n      deleteNode: () => this.deleteNode(),\n    }\n\n    if (!(this.component as any).displayName) {\n      const capitalizeFirstChar = (string: string): string => {\n        return string.charAt(0).toUpperCase() + string.substring(1)\n      }\n\n      this.component.displayName = capitalizeFirstChar(this.extension.name)\n    }\n\n    const ReactNodeViewProvider: React.FunctionComponent = componentProps => {\n      const onDragStart = this.onDragStart.bind(this)\n      const Component = this.component\n\n      return (\n        <ReactNodeViewContext.Provider value={{ onDragStart }}>\n          <Component {...componentProps} />\n        </ReactNodeViewContext.Provider>\n      )\n    }\n\n    ReactNodeViewProvider.displayName = 'ReactNodeView'\n\n    this.contentDOMElement = this.node.isLeaf\n      ? null\n      : document.createElement(this.node.isInline ? 'span' : 'div')\n\n    if (this.contentDOMElement) {\n      // For some reason the whiteSpace prop is not inherited properly in Chrome and Safari\n      // With this fix it seems to work fine\n      // See: https://github.com/ueberdosis/tiptap/issues/1197\n      this.contentDOMElement.style.whiteSpace = 'inherit'\n    }\n\n    this.renderer = new ReactRenderer(ReactNodeViewProvider, {\n      editor: this.editor,\n      props,\n      as: this.node.isInline\n        ? 'span'\n        : 'div',\n    })\n  }\n\n  get dom() {\n    if (\n      this.renderer.element.firstElementChild\n      && !this.renderer.element.firstElementChild?.hasAttribute('data-node-view-wrapper')\n    ) {\n      throw Error('Please use the NodeViewWrapper component for your node view.')\n    }\n\n    return this.renderer.element\n  }\n\n  get contentDOM() {\n    if (this.node.isLeaf) {\n      return null\n    }\n\n    this.maybeMoveContentDOM()\n\n    return this.contentDOMElement\n  }\n\n  maybeMoveContentDOM(): void {\n    const contentElement = this.dom.querySelector('[data-node-view-content]')\n\n    if (\n      this.contentDOMElement\n      && contentElement\n      && !contentElement.contains(this.contentDOMElement)\n    ) {\n      contentElement.appendChild(this.contentDOMElement)\n    }\n  }\n\n  update(node: ProseMirrorNode, decorations: Decoration[]) {\n    if (typeof this.options.update === 'function') {\n      return this.options.update(node, decorations)\n    }\n\n    if (node.type !== this.node.type) {\n      return false\n    }\n\n    if (node === this.node && this.decorations === decorations) {\n      return true\n    }\n\n    this.node = node\n    this.decorations = decorations\n    this.renderer.updateProps({ node, decorations })\n    this.maybeMoveContentDOM()\n\n    return true\n  }\n\n  selectNode() {\n    this.renderer.updateProps({\n      selected: true,\n    })\n  }\n\n  deselectNode() {\n    this.renderer.updateProps({\n      selected: false,\n    })\n  }\n\n  destroy() {\n    this.renderer.destroy()\n    this.contentDOMElement = null\n  }\n}\n\nexport function ReactNodeViewRenderer(component: any, options?: Partial<ReactNodeViewRendererOptions>): NodeViewRenderer {\n  return (props: NodeViewRendererProps) => {\n    // try to get the parent component\n    // this is important for vue devtools to show the component hierarchy correctly\n    // maybe it’s `undefined` because <editor-content> isn’t rendered yet\n    if (!(props.editor as Editor).contentComponent) {\n      return {}\n    }\n\n    return new ReactNodeView(component, props, options) as ProseMirrorNodeView\n  }\n}\n","import React, { HTMLProps } from 'react'\nimport ReactDOM from 'react-dom'\nimport { Editor } from './Editor'\nimport { ReactRenderer } from './ReactRenderer'\n\nconst Portals: React.FC<{ renderers: Map<string, ReactRenderer> }> = ({ renderers }) => {\n  return (\n    <>\n      {Array.from(renderers).map(([key, renderer]) => {\n        return ReactDOM.createPortal(\n          renderer.reactElement,\n          renderer.element,\n          key,\n        )\n      })}\n    </>\n  )\n}\n\nexport interface EditorContentProps extends HTMLProps<HTMLDivElement> {\n  editor: Editor | null,\n}\n\nexport interface EditorContentState {\n  renderers: Map<string, ReactRenderer>\n}\n\nexport class PureEditorContent extends React.Component<EditorContentProps, EditorContentState> {\n  editorContentRef: React.RefObject<any>\n\n  constructor(props: EditorContentProps) {\n    super(props)\n    this.editorContentRef = React.createRef()\n\n    this.state = {\n      renderers: new Map(),\n    }\n  }\n\n  componentDidMount() {\n    this.init()\n  }\n\n  componentDidUpdate() {\n    this.init()\n  }\n\n  init() {\n    const { editor } = this.props\n\n    if (editor && editor.options.element) {\n      if (editor.contentComponent) {\n        return\n      }\n\n      const element = this.editorContentRef.current\n\n      element.append(...editor.options.element.childNodes)\n\n      editor.setOptions({\n        element,\n      })\n\n      editor.contentComponent = this\n\n      // TODO: alternative to setTimeout?\n      setTimeout(() => editor.createNodeViews(), 0)\n    }\n  }\n\n  componentWillUnmount() {\n    const { editor } = this.props\n\n    if (!editor) {\n      return\n    }\n\n    if (!editor.isDestroyed) {\n      editor.view.setProps({\n        nodeViews: {},\n      })\n    }\n\n    editor.contentComponent = null\n\n    if (!editor.options.element.firstChild) {\n      return\n    }\n\n    const newElement = document.createElement('div')\n\n    newElement.append(...editor.options.element.childNodes)\n\n    editor.setOptions({\n      element: newElement,\n    })\n  }\n\n  render() {\n    const { editor, ...rest } = this.props\n\n    return (\n      <>\n        <div ref={this.editorContentRef} {...rest} />\n        <Portals renderers={this.state.renderers} />\n      </>\n    )\n  }\n}\n\nexport const EditorContent = React.memo(PureEditorContent)\n","import React from 'react'\nimport { useReactNodeView } from './useReactNodeView'\n\nexport interface NodeViewWrapperProps {\n  [key: string]: any,\n  as?: React.ElementType,\n}\n\nexport const NodeViewWrapper: React.FC<NodeViewWrapperProps> = props => {\n  const { onDragStart } = useReactNodeView()\n  const Tag = props.as || 'div'\n\n  return (\n    <Tag\n      {...props}\n      data-node-view-wrapper=\"\"\n      onDragStart={onDragStart}\n      style={{\n        ...props.style,\n        whiteSpace: 'normal',\n      }}\n    />\n  )\n}\n","import React from 'react'\n\nexport interface NodeViewContentProps {\n  [key: string]: any,\n  as?: React.ElementType,\n}\n\nexport const NodeViewContent: React.FC<NodeViewContentProps> = props => {\n  const Tag = props.as || 'div'\n\n  return (\n    <Tag\n      {...props}\n      data-node-view-content=\"\"\n      style={{\n        ...props.style,\n        whiteSpace: 'pre-wrap',\n      }}\n    />\n  )\n}\n"]},"metadata":{},"sourceType":"module"}