{"ast":null,"code":"let getCountryList = [{\n  id: 1,\n  name: 'Andorra',\n  code: 'AD'\n}, {\n  id: 2,\n  name: 'Albania',\n  code: 'AL'\n}, {\n  id: 3,\n  name: 'Austria',\n  code: 'AT'\n}, {\n  id: 4,\n  name: 'Åland Islands',\n  code: 'AX'\n}, {\n  id: 5,\n  name: 'Bosnia and Herzegovina',\n  code: 'BA'\n}, {\n  id: 6,\n  name: 'Belgium',\n  code: 'BE'\n}, {\n  id: 7,\n  name: 'Bulgaria',\n  code: 'BG'\n}, {\n  id: 8,\n  name: 'Belarus',\n  code: 'BY'\n}, {\n  id: 9,\n  name: 'Switzerland',\n  code: 'CH'\n}, {\n  id: 10,\n  name: 'Cyprus',\n  code: 'CY'\n}, {\n  id: 11,\n  name: 'Czech Republic',\n  code: 'CZ'\n}, {\n  id: 12,\n  name: 'Germany',\n  code: 'DE'\n}, {\n  id: 13,\n  name: 'Denmark',\n  code: 'DK'\n}, {\n  id: 14,\n  name: 'Estonia',\n  code: 'EE'\n}, {\n  id: 15,\n  name: 'Spain',\n  code: 'ES'\n}, {\n  id: 16,\n  name: 'Finland',\n  code: 'FI'\n}, {\n  id: 17,\n  name: 'Faroe Islands',\n  code: 'FO'\n}, {\n  id: 18,\n  name: 'France',\n  code: 'FR'\n}, {\n  id: 19,\n  name: 'United Kingdon',\n  code: 'GB'\n}, {\n  id: 20,\n  name: 'Guernsey',\n  code: 'GG'\n}, {\n  id: 21,\n  name: 'Greece',\n  code: 'GR'\n}, {\n  id: 22,\n  name: 'Croatia',\n  code: 'HR'\n}, {\n  id: 23,\n  name: 'Hungary',\n  code: 'HU'\n}, {\n  id: 24,\n  name: 'Ireland',\n  code: 'IE'\n}, {\n  id: 25,\n  name: 'Isle of Man',\n  code: 'IM'\n}, {\n  id: 26,\n  name: 'Iceland',\n  code: 'IC'\n}, {\n  id: 27,\n  name: 'Italy',\n  code: 'IT'\n}, {\n  id: 28,\n  name: 'Jersey',\n  code: 'JE'\n}, {\n  id: 29,\n  name: 'Liechtenstein',\n  code: 'LI'\n}, {\n  id: 30,\n  name: 'Lithuania',\n  code: 'LT'\n}, {\n  id: 31,\n  name: 'Luxembourg',\n  code: 'LU'\n}, {\n  id: 32,\n  name: 'Latvia',\n  code: 'LV'\n}, {\n  id: 33,\n  name: 'Monaco',\n  code: 'MC'\n}, {\n  id: 34,\n  name: 'Moldova, Republic of',\n  code: 'MD'\n}, {\n  id: 35,\n  name: 'Macedonia, The Former Yugoslav Republic of',\n  code: 'MK'\n}, {\n  id: 36,\n  name: 'Malta',\n  code: 'MT'\n}, {\n  id: 37,\n  name: 'Netherlands',\n  code: 'NL'\n}, {\n  id: 38,\n  name: 'Norway',\n  code: 'NO'\n}, {\n  id: 39,\n  name: 'Poland',\n  code: 'PL'\n}, {\n  id: 40,\n  name: 'Portugal',\n  code: 'PT'\n}, {\n  id: 41,\n  name: 'Romania',\n  code: 'RO'\n}, {\n  id: 42,\n  name: 'Russian Federation',\n  code: 'RU'\n}, {\n  id: 43,\n  name: 'Sweden',\n  code: 'SE'\n}, {\n  id: 44,\n  name: 'Slovenia',\n  code: 'SI'\n}, {\n  id: 45,\n  name: 'Svalbard and Jan Mayen',\n  code: 'SJ'\n}, {\n  id: 46,\n  name: 'Slovakia',\n  code: 'SK'\n}, {\n  id: 44,\n  name: 'San Marino',\n  code: 'SM'\n}, {\n  id: 45,\n  name: 'Ukraine',\n  code: 'UA'\n}, {\n  id: 46,\n  name: 'Vatican City State (Holy See)',\n  code: 'VA'\n}];\n\nfunction useEuropienCountriesList() {\n  return getCountryList;\n}\n\nexport default useEuropienCountriesList;","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/hook/useEuropienCountriesList.tsx"],"names":["getCountryList","id","name","code","useEuropienCountriesList"],"mappings":"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","sourcesContent":["let getCountryList = [\r\n    {\r\n        id : 1,\r\n        name : 'Andorra',\r\n        code : 'AD',\r\n    },\r\n    {\r\n        id : 2,\r\n        name : 'Albania',\r\n        code : 'AL',\r\n    },\r\n    {\r\n        id : 3,\r\n        name : 'Austria',\r\n        code : 'AT',\r\n    },\r\n    {\r\n        id : 4,\r\n        name : 'Åland Islands',\r\n        code : 'AX',\r\n    },\r\n    {\r\n        id : 5,\r\n        name : 'Bosnia and Herzegovina',\r\n        code : 'BA',\r\n    },\r\n    {\r\n        id : 6,\r\n        name : 'Belgium',\r\n        code : 'BE',\r\n    },\r\n    {\r\n        id : 7,\r\n        name : 'Bulgaria',\r\n        code : 'BG',\r\n    },\r\n    {\r\n        id : 8,\r\n        name : 'Belarus',\r\n        code : 'BY',\r\n    },\r\n    {\r\n        id : 9,\r\n        name : 'Switzerland',\r\n        code : 'CH',\r\n    },\r\n    {\r\n        id : 10,\r\n        name : 'Cyprus',\r\n        code : 'CY',\r\n    },\r\n    {\r\n        id : 11,\r\n        name : 'Czech Republic',\r\n        code : 'CZ',\r\n    },\r\n    {\r\n        id : 12,\r\n        name : 'Germany',\r\n        code : 'DE',\r\n    },\r\n    {\r\n        id : 13,\r\n        name : 'Denmark',\r\n        code : 'DK',\r\n    },\r\n    {\r\n        id : 14,\r\n        name : 'Estonia',\r\n        code : 'EE',\r\n    },\r\n    {\r\n        id : 15,\r\n        name : 'Spain',\r\n        code : 'ES',\r\n    },\r\n    {\r\n        id : 16,\r\n        name : 'Finland',\r\n        code : 'FI',\r\n    },\r\n    {\r\n        id : 17,\r\n        name : 'Faroe Islands',\r\n        code : 'FO',\r\n    },\r\n    {\r\n        id : 18,\r\n        name : 'France',\r\n        code : 'FR',\r\n    },\r\n    {\r\n        id : 19,\r\n        name : 'United Kingdon',\r\n        code : 'GB',\r\n    },    \r\n    {\r\n        id : 20,\r\n        name : 'Guernsey',\r\n        code : 'GG',\r\n    },    \r\n    {\r\n        id : 21,\r\n        name : 'Greece',\r\n        code : 'GR',\r\n    },\r\n    {\r\n        id : 22,\r\n        name : 'Croatia',\r\n        code : 'HR',\r\n    },    \r\n    {\r\n        id : 23,\r\n        name : 'Hungary',\r\n        code : 'HU',\r\n    },    \r\n    {\r\n        id : 24,\r\n        name : 'Ireland',\r\n        code : 'IE',\r\n    },    \r\n    {\r\n        id : 25,\r\n        name : 'Isle of Man',\r\n        code : 'IM',\r\n    },\r\n    {\r\n        id : 26,\r\n        name : 'Iceland',\r\n        code : 'IC',\r\n    },    \r\n    {\r\n        id : 27,\r\n        name : 'Italy',\r\n        code : 'IT',\r\n    },    \r\n    {\r\n        id : 28,\r\n        name : 'Jersey',\r\n        code : 'JE',\r\n    },\r\n    {\r\n        id : 29,\r\n        name : 'Liechtenstein',\r\n        code : 'LI',\r\n    },    \r\n    {\r\n        id : 30,\r\n        name : 'Lithuania',\r\n        code : 'LT',\r\n    },    \r\n    {\r\n        id : 31,\r\n        name : 'Luxembourg',\r\n        code : 'LU',\r\n    },\r\n    {\r\n        id : 32,\r\n        name : 'Latvia',\r\n        code : 'LV',\r\n    },    \r\n    {\r\n        id : 33,\r\n        name : 'Monaco',\r\n        code : 'MC',\r\n    },    \r\n    {\r\n        id : 34,\r\n        name : 'Moldova, Republic of',\r\n        code : 'MD',\r\n    },\r\n    {\r\n        id : 35,\r\n        name : 'Macedonia, The Former Yugoslav Republic of',\r\n        code : 'MK',\r\n    },    \r\n    {\r\n        id : 36,\r\n        name : 'Malta',\r\n        code : 'MT',\r\n    },    \r\n    {\r\n        id : 37,\r\n        name : 'Netherlands',\r\n        code : 'NL',\r\n    },    \r\n    {\r\n        id : 38,\r\n        name : 'Norway',\r\n        code : 'NO',\r\n    },\r\n    {\r\n        id : 39,\r\n        name : 'Poland',\r\n        code : 'PL',\r\n    },    \r\n    {\r\n        id : 40,\r\n        name : 'Portugal',\r\n        code : 'PT',\r\n    },    \r\n    {\r\n        id : 41,\r\n        name : 'Romania',\r\n        code : 'RO',\r\n    },    \r\n    {\r\n        id : 42,\r\n        name : 'Russian Federation',\r\n        code : 'RU',\r\n    },    \r\n    {\r\n        id : 43,\r\n        name : 'Sweden',\r\n        code : 'SE',\r\n    },    \r\n    {\r\n        id : 44,\r\n        name : 'Slovenia',\r\n        code : 'SI',\r\n    },\r\n    {\r\n        id : 45,\r\n        name : 'Svalbard and Jan Mayen',\r\n        code : 'SJ',\r\n    },    \r\n    {\r\n        id : 46,\r\n        name : 'Slovakia',\r\n        code : 'SK',\r\n    },    \r\n    {\r\n        id : 44,\r\n        name : 'San Marino',\r\n        code : 'SM',\r\n    },\r\n    {\r\n        id : 45,\r\n        name : 'Ukraine',\r\n        code : 'UA',\r\n    },    \r\n    {\r\n        id : 46,\r\n        name : 'Vatican City State (Holy See)',\r\n        code : 'VA',\r\n    },    \r\n]\r\n\r\nfunction useEuropienCountriesList() {\r\n    return getCountryList;\r\n}\r\n\r\nexport default useEuropienCountriesList\r\n"]},"metadata":{},"sourceType":"module"}