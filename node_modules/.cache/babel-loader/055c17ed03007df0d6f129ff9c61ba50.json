{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pyramidion\\\\WebApp\\\\Izze-Admin\\\\src\\\\pages\\\\MealRecipe\\\\MealRecipe.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { Avatar, Button, CircularProgress, Dialog, DialogActions, DialogContent, Grid, makeStyles, Paper, FormControl, FormHelperText, TextField, Typography } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: theme.breakpoints.values.lg,\n    maxWidth: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(3)\n  },\n  themeButton: {\n    color: theme.palette.white,\n    backgroundColor: theme.palette.green.main,\n    '&:hover': {\n      backgroundColor: theme.palette.green.dark\n    }\n  },\n  workouttermsavatar: {\n    width: '100%',\n    height: '100%'\n  },\n  deleteButton: {\n    width: '100%',\n    height: '50px'\n  }\n}));\n\nfunction MealRecipe() {\n  _s();\n\n  const classes = useStyles();\n  const [addEditDialog, setAddEditDialog] = React.useState({\n    isOpen: false,\n    title: '',\n    okBtnText: '',\n    isEdit: false,\n    data: {}\n  });\n\n  const openAddDialog = () => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      title: 'Add Meal Recipe',\n      isEdit: false,\n      okBtnText: 'Save'\n    }));\n  };\n\n  const closeAddEditDialog = () => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: false\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      alignItems: \"flex-end\",\n      container: true,\n      justify: \"space-between\",\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h3\",\n          children: \"Meal Recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => openAddDialog(),\n          className: classes.themeButton,\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 28\n          }, this),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 0,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            size: \"small\",\n            placeholder: \"Name\",\n            variant: \"outlined\",\n            name: \"state\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AddEditModel, { ...addEditDialog,\n      onClose: closeAddEditDialog // onSuccess={onSuccessAction}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MealRecipe, \"s5o9kyFm5KAS0TTYVhpPTPgOC/g=\", false, function () {\n  return [useStyles];\n});\n\n_c = MealRecipe;\nconst mealTerms = {\n  name: '',\n  image: {\n    file: null,\n    prevImage: '',\n    isNew: null\n  },\n  term: ''\n};\nconst ingredientsSelect = {\n  id: '',\n  quantity: ''\n};\nconst initialFormValues = {\n  name: '',\n  image: {\n    file: null,\n    prevImage: '',\n    isNew: null\n  },\n  nutrition: '',\n  description: '',\n  protein: '',\n  fat: '',\n  carbs: '',\n  terms: [mealTerms],\n  ingredients: [ingredientsSelect],\n  preparation_time: '',\n  preparation_description: ''\n};\nexport const AddEditModel = props => {\n  _s2();\n\n  const {\n    isEdit,\n    isOpen,\n    okBtnText = 'OK',\n    onClose,\n    data,\n    title,\n    onSuccess\n  } = props;\n  const classes = useStyles();\n  const [initialValues, setInitialValues] = React.useState({ ...initialFormValues\n  });\n  const formikRef = React.useRef(null);\n  const imageRef = React.useRef(null);\n  const avatharimgRef = React.useRef(null);\n\n  const onAvatarImageChange = (event, index) => {\n    event.persist();\n    const files = event.target.files;\n\n    if (files && files.length != 0) {\n      const reader = new FileReader();\n      const file = files[0];\n\n      reader.onloadend = () => {\n        formikRef.current.setFieldValue(`terms[${index}].image`, {\n          file,\n          prevImage: reader.result,\n          isNew: true\n        });\n      };\n\n      reader.readAsDataURL(file);\n    } else {\n      formikRef.current.setFieldValue('terms', {\n        workoutTermsName: '',\n        image: {\n          file: null,\n          prevImage: '',\n          isNew: null\n        },\n        description: ''\n      });\n    }\n  };\n\n  const onSubmit = (values, helper) => {\n    alert('done');\n  };\n\n  const addMealRecipeTerms = (values, setFieldValue) => {\n    const {\n      terms\n    } = values;\n    terms.push(mealTerms);\n    setFieldValue('terms', terms);\n  };\n\n  const addIngredients = (values, setFieldValue) => {\n    const {\n      ingredients\n    } = values;\n    ingredients.push(ingredientsSelect);\n    setFieldValue('ingredients', ingredients);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isOpen,\n      disableBackdropClick: true,\n      disableEscapeKeyDown: true,\n      fullWidth: true,\n      maxWidth: \"md\",\n      \"aria-labelledby\": \"dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"dialog-title\",\n        onClose: onClose,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        innerRef: formikRef,\n        enableReinitialize: true,\n        initialValues: initialFormValues,\n        onSubmit: onSubmit,\n        validationSchema: Yup.object().shape({\n          name: Yup.string().trim().required('Name is required'),\n          nutrition: Yup.string().trim().required('Nutrition is required'),\n          description: Yup.string().trim().required('Description is required'),\n          protein: Yup.string().trim().required('Protein is required'),\n          fat: Yup.string().trim().required('Fat is required'),\n          carbs: Yup.string().trim().required('Carbs is required'),\n          terms: Yup.array().of(Yup.object().shape({\n            name: Yup.string().trim().required('Meal recipe name is Required'),\n            image: Yup.object({\n              file: Yup.mixed().required('required')\n            }),\n            term: Yup.string().trim().required('Meal Recipe terms is Required')\n          })),\n          ingredients: Yup.array().of(Yup.object().shape({\n            id: Yup.string().trim().required('Ingredients is Required'),\n            quantity: Yup.string().trim().required('Quantity is Required')\n          })),\n          preparation_time: Yup.string().trim().required('Preparation time is required'),\n          preparation_description: Yup.string().trim().required('Preparation description is required')\n        }),\n        children: ({\n          values,\n          errors,\n          touched,\n          handleBlur,\n          handleChange,\n          setFieldValue,\n          submitForm,\n          isSubmitting\n        }) => {\n          var _values$terms, _values$ingredients;\n\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n              dividers: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Name\",\n                    name: \"name\",\n                    variant: \"outlined\",\n                    value: values.name,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.name && errors.name),\n                    helperText: touched.name && errors.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Nutrition\",\n                    name: \"nutrition\",\n                    variant: \"outlined\",\n                    value: values.nutrition,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.nutrition && errors.nutrition),\n                    helperText: touched.nutrition && errors.nutrition\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    multiline: true,\n                    label: \"Description\",\n                    name: \"description\",\n                    variant: \"outlined\",\n                    value: values.description,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.description && errors.description),\n                    helperText: touched.description && errors.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Protein\",\n                    name: \"protein\",\n                    variant: \"outlined\",\n                    value: values.protein,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.protein && errors.protein),\n                    helperText: touched.protein && errors.protein\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Fat\",\n                    name: \"fat\",\n                    variant: \"outlined\",\n                    value: values.fat,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.fat && errors.fat),\n                    helperText: touched.fat && errors.fat\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Carbs\",\n                    name: \"carbs\",\n                    variant: \"outlined\",\n                    value: values.carbs,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.carbs && errors.carbs),\n                    helperText: touched.carbs && errors.carbs\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 354,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 12,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    fullWidth: true,\n                    className: classes.themeButton,\n                    variant: \"contained\",\n                    color: \"default\",\n                    onClick: () => addMealRecipeTerms(values, setFieldValue),\n                    endIcon: /*#__PURE__*/_jsxDEV(ControlPointIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 377,\n                      columnNumber: 42\n                    }, this),\n                    children: \"Add Terms\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 25\n                }, this), values === null || values === void 0 ? void 0 : (_values$terms = values.terms) === null || _values$terms === void 0 ? void 0 : _values$terms.map((items, index) => {\n                  var _items$image, _touched$terms$index, _touched$terms$index$, _errors$terms$index, _errors$terms$index$i, _touched$terms$index2, _touched$terms$index3, _errors$terms$index2, _errors$terms$index2$, _touched$terms$index4, _errors$terms$index3, _touched$terms$index5, _errors$terms$index4, _touched$terms$index6, _errors$terms$index5, _touched$terms$index7, _errors$terms$index6;\n\n                  return /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    container: true,\n                    md: 12,\n                    xs: 12,\n                    direction: \"row\",\n                    spacing: 2,\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      md: 1,\n                      xs: 12,\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        ref: avatharimgRef,\n                        type: \"file\",\n                        accept: \".jpg,.png,jpeg\",\n                        onChange: e => onAvatarImageChange(e, index),\n                        onBlur: handleBlur,\n                        hidden: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 394,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n                        className: classes.workouttermsavatar,\n                        variant: \"square\",\n                        onClick: () => avatharimgRef.current.click(),\n                        src: items === null || items === void 0 ? void 0 : (_items$image = items.image) === null || _items$image === void 0 ? void 0 : _items$image.prevImage\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 402,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                        error: Boolean((touched === null || touched === void 0 ? void 0 : touched.terms) && (touched === null || touched === void 0 ? void 0 : (_touched$terms$index = touched.terms[index]) === null || _touched$terms$index === void 0 ? void 0 : (_touched$terms$index$ = _touched$terms$index.image) === null || _touched$terms$index$ === void 0 ? void 0 : _touched$terms$index$.file) && (errors === null || errors === void 0 ? void 0 : errors.terms) && (errors === null || errors === void 0 ? void 0 : (_errors$terms$index = errors.terms[index]) === null || _errors$terms$index === void 0 ? void 0 : (_errors$terms$index$i = _errors$terms$index.image) === null || _errors$terms$index$i === void 0 ? void 0 : _errors$terms$index$i.file)),\n                        children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n                          children: (touched === null || touched === void 0 ? void 0 : touched.terms) && (touched === null || touched === void 0 ? void 0 : (_touched$terms$index2 = touched.terms[index]) === null || _touched$terms$index2 === void 0 ? void 0 : (_touched$terms$index3 = _touched$terms$index2.image) === null || _touched$terms$index3 === void 0 ? void 0 : _touched$terms$index3.file) && (errors === null || errors === void 0 ? void 0 : errors.terms) && (errors === null || errors === void 0 ? void 0 : (_errors$terms$index2 = errors.terms[index]) === null || _errors$terms$index2 === void 0 ? void 0 : (_errors$terms$index2$ = _errors$terms$index2.image) === null || _errors$terms$index2$ === void 0 ? void 0 : _errors$terms$index2$.file)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 416,\n                          columnNumber: 37\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 408,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 393,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      md: 5,\n                      xs: 12,\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        fullWidth: true,\n                        multiline: true,\n                        label: \"Workout terms name\",\n                        name: `terms[${index}].name`,\n                        variant: \"outlined\",\n                        error: Boolean((touched === null || touched === void 0 ? void 0 : touched.terms) && (touched === null || touched === void 0 ? void 0 : (_touched$terms$index4 = touched.terms[index]) === null || _touched$terms$index4 === void 0 ? void 0 : _touched$terms$index4.name) && (errors === null || errors === void 0 ? void 0 : errors.terms) && (errors === null || errors === void 0 ? void 0 : (_errors$terms$index3 = errors.terms[index]) === null || _errors$terms$index3 === void 0 ? void 0 : _errors$terms$index3.name)),\n                        helperText: (touched === null || touched === void 0 ? void 0 : touched.terms) && (touched === null || touched === void 0 ? void 0 : (_touched$terms$index5 = touched.terms[index]) === null || _touched$terms$index5 === void 0 ? void 0 : _touched$terms$index5.name) && (errors === null || errors === void 0 ? void 0 : errors.terms) && (errors === null || errors === void 0 ? void 0 : (_errors$terms$index4 = errors.terms[index]) === null || _errors$terms$index4 === void 0 ? void 0 : _errors$terms$index4.name),\n                        value: items.name,\n                        onChange: handleChange,\n                        onBlur: handleBlur\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 426,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 425,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      md: 5,\n                      xs: 8,\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        fullWidth: true,\n                        multiline: true,\n                        label: \"Meal Recipe terms\",\n                        name: `terms[${index}].term`,\n                        variant: \"outlined\",\n                        error: Boolean((touched === null || touched === void 0 ? void 0 : touched.terms) && (touched === null || touched === void 0 ? void 0 : (_touched$terms$index6 = touched.terms[index]) === null || _touched$terms$index6 === void 0 ? void 0 : _touched$terms$index6.term) && (errors === null || errors === void 0 ? void 0 : errors.terms) && (errors === null || errors === void 0 ? void 0 : (_errors$terms$index5 = errors.terms[index]) === null || _errors$terms$index5 === void 0 ? void 0 : _errors$terms$index5.term)),\n                        helperText: (touched === null || touched === void 0 ? void 0 : touched.terms) && (touched === null || touched === void 0 ? void 0 : (_touched$terms$index7 = touched.terms[index]) === null || _touched$terms$index7 === void 0 ? void 0 : _touched$terms$index7.term) && (errors === null || errors === void 0 ? void 0 : errors.terms) && (errors === null || errors === void 0 ? void 0 : (_errors$terms$index6 = errors.terms[index]) === null || _errors$terms$index6 === void 0 ? void 0 : _errors$terms$index6.term),\n                        value: items.term,\n                        onChange: handleChange,\n                        onBlur: handleBlur\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 450,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 449,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      md: 1,\n                      xs: 4,\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        fullWidth: true,\n                        className: classes.deleteButton,\n                        variant: \"contained\",\n                        color: \"secondary\" // onClick={() =>\n                        //   removeIngredients(values, index, setFieldValue)\n                        // }\n                        ,\n                        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 484,\n                          columnNumber: 37\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 475,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 474,\n                      columnNumber: 33\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 384,\n                    columnNumber: 33\n                  }, this);\n                }), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 12,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    fullWidth: true,\n                    className: classes.themeButton,\n                    variant: \"contained\",\n                    color: \"default\",\n                    onClick: () => addIngredients(values, setFieldValue),\n                    endIcon: /*#__PURE__*/_jsxDEV(ControlPointIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 497,\n                      columnNumber: 42\n                    }, this),\n                    children: \"Add Ingredients\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 491,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 25\n                }, this), values === null || values === void 0 ? void 0 : (_values$ingredients = values.ingredients) === null || _values$ingredients === void 0 ? void 0 : _values$ingredients.map((items, index) => {\n                  var _touched$ingredients$3, _errors$ingredients$i3, _touched$ingredients$4, _errors$ingredients$i4;\n\n                  return /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    container: true,\n                    md: 12,\n                    xs: 12,\n                    direction: \"row\",\n                    spacing: 2,\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      md: 5,\n                      xs: 12,\n                      children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                        fullWidth: true,\n                        options: [{\n                          name: 'ingredients1',\n                          id: 1\n                        }, {\n                          name: 'ingredients2',\n                          id: 2\n                        }, {\n                          name: 'ingredients3',\n                          id: 3\n                        }] // value={ingredientList.find(\n                        //   (data: any) => data._id == incValue.id\n                        // )}\n                        ,\n                        getOptionLabel: option => option.name // getOptionSelected={(option) =>\n                        //   option._id == incValue.id\n                        // }\n                        ,\n                        onChange: (event, newValue) => {\n                          setFieldValue(`ingredients[${index}].id`, (newValue === null || newValue === void 0 ? void 0 : newValue._id) || '');\n                        },\n                        onBlur: handleBlur,\n                        renderInput: params => {\n                          var _touched$ingredients$, _errors$ingredients$i, _touched$ingredients$2, _errors$ingredients$i2;\n\n                          return /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                            label: \"Ingredients\",\n                            variant: \"outlined\",\n                            error: Boolean((touched === null || touched === void 0 ? void 0 : touched.ingredients) && (touched === null || touched === void 0 ? void 0 : (_touched$ingredients$ = touched.ingredients[index]) === null || _touched$ingredients$ === void 0 ? void 0 : _touched$ingredients$.id) && (errors === null || errors === void 0 ? void 0 : errors.ingredients) && (errors === null || errors === void 0 ? void 0 : (_errors$ingredients$i = errors.ingredients[index]) === null || _errors$ingredients$i === void 0 ? void 0 : _errors$ingredients$i.id)),\n                            helperText: (touched === null || touched === void 0 ? void 0 : touched.ingredients) && (touched === null || touched === void 0 ? void 0 : (_touched$ingredients$2 = touched.ingredients[index]) === null || _touched$ingredients$2 === void 0 ? void 0 : _touched$ingredients$2.id) && (errors === null || errors === void 0 ? void 0 : errors.ingredients) && (errors === null || errors === void 0 ? void 0 : (_errors$ingredients$i2 = errors.ingredients[index]) === null || _errors$ingredients$i2 === void 0 ? void 0 : _errors$ingredients$i2.id),\n                            inputProps: { ...params.inputProps\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 532,\n                            columnNumber: 37\n                          }, this);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 514,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 513,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      md: 6,\n                      xs: 8,\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        fullWidth: true,\n                        multiline: true,\n                        label: \"Quantity\",\n                        name: `ingredients[${index}].quantity`,\n                        variant: \"outlined\",\n                        error: Boolean((touched === null || touched === void 0 ? void 0 : touched.ingredients) && (touched === null || touched === void 0 ? void 0 : (_touched$ingredients$3 = touched.ingredients[index]) === null || _touched$ingredients$3 === void 0 ? void 0 : _touched$ingredients$3.quantity) && (errors === null || errors === void 0 ? void 0 : errors.ingredients) && (errors === null || errors === void 0 ? void 0 : (_errors$ingredients$i3 = errors.ingredients[index]) === null || _errors$ingredients$i3 === void 0 ? void 0 : _errors$ingredients$i3.quantity)),\n                        helperText: (touched === null || touched === void 0 ? void 0 : touched.ingredients) && (touched === null || touched === void 0 ? void 0 : (_touched$ingredients$4 = touched.ingredients[index]) === null || _touched$ingredients$4 === void 0 ? void 0 : _touched$ingredients$4.quantity) && (errors === null || errors === void 0 ? void 0 : errors.ingredients) && (errors === null || errors === void 0 ? void 0 : (_errors$ingredients$i4 = errors.ingredients[index]) === null || _errors$ingredients$i4 === void 0 ? void 0 : _errors$ingredients$i4.quantity),\n                        value: items.term,\n                        onChange: handleChange,\n                        onBlur: handleBlur\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 556,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 555,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      md: 1,\n                      xs: 4,\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        fullWidth: true,\n                        className: classes.deleteButton,\n                        variant: \"contained\",\n                        color: \"secondary\" // onClick={() =>\n                        //   removeIngredients(values, index, setFieldValue)\n                        // }\n                        ,\n                        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 590,\n                          columnNumber: 37\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 581,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 580,\n                      columnNumber: 33\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 504,\n                    columnNumber: 33\n                  }, this);\n                }), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Preparation Time\",\n                    name: \"protein\",\n                    variant: \"outlined\",\n                    value: values.preparation_time,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.preparation_time && errors.preparation_time),\n                    helperText: touched.preparation_time && errors.preparation_time\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 597,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 596,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    multiline: true,\n                    label: \"Preparation Description\",\n                    name: \"fat\",\n                    variant: \"outlined\",\n                    value: values.preparation_description,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.preparation_description && errors.preparation_description),\n                    helperText: touched.preparation_description && errors.preparation_description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 614,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 613,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: onClose,\n                variant: \"outlined\",\n                color: \"secondary\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 634,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: classes.themeButton,\n                onClick: () => submitForm(),\n                disabled: isSubmitting,\n                variant: \"outlined\",\n                children: isSubmitting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  size: 24,\n                  style: {\n                    color: 'white'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 645,\n                  columnNumber: 25\n                }, this) : okBtnText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 638,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s2(AddEditModel, \"n9s9e4rRsxVb1k6+X/03j+R3fCE=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = AddEditModel;\nexport default MealRecipe;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MealRecipe\");\n$RefreshReg$(_c2, \"AddEditModel\");","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/pages/MealRecipe/MealRecipe.tsx"],"names":["React","Avatar","Button","CircularProgress","Dialog","DialogActions","DialogContent","Grid","makeStyles","Paper","FormControl","FormHelperText","TextField","Typography","AddIcon","DeleteIcon","Autocomplete","Formik","Yup","DialogTitle","ControlPointIcon","useStyles","theme","root","width","breakpoints","values","lg","maxWidth","margin","padding","spacing","themeButton","color","palette","white","backgroundColor","green","main","dark","workouttermsavatar","height","deleteButton","MealRecipe","classes","addEditDialog","setAddEditDialog","useState","isOpen","title","okBtnText","isEdit","data","openAddDialog","prevState","closeAddEditDialog","mealTerms","name","image","file","prevImage","isNew","term","ingredientsSelect","id","quantity","initialFormValues","nutrition","description","protein","fat","carbs","terms","ingredients","preparation_time","preparation_description","AddEditModel","props","onClose","onSuccess","initialValues","setInitialValues","formikRef","useRef","imageRef","avatharimgRef","onAvatarImageChange","event","index","persist","files","target","length","reader","FileReader","onloadend","current","setFieldValue","result","readAsDataURL","workoutTermsName","onSubmit","helper","alert","addMealRecipeTerms","push","addIngredients","object","shape","string","trim","required","array","of","mixed","errors","touched","handleBlur","handleChange","submitForm","isSubmitting","Boolean","map","items","e","click","option","newValue","_id","params","inputProps"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Avatar, Button, Card, CardActions, CardContent, CircularProgress, Dialog, DialogActions, DialogContent, Grid, IconButton, makeStyles, Paper, Tab,  Table, TableBody, FormControl, FormHelperText, TableCell, TableContainer, TableHead, TableRow, TextField, Tooltip,  Divider, Typography, Tabs} from '@material-ui/core';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Pagination, TabContext, TabList, TabPanel } from '@material-ui/lab';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { imageUpload } from '../../utils/FirebaseUtils';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\r\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\r\nimport Page from '../../components/Page/Page';\r\nimport useConfModel from '../../hook/useConfModel';\r\nimport useService from '../../hook/useService';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\n\r\n\r\nconst useStyles = makeStyles((theme: any)=>({\r\n    root: {\r\n        width: theme.breakpoints.values.lg,\r\n        maxWidth: '100%',\r\n        margin: '0 auto',\r\n        padding: theme.spacing(3),\r\n    },\r\n    themeButton: {\r\n        color: theme.palette.white,\r\n        backgroundColor: theme.palette.green.main,\r\n        '&:hover': {\r\n          backgroundColor: theme.palette.green.dark,\r\n        },\r\n    },\r\n    workouttermsavatar: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    deleteButton: {\r\n        width: '100%',\r\n        height: '50px',\r\n    },\r\n}))\r\nfunction MealRecipe() {\r\n  const classes = useStyles();\r\n  const [addEditDialog, setAddEditDialog] = React.useState({\r\n    isOpen: false,\r\n    title: '',\r\n    okBtnText: '',\r\n    isEdit: false,\r\n    data: {},\r\n  });\r\n\r\n  const openAddDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      title: 'Add Meal Recipe',\r\n      isEdit: false,\r\n      okBtnText: 'Save',\r\n    }));\r\n  };\r\n\r\n  const closeAddEditDialog = () =>{\r\n    setAddEditDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <Grid alignItems='flex-end' container justify='space-between' spacing={3}>\r\n            <Grid item>\r\n            <Typography component='h1' variant='h3'>\r\n                Meal Recipe\r\n            </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n            <Button\r\n                variant='contained'\r\n                onClick={() => openAddDialog()}\r\n                className={classes.themeButton}\r\n                startIcon={<AddIcon />}\r\n            >\r\n                Add\r\n            </Button>\r\n            </Grid>\r\n        </Grid>\r\n\r\n      {/* =============Search======== */}\r\n        <Grid container spacing={3}>\r\n            <Grid item>\r\n                <Paper elevation={0}>\r\n                    <TextField\r\n                    fullWidth\r\n                    size='small'\r\n                    placeholder='Name'\r\n                    variant='outlined'\r\n                    name='state'\r\n                    />\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n\r\n        <AddEditModel\r\n            {...addEditDialog}\r\n            onClose={closeAddEditDialog}\r\n            // onSuccess={onSuccessAction}\r\n         />\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\ninterface MealTerms {\r\n    name : string,\r\n    image : {file:string | null, prevImage : string, isNew: boolean | null},\r\n    term : string\r\n}\r\n\r\ninterface Ingredients {\r\n    id : string,\r\n    quantity : string\r\n}\r\n\r\ninterface MealPlan {\r\n    name : string,\r\n    image : {file:string | null, prevImage : string, isNew: boolean | null},\r\n    nutrition : string,\r\n    description : string,\r\n    protein : string,\r\n    fat : string,\r\n    carbs : string,\r\n    terms : MealTerms[],\r\n    ingredients : Ingredients[],\r\n    preparation_time : string,\r\n    preparation_description : string\r\n\r\n}\r\n\r\nconst mealTerms: MealTerms = {\r\n    name : '',\r\n    image : { file:null , prevImage : '', isNew: null},\r\n    term : ''\r\n}\r\n\r\nconst ingredientsSelect: Ingredients = {\r\n    id : '',\r\n    quantity:''\r\n}\r\n\r\nconst initialFormValues: MealPlan = {\r\n    name : '',\r\n    image : { file:null, prevImage : '', isNew : null },\r\n    nutrition : '',\r\n    description : '',\r\n    protein : '',\r\n    fat : '',\r\n    carbs : '',\r\n    terms : [mealTerms],\r\n    ingredients : [ingredientsSelect],\r\n    preparation_time : '',\r\n    preparation_description : ''\r\n}\r\n\r\nexport const AddEditModel = (props: any) =>{\r\n    const { isEdit, isOpen, okBtnText = 'OK', onClose, data, title, onSuccess } = props;\r\n    const classes = useStyles()\r\n    const [initialValues, setInitialValues] = React.useState({...initialFormValues});\r\n    const formikRef = React.useRef<any>(null);\r\n    const imageRef = React.useRef<any>(null);\r\n    const avatharimgRef = React.useRef<any>(null);\r\n\r\n    const onAvatarImageChange = (event: React.ChangeEvent<HTMLInputElement>, index: any) =>{\r\n      event.persist();\r\n      const files = event.target.files;\r\n      if (files && files.length != 0) {\r\n        const reader = new FileReader();\r\n        const file = files[0];\r\n        reader.onloadend = () => {\r\n          formikRef.current.setFieldValue(`terms[${index}].image`, {\r\n            file,\r\n            prevImage: reader.result,\r\n            isNew: true,\r\n          });\r\n        };\r\n        reader.readAsDataURL(file);\r\n      } else {\r\n        formikRef.current.setFieldValue('terms', {\r\n          workoutTermsName: '',\r\n          image: { file: null, prevImage: '', isNew: null },\r\n          description: '',\r\n        });\r\n      }\r\n    }\r\n\r\n    const onSubmit = (values: any, helper: any) =>{\r\n        alert('done')\r\n    }\r\n\r\n    const addMealRecipeTerms = (values:MealPlan, setFieldValue: any) =>{\r\n      const { terms } = values\r\n      terms.push(mealTerms);\r\n      setFieldValue('terms',terms)\r\n    }\r\n\r\n    const addIngredients = (values:MealPlan, setFieldValue: any) =>{\r\n      const { ingredients } = values;\r\n      ingredients.push(ingredientsSelect)\r\n      setFieldValue('ingredients',ingredients)\r\n    }\r\n    return (\r\n        <>\r\n        <Dialog\r\n            open={isOpen}\r\n            disableBackdropClick\r\n            disableEscapeKeyDown\r\n            fullWidth\r\n            maxWidth='md'\r\n            aria-labelledby='dialog-title'\r\n        >\r\n            <DialogTitle id='dialog-title' onClose={onClose}>\r\n             {title}\r\n            </DialogTitle>\r\n            <Formik\r\n                innerRef={formikRef}\r\n                enableReinitialize\r\n                initialValues={initialFormValues}\r\n                onSubmit={onSubmit}\r\n                validationSchema={Yup.object().shape({\r\n                    name: Yup.string().trim().required('Name is required'),\r\n                    nutrition: Yup.string().trim().required('Nutrition is required'),\r\n                    description: Yup.string().trim().required('Description is required'),\r\n                    protein: Yup.string().trim().required('Protein is required'),\r\n                    fat: Yup.string().trim().required('Fat is required'),\r\n                    carbs: Yup.string().trim().required('Carbs is required'),\r\n                    terms : Yup.array().of(\r\n                        Yup.object().shape({\r\n                            name: Yup.string()\r\n                              .trim()\r\n                              .required('Meal recipe name is Required'),\r\n                            image: Yup.object({\r\n                              file: Yup.mixed().required('required'),\r\n                            }),\r\n                            term: Yup.string()\r\n                              .trim()\r\n                              .required('Meal Recipe terms is Required'),\r\n                        })\r\n                      ),\r\n                    ingredients : Yup.array().of(\r\n                      Yup.object().shape({\r\n                        id: Yup.string().trim().required('Ingredients is Required'),\r\n                        quantity : Yup.string().trim().required('Quantity is Required')\r\n                      })),\r\n                    preparation_time : Yup.string().trim().required('Preparation time is required'),\r\n                    preparation_description :  Yup.string().trim().required('Preparation description is required')\r\n                  })}\r\n            >\r\n                {({values, errors, touched, handleBlur,handleChange,setFieldValue, submitForm, isSubmitting,})=>(\r\n                <>\r\n                <DialogContent dividers>\r\n                    <Grid container spacing = {2}>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label='Name'\r\n                                name='name'\r\n                                variant='outlined'\r\n                                value={values.name}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                error={Boolean(\r\n                                  touched.name && errors.name\r\n                                )}\r\n                                helperText={\r\n                                  touched.name && errors.name\r\n                                }\r\n                            />\r\n                        </Grid>                        \r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label='Nutrition'\r\n                                name='nutrition'\r\n                                variant='outlined'\r\n                                value={values.nutrition}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                error={Boolean(\r\n                                  touched.nutrition && errors.nutrition\r\n                                )}\r\n                                helperText={\r\n                                  touched.nutrition && errors.nutrition\r\n                                }\r\n                            />\r\n                        </Grid>                        \r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                multiline\r\n                                label='Description'\r\n                                name='description'\r\n                                variant='outlined'\r\n                                value={values.description}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                error={Boolean(\r\n                                  touched.description && errors.description\r\n                                )}\r\n                                helperText={\r\n                                  touched.description && errors.description\r\n                                }\r\n                            />\r\n                        </Grid>                        \r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label='Protein'\r\n                                name='protein'\r\n                                variant='outlined'\r\n                                value={values.protein}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                error={Boolean(\r\n                                  touched.protein && errors.protein\r\n                                )}\r\n                                helperText={\r\n                                  touched.protein && errors.protein\r\n                                }\r\n                            />\r\n                        </Grid>                        \r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label='Fat'\r\n                                name='fat'\r\n                                variant='outlined'\r\n                                value={values.fat}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                error={Boolean(\r\n                                  touched.fat && errors.fat\r\n                                )}\r\n                                helperText={\r\n                                  touched.fat && errors.fat\r\n                                }\r\n                            />\r\n                        </Grid>                        \r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label='Carbs'\r\n                                name='carbs'\r\n                                variant='outlined'\r\n                                value={values.carbs}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                error={Boolean(\r\n                                  touched.carbs && errors.carbs\r\n                                )}\r\n                                helperText={\r\n                                  touched.carbs && errors.carbs\r\n                                }\r\n                            />\r\n                        </Grid>  \r\n                        <Grid item md={12} xs={12}>\r\n                            <Button\r\n                                fullWidth\r\n                                className={classes.themeButton}\r\n                                variant='contained'\r\n                                color='default'\r\n                                onClick={() => addMealRecipeTerms(values, setFieldValue)}\r\n                                endIcon={<ControlPointIcon />}\r\n                            >\r\n                                Add Terms\r\n                            </Button>\r\n                        </Grid>\r\n\r\n                        {values?.terms?.map((items: any, index: any)=>(\r\n                                <Grid\r\n                                key={index}\r\n                                item\r\n                                container\r\n                                md={12}\r\n                                xs={12}\r\n                                direction='row'\r\n                                spacing={2}\r\n                              >\r\n                                <Grid item md={1} xs={12}>\r\n                                  <input\r\n                                    ref={avatharimgRef}\r\n                                    type='file'\r\n                                    accept='.jpg,.png,jpeg'\r\n                                    onChange={(e) => onAvatarImageChange(e, index)}\r\n                                    onBlur={handleBlur}\r\n                                    hidden\r\n                                  />\r\n                                  <Avatar\r\n                                    className={classes.workouttermsavatar}\r\n                                    variant='square'\r\n                                    onClick={() => avatharimgRef.current.click()}\r\n                                    src={items?.image?.prevImage}\r\n                                  />\r\n                                  <FormControl\r\n                                    error={Boolean(\r\n                                      touched?.terms &&\r\n                                        touched?.terms[index]?.image?.file &&\r\n                                        errors?.terms &&\r\n                                        (errors?.terms[index] as any)?.image?.file\r\n                                    )}\r\n                                  >\r\n                                    <FormHelperText>\r\n                                      {touched?.terms &&\r\n                                        touched?.terms[index]?.image?.file &&\r\n                                        errors?.terms &&\r\n                                        (errors?.terms[index] as any)?.image?.file}\r\n                                    </FormHelperText>\r\n                                  </FormControl>\r\n                                </Grid>\r\n          \r\n                                <Grid item md={5} xs={12}>\r\n                                  <TextField\r\n                                    fullWidth\r\n                                    multiline\r\n                                    label='Workout terms name'\r\n                                    name={`terms[${index}].name`}\r\n                                    variant='outlined'\r\n                                    error={Boolean(\r\n                                      touched?.terms &&\r\n                                        touched?.terms[index]?.name &&\r\n                                        errors?.terms &&\r\n                                        (errors?.terms[index] as any)?.name\r\n                                    )}\r\n                                    helperText={\r\n                                      touched?.terms &&\r\n                                      touched?.terms[index]?.name &&\r\n                                      errors?.terms &&\r\n                                      (errors?.terms[index] as any)?.name\r\n                                    }\r\n                                    value={items.name}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                  />\r\n                                </Grid>\r\n                                <Grid item md={5} xs={8}>\r\n                                  <TextField\r\n                                    fullWidth\r\n                                    multiline\r\n                                    label='Meal Recipe terms'\r\n                                    name={`terms[${index}].term`}\r\n                                    variant='outlined'\r\n                                    error={Boolean(\r\n                                      touched?.terms &&\r\n                                        touched?.terms[index]?.term &&\r\n                                        errors?.terms &&\r\n                                        (errors?.terms[index] as any)?.term\r\n                                    )}\r\n                                    helperText={\r\n                                      touched?.terms &&\r\n                                      touched?.terms[index]?.term &&\r\n                                      errors?.terms &&\r\n                                      (errors?.terms[index] as any)?.term\r\n                                    }\r\n                                    value={items.term}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                  />\r\n                                </Grid>\r\n          \r\n                                <Grid item md={1} xs={4}>\r\n                                  <Button\r\n                                    fullWidth\r\n                                    className={classes.deleteButton}\r\n                                    variant='contained'\r\n                                    color='secondary'\r\n                                    // onClick={() =>\r\n                                    //   removeIngredients(values, index, setFieldValue)\r\n                                    // }\r\n                                  >\r\n                                    <DeleteIcon />\r\n                                  </Button>\r\n                                </Grid>\r\n                              </Grid>\r\n                            ))}\r\n\r\n                        <Grid item md={12} xs={12}>\r\n                            <Button\r\n                                fullWidth\r\n                                className={classes.themeButton}\r\n                                variant='contained'\r\n                                color='default'\r\n                                onClick={() => addIngredients(values, setFieldValue)}\r\n                                endIcon={<ControlPointIcon />}\r\n                            >\r\n                                Add Ingredients\r\n                            </Button>\r\n                        </Grid>\r\n\r\n                        {values?.ingredients?.map((items: any, index: any)=>(\r\n                                <Grid\r\n                                key={index}\r\n                                item\r\n                                container\r\n                                md={12}\r\n                                xs={12}\r\n                                direction='row'\r\n                                spacing={2}\r\n                              >          \r\n                                <Grid item md={5} xs={12}>\r\n                                <Autocomplete\r\n                                  fullWidth\r\n                                  options={[{name :'ingredients1',id:1},{name :'ingredients2',id:2},{name :'ingredients3',id:3}]}\r\n                                  // value={ingredientList.find(\r\n                                  //   (data: any) => data._id == incValue.id\r\n                                  // )}\r\n                                  getOptionLabel={(option: any) => option.name}\r\n                                  // getOptionSelected={(option) =>\r\n                                  //   option._id == incValue.id\r\n                                  // }\r\n                                  onChange={(event: any, newValue: any) => {\r\n                                    setFieldValue(\r\n                                      `ingredients[${index}].id`,\r\n                                      newValue?._id || ''\r\n                                    );\r\n                                  }}\r\n                                  onBlur={handleBlur}\r\n                                  renderInput={(params) => (\r\n                                    <TextField\r\n                                      {...params}\r\n                                      label='Ingredients'\r\n                                      variant='outlined'\r\n                                      error={Boolean(\r\n                                        touched?.ingredients &&\r\n                                        touched?.ingredients[index]?.id &&\r\n                                        errors?.ingredients &&\r\n                                        (errors?.ingredients[index] as any)?.id\r\n                                      )}\r\n                                      helperText={\r\n                                        touched?.ingredients &&\r\n                                        touched?.ingredients[index]?.id &&\r\n                                        errors?.ingredients &&\r\n                                        (errors?.ingredients[index] as any)?.id\r\n                                      }\r\n                                      inputProps={{\r\n                                        ...params.inputProps,\r\n                                      }}\r\n                                    />\r\n                                  )}\r\n                                />\r\n                                </Grid>\r\n                                <Grid item md={6} xs={8}>\r\n                                  <TextField\r\n                                    fullWidth\r\n                                    multiline\r\n                                    label='Quantity'\r\n                                    name={`ingredients[${index}].quantity`}\r\n                                    variant='outlined'\r\n                                    error={Boolean(\r\n                                      touched?.ingredients &&\r\n                                        touched?.ingredients[index]?.quantity &&\r\n                                        errors?.ingredients &&\r\n                                        (errors?.ingredients[index] as any)?.quantity\r\n                                    )}\r\n                                    helperText={\r\n                                      touched?.ingredients &&\r\n                                      touched?.ingredients[index]?.quantity &&\r\n                                      errors?.ingredients &&\r\n                                      (errors?.ingredients[index] as any)?.quantity\r\n                                    }\r\n                                    value={items.term}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                  />\r\n                                </Grid>\r\n          \r\n                                <Grid item md={1} xs={4}>\r\n                                  <Button\r\n                                    fullWidth\r\n                                    className={classes.deleteButton}\r\n                                    variant='contained'\r\n                                    color='secondary'\r\n                                    // onClick={() =>\r\n                                    //   removeIngredients(values, index, setFieldValue)\r\n                                    // }\r\n                                  >\r\n                                    <DeleteIcon />\r\n                                  </Button>\r\n                                </Grid>\r\n                              </Grid>\r\n                        ))}\r\n\r\n                        <Grid item xs={12} md={12}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label='Preparation Time'\r\n                                name='protein'\r\n                                variant='outlined'\r\n                                value={values.preparation_time}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                error={Boolean(\r\n                                  touched.preparation_time && errors.preparation_time\r\n                                )}\r\n                                helperText={\r\n                                  touched.preparation_time && errors.preparation_time\r\n                                }\r\n                            />\r\n                        </Grid>                        \r\n                        <Grid item xs={12} md={12}>\r\n                            <TextField\r\n                                fullWidth\r\n                                multiline\r\n                                label='Preparation Description'\r\n                                name='fat'\r\n                                variant='outlined'\r\n                                value={values.preparation_description}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                error={Boolean(\r\n                                  touched.preparation_description && errors.preparation_description\r\n                                )}\r\n                                helperText={\r\n                                  touched.preparation_description && errors.preparation_description\r\n                                }\r\n                            />\r\n                        </Grid>            \r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onClose} variant='outlined' color='secondary'>\r\n                      Cancel\r\n                    </Button>\r\n\r\n                    <Button\r\n                      className={classes.themeButton}\r\n                      onClick={() => submitForm()}\r\n                      disabled={isSubmitting}\r\n                      variant='outlined'\r\n                    >\r\n                      {isSubmitting ? (\r\n                        <CircularProgress size={24} style={{color : 'white'}} />\r\n                      ) : (\r\n                        okBtnText\r\n                      )}\r\n                    </Button>\r\n                  </DialogActions>\r\n                </>\r\n            )}\r\n            </Formik>\r\n         </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MealRecipe\r\n"]},"metadata":{},"sourceType":"module"}