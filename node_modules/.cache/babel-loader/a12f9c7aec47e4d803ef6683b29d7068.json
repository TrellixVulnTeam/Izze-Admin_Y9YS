{"ast":null,"code":"import { Extension, callOrReturn, getExtensionField } from '@tiptap/core';\nimport { gapCursor } from 'prosemirror-gapcursor';\nconst Gapcursor = Extension.create({\n  name: 'gapCursor',\n\n  addProseMirrorPlugins() {\n    return [gapCursor()];\n  },\n\n  extendNodeSchema(extension) {\n    var _a;\n\n    const context = {\n      name: extension.name,\n      options: extension.options\n    };\n    return {\n      allowGapCursor: (_a = callOrReturn(getExtensionField(extension, 'allowGapCursor', context))) !== null && _a !== void 0 ? _a : null\n    };\n  }\n\n});\nexport default Gapcursor;\nexport { Gapcursor };","map":{"version":3,"sources":["../src/gapcursor.ts"],"names":[],"mappings":";;MAwBa,SAAS,GAAG,SAAS,CAAC,MAAV,CAAiB;AACxC,EAAA,IAAI,EAAE,WADkC;;AAGxC,EAAA,qBAAqB,GAAA;AACnB,WAAO,CACL,SAAS,EADJ,CAAP;AAGD,GAPuC;;AASxC,EAAA,gBAAgB,CAAC,SAAD,EAAU;;;AACxB,UAAM,OAAO,GAAG;AACd,MAAA,IAAI,EAAE,SAAS,CAAC,IADF;AAEd,MAAA,OAAO,EAAE,SAAS,CAAC;AAFL,KAAhB;AAKA,WAAO;AACL,MAAA,cAAc,EAAE,CAAA,EAAA,GAAA,YAAY,CAAC,iBAAiB,CAAC,SAAD,EAAY,gBAAZ,EAA8B,OAA9B,CAAlB,CAAZ,MAAqE,IAArE,IAAqE,EAAA,KAAA,KAAA,CAArE,GAAqE,EAArE,GAAyE;AADpF,KAAP;AAGD;;AAlBuC,CAAjB,C","sourcesContent":["import {\n  Extension,\n  callOrReturn,\n  getExtensionField,\n  ParentConfig,\n} from '@tiptap/core'\nimport { gapCursor } from 'prosemirror-gapcursor'\n\ndeclare module '@tiptap/core' {\n  interface NodeConfig<Options> {\n    /**\n     * Allow gap cursor\n     */\n    allowGapCursor?:\n      | boolean\n      | null\n      | ((this: {\n        name: string,\n        options: Options,\n        parent: ParentConfig<NodeConfig<Options>>['allowGapCursor'],\n      }) => boolean | null),\n  }\n}\n\nexport const Gapcursor = Extension.create({\n  name: 'gapCursor',\n\n  addProseMirrorPlugins() {\n    return [\n      gapCursor(),\n    ]\n  },\n\n  extendNodeSchema(extension) {\n    const context = {\n      name: extension.name,\n      options: extension.options,\n    }\n\n    return {\n      allowGapCursor: callOrReturn(getExtensionField(extension, 'allowGapCursor', context)) ?? null,\n    }\n  },\n})\n"]},"metadata":{},"sourceType":"module"}