{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pyramidion\\\\WebApp\\\\Izze-Admin\\\\src\\\\pages\\\\AdminProfileDetails\\\\AdminProfileDetails.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React from 'react';\nimport { Grid, Button, Paper, makeStyles, Avatar, Table, TableBody, TableCell, TableRow, IconButton, Dialog, DialogActions, DialogContent, TextField } from '@material-ui/core';\nimport Page from '../../components/Page/Page';\nimport useService from '../../hook/useService';\nimport useSnackbar from '../../hook/useSnackbar';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { uploadNewImage } from '../../utils/CloudinaryUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyle = makeStyles(theme => ({\n  root: {\n    width: theme.breakpoints.values.lg,\n    height: '100%',\n    maxWidth: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(3)\n  },\n  paperStyle: {\n    width: '100%',\n    height: '85vh'\n  },\n  insidePaperDivStyle: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    margin: 'auto',\n    alignItems: 'center',\n    height: '100%'\n  },\n  themeButton: {\n    color: theme.palette.white,\n    textTransform: 'capitalize',\n    backgroundColor: theme.palette.green.main,\n    '&:hover': {\n      backgroundColor: theme.palette.green.dark\n    }\n  },\n  avatarStyle: {\n    width: '150px',\n    height: '150px'\n  },\n  lColor: {\n    color: theme.palette.green.main\n  }\n}));\n\nconst AdminProfileDetails = () => {\n  _s();\n\n  var _profileData$image;\n\n  const classes = useStyle();\n  const {\n    Post\n  } = useService();\n  const Snackbar = useSnackbar();\n  const [profileData, setProfileData] = React.useState('');\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const getProfileDetails = () => {\n    setIsLoading(true);\n    Post('app/getAdminUser', {}).then(res => {\n      setIsLoading(false);\n\n      if (!res.error) {\n        setProfileData(res.data);\n      } else {\n        Snackbar.show(res.message, 'error');\n      }\n    }).catch(err => {\n      console.log('err', err);\n      setIsLoading(false);\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  React.useEffect(() => {\n    getProfileDetails();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Page, {\n      title: \"Admin Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paperStyle,\n          children: [!isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.insidePaperDivStyle,\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              className: classes.avatarStyle,\n              src: profileData === null || profileData === void 0 ? void 0 : (_profileData$image = profileData.image) === null || _profileData$image === void 0 ? void 0 : _profileData$image.url,\n              alt: profileData === null || profileData === void 0 ? void 0 : profileData.name,\n              variant: \"square\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              style: {\n                width: '65%'\n              },\n              children: /*#__PURE__*/_jsxDEV(TableBody, {\n                children: [/*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"left\",\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: profileData === null || profileData === void 0 ? void 0 : profileData.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: /*#__PURE__*/_jsxDEV(EditProfile, {\n                      data: profileData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 60\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"left\",\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: profileData === null || profileData === void 0 ? void 0 : profileData.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"left\",\n                    children: \"Admin Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: profileData === null || profileData === void 0 ? void 0 : profileData.user_type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"left\",\n                    children: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: \"**********\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: /*#__PURE__*/_jsxDEV(ChangePassword, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 111,\n                      columnNumber: 60\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.insidePaperDivStyle,\n            children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n              className: classes.lColor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 80\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AdminProfileDetails, \"/TE8JY4nzdy4vctJcHqFXdnMNqk=\", false, function () {\n  return [useStyle, useService, useSnackbar];\n});\n\n_c = AdminProfileDetails;\nconst initialEditValues = {\n  name: '',\n  image: {\n    file: null,\n    prevImage: '',\n    isNew: null\n  }\n};\nexport const EditProfile = props => {\n  _s2();\n\n  const {\n    data\n  } = props;\n  const classes = useStyle();\n  const formikRef = React.useRef(null);\n  const imageRef = React.useRef(null);\n  const {\n    Post\n  } = useService();\n  const Snackbar = useSnackbar();\n  const [isEdit, setIsEdit] = React.useState(false);\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [initialFormValues, setInitialFormValues] = React.useState({ ...initialEditValues\n  });\n  React.useEffect(() => {\n    if (isEdit) {\n      const {\n        image,\n        _id,\n        ...rest\n      } = data;\n      const editData = { ...rest,\n        id: _id\n      };\n      editData.image = {\n        file: image,\n        prevImage: image === null || image === void 0 ? void 0 : image.url,\n        isNew: false\n      };\n      console.log(editData);\n      setInitialFormValues(editData);\n    } else {\n      setInitialFormValues(initialEditValues);\n    }\n  }, [props, isEdit]);\n\n  const editProfileModel = () => {\n    setIsOpen(!isOpen);\n    setIsEdit(true);\n  };\n\n  const onClose = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const onImageChange = e => {\n    e.persist();\n    const files = e.target.files;\n\n    if (files && files.length != 0) {\n      const reader = new FileReader();\n      const file = files[0];\n\n      reader.onloadend = () => {\n        formikRef.current.setFieldValue('image', {\n          file,\n          prevImage: reader.result,\n          isNew: true\n        });\n      };\n\n      reader.readAsDataURL(file);\n    } else {\n      formikRef.current.setFieldValue('image', {\n        file: null,\n        prevImage: '',\n        isNew: null\n      });\n    }\n  };\n\n  const onSubmit = async (value, helper) => {\n    const {\n      name,\n      image\n    } = value;\n    const postData = {};\n    postData.name = name;\n    postData.image = await uploadNewImage(image);\n    editProfile(postData, helper);\n  };\n\n  const editProfile = (data, {\n    setSubmitting,\n    resetForm\n  }) => {\n    Post('app/updateAdminDetails', data).then(res => {\n      Snackbar.show(res.message, 'success');\n      setSubmitting(false);\n      resetForm();\n      onClose();\n    }).catch(err => {\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: editProfileModel,\n      className: classes.themeButton,\n      children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 84\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isOpen,\n      disableBackdropClick: true,\n      disableEscapeKeyDown: true,\n      fullWidth: true,\n      maxWidth: \"sm\",\n      \"aria-labelledby\": \"dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"dialog-title\",\n        onClose: onClose,\n        children: \"Edit Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        innerRef: formikRef,\n        enableReinitialize: true,\n        initialValues: initialFormValues,\n        validationSchema: Yup.object().shape({\n          name: Yup.string().required('Name is required'),\n          image: Yup.object({\n            file: Yup.mixed().required('A file is required')\n          })\n        }),\n        onSubmit: onSubmit,\n        children: ({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          setFieldValue,\n          submitForm,\n          isSubmitting\n        }) => {\n          var _values$image;\n\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n              dividers: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    name: \"recipe_image\",\n                    ref: imageRef,\n                    type: \"file\",\n                    accept: \".jpg,.png,jpeg\",\n                    onChange: onImageChange,\n                    onBlur: handleBlur,\n                    hidden: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: 'flex',\n                      justifyContent: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Avatar, {\n                      onClick: () => imageRef.current.click(),\n                      className: classes.avatarStyle,\n                      src: values === null || values === void 0 ? void 0 : (_values$image = values.image) === null || _values$image === void 0 ? void 0 : _values$image.prevImage,\n                      alt: 'profilePic',\n                      variant: \"square\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 249,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Name\",\n                    variant: \"outlined\",\n                    name: \"name\",\n                    value: values.name,\n                    onBlur: handleBlur,\n                    onChange: handleChange,\n                    error: Boolean(touched.name && errors.name),\n                    helperText: touched.name && errors.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: onClose,\n                variant: \"outlined\",\n                color: \"secondary\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: classes.themeButton,\n                onClick: () => submitForm(),\n                disabled: isSubmitting,\n                variant: \"outlined\",\n                children: isSubmitting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  size: 24,\n                  style: {\n                    color: 'white'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 33\n                }, this) : 'Save'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(EditProfile, \"7rE9ctSDIMxMoJoKFZ2CZcrCs5A=\", false, function () {\n  return [useStyle, useService, useSnackbar];\n});\n\n_c2 = EditProfile;\nconst initialValues = {\n  password: '',\n  confirmPassword: ''\n};\nexport const ChangePassword = () => {\n  _s3();\n\n  const classes = useStyle();\n  const formikRef = React.useRef(null);\n  const [isOpen, setIsOpen] = React.useState(false);\n  const {\n    Post\n  } = useService();\n  const Snackbar = useSnackbar();\n  const [initialFormValues, setInitialFormValues] = React.useState({ ...initialValues\n  });\n\n  const changePasswordModel = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const onClose = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const onSubmit = (value, helper) => {\n    const {\n      confirmPassword\n    } = value;\n    let postData = {\n      password: confirmPassword\n    };\n    changePasswordData(postData, helper);\n  };\n\n  const changePasswordData = (data, {\n    setSubmitting,\n    resetForm\n  }) => {\n    Post('app/updateAdminPassword', data).then(res => {\n      Snackbar.show(res.message, 'success');\n      setSubmitting(false);\n      resetForm();\n      onClose();\n    }).catch(err => {\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: changePasswordModel,\n      className: classes.themeButton,\n      children: \"Change\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isOpen,\n      disableBackdropClick: true,\n      disableEscapeKeyDown: true,\n      fullWidth: true,\n      maxWidth: \"sm\",\n      \"aria-labelledby\": \"dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"dialog-title\",\n        onClose: onClose,\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        innerRef: formikRef,\n        enableReinitialize: true,\n        initialValues: initialFormValues,\n        validationSchema: Yup.object().shape({\n          password: Yup.string().required('Password is required'),\n          confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Password must be same').required('Confirm password is required')\n        }),\n        onSubmit: onSubmit,\n        children: ({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          setFieldValue,\n          submitForm,\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n            dividers: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Password\",\n                  variant: \"outlined\",\n                  name: \"password\",\n                  type: \"password\",\n                  value: values.password,\n                  onBlur: handleBlur,\n                  onChange: handleChange,\n                  error: Boolean(touched.password && errors.password),\n                  helperText: touched.password && errors.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Confirm Password\",\n                  variant: \"outlined\",\n                  name: \"confirmPassword\",\n                  type: \"password\",\n                  value: values.confirmPassword,\n                  onBlur: handleBlur,\n                  onChange: handleChange,\n                  error: Boolean(touched.confirmPassword && errors.confirmPassword),\n                  helperText: touched.confirmPassword && errors.confirmPassword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: onClose,\n              variant: \"outlined\",\n              color: \"secondary\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: classes.themeButton,\n              onClick: () => submitForm(),\n              disabled: isSubmitting,\n              variant: \"outlined\",\n              children: isSubmitting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 24,\n                style: {\n                  color: 'white'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 29\n              }, this) : 'ChangePassword'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s3(ChangePassword, \"je36U9ALBxWkBPN1xE+8WeiiOAQ=\", false, function () {\n  return [useStyle, useService, useSnackbar];\n});\n\n_c3 = ChangePassword;\nexport default AdminProfileDetails;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"AdminProfileDetails\");\n$RefreshReg$(_c2, \"EditProfile\");\n$RefreshReg$(_c3, \"ChangePassword\");","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/pages/AdminProfileDetails/AdminProfileDetails.tsx"],"names":["React","Grid","Button","Paper","makeStyles","Avatar","Table","TableBody","TableCell","TableRow","IconButton","Dialog","DialogActions","DialogContent","TextField","Page","useService","useSnackbar","EditIcon","CircularProgress","DialogTitle","Formik","Yup","uploadNewImage","useStyle","theme","root","width","breakpoints","values","lg","height","maxWidth","margin","padding","spacing","paperStyle","insidePaperDivStyle","display","flexDirection","justifyContent","alignItems","themeButton","color","palette","white","textTransform","backgroundColor","green","main","dark","avatarStyle","lColor","AdminProfileDetails","classes","Post","Snackbar","profileData","setProfileData","useState","isLoading","setIsLoading","getProfileDetails","then","res","error","data","show","message","catch","err","console","log","useEffect","image","url","name","email","user_type","initialEditValues","file","prevImage","isNew","EditProfile","props","formikRef","useRef","imageRef","isEdit","setIsEdit","isOpen","setIsOpen","initialFormValues","setInitialFormValues","_id","rest","editData","id","editProfileModel","onClose","onImageChange","e","persist","files","target","length","reader","FileReader","onloadend","current","setFieldValue","result","readAsDataURL","onSubmit","value","helper","postData","editProfile","setSubmitting","resetForm","object","shape","string","required","mixed","errors","touched","handleChange","handleBlur","submitForm","isSubmitting","click","Boolean","initialValues","password","confirmPassword","ChangePassword","changePasswordModel","changePasswordData","oneOf","ref"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Grid, Button, Paper, makeStyles, Avatar, Table, TableBody, TableCell, TableRow, IconButton, Dialog, DialogActions, DialogContent, TextField, List, ListItem, ListItemAvatar, ListItemText, Typography,} from '@material-ui/core'\r\nimport Page from '../../components/Page/Page';\r\nimport useService from '../../hook/useService';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { uploadNewImage } from '../../utils/CloudinaryUtils';\r\n\r\nconst useStyle = makeStyles((theme: any) => ({\r\n  root: {\r\n    width: theme.breakpoints.values.lg,\r\n    height : '100%',\r\n    maxWidth: '100%',\r\n    margin: '0 auto',\r\n    padding: theme.spacing(3),\r\n  },\r\n  paperStyle : {\r\n      width : '100%',\r\n      height : '85vh',\r\n  },\r\n  insidePaperDivStyle : {\r\n     display : 'flex',\r\n     flexDirection : 'column',\r\n     justifyContent : 'center',\r\n     margin : 'auto',\r\n     alignItems : 'center',\r\n     height : '100%'\r\n  },\r\n  themeButton: {\r\n    color: theme.palette.white,\r\n    textTransform : 'capitalize',\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n  },\r\n  avatarStyle : {\r\n      width : '150px',\r\n      height : '150px'\r\n  },\r\n  lColor: {\r\n    color: theme.palette.green.main,\r\n  }\r\n\r\n}));\r\n\r\nconst AdminProfileDetails = () => {\r\n  const classes = useStyle();\r\n  const { Post } = useService();\r\n  const Snackbar = useSnackbar();\r\n  const [profileData, setProfileData] = React.useState<any>('');\r\n  const [isLoading, setIsLoading] = React.useState(false)\r\n\r\n\r\n  const getProfileDetails = () =>{\r\n        setIsLoading(true);\r\n        Post('app/getAdminUser', {})\r\n        .then((res: any) => {\r\n            setIsLoading(false);\r\n            if (!res.error) {\r\n            setProfileData(res.data);\r\n            } else {\r\n            Snackbar.show(res.message, 'error');\r\n            }\r\n        })\r\n        .catch((err: any) => {\r\n            console.log('err', err);\r\n            setIsLoading(false);\r\n            Snackbar.show(err.message, 'error');\r\n        });\r\n    }\r\n\r\n    React.useEffect(()=>{\r\n        getProfileDetails()\r\n    },[])\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Page title='Admin Profile' />\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12} md={2}></Grid>\r\n            <Grid item xs={12} md={8}>\r\n                <Paper className={classes.paperStyle}>\r\n                    {!isLoading && (\r\n                        <div className={classes.insidePaperDivStyle}>\r\n                        <Avatar className={classes.avatarStyle} src={profileData?.image?.url} alt={profileData?.name} variant='square' />\r\n                        <Table style={{width : '65%'}}>\r\n                            <TableBody>\r\n                            <TableRow >\r\n                                <TableCell align = 'left'>Name</TableCell>\r\n                                <TableCell align = 'center'>{profileData?.name}</TableCell>\r\n                                <TableCell align = 'right'><EditProfile data={profileData}/></TableCell>\r\n                            </TableRow>\r\n                            <TableRow >\r\n                                <TableCell align = 'left'>Email</TableCell>\r\n                                <TableCell align = 'center'>{profileData?.email}</TableCell>\r\n                                <TableCell align = 'right'></TableCell>\r\n                            </TableRow>\r\n                            <TableRow >\r\n                                <TableCell align = 'left'>Admin Type</TableCell>\r\n                                <TableCell align = 'center'>{profileData?.user_type}</TableCell>\r\n                                <TableCell align = 'right'></TableCell>\r\n                            </TableRow>\r\n                            <TableRow >\r\n                                <TableCell align = 'left'>Password</TableCell>\r\n                                <TableCell align = 'center'>**********</TableCell>\r\n                                <TableCell align = 'right'><ChangePassword /></TableCell>\r\n                            </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                    </div>\r\n                    )}\r\n\r\n                    {isLoading && <div className={classes.insidePaperDivStyle}><CircularProgress className={classes.lColor} /></div>}\r\n                    \r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} md={2}></Grid>\r\n        </Grid>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nconst initialEditValues = {\r\n    name : '',\r\n    image : {file : null, prevImage : '',isNew : null},\r\n}\r\n\r\nexport const EditProfile = (props: any) =>{\r\n    const { data } = props;\r\n    const classes = useStyle();\r\n    const formikRef = React.useRef<any>(null);\r\n    const imageRef = React.useRef<any>(null);\r\n    const { Post } = useService();\r\n    const Snackbar = useSnackbar();\r\n    const [isEdit, setIsEdit] = React.useState(false)\r\n    const [isOpen, setIsOpen] = React.useState(false);\r\n    const [initialFormValues, setInitialFormValues] = React.useState({...initialEditValues});\r\n\r\n    React.useEffect(()=>{\r\n        if(isEdit){\r\n            const {image, _id, ...rest} = data;\r\n            const editData = {...rest, id: _id}\r\n            editData.image = {\r\n                file: image,\r\n                prevImage: image?.url,\r\n                isNew: false,\r\n            }\r\n            console.log(editData)\r\n            setInitialFormValues(editData)\r\n        }\r\n        else{\r\n            setInitialFormValues(initialEditValues)\r\n        }\r\n    },[props, isEdit])\r\n\r\n    const editProfileModel = () =>{\r\n        setIsOpen(!isOpen);\r\n        setIsEdit(true)\r\n    }\r\n\r\n    const onClose = () =>{\r\n        setIsOpen(!isOpen)\r\n    }\r\n\r\n    const onImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        e.persist();\r\n        const files = e.target.files;\r\n        if (files && files.length != 0) {\r\n          const reader = new FileReader();\r\n          const file = files[0];\r\n          reader.onloadend = () => {\r\n            formikRef.current.setFieldValue('image', {\r\n              file,\r\n              prevImage: reader.result,\r\n              isNew : true\r\n            });\r\n          };\r\n          reader.readAsDataURL(file);\r\n        } else {\r\n          formikRef.current.setFieldValue('image', {\r\n            file: null,\r\n            prevImage: '',\r\n            isNew : null\r\n          });\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (value: any, helper: any) =>{\r\n        const { name , image} = value;\r\n        const postData: any = {};\r\n        postData.name = name;\r\n        postData.image = await uploadNewImage(image);\r\n        editProfile(postData,helper)\r\n    }\r\n\r\n    const editProfile = (data: any, { setSubmitting, resetForm }: any) =>{\r\n        Post('app/updateAdminDetails', data)\r\n        .then((res: any) => {\r\n            Snackbar.show(res.message, 'success');\r\n            setSubmitting(false);\r\n            resetForm();\r\n            onClose();\r\n        })\r\n        .catch((err: any) => {\r\n            Snackbar.show(err.message, 'error');\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <IconButton onClick={editProfileModel} className={classes.themeButton}><EditIcon /></IconButton>\r\n            <Dialog open={isOpen} disableBackdropClick disableEscapeKeyDown fullWidth maxWidth='sm' aria-labelledby='dialog-title'>\r\n                <DialogTitle id='dialog-title' onClose={onClose}>\r\n                    Edit Profile\r\n                </DialogTitle>\r\n\r\n                <Formik\r\n                    innerRef={formikRef}\r\n                    enableReinitialize\r\n                    initialValues={initialFormValues}\r\n                    validationSchema={Yup.object().shape({\r\n                        name : Yup.string().required('Name is required'),\r\n                        image : Yup.object({file: Yup.mixed().required('A file is required')})\r\n                    })}\r\n                    onSubmit={onSubmit}\r\n                >\r\n                {({ values, errors, touched, handleChange, handleBlur, setFieldValue, submitForm, isSubmitting }) => (\r\n                    <>\r\n                        <DialogContent dividers>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12}>\r\n                                    <input\r\n                                        name='recipe_image'\r\n                                        ref={imageRef}\r\n                                        type='file'\r\n                                        accept='.jpg,.png,jpeg'\r\n                                        onChange={onImageChange}\r\n                                        onBlur={handleBlur}\r\n                                        hidden\r\n                                    />\r\n                                    <div style={{display : 'flex', justifyContent : 'center'}}>\r\n                                        <Avatar onClick={()=>imageRef.current.click()} className={classes.avatarStyle} src={values?.image?.prevImage} alt={'profilePic'} variant='square' />\r\n                                    </div>   \r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField \r\n                                        fullWidth \r\n                                        label = 'Name'\r\n                                        variant='outlined' \r\n                                        name = 'name'\r\n                                        value={values.name}\r\n                                        onBlur={handleBlur}\r\n                                        onChange={handleChange}\r\n                                        error={Boolean(touched.name && errors.name)}\r\n                                        helperText={touched.name && errors.name}\r\n                                    />   \r\n                                </Grid>\r\n                            </Grid>\r\n                        </DialogContent>\r\n\r\n                        <DialogActions>\r\n                            <Button onClick={onClose} variant='outlined' color='secondary'>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button\r\n                            className={classes.themeButton}\r\n                            onClick={() => submitForm()}\r\n                            disabled={isSubmitting}\r\n                            variant='outlined'\r\n                            >\r\n                            {isSubmitting ? (\r\n                                <CircularProgress size={24} style={{ color: 'white' }} />\r\n                            ) : (\r\n                                'Save'\r\n                            )}\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </>\r\n                )}\r\n                </Formik>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nconst initialValues = {\r\n    password : '',\r\n    confirmPassword : '',\r\n}\r\nexport const ChangePassword = () =>{\r\n    const classes = useStyle();\r\n    const formikRef = React.useRef<any>(null);\r\n    const [isOpen, setIsOpen] = React.useState(false);\r\n    const { Post } = useService();\r\n    const Snackbar = useSnackbar();\r\n    const [initialFormValues, setInitialFormValues] = React.useState({...initialValues})\r\n\r\n    const changePasswordModel = () =>{\r\n        setIsOpen(!isOpen)\r\n    }\r\n\r\n    const onClose = () =>{\r\n        setIsOpen(!isOpen)\r\n    }\r\n\r\n    const onSubmit = (value: any, helper: any) =>{\r\n        const { confirmPassword } = value\r\n        let postData = {\r\n            password : confirmPassword\r\n        }\r\n        changePasswordData(postData, helper)\r\n    }\r\n\r\n    const changePasswordData = (data: any, { setSubmitting, resetForm }: any) =>{\r\n        Post('app/updateAdminPassword', data)\r\n        .then((res: any) => {\r\n            Snackbar.show(res.message, 'success');\r\n            setSubmitting(false);\r\n            resetForm();\r\n            onClose();\r\n        })\r\n        .catch((err: any) => {\r\n            Snackbar.show(err.message, 'error');\r\n        });\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <Button onClick={changePasswordModel} className={classes.themeButton}>Change</Button>\r\n            <Dialog\r\n                open={isOpen}\r\n                disableBackdropClick\r\n                disableEscapeKeyDown\r\n                fullWidth\r\n                maxWidth='sm'\r\n                aria-labelledby='dialog-title'\r\n            >\r\n                <DialogTitle id='dialog-title' onClose={onClose}>\r\n                    Change Password\r\n                </DialogTitle>\r\n                <Formik\r\n                    innerRef={formikRef}\r\n                    enableReinitialize\r\n                    initialValues={initialFormValues}\r\n                    validationSchema={Yup.object().shape({\r\n                        password : Yup.string().required('Password is required'),\r\n                        confirmPassword : Yup.string().oneOf([Yup.ref('password'),null], 'Password must be same').required('Confirm password is required')\r\n                    })}\r\n                    onSubmit={onSubmit}\r\n                >\r\n                {({ values, errors, touched, handleChange, handleBlur, setFieldValue, submitForm, isSubmitting }) => (\r\n                    <>\r\n                    <DialogContent dividers>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                                <TextField \r\n                                    fullWidth \r\n                                    label = 'Password'\r\n                                    variant='outlined' \r\n                                    name = 'password'\r\n                                    type = 'password'\r\n                                    value={values.password}\r\n                                    onBlur={handleBlur}\r\n                                    onChange={handleChange}\r\n                                    error={Boolean(touched.password && errors.password)}\r\n                                    helperText={touched.password && errors.password}\r\n                                />    \r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField \r\n                                    fullWidth \r\n                                    label = 'Confirm Password'\r\n                                    variant='outlined'\r\n                                    name = 'confirmPassword'\r\n                                    type = 'password'\r\n                                    value={values.confirmPassword}\r\n                                    onBlur={handleBlur}\r\n                                    onChange={handleChange}\r\n                                    error={Boolean(touched.confirmPassword && errors.confirmPassword)}\r\n                                    helperText={touched.confirmPassword && errors.confirmPassword}\r\n                                />   \r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContent>\r\n\r\n                    <DialogActions>\r\n                        <Button onClick={onClose} variant='outlined' color='secondary'>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button\r\n                        className={classes.themeButton}\r\n                        onClick={() => submitForm()}\r\n                        disabled={isSubmitting}\r\n                        variant='outlined'\r\n                        >\r\n                        {isSubmitting ? (\r\n                            <CircularProgress size={24} style={{ color: 'white' }} />\r\n                        ) : (\r\n                            'ChangePassword'\r\n                        )}\r\n                        </Button>\r\n                    </DialogActions>\r\n                    </>\r\n                )}\r\n                </Formik>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminProfileDetails;\r\n"]},"metadata":{},"sourceType":"module"}