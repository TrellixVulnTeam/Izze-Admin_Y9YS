{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pyramidion\\\\WebApp\\\\Izze-Admin\\\\src\\\\pages\\\\WorkoutExercise\\\\WorkoutExercise.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { Avatar, Button, Card, CardActions, CardContent, CircularProgress, Dialog, DialogActions, DialogContent, FormControl, FormHelperText, Grid, IconButton, makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, Tooltip, Typography } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { Autocomplete, Pagination } from '@material-ui/lab';\nimport { Formik } from 'formik';\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as Yup from 'yup';\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\nimport Page from '../../components/Page/Page';\nimport TipTapEditor from '../../components/TipTapEditor/TipTapEditor/TipTapEditor';\nimport useConfModel from '../../hook/useConfModel';\nimport useService from '../../hook/useService';\nimport useSnackbar from '../../hook/useSnackbar';\nimport { imageUpload } from '../../utils/FirebaseUtils';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: theme.breakpoints.values.lg,\n    maxWidth: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(3)\n  },\n  addIcon: {\n    marginRight: theme.spacing(1)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 700\n  },\n  actions: {\n    padding: theme.spacing(1),\n    justifyContent: 'center'\n  },\n  tabCard: {\n    marginTop: theme.spacing(3)\n  },\n  sEvenly: {\n    display: 'flex',\n    justifyContent: 'space-evenly'\n  },\n  iconPadd: {\n    padding: 5\n  },\n  jCenter: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  imageView: {\n    width: '100%',\n    height: '100%'\n  },\n  themeButton: {\n    color: theme.palette.white,\n    backgroundColor: theme.palette.green.main,\n    '&:hover': {\n      backgroundColor: theme.palette.green.dark\n    }\n  },\n  lColor: {\n    color: 'white'\n  },\n  workouttermsavatar: {\n    width: '100%',\n    height: '100%'\n  },\n  deleteButton: {\n    width: '100%',\n    height: '50px'\n  },\n  avatarStyles: {\n    width: theme.spacing(15),\n    height: theme.spacing(15) // margin: 'auto',\n\n  },\n  ingredientsAvatarStyle: {\n    width: theme.spacing(10),\n    height: theme.spacing(10),\n    margin: 'auto'\n  },\n  marginTopStyle: {\n    marginTop: theme.spacing(2)\n  },\n  adjustmentTop: {\n    marginTop: '5px'\n  }\n}));\n\nconst WorkoutExercise = () => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    Post\n  } = useService();\n  const Snackbar = useSnackbar();\n  const ConfModel = useConfModel();\n  const [stateData, setStateData] = useState({\n    page_no: 1,\n    page_limit: 10\n  });\n  const [pageCount, setPageCount] = useState(0);\n  const [dataList, setDataList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [addEditDialog, setAddEditDialog] = useState({\n    isOpen: false,\n    title: '',\n    okBtnText: '',\n    isEdit: false,\n    data: {}\n  });\n  const [viewDialog, setViewDialog] = useState({\n    isOpen: false,\n    title: '',\n    data: {}\n  });\n\n  const listWorkOutExercise = async () => {\n    setLoading(true);\n    Post('app/listWorkout', stateData).then(res => {\n      setLoading(false);\n\n      if (!res.error) {\n        setDataList(res.data);\n        setPageCount(res.page_count);\n      } else {\n        Snackbar.show(res.message, 'error');\n      }\n    }).catch(err => {\n      console.log('err', err);\n      setLoading(false);\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  const onPageChange = (event, value) => {\n    setStateData(prevState => ({ ...prevState,\n      page_no: value\n    }));\n  };\n\n  const setElipsis = text => {\n    return (text === null || text === void 0 ? void 0 : text.length) >= 25 ? `${text.substring(0, 40)}...` : text;\n  };\n\n  const openAddDialog = () => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      isEdit: false,\n      title: 'Add Recpie',\n      okBtnText: 'Save'\n    }));\n  };\n\n  const openEditDialog = data => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      isEdit: true,\n      data,\n      title: 'Edit Recpie',\n      okBtnText: 'Edit'\n    }));\n  };\n\n  const openViewDialog = data => {\n    setViewDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      data,\n      title: 'View Workout Exerice'\n    }));\n  };\n\n  const onDelete = data => {\n    const {\n      openModel,\n      setLoading,\n      closeModel\n    } = ConfModel;\n\n    const submitFunction = () => {\n      setLoading(true);\n      Post('app/deleteSkinCareRecipe', {\n        id: data._id\n      }).then(async res => {\n        setLoading(false);\n        closeModel();\n        onSuccessAction();\n        Snackbar.show(res.message, 'success');\n      }).catch(err => {\n        setLoading(false);\n        Snackbar.show('Internal Server Error', 'error');\n      });\n    };\n\n    openModel(submitFunction);\n  };\n\n  const closeAddEditDialog = () => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: false\n    }));\n  };\n\n  const closeViewDialog = () => {\n    setViewDialog(prevState => ({ ...prevState,\n      isOpen: false\n    }));\n  };\n\n  const onSuccessAction = () => {\n    listWorkOutExercise();\n    closeAddEditDialog();\n  };\n\n  useEffect(() => {\n    listWorkOutExercise();\n  }, [stateData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Page, {\n      title: \"Workout Exercise\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      alignItems: \"flex-end\",\n      container: true,\n      justify: \"space-between\",\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h3\",\n          children: \"Workout Exercise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => openAddDialog(),\n          className: classes.themeButton,\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 24\n          }, this),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 0,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            size: \"small\",\n            placeholder: \"Name\",\n            variant: \"outlined\",\n            name: \"state\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.tabCard,\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        className: classes.content,\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"#\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Workout Image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Workout Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Workout Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: [!loading && dataList.map((data, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: stateData.page_limit * (stateData.page_no - 1) + index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: classes.jCenter,\n                    children: /*#__PURE__*/_jsxDEV(Avatar, {\n                      variant: \"square\",\n                      src: data === null || data === void 0 ? void 0 : data.workout_image\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 299,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: data === null || data === void 0 ? void 0 : data.workout_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: data === null || data === void 0 ? void 0 : data.recipe_description,\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: setElipsis(data === null || data === void 0 ? void 0 : data.workout_description)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 305,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: classes.sEvenly,\n                    children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                      title: \"View\",\n                      arrow: true,\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        className: classes.iconPadd,\n                        onClick: () => openViewDialog(data),\n                        children: /*#__PURE__*/_jsxDEV(CenterFocusStrongIcon, {\n                          color: \"primary\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 315,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 311,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 310,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                      title: \"Edit\",\n                      arrow: true,\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        className: classes.iconPadd,\n                        onClick: () => openEditDialog(data),\n                        children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                          color: \"action\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 323,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 319,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 318,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                      title: \"Delete\",\n                      arrow: true,\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        className: classes.iconPadd,\n                        onClick: () => onDelete(data),\n                        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                          color: \"secondary\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 331,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 327,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 326,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 21\n              }, this)), loading && /*#__PURE__*/_jsxDEV(TableLoader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 29\n              }, this), !loading && dataList.length == 0 && /*#__PURE__*/_jsxDEV(TableNoData, {\n                children: \"No Data Found\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Pagination, {\n          count: pageCount,\n          page: stateData.page_no,\n          onChange: onPageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddEditDailog, { ...addEditDialog,\n      onClose: closeAddEditDialog,\n      onSuccess: onSuccessAction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ViewDailog, { ...viewDialog,\n      onClose: closeViewDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WorkoutExercise, \"n7lqFhswjx4n2RNYmdeOspsVVkI=\", false, function () {\n  return [useStyles, useService, useSnackbar, useConfModel];\n});\n\n_c = WorkoutExercise;\n\nconst AddEditDailog = props => {\n  _s2();\n\n  const {\n    isOpen,\n    title,\n    onClose,\n    isEdit,\n    data,\n    onSuccess,\n    okBtnText = 'Ok'\n  } = props;\n  const classes = useStyles();\n  const formikRef = useRef(null);\n  const imageRef = useRef(null);\n  const avatharimgRef = useRef(null);\n  const thumbnailImageRef = useRef(null);\n  const Snackbar = useSnackbar();\n  const {\n    Post\n  } = useService();\n  const [equipmentList, setEquipmentList] = useState([]);\n  const workoutTerms = {\n    workoutTermsName: '',\n    image: {\n      file: null,\n      prevImage: '',\n      isNew: null\n    },\n    description: ''\n  };\n  const initialFormValue = {\n    workout_name: '',\n    workout_image: {\n      file: null,\n      prevImage: '',\n      isNew: null\n    },\n    workout_description: '',\n    workout_thumbnail: {\n      file: null,\n      prevImage: '',\n      isNew: null\n    },\n    workout_type: '',\n    workout_terms: [workoutTerms],\n    required_equipments: '',\n    how_to_do: ''\n  };\n  const [initialValue, setInitialValue] = useState({ ...initialFormValue\n  });\n\n  const listIngredients = async () => {\n    Post('app/listAllEquipment', {}).then(res => {\n      if (!res.error) {\n        let getequipmentList = res.data.map(data => {\n          data.id = data._id;\n          return data;\n        });\n        setEquipmentList(getequipmentList);\n      } else {\n        Snackbar.show(res.message, 'error');\n      }\n    }).catch(err => {\n      console.log('err', err);\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  const onAvatarImageChange = (e, index) => {\n    e.persist();\n    const files = e.target.files;\n\n    if (files && files.length != 0) {\n      const reader = new FileReader();\n      const file = files[0];\n\n      reader.onloadend = () => {\n        formikRef.current.setFieldValue(`workout_terms[${index}].image`, {\n          file,\n          prevImage: reader.result,\n          isNew: true\n        });\n      };\n\n      reader.readAsDataURL(file);\n    } else {\n      formikRef.current.setFieldValue('workout_terms', {\n        workoutTermsName: '',\n        image: {\n          file: null,\n          prevImage: '',\n          isNew: null\n        },\n        description: ''\n      });\n    }\n  };\n\n  const onImageChange = e => {\n    e.persist();\n    const files = e.target.files;\n\n    if (files && files.length != 0) {\n      const reader = new FileReader();\n      const file = files[0];\n\n      reader.onloadend = () => {\n        formikRef.current.setFieldValue('workout_image', {\n          file,\n          prevImage: reader.result,\n          isNew: true\n        });\n      };\n\n      reader.readAsDataURL(file);\n    } else {\n      formikRef.current.setFieldValue('workout_image', {\n        file: null,\n        prevImage: '',\n        isNew: null\n      });\n    }\n  };\n\n  const onThumbnailImageChange = e => {\n    e.persist();\n    const files = e.target.files;\n\n    if (files && files.length != 0) {\n      const reader = new FileReader();\n      const file = files[0];\n\n      reader.onloadend = () => {\n        formikRef.current.setFieldValue('workout_thumbnail', {\n          file,\n          prevImage: reader.result,\n          isNew: true\n        });\n      };\n\n      reader.readAsDataURL(file);\n    } else {\n      formikRef.current.setFieldValue('workout_thumbnail', {\n        file: null,\n        prevImage: '',\n        isNew: null\n      });\n    }\n  };\n\n  const onSubmit = (value, helper) => {\n    console.log(value);\n\n    try {\n      helper.setSubmitting(true);\n\n      const render = async () => {\n        const {\n          workout_image,\n          workout_thumbnail,\n          workout_terms,\n          ...rest\n        } = value;\n        const {\n          file,\n          isNew\n        } = workout_image;\n        const workoutterms = workout_terms.map(data => {\n          return data.image;\n        });\n        const PostData = rest;\n\n        if (isNew) {\n          PostData.workout_image = await imageUpload(file);\n          PostData.workout_thumbnail = await imageUpload(workout_thumbnail.file);\n          PostData.workout_terms = await imageUpload(workoutterms[0].file);\n        } else {\n          PostData.workout_image = file;\n          PostData.workout_thumbnail = workout_thumbnail.file;\n          PostData.workoutterms[0].image = workoutterms[0].file;\n        }\n\n        !isEdit && addData(PostData, helper);\n        isEdit && editData(PostData, helper);\n      };\n\n      render();\n    } catch (err) {\n      Snackbar.show('Image Upload Failed', 'error');\n    }\n  };\n\n  const addData = (data, {\n    setSubmitting,\n    resetForm\n  }) => {\n    console.log(data);\n    setSubmitting(true);\n    Post('app/addSkinCareRecipe', data).then(res => {\n      Snackbar.show(res.message, 'success');\n      setSubmitting(false);\n      resetForm();\n      onSuccess();\n    }).catch(err => {\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  const editData = (data, {\n    setSubmitting,\n    resetForm\n  }) => {\n    setSubmitting(true);\n    Post('app/editSkinCareRecipe', data).then(res => {\n      Snackbar.show(res.message, 'success');\n      setSubmitting(false);\n      resetForm();\n      onSuccess();\n    }).catch(err => {\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  const addIngredients = (values, setFieldValue) => {\n    console.log(values);\n    let {\n      workout_terms\n    } = values;\n    workout_terms.push(workoutTerms);\n    setFieldValue('workout_terms', workout_terms);\n  };\n\n  const removeIngredients = (values, i, setFieldValue) => {\n    let {\n      workout_terms\n    } = values;\n    const TempIngredients = workout_terms.filter((data, index) => index !== i);\n    setFieldValue('workout_terms', TempIngredients);\n  }; // useEffect(() => {\n  //   if (isEdit) {\n  //     const { recipe_image, ingredients, _id, ...rest } = data;\n  //     const EditData = { ...rest, id: _id };\n  //     EditData.ingredients = ingredients.map((data: any) => {\n  //       data.id = data._id;\n  //       return data;\n  //     });\n  //     EditData.recipe_image = {\n  //       file: recipe_image,\n  //       prevImage: recipe_image,\n  //       isNew: false,\n  //     };\n  //     setInitialValue(EditData);\n  //   } else {\n  //     setInitialValue(initialFormValue);\n  //   }\n  // }, [props]);\n\n\n  useEffect(() => {\n    listIngredients();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    disableBackdropClick: true,\n    disableEscapeKeyDown: true,\n    fullWidth: true,\n    maxWidth: \"md\",\n    \"aria-labelledby\": \"dialog-title\",\n    open: isOpen,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"dialog-title\",\n      onClose: onClose,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      innerRef: formikRef,\n      enableReinitialize: true,\n      initialValues: initialValue,\n      onSubmit: onSubmit,\n      validationSchema: Yup.object().shape({\n        workout_name: Yup.string().trim().required('Workout name is required'),\n        workout_image: Yup.object({\n          file: Yup.mixed().required('A file is required')\n        }),\n        workout_description: Yup.string().trim().required('Workout description is required'),\n        workout_thumbnail: Yup.object({\n          file: Yup.mixed().required('A file is required')\n        }),\n        workout_type: Yup.string().trim().required('Workout type is required'),\n        workout_terms: Yup.array().of(Yup.object().shape({\n          workoutTermsName: Yup.string().trim().required('Workout term name is Required'),\n          image: Yup.object({\n            file: Yup.mixed().required('A file is required')\n          }),\n          description: Yup.string().trim().required('Workout description is Required')\n        })),\n        required_equipments: Yup.string().trim().required('Required Equipments is required'),\n        how_to_do: Yup.string().trim().required('Steps is required')\n      }),\n      children: ({\n        values,\n        errors,\n        touched,\n        handleChange,\n        setFieldValue,\n        handleBlur,\n        setFieldTouched,\n        submitForm,\n        isSubmitting\n      }) => {\n        var _values$workout_terms, _touched$workout_imag, _errors$workout_image, _touched$workout_imag2, _errors$workout_image2, _touched$workout_thum, _errors$workout_thumb, _touched$workout_thum2, _errors$workout_thumb2, _values$workout_image, _values$workout_image2, _values$workout_thumb, _values$workout_thumb2;\n\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [console.log(values.workout_terms), /*#__PURE__*/_jsxDEV(DialogContent, {\n            dividers: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 12,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Workout name\",\n                  name: \"workout_name\",\n                  variant: \"outlined\",\n                  error: Boolean(touched.workout_name && errors.workout_name),\n                  helperText: touched.workout_name && errors.workout_name,\n                  value: values.workout_name,\n                  onChange: handleChange,\n                  onBlur: handleBlur\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 691,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 690,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 12,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  multiline: true,\n                  label: \"Workout description\",\n                  name: \"workout_description\",\n                  variant: \"outlined\",\n                  error: Boolean(touched.workout_description && errors.workout_description),\n                  helperText: touched.workout_description && errors.workout_description,\n                  value: values.workout_description,\n                  onChange: handleChange,\n                  onBlur: handleBlur\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 705,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 704,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 12,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  multiline: true,\n                  label: \"Workout type\",\n                  name: \"workout_type\",\n                  variant: \"outlined\",\n                  error: Boolean(touched.workout_type && errors.workout_type),\n                  helperText: touched.workout_type && errors.workout_type,\n                  value: values.workout_type,\n                  onChange: handleChange,\n                  onBlur: handleBlur\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 724,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 723,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 12,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  fullWidth: true,\n                  className: classes.themeButton,\n                  variant: \"contained\",\n                  color: \"default\",\n                  onClick: () => addIngredients(values, setFieldValue),\n                  endIcon: /*#__PURE__*/_jsxDEV(ControlPointIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 745,\n                    columnNumber: 30\n                  }, this),\n                  children: \"Add workout terms\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 739,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 738,\n                columnNumber: 17\n              }, this), values === null || values === void 0 ? void 0 : (_values$workout_terms = values.workout_terms) === null || _values$workout_terms === void 0 ? void 0 : _values$workout_terms.map((workoutValues, index) => {\n                var _workoutValues$index, _workoutValues$index$, _touched$workout_term, _errors$workout_terms, _touched$workout_term2, _errors$workout_terms2, _touched$workout_term3, _errors$workout_terms3, _touched$workout_term4, _errors$workout_terms4;\n\n                return /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  container: true,\n                  md: 12,\n                  xs: 12,\n                  direction: \"row\",\n                  spacing: 2,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    md: 1,\n                    xs: 6,\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      // name={`workout_terms[${index}].image`}\n                      ref: avatharimgRef,\n                      type: \"file\",\n                      accept: \".jpg,.png,jpeg\",\n                      onChange: e => onAvatarImageChange(e, index),\n                      onBlur: handleBlur,\n                      hidden: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 763,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n                      className: classes.workouttermsavatar,\n                      variant: \"square\",\n                      onClick: () => avatharimgRef.current.click(),\n                      src: (_workoutValues$index = workoutValues[index]) === null || _workoutValues$index === void 0 ? void 0 : (_workoutValues$index$ = _workoutValues$index.image) === null || _workoutValues$index$ === void 0 ? void 0 : _workoutValues$index$.prevImage\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 772,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 762,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    md: 5,\n                    xs: 6,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      fullWidth: true,\n                      multiline: true,\n                      label: \"Workout terms name\",\n                      name: `workout_terms[${index}].workoutTermsName`,\n                      variant: \"outlined\",\n                      error: Boolean((touched === null || touched === void 0 ? void 0 : touched.workout_terms) && (touched === null || touched === void 0 ? void 0 : (_touched$workout_term = touched.workout_terms[index]) === null || _touched$workout_term === void 0 ? void 0 : _touched$workout_term.workoutTermsName) && (errors === null || errors === void 0 ? void 0 : errors.workout_terms) && (errors === null || errors === void 0 ? void 0 : (_errors$workout_terms = errors.workout_terms[index]) === null || _errors$workout_terms === void 0 ? void 0 : _errors$workout_terms.workoutTermsName)),\n                      helperText: (touched === null || touched === void 0 ? void 0 : touched.workout_terms) && (touched === null || touched === void 0 ? void 0 : (_touched$workout_term2 = touched.workout_terms[index]) === null || _touched$workout_term2 === void 0 ? void 0 : _touched$workout_term2.workoutTermsName) && (errors === null || errors === void 0 ? void 0 : errors.workout_terms) && (errors === null || errors === void 0 ? void 0 : (_errors$workout_terms2 = errors.workout_terms[index]) === null || _errors$workout_terms2 === void 0 ? void 0 : _errors$workout_terms2.workoutTermsName),\n                      value: workoutValues.workoutTermsName,\n                      onChange: handleChange,\n                      onBlur: handleBlur\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 781,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 780,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    md: 5,\n                    xs: 6,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      fullWidth: true,\n                      multiline: true,\n                      label: \"Workout terms description\",\n                      name: `workout_terms[${index}].description`,\n                      variant: \"outlined\",\n                      error: Boolean((touched === null || touched === void 0 ? void 0 : touched.workout_terms) && (touched === null || touched === void 0 ? void 0 : (_touched$workout_term3 = touched.workout_terms[index]) === null || _touched$workout_term3 === void 0 ? void 0 : _touched$workout_term3.description) && (errors === null || errors === void 0 ? void 0 : errors.workout_terms) && (errors === null || errors === void 0 ? void 0 : (_errors$workout_terms3 = errors.workout_terms[index]) === null || _errors$workout_terms3 === void 0 ? void 0 : _errors$workout_terms3.description)),\n                      helperText: (touched === null || touched === void 0 ? void 0 : touched.workout_terms) && (touched === null || touched === void 0 ? void 0 : (_touched$workout_term4 = touched.workout_terms[index]) === null || _touched$workout_term4 === void 0 ? void 0 : _touched$workout_term4.description) && (errors === null || errors === void 0 ? void 0 : errors.workout_terms) && (errors === null || errors === void 0 ? void 0 : (_errors$workout_terms4 = errors.workout_terms[index]) === null || _errors$workout_terms4 === void 0 ? void 0 : _errors$workout_terms4.description),\n                      value: workoutValues.description,\n                      onChange: handleChange,\n                      onBlur: handleBlur\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 807,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 806,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    md: 1,\n                    xs: 1,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      fullWidth: true,\n                      className: classes.deleteButton,\n                      variant: \"contained\",\n                      color: \"secondary\",\n                      onClick: () => removeIngredients(values, index, setFieldValue),\n                      children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 841,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 832,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 831,\n                    columnNumber: 23\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 753,\n                  columnNumber: 21\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 12,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  error: Boolean((touched === null || touched === void 0 ? void 0 : touched.how_to_do) && (errors === null || errors === void 0 ? void 0 : errors.how_to_do)),\n                  children: [/*#__PURE__*/_jsxDEV(TipTapEditor, {\n                    value: values.how_to_do,\n                    onChange: value => setFieldValue('how_to_do', value),\n                    onBlur: () => setFieldTouched('how_to_do', true, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 853,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                    children: (touched === null || touched === void 0 ? void 0 : touched.how_to_do) && (errors === null || errors === void 0 ? void 0 : errors.how_to_do)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 861,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 849,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 848,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 12,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  id: \"combo-box-demo\",\n                  options: equipmentList,\n                  onChange: (event, newValue) => {\n                    setFieldValue('required_equipments', (newValue === null || newValue === void 0 ? void 0 : newValue._id) || '');\n                  },\n                  getOptionLabel: option => option.name,\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    label: \"Equipments\",\n                    variant: \"outlined\",\n                    error: Boolean(touched.required_equipments && errors.required_equipments),\n                    helperText: touched.required_equipments && errors.required_equipments,\n                    inputProps: { ...params.inputProps\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 876,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 868,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 867,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                xs: 6,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"recipe_image\",\n                  ref: imageRef,\n                  type: \"file\",\n                  accept: \".jpg,.png,jpeg\",\n                  onChange: onImageChange,\n                  onBlur: handleBlur,\n                  hidden: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 897,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  fullWidth: true,\n                  className: classes.themeButton,\n                  variant: \"contained\",\n                  color: \"default\",\n                  onClick: () => imageRef.current.click(),\n                  startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 912,\n                    columnNumber: 32\n                  }, this),\n                  children: \"Workout image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 906,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  error: Boolean((touched === null || touched === void 0 ? void 0 : (_touched$workout_imag = touched.workout_image) === null || _touched$workout_imag === void 0 ? void 0 : _touched$workout_imag.file) && (errors === null || errors === void 0 ? void 0 : (_errors$workout_image = errors.workout_image) === null || _errors$workout_image === void 0 ? void 0 : _errors$workout_image.file)),\n                  children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n                    children: (touched === null || touched === void 0 ? void 0 : (_touched$workout_imag2 = touched.workout_image) === null || _touched$workout_imag2 === void 0 ? void 0 : _touched$workout_imag2.file) && (errors === null || errors === void 0 ? void 0 : (_errors$workout_image2 = errors.workout_image) === null || _errors$workout_image2 === void 0 ? void 0 : _errors$workout_image2.file)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 922,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 916,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 896,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                xs: 6,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"recipe_image\",\n                  ref: thumbnailImageRef,\n                  type: \"file\",\n                  accept: \".jpg,.png,jpeg\",\n                  onChange: onThumbnailImageChange,\n                  onBlur: handleBlur,\n                  hidden: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 930,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  fullWidth: true,\n                  className: classes.themeButton,\n                  variant: \"contained\",\n                  color: \"default\",\n                  onClick: () => thumbnailImageRef.current.click(),\n                  startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 945,\n                    columnNumber: 32\n                  }, this),\n                  children: \"Workout Thumbnail\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 939,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  error: Boolean((touched === null || touched === void 0 ? void 0 : (_touched$workout_thum = touched.workout_thumbnail) === null || _touched$workout_thum === void 0 ? void 0 : _touched$workout_thum.file) && (errors === null || errors === void 0 ? void 0 : (_errors$workout_thumb = errors.workout_thumbnail) === null || _errors$workout_thumb === void 0 ? void 0 : _errors$workout_thumb.file)),\n                  children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n                    children: (touched === null || touched === void 0 ? void 0 : (_touched$workout_thum2 = touched.workout_thumbnail) === null || _touched$workout_thum2 === void 0 ? void 0 : _touched$workout_thum2.file) && (errors === null || errors === void 0 ? void 0 : (_errors$workout_thumb2 = errors.workout_thumbnail) === null || _errors$workout_thumb2 === void 0 ? void 0 : _errors$workout_thumb2.file)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 955,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 949,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 929,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                xs: 6,\n                children: ((_values$workout_image = values.workout_image) === null || _values$workout_image === void 0 ? void 0 : _values$workout_image.prevImage) && /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: classes.imageView,\n                  src: (_values$workout_image2 = values.workout_image) === null || _values$workout_image2 === void 0 ? void 0 : _values$workout_image2.prevImage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 964,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 962,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                xs: 6,\n                children: ((_values$workout_thumb = values.workout_thumbnail) === null || _values$workout_thumb === void 0 ? void 0 : _values$workout_thumb.prevImage) && /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: classes.imageView,\n                  src: (_values$workout_thumb2 = values.workout_thumbnail) === null || _values$workout_thumb2 === void 0 ? void 0 : _values$workout_thumb2.prevImage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 973,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 971,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: onClose,\n              variant: \"outlined\",\n              color: \"secondary\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 983,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: classes.themeButton,\n              onClick: () => submitForm(),\n              disabled: isSubmitting,\n              variant: \"outlined\",\n              children: isSubmitting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 24,\n                className: classes.lColor\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 994,\n                columnNumber: 19\n              }, this) : okBtnText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 987,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 982,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 623,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(AddEditDailog, \"gInZmTz34AwHZu4psUOK6NaiKaA=\", false, function () {\n  return [useStyles, useSnackbar, useService];\n});\n\n_c2 = AddEditDailog;\n\nconst ViewDailog = props => {\n  _s3();\n\n  var _formValue$workout_te, _formValue$workout_te2, _formValue$required_e, _formValue$required_e2;\n\n  const {\n    isOpen,\n    title,\n    onClose,\n    data\n  } = props;\n  const classes = useStyles();\n  const [formValue, setFormValue] = useState(data);\n  useEffect(() => {\n    setFormValue(data);\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    disableBackdropClick: true,\n    disableEscapeKeyDown: true,\n    fullWidth: true,\n    maxWidth: \"md\",\n    \"aria-labelledby\": \"dialog-view-title\",\n    open: isOpen,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"dialog-view-title\",\n      onClose: onClose,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1025,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          justify: \"flex-end\",\n          md: 2,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            className: classes.avatarStyles,\n            variant: \"square\",\n            src: 'https://img.etimg.com/photo/msid-74747053,quality-100/for-miles-a-great-bodyweight-workout-would-include-squats-push-ups-walking-lunges-.jpg'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1032,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1031,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 10,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            align: \"left\",\n            children: formValue === null || formValue === void 0 ? void 0 : formValue.workout_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1041,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            align: \"left\",\n            style: {\n              marginTop: '5px',\n              color: '#E7B000'\n            },\n            children: formValue === null || formValue === void 0 ? void 0 : formValue.workout_description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1044,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1040,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 12,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            align: \"left\",\n            style: {\n              color: '#41A58D'\n            },\n            children: \"Workout Terms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1053,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1052,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: (formValue === null || formValue === void 0 ? void 0 : (_formValue$workout_te = formValue.workout_terms) === null || _formValue$workout_te === void 0 ? void 0 : _formValue$workout_te.length) !== 0 ? formValue === null || formValue === void 0 ? void 0 : (_formValue$workout_te2 = formValue.workout_terms) === null || _formValue$workout_te2 === void 0 ? void 0 : _formValue$workout_te2.map((value, index) => {\n            return /*#__PURE__*/_jsxDEV(Grid, {\n              className: classes.adjustmentTop,\n              item: true,\n              xs: 6,\n              md: 4,\n              children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                className: classes.ingredientsAvatarStyle,\n                variant: \"circular\",\n                src: 'https://img.etimg.com/photo/msid-74747053,quality-100/for-miles-a-great-bodyweight-workout-would-include-squats-push-ups-walking-lunges-.jpg'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1068,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                align: \"center\",\n                children: value.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1075,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.adjustmentTop,\n                variant: \"subtitle1\",\n                align: \"center\",\n                children: value.description.length >= 25 ? `${value.description.substring(0, 30)}...` : value.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1078,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1061,\n              columnNumber: 19\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(Grid, {\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              align: \"center\",\n              children: \"No Ingredients\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1092,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1091,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1057,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 12,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            align: \"left\",\n            style: {\n              color: '#41A58D'\n            },\n            children: \"Equipments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1099,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1098,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: (formValue === null || formValue === void 0 ? void 0 : (_formValue$required_e = formValue.required_equipments) === null || _formValue$required_e === void 0 ? void 0 : _formValue$required_e.length) !== 0 ? formValue === null || formValue === void 0 ? void 0 : (_formValue$required_e2 = formValue.required_equipments) === null || _formValue$required_e2 === void 0 ? void 0 : _formValue$required_e2.map((value, index) => {\n            return /*#__PURE__*/_jsxDEV(Grid, {\n              className: classes.adjustmentTop,\n              item: true,\n              xs: 6,\n              md: 4,\n              children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                className: classes.ingredientsAvatarStyle,\n                variant: \"circular\",\n                src: value.image\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1114,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                align: \"center\",\n                children: value.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1119,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.adjustmentTop,\n                variant: \"subtitle1\",\n                align: \"center\",\n                children: value.description.length >= 25 ? `${value.description.substring(0, 30)}...` : value.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1122,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1107,\n              columnNumber: 19\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(Grid, {\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              align: \"center\",\n              children: \"No Ingredients\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1136,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1135,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 12,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            align: \"left\",\n            style: {\n              color: '#41A58D'\n            },\n            children: \"How to do\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1143,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 12,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              paddingLeft: '20px',\n              paddingRight: '20px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              dangerouslySetInnerHTML: {\n                __html: formValue === null || formValue === void 0 ? void 0 : formValue.how_to_do\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1149,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1148,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1030,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1029,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        variant: \"outlined\",\n        color: \"secondary\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1017,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(ViewDailog, \"9fAd9pqRjf29KhbDlYBUKf2/COQ=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = ViewDailog;\nexport default WorkoutExercise;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"WorkoutExercise\");\n$RefreshReg$(_c2, \"AddEditDailog\");\n$RefreshReg$(_c3, \"ViewDailog\");","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/pages/WorkoutExercise/WorkoutExercise.tsx"],"names":["Avatar","Button","Card","CardActions","CardContent","CircularProgress","Dialog","DialogActions","DialogContent","FormControl","FormHelperText","Grid","IconButton","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TextField","Tooltip","Typography","AddIcon","CenterFocusStrongIcon","ControlPointIcon","DeleteIcon","EditIcon","Autocomplete","Pagination","Formik","React","useEffect","useRef","useState","Yup","DialogTitle","TableLoader","TableNoData","Page","TipTapEditor","useConfModel","useService","useSnackbar","imageUpload","CloudUploadIcon","useStyles","theme","root","width","breakpoints","values","lg","maxWidth","margin","padding","spacing","addIcon","marginRight","content","inner","minWidth","actions","justifyContent","tabCard","marginTop","sEvenly","display","iconPadd","jCenter","imageView","height","themeButton","color","palette","white","backgroundColor","green","main","dark","lColor","workouttermsavatar","deleteButton","avatarStyles","ingredientsAvatarStyle","marginTopStyle","adjustmentTop","WorkoutExercise","classes","Post","Snackbar","ConfModel","stateData","setStateData","page_no","page_limit","pageCount","setPageCount","dataList","setDataList","loading","setLoading","addEditDialog","setAddEditDialog","isOpen","title","okBtnText","isEdit","data","viewDialog","setViewDialog","listWorkOutExercise","then","res","error","page_count","show","message","catch","err","console","log","onPageChange","event","value","prevState","setElipsis","text","length","substring","openAddDialog","openEditDialog","openViewDialog","onDelete","openModel","closeModel","submitFunction","id","_id","onSuccessAction","closeAddEditDialog","closeViewDialog","map","index","workout_image","workout_name","recipe_description","workout_description","AddEditDailog","props","onClose","onSuccess","formikRef","imageRef","avatharimgRef","thumbnailImageRef","equipmentList","setEquipmentList","workoutTerms","workoutTermsName","image","file","prevImage","isNew","description","initialFormValue","workout_thumbnail","workout_type","workout_terms","required_equipments","how_to_do","initialValue","setInitialValue","listIngredients","getequipmentList","onAvatarImageChange","e","persist","files","target","reader","FileReader","onloadend","current","setFieldValue","result","readAsDataURL","onImageChange","onThumbnailImageChange","onSubmit","helper","setSubmitting","render","rest","workoutterms","PostData","addData","editData","resetForm","addIngredients","push","removeIngredients","i","TempIngredients","filter","object","shape","string","trim","required","mixed","array","of","errors","touched","handleChange","handleBlur","setFieldTouched","submitForm","isSubmitting","Boolean","workoutValues","click","newValue","option","name","params","inputProps","ViewDailog","formValue","setFormValue","paddingLeft","paddingRight","__html"],"mappings":"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","sourcesContent":["import {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  FormControl,\r\n  FormHelperText,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Tooltip,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\r\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Autocomplete, Pagination } from '@material-ui/lab';\r\nimport { Formik } from 'formik';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport * as Yup from 'yup';\r\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\r\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\r\nimport Page from '../../components/Page/Page';\r\nimport TipTapEditor from '../../components/TipTapEditor/TipTapEditor/TipTapEditor';\r\nimport useConfModel from '../../hook/useConfModel';\r\nimport useService from '../../hook/useService';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport { imageUpload } from '../../utils/FirebaseUtils';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  root: {\r\n    width: theme.breakpoints.values.lg,\r\n    maxWidth: '100%',\r\n    margin: '0 auto',\r\n    padding: theme.spacing(3),\r\n  },\r\n  addIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  inner: {\r\n    minWidth: 700,\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(1),\r\n    justifyContent: 'center',\r\n  },\r\n  tabCard: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  sEvenly: {\r\n    display: 'flex',\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  iconPadd: {\r\n    padding: 5,\r\n  },\r\n  jCenter: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  imageView: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  themeButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n  },\r\n  lColor: {\r\n    color: 'white',\r\n  },\r\n  workouttermsavatar: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  deleteButton: {\r\n    width: '100%',\r\n    height: '50px',\r\n  },\r\n  avatarStyles: {\r\n    width: theme.spacing(15),\r\n    height: theme.spacing(15),\r\n    // margin: 'auto',\r\n  },\r\n  ingredientsAvatarStyle: {\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10),\r\n    margin: 'auto',\r\n  },\r\n  marginTopStyle: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  adjustmentTop: {\r\n    marginTop: '5px',\r\n  },\r\n}));\r\n\r\nconst WorkoutExercise = () => {\r\n  const classes = useStyles();\r\n  const { Post } = useService();\r\n  const Snackbar = useSnackbar();\r\n  const ConfModel = useConfModel();\r\n  const [stateData, setStateData] = useState({ page_no: 1, page_limit: 10 });\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const [dataList, setDataList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [addEditDialog, setAddEditDialog] = useState({\r\n    isOpen: false,\r\n    title: '',\r\n    okBtnText: '',\r\n    isEdit: false,\r\n    data: {},\r\n  });\r\n  const [viewDialog, setViewDialog] = useState({\r\n    isOpen: false,\r\n    title: '',\r\n    data: {},\r\n  });\r\n\r\n  const listWorkOutExercise = async () => {\r\n    setLoading(true);\r\n    Post('app/listWorkout', stateData)\r\n      .then((res: any) => {\r\n        setLoading(false);\r\n        if (!res.error) {\r\n          setDataList(res.data);\r\n          setPageCount(res.page_count);\r\n        } else {\r\n          Snackbar.show(res.message, 'error');\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        console.log('err', err);\r\n        setLoading(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const onPageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    setStateData((prevState: any) => ({ ...prevState, page_no: value }));\r\n  };\r\n\r\n  const setElipsis = (text: any) => {\r\n    return text?.length >= 25 ? `${text.substring(0, 40)}...` : text;\r\n  };\r\n\r\n  const openAddDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      isEdit: false,\r\n      title: 'Add Recpie',\r\n      okBtnText: 'Save',\r\n    }));\r\n  };\r\n\r\n  const openEditDialog = (data: any) => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      isEdit: true,\r\n      data,\r\n      title: 'Edit Recpie',\r\n      okBtnText: 'Edit',\r\n    }));\r\n  };\r\n\r\n  const openViewDialog = (data: any) => {\r\n    setViewDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      data,\r\n      title: 'View Workout Exerice',\r\n    }));\r\n  };\r\n\r\n  const onDelete = (data: any) => {\r\n    const { openModel, setLoading, closeModel } = ConfModel;\r\n    const submitFunction = () => {\r\n      setLoading(true);\r\n      Post('app/deleteSkinCareRecipe', { id: data._id })\r\n        .then(async (res: any) => {\r\n          setLoading(false);\r\n          closeModel();\r\n          onSuccessAction();\r\n          Snackbar.show(res.message, 'success');\r\n        })\r\n        .catch((err: any) => {\r\n          setLoading(false);\r\n          Snackbar.show('Internal Server Error', 'error');\r\n        });\r\n    };\r\n    openModel(submitFunction);\r\n  };\r\n\r\n  const closeAddEditDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const closeViewDialog = () => {\r\n    setViewDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const onSuccessAction = () => {\r\n    listWorkOutExercise();\r\n    closeAddEditDialog();\r\n  };\r\n\r\n  useEffect(() => {\r\n    listWorkOutExercise();\r\n  }, [stateData]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Page title='Workout Exercise' />\r\n\r\n      {/* =======Header====== */}\r\n      <Grid alignItems='flex-end' container justify='space-between' spacing={3}>\r\n        <Grid item>\r\n          <Typography component='h1' variant='h3'>\r\n            Workout Exercise\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant='contained'\r\n            onClick={() => openAddDialog()}\r\n            className={classes.themeButton}\r\n            startIcon={<AddIcon />}\r\n          >\r\n            Add\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* =============Search======== */}\r\n      <Grid container spacing={3}>\r\n        <Grid item>\r\n          <Paper elevation={0}>\r\n            <TextField\r\n              fullWidth\r\n              size='small'\r\n              placeholder='Name'\r\n              variant='outlined'\r\n              name='state'\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* ========Table With Pagination========= */}\r\n      <Card className={classes.tabCard}>\r\n        <CardContent className={classes.content}>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align='center'>#</TableCell>\r\n                  <TableCell align='center'>Workout Image</TableCell>\r\n                  <TableCell align='center'>Workout Name</TableCell>\r\n                  <TableCell align='center'>Workout Description</TableCell>\r\n                  <TableCell align='center'>Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {!loading &&\r\n                  dataList.map((data: any, index: number) => (\r\n                    <TableRow hover key={index}>\r\n                      <TableCell align='center'>\r\n                        {stateData.page_limit * (stateData.page_no - 1) +\r\n                          index +\r\n                          1}\r\n                      </TableCell>\r\n                      <TableCell align='center'>\r\n                        <div className={classes.jCenter}>\r\n                          <Avatar variant='square' src={data?.workout_image} />\r\n                        </div>\r\n                      </TableCell>\r\n                      <TableCell align='center'>{data?.workout_name}</TableCell>\r\n                      <TableCell align='center'>\r\n                        <Tooltip title={data?.recipe_description}>\r\n                          <span>{setElipsis(data?.workout_description)}</span>\r\n                        </Tooltip>\r\n                      </TableCell>\r\n                      <TableCell align='center'>\r\n                        <div className={classes.sEvenly}>\r\n                          <Tooltip title='View' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openViewDialog(data)}\r\n                            >\r\n                              <CenterFocusStrongIcon color='primary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Edit' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openEditDialog(data)}\r\n                            >\r\n                              <EditIcon color='action' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Delete' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => onDelete(data)}\r\n                            >\r\n                              <DeleteIcon color='secondary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                {loading && <TableLoader />}\r\n                {!loading && dataList.length == 0 && (\r\n                  <TableNoData>No Data Found</TableNoData>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </CardContent>\r\n\r\n        <CardActions className={classes.actions}>\r\n          <Pagination\r\n            count={pageCount}\r\n            page={stateData.page_no}\r\n            onChange={onPageChange}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n\r\n      {/* ============Add Edit Dialog========== */}\r\n      <AddEditDailog\r\n        {...addEditDialog}\r\n        onClose={closeAddEditDialog}\r\n        onSuccess={onSuccessAction}\r\n      />\r\n\r\n      {/* ============View Dialog========== */}\r\n      <ViewDailog {...viewDialog} onClose={closeViewDialog} />\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface Workoutterms {\r\n  workoutTermsName: string;\r\n  image: { file: null | any; prevImage: string | any; isNew: null | Boolean };\r\n  description: any;\r\n}\r\n\r\ninterface Exercise {\r\n  workout_name: string;\r\n  workout_image: { file: null | any; prevImage: string; isNew: null | Boolean };\r\n  workout_description: string;\r\n  workout_thumbnail: {\r\n    file: null | any;\r\n    prevImage: string;\r\n    isNew: null | Boolean;\r\n  };\r\n  workout_type: string;\r\n  workout_terms: Workoutterms[];\r\n  required_equipments: string;\r\n  how_to_do: string;\r\n}\r\n\r\nconst AddEditDailog = (props: any) => {\r\n  const {\r\n    isOpen,\r\n    title,\r\n    onClose,\r\n    isEdit,\r\n    data,\r\n    onSuccess,\r\n    okBtnText = 'Ok',\r\n  } = props;\r\n  const classes = useStyles();\r\n  const formikRef = useRef<any>(null);\r\n  const imageRef = useRef<any>(null);\r\n  const avatharimgRef = useRef<any>(null);\r\n  const thumbnailImageRef = useRef<any>(null);\r\n  const Snackbar = useSnackbar();\r\n  const { Post } = useService();\r\n  const [equipmentList, setEquipmentList] = useState([]);\r\n\r\n  const workoutTerms: Workoutterms = {\r\n    workoutTermsName: '',\r\n    image: { file: null, prevImage: '', isNew: null },\r\n    description: '',\r\n  };\r\n\r\n  const initialFormValue: Exercise = {\r\n    workout_name: '',\r\n    workout_image: { file: null, prevImage: '', isNew: null },\r\n    workout_description: '',\r\n    workout_thumbnail: { file: null, prevImage: '', isNew: null },\r\n    workout_type: '',\r\n    workout_terms: [workoutTerms],\r\n    required_equipments: '',\r\n    how_to_do: '',\r\n  };\r\n\r\n  const [initialValue, setInitialValue] = useState({ ...initialFormValue });\r\n\r\n  const listIngredients = async () => {\r\n    Post('app/listAllEquipment', {})\r\n      .then((res: any) => {\r\n        if (!res.error) {\r\n          let getequipmentList = res.data.map((data: any) => {\r\n            data.id = data._id;\r\n            return data;\r\n          });\r\n          setEquipmentList(getequipmentList);\r\n        } else {\r\n          Snackbar.show(res.message, 'error');\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        console.log('err', err);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const onAvatarImageChange = (\r\n    e: React.ChangeEvent<HTMLInputElement>,\r\n    index: any\r\n  ) => {\r\n    e.persist();\r\n    const files = e.target.files;\r\n    if (files && files.length != 0) {\r\n      const reader = new FileReader();\r\n      const file = files[0];\r\n      reader.onloadend = () => {\r\n        formikRef.current.setFieldValue(`workout_terms[${index}].image`, {\r\n          file,\r\n          prevImage: reader.result,\r\n          isNew: true,\r\n        });\r\n      };\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      formikRef.current.setFieldValue('workout_terms', {\r\n        workoutTermsName: '',\r\n        image: { file: null, prevImage: '', isNew: null },\r\n        description: '',\r\n      });\r\n    }\r\n  };\r\n\r\n  const onImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    e.persist();\r\n    const files = e.target.files;\r\n    if (files && files.length != 0) {\r\n      const reader = new FileReader();\r\n      const file = files[0];\r\n      reader.onloadend = () => {\r\n        formikRef.current.setFieldValue('workout_image', {\r\n          file,\r\n          prevImage: reader.result,\r\n          isNew: true,\r\n        });\r\n      };\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      formikRef.current.setFieldValue('workout_image', {\r\n        file: null,\r\n        prevImage: '',\r\n        isNew: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onThumbnailImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    e.persist();\r\n    const files = e.target.files;\r\n    if (files && files.length != 0) {\r\n      const reader = new FileReader();\r\n      const file = files[0];\r\n      reader.onloadend = () => {\r\n        formikRef.current.setFieldValue('workout_thumbnail', {\r\n          file,\r\n          prevImage: reader.result,\r\n          isNew: true,\r\n        });\r\n      };\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      formikRef.current.setFieldValue('workout_thumbnail', {\r\n        file: null,\r\n        prevImage: '',\r\n        isNew: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onSubmit = (value: any, helper: any) => {\r\n    console.log(value);\r\n    try {\r\n      helper.setSubmitting(true);\r\n      const render = async () => {\r\n        const { workout_image, workout_thumbnail, workout_terms, ...rest } =\r\n          value;\r\n        const { file, isNew } = workout_image;\r\n        const workoutterms = workout_terms.map((data: any) => {\r\n          return data.image;\r\n        });\r\n        const PostData = rest;\r\n        if (isNew) {\r\n          PostData.workout_image = await imageUpload(file);\r\n          PostData.workout_thumbnail = await imageUpload(\r\n            workout_thumbnail.file\r\n          );\r\n          PostData.workout_terms = await imageUpload(workoutterms[0].file);\r\n        } else {\r\n          PostData.workout_image = file;\r\n          PostData.workout_thumbnail = workout_thumbnail.file;\r\n          PostData.workoutterms[0].image = workoutterms[0].file;\r\n        }\r\n        !isEdit && addData(PostData, helper);\r\n        isEdit && editData(PostData, helper);\r\n      };\r\n      render();\r\n    } catch (err) {\r\n      Snackbar.show('Image Upload Failed', 'error');\r\n    }\r\n  };\r\n\r\n  const addData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    console.log(data);\r\n    setSubmitting(true);\r\n    Post('app/addSkinCareRecipe', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const editData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n    Post('app/editSkinCareRecipe', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const addIngredients = (values: Exercise, setFieldValue: any) => {\r\n    console.log(values);\r\n    let { workout_terms } = values;\r\n    workout_terms.push(workoutTerms);\r\n    setFieldValue('workout_terms', workout_terms);\r\n  };\r\n\r\n  const removeIngredients = (\r\n    values: Exercise,\r\n    i: number,\r\n    setFieldValue: any\r\n  ) => {\r\n    let { workout_terms } = values;\r\n    const TempIngredients = workout_terms.filter(\r\n      (data: any, index: number) => index !== i\r\n    );\r\n    setFieldValue('workout_terms', TempIngredients);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   if (isEdit) {\r\n  //     const { recipe_image, ingredients, _id, ...rest } = data;\r\n  //     const EditData = { ...rest, id: _id };\r\n  //     EditData.ingredients = ingredients.map((data: any) => {\r\n  //       data.id = data._id;\r\n  //       return data;\r\n  //     });\r\n  //     EditData.recipe_image = {\r\n  //       file: recipe_image,\r\n  //       prevImage: recipe_image,\r\n  //       isNew: false,\r\n  //     };\r\n  //     setInitialValue(EditData);\r\n  //   } else {\r\n  //     setInitialValue(initialFormValue);\r\n  //   }\r\n  // }, [props]);\r\n\r\n  useEffect(() => {\r\n    listIngredients();\r\n  }, []);\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      fullWidth\r\n      maxWidth='md'\r\n      aria-labelledby='dialog-title'\r\n      open={isOpen}\r\n    >\r\n      <DialogTitle id='dialog-title' onClose={onClose}>\r\n        {title}\r\n      </DialogTitle>\r\n\r\n      <Formik\r\n        innerRef={formikRef}\r\n        enableReinitialize\r\n        initialValues={initialValue}\r\n        onSubmit={onSubmit}\r\n        validationSchema={Yup.object().shape({\r\n          workout_name: Yup.string()\r\n            .trim()\r\n            .required('Workout name is required'),\r\n          workout_image: Yup.object({\r\n            file: Yup.mixed().required('A file is required'),\r\n          }),\r\n          workout_description: Yup.string()\r\n            .trim()\r\n            .required('Workout description is required'),\r\n          workout_thumbnail: Yup.object({\r\n            file: Yup.mixed().required('A file is required'),\r\n          }),\r\n          workout_type: Yup.string()\r\n            .trim()\r\n            .required('Workout type is required'),\r\n          workout_terms: Yup.array().of(\r\n            Yup.object().shape({\r\n              workoutTermsName: Yup.string()\r\n                .trim()\r\n                .required('Workout term name is Required'),\r\n              image: Yup.object({\r\n                file: Yup.mixed().required('A file is required'),\r\n              }),\r\n              description: Yup.string()\r\n                .trim()\r\n                .required('Workout description is Required'),\r\n            })\r\n          ),\r\n          required_equipments: Yup.string()\r\n            .trim()\r\n            .required('Required Equipments is required'),\r\n          how_to_do: Yup.string().trim().required('Steps is required'),\r\n        })}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          setFieldValue,\r\n          handleBlur,\r\n          setFieldTouched,\r\n          submitForm,\r\n          isSubmitting,\r\n        }) => (\r\n          <>\r\n            {console.log(values.workout_terms)}\r\n            <DialogContent dividers>\r\n              <Grid container spacing={3}>\r\n                <Grid item md={12} xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label='Workout name'\r\n                    name='workout_name'\r\n                    variant='outlined'\r\n                    error={Boolean(touched.workout_name && errors.workout_name)}\r\n                    helperText={touched.workout_name && errors.workout_name}\r\n                    value={values.workout_name}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item md={12} xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    multiline\r\n                    label='Workout description'\r\n                    name='workout_description'\r\n                    variant='outlined'\r\n                    error={Boolean(\r\n                      touched.workout_description && errors.workout_description\r\n                    )}\r\n                    helperText={\r\n                      touched.workout_description && errors.workout_description\r\n                    }\r\n                    value={values.workout_description}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item md={12} xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    multiline\r\n                    label='Workout type'\r\n                    name='workout_type'\r\n                    variant='outlined'\r\n                    error={Boolean(touched.workout_type && errors.workout_type)}\r\n                    helperText={touched.workout_type && errors.workout_type}\r\n                    value={values.workout_type}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item md={12} xs={12}>\r\n                  <Button\r\n                    fullWidth\r\n                    className={classes.themeButton}\r\n                    variant='contained'\r\n                    color='default'\r\n                    onClick={() => addIngredients(values, setFieldValue)}\r\n                    endIcon={<ControlPointIcon />}\r\n                  >\r\n                    Add workout terms\r\n                  </Button>\r\n                </Grid>\r\n\r\n                {values?.workout_terms?.map(\r\n                  (workoutValues: any, index: any) => (\r\n                    <Grid\r\n                      key={index}\r\n                      item\r\n                      container\r\n                      md={12}\r\n                      xs={12}\r\n                      direction='row'\r\n                      spacing={2}\r\n                    >\r\n                      <Grid item md={1} xs={6}>\r\n                        <input\r\n                          // name={`workout_terms[${index}].image`}\r\n                          ref={avatharimgRef}\r\n                          type='file'\r\n                          accept='.jpg,.png,jpeg'\r\n                          onChange={(e) => onAvatarImageChange(e, index)}\r\n                          onBlur={handleBlur}\r\n                          hidden\r\n                        />\r\n                        <Avatar\r\n                          className={classes.workouttermsavatar}\r\n                          variant='square'\r\n                          onClick={() => avatharimgRef.current.click()}\r\n                          src={workoutValues[index]?.image?.prevImage}\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item md={5} xs={6}>\r\n                        <TextField\r\n                          fullWidth\r\n                          multiline\r\n                          label='Workout terms name'\r\n                          name={`workout_terms[${index}].workoutTermsName`}\r\n                          variant='outlined'\r\n                          error={Boolean(\r\n                            touched?.workout_terms &&\r\n                              touched?.workout_terms[index]?.workoutTermsName &&\r\n                              errors?.workout_terms &&\r\n                              (errors?.workout_terms[index] as any)\r\n                                ?.workoutTermsName\r\n                          )}\r\n                          helperText={\r\n                            touched?.workout_terms &&\r\n                            touched?.workout_terms[index]?.workoutTermsName &&\r\n                            errors?.workout_terms &&\r\n                            (errors?.workout_terms[index] as any)\r\n                              ?.workoutTermsName\r\n                          }\r\n                          value={workoutValues.workoutTermsName}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item md={5} xs={6}>\r\n                        <TextField\r\n                          fullWidth\r\n                          multiline\r\n                          label='Workout terms description'\r\n                          name={`workout_terms[${index}].description`}\r\n                          variant='outlined'\r\n                          error={Boolean(\r\n                            touched?.workout_terms &&\r\n                              touched?.workout_terms[index]?.description &&\r\n                              errors?.workout_terms &&\r\n                              (errors?.workout_terms[index] as any)?.description\r\n                          )}\r\n                          helperText={\r\n                            touched?.workout_terms &&\r\n                            touched?.workout_terms[index]?.description &&\r\n                            errors?.workout_terms &&\r\n                            (errors?.workout_terms[index] as any)?.description\r\n                          }\r\n                          value={workoutValues.description}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item md={1} xs={1}>\r\n                        <Button\r\n                          fullWidth\r\n                          className={classes.deleteButton}\r\n                          variant='contained'\r\n                          color='secondary'\r\n                          onClick={() =>\r\n                            removeIngredients(values, index, setFieldValue)\r\n                          }\r\n                        >\r\n                          <DeleteIcon />\r\n                        </Button>\r\n                      </Grid>\r\n                    </Grid>\r\n                  )\r\n                )}\r\n\r\n                <Grid item md={12} xs={12}>\r\n                  <FormControl\r\n                    fullWidth\r\n                    error={Boolean(touched?.how_to_do && errors?.how_to_do)}\r\n                  >\r\n                    <TipTapEditor\r\n                      value={values.how_to_do}\r\n                      onChange={(value: any) =>\r\n                        setFieldValue('how_to_do', value)\r\n                      }\r\n                      onBlur={() => setFieldTouched('how_to_do', true, true)}\r\n                    />\r\n\r\n                    <FormHelperText>\r\n                      {touched?.how_to_do && errors?.how_to_do}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item md={12} xs={12}>\r\n                  <Autocomplete\r\n                    id='combo-box-demo'\r\n                    options={equipmentList}\r\n                    onChange={(event: any, newValue: any) => {\r\n                      setFieldValue('required_equipments', newValue?._id || '');\r\n                    }}\r\n                    getOptionLabel={(option: any) => option.name}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        label='Equipments'\r\n                        variant='outlined'\r\n                        error={Boolean(\r\n                          touched.required_equipments &&\r\n                            errors.required_equipments\r\n                        )}\r\n                        helperText={\r\n                          touched.required_equipments &&\r\n                          errors.required_equipments\r\n                        }\r\n                        inputProps={{\r\n                          ...params.inputProps,\r\n                        }}\r\n                      />\r\n                    )}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item md={6} xs={6}>\r\n                  <input\r\n                    name='recipe_image'\r\n                    ref={imageRef}\r\n                    type='file'\r\n                    accept='.jpg,.png,jpeg'\r\n                    onChange={onImageChange}\r\n                    onBlur={handleBlur}\r\n                    hidden\r\n                  />\r\n                  <Button\r\n                    fullWidth\r\n                    className={classes.themeButton}\r\n                    variant='contained'\r\n                    color='default'\r\n                    onClick={() => imageRef.current.click()}\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Workout image\r\n                  </Button>\r\n                  <FormControl\r\n                    error={Boolean(\r\n                      touched?.workout_image?.file &&\r\n                        errors?.workout_image?.file\r\n                    )}\r\n                  >\r\n                    <FormHelperText>\r\n                      {touched?.workout_image?.file &&\r\n                        errors?.workout_image?.file}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item md={6} xs={6}>\r\n                  <input\r\n                    name='recipe_image'\r\n                    ref={thumbnailImageRef}\r\n                    type='file'\r\n                    accept='.jpg,.png,jpeg'\r\n                    onChange={onThumbnailImageChange}\r\n                    onBlur={handleBlur}\r\n                    hidden\r\n                  />\r\n                  <Button\r\n                    fullWidth\r\n                    className={classes.themeButton}\r\n                    variant='contained'\r\n                    color='default'\r\n                    onClick={() => thumbnailImageRef.current.click()}\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Workout Thumbnail\r\n                  </Button>\r\n                  <FormControl\r\n                    error={Boolean(\r\n                      touched?.workout_thumbnail?.file &&\r\n                        errors?.workout_thumbnail?.file\r\n                    )}\r\n                  >\r\n                    <FormHelperText>\r\n                      {touched?.workout_thumbnail?.file &&\r\n                        errors?.workout_thumbnail?.file}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item md={6} xs={6}>\r\n                  {values.workout_image?.prevImage && (\r\n                    <img\r\n                      className={classes.imageView}\r\n                      src={values.workout_image?.prevImage}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n\r\n                <Grid item md={6} xs={6}>\r\n                  {values.workout_thumbnail?.prevImage && (\r\n                    <img\r\n                      className={classes.imageView}\r\n                      src={values.workout_thumbnail?.prevImage}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n              <Button onClick={onClose} variant='outlined' color='secondary'>\r\n                Cancel\r\n              </Button>\r\n\r\n              <Button\r\n                className={classes.themeButton}\r\n                onClick={() => submitForm()}\r\n                disabled={isSubmitting}\r\n                variant='outlined'\r\n              >\r\n                {isSubmitting ? (\r\n                  <CircularProgress size={24} className={classes.lColor} />\r\n                ) : (\r\n                  okBtnText\r\n                )}\r\n              </Button>\r\n            </DialogActions>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst ViewDailog = (props: any) => {\r\n  const { isOpen, title, onClose, data } = props;\r\n  const classes = useStyles();\r\n  const [formValue, setFormValue] = useState(data);\r\n\r\n  useEffect(() => {\r\n    setFormValue(data);\r\n  }, [props]);\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      fullWidth\r\n      maxWidth='md'\r\n      aria-labelledby='dialog-view-title'\r\n      open={isOpen}\r\n    >\r\n      <DialogTitle id='dialog-view-title' onClose={onClose}>\r\n        {title}\r\n      </DialogTitle>\r\n\r\n      <DialogContent dividers>\r\n        <Grid container spacing={3}>\r\n          <Grid item justify='flex-end' md={2} xs={12}>\r\n            <Avatar\r\n              className={classes.avatarStyles}\r\n              variant='square'\r\n              src={\r\n                'https://img.etimg.com/photo/msid-74747053,quality-100/for-miles-a-great-bodyweight-workout-would-include-squats-push-ups-walking-lunges-.jpg'\r\n              }\r\n            />\r\n          </Grid>\r\n          <Grid item md={10} xs={12}>\r\n            <Typography variant='h6' align='left'>\r\n              {formValue?.workout_name}\r\n            </Typography>\r\n            <Typography\r\n              variant='subtitle1'\r\n              align='left'\r\n              style={{ marginTop: '5px', color: '#E7B000' }}\r\n            >\r\n              {formValue?.workout_description}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item md={12} xs={12}>\r\n            <Typography variant='h6' align='left' style={{ color: '#41A58D' }}>\r\n              Workout Terms\r\n            </Typography>\r\n          </Grid>\r\n          <Grid container>\r\n            {formValue?.workout_terms?.length !== 0 ? (\r\n              formValue?.workout_terms?.map((value: any, index: any) => {\r\n                return (\r\n                  <Grid\r\n                    className={classes.adjustmentTop}\r\n                    key={index}\r\n                    item\r\n                    xs={6}\r\n                    md={4}\r\n                  >\r\n                    <Avatar\r\n                      className={classes.ingredientsAvatarStyle}\r\n                      variant='circular'\r\n                      src={\r\n                        'https://img.etimg.com/photo/msid-74747053,quality-100/for-miles-a-great-bodyweight-workout-would-include-squats-push-ups-walking-lunges-.jpg'\r\n                      }\r\n                    />\r\n                    <Typography variant='h6' align='center'>\r\n                      {value.name}\r\n                    </Typography>\r\n                    <Typography\r\n                      className={classes.adjustmentTop}\r\n                      variant='subtitle1'\r\n                      align='center'\r\n                    >\r\n                      {value.description.length >= 25\r\n                        ? `${value.description.substring(0, 30)}...`\r\n                        : value.description}\r\n                    </Typography>\r\n                  </Grid>\r\n                );\r\n              })\r\n            ) : (\r\n              <Grid xs={12}>\r\n                <Typography variant='subtitle1' align='center'>\r\n                  No Ingredients\r\n                </Typography>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n          <Grid item md={12} xs={12}>\r\n            <Typography variant='h6' align='left' style={{ color: '#41A58D' }}>\r\n              Equipments\r\n            </Typography>\r\n          </Grid>\r\n          <Grid container>\r\n            {formValue?.required_equipments?.length !== 0 ? (\r\n              formValue?.required_equipments?.map((value: any, index: any) => {\r\n                return (\r\n                  <Grid\r\n                    className={classes.adjustmentTop}\r\n                    key={index}\r\n                    item\r\n                    xs={6}\r\n                    md={4}\r\n                  >\r\n                    <Avatar\r\n                      className={classes.ingredientsAvatarStyle}\r\n                      variant='circular'\r\n                      src={value.image}\r\n                    />\r\n                    <Typography variant='h6' align='center'>\r\n                      {value.name}\r\n                    </Typography>\r\n                    <Typography\r\n                      className={classes.adjustmentTop}\r\n                      variant='subtitle1'\r\n                      align='center'\r\n                    >\r\n                      {value.description.length >= 25\r\n                        ? `${value.description.substring(0, 30)}...`\r\n                        : value.description}\r\n                    </Typography>\r\n                  </Grid>\r\n                );\r\n              })\r\n            ) : (\r\n              <Grid xs={12}>\r\n                <Typography variant='subtitle1' align='center'>\r\n                  No Ingredients\r\n                </Typography>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n          <Grid item md={12} xs={12}>\r\n            <Typography variant='h6' align='left' style={{ color: '#41A58D' }}>\r\n              How to do\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item md={12} xs={12}>\r\n            <div style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n              <div\r\n                dangerouslySetInnerHTML={{\r\n                  __html: formValue?.how_to_do,\r\n                }}\r\n              ></div>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={onClose} variant='outlined' color='secondary'>\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default WorkoutExercise;\r\n"]},"metadata":{},"sourceType":"module"}