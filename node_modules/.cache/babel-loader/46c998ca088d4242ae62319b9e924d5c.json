{"ast":null,"code":"import { Mark, mergeAttributes, markInputRule, markPasteRule } from '@tiptap/core';\nconst inputRegex = /(?:^|\\s)((?:`)((?:[^`]+))(?:`))$/gm;\nconst pasteRegex = /(?:^|\\s)((?:`)((?:[^`]+))(?:`))/gm;\nconst Code = Mark.create({\n  name: 'code',\n  defaultOptions: {\n    HTMLAttributes: {}\n  },\n  excludes: '_',\n\n  parseHTML() {\n    return [{\n      tag: 'code'\n    }];\n  },\n\n  renderHTML({\n    HTMLAttributes\n  }) {\n    return ['code', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n  },\n\n  addCommands() {\n    return {\n      setCode: () => ({\n        commands\n      }) => {\n        return commands.setMark('code');\n      },\n      toggleCode: () => ({\n        commands\n      }) => {\n        return commands.toggleMark('code');\n      },\n      unsetCode: () => ({\n        commands\n      }) => {\n        return commands.unsetMark('code');\n      }\n    };\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-e': () => this.editor.commands.toggleCode()\n    };\n  },\n\n  addInputRules() {\n    return [markInputRule(inputRegex, this.type)];\n  },\n\n  addPasteRules() {\n    return [markPasteRule(inputRegex, this.type)];\n  }\n\n});\nexport default Code;\nexport { Code, inputRegex, pasteRegex };","map":null,"metadata":{},"sourceType":"module"}