{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pyramidion\\\\WebApp\\\\Izze-Admin\\\\src\\\\pages\\\\AppUsers\\\\AppUserFeedback.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardHeader, CardContent, Avatar, Typography, Divider, Input, Paper, Tooltip, IconButton, CircularProgress } from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport SendIcon from '@material-ui/icons/Send';\nimport useService from '../../hook/useService';\nimport useSnackbar from '../../hook/useSnackbar';\nimport { Pagination } from '@material-ui/lab';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  subheader: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  accessTimeIcon: {\n    color: theme.palette.text.secondary,\n    fontSize: '14px',\n    height: 14,\n    width: 14,\n    marginRight: 6\n  },\n  content: {\n    paddingTop: 0\n  },\n  message: {\n    marginBottom: theme.spacing(2)\n  },\n  divider: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  },\n  replayInsertDiv: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  paper: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(2),\n    padding: theme.spacing(0.5, 2)\n  },\n  input: {\n    width: '100%'\n  },\n  replayListDiv: {\n    display: 'flex',\n    marginBottom: theme.spacing(2)\n  },\n  bubble: {\n    flexGrow: 1,\n    padding: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: theme.palette.background.default\n  },\n  header: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  time: {\n    marginLeft: 'auto'\n  },\n  replayMessage: {\n    marginTop: theme.spacing(1)\n  },\n  actions: {\n    display: 'flex',\n    padding: theme.spacing(2, 1),\n    justifyContent: 'center'\n  },\n  lColor: {\n    color: theme.palette.green.main\n  }\n}));\n\nconst AppUserFeedback = props => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    data\n  } = props;\n  const {\n    Post\n  } = useService();\n  const Snackbar = useSnackbar(); // const ConfModel = useConfModel();\n\n  const [stateData, setStateData] = useState({\n    page_no: 1,\n    page_limit: 10,\n    id: ''\n  });\n  const [pageCount, setPageCount] = useState(0);\n  const [dataList, setDataList] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const listFeedback = async (data = stateData) => {\n    setLoading(true);\n    Post('app/listFeedback', data).then(res => {\n      console.log('listFeedback', res);\n      setLoading(false);\n\n      if (!res.error) {\n        setDataList(res.data);\n        setPageCount(res.page_count);\n      } else {\n        Snackbar.show(res.message, 'error');\n      }\n    }).catch(err => {\n      console.log('err', err);\n      setLoading(false);\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  const onPageChange = (event, value) => {\n    setStateData(prevState => ({ ...prevState,\n      page_no: value\n    }));\n    listFeedback({ ...stateData,\n      page_no: value\n    });\n  };\n\n  useEffect(() => {\n    setStateData(prevData => ({ ...prevData,\n      id: data._id\n    }));\n    listFeedback({ ...stateData,\n      id: data._id\n    });\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!loading && dataList.map((data, index) => /*#__PURE__*/_jsxDEV(FeedbackCard, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 63\n    }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        className: classes.lColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 52\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 19\n    }, this), !loading && dataList.length == 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: \"No Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 44\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        count: pageCount,\n        page: stateData.page_no,\n        onChange: onPageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AppUserFeedback, \"Pmg2iWn6FsoalUXLhcA8fobfo0E=\", false, function () {\n  return [useStyles, useService, useSnackbar];\n});\n\n_c = AppUserFeedback;\n\nconst FeedbackCard = props => {\n  _s2();\n\n  const classes = useStyles();\n  const {\n    data\n  } = props;\n  const {\n    Post\n  } = useService();\n  const Snackbar = useSnackbar();\n  const [formData, setFormData] = useState(data);\n  const [replayText, setReplayText] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const replaySubmit = () => {\n    setLoading(true);\n    Post('app/postReplay', {\n      id: formData._id,\n      replay: replayText\n    }).then(res => {\n      console.log('postReplay', res);\n      setLoading(false);\n      formData.replay.push(res.data);\n      setFormData(prevState => formData);\n      setReplayText('');\n    }).catch(err => {\n      console.log('err', err);\n      setLoading(false);\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  const handleReplayChange = e => {\n    setReplayText(e.target.value);\n  };\n\n  useEffect(() => {\n    setFormData(data);\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n        alt: formData === null || formData === void 0 ? void 0 : formData.name,\n        src: formData === null || formData === void 0 ? void 0 : formData.profilePic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this),\n      disableTypography: true,\n      subheader: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.subheader,\n        children: [/*#__PURE__*/_jsxDEV(AccessTimeIcon, {\n          className: classes.accessTimeIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: moment(formData === null || formData === void 0 ? void 0 : formData.created_at).fromNow()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this),\n      title: formData === null || formData === void 0 ? void 0 : formData.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      className: classes.content,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.message,\n        variant: \"body1\",\n        children: formData === null || formData === void 0 ? void 0 : formData.feedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), !((formData === null || formData === void 0 ? void 0 : formData.replay.length) == 0) && /*#__PURE__*/_jsxDEV(Divider, {\n        className: classes.divider\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 45\n      }, this), (formData === null || formData === void 0 ? void 0 : formData.replay) && (formData === null || formData === void 0 ? void 0 : formData.replay.map((data, index) => /*#__PURE__*/_jsxDEV(FeedbackReplayCard, {\n        data: data\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 81\n      }, this))), /*#__PURE__*/_jsxDEV(Divider, {\n        className: classes.divider\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.replayInsertDiv,\n        children: [/*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          elevation: 1,\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            value: replayText,\n            className: classes.input,\n            disableUnderline: true,\n            onChange: handleReplayChange,\n            placeholder: \"Leave a replay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Send\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"primary\",\n            disabled: loading,\n            onClick: replaySubmit,\n            children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(FeedbackCard, \"u8Z5323Fwc9OvoSwdWg0lbTUMyg=\", false, function () {\n  return [useStyles, useService, useSnackbar];\n});\n\n_c2 = FeedbackCard;\nconst FeedbackReplayCard = /*#__PURE__*/React.memo(_c3 = _s3(props => {\n  _s3();\n\n  const classes = useStyles();\n  const {\n    data\n  } = props;\n  const [formData, setFormData] = useState({});\n  useEffect(() => {\n    console.log('data', data);\n    setFormData(data);\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.replayListDiv,\n    children: [/*#__PURE__*/_jsxDEV(Avatar, {\n      alt: formData === null || formData === void 0 ? void 0 : formData.replay_by_name,\n      src: formData === null || formData === void 0 ? void 0 : formData.replay_by_image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.bubble,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.header,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textPrimary\",\n          variant: \"h6\",\n          children: formData === null || formData === void 0 ? void 0 : formData.replay_by_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.time,\n          variant: \"body2\",\n          children: moment(formData === null || formData === void 0 ? void 0 : formData.created_at).fromNow()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.replayMessage,\n        variant: \"body1\",\n        children: formData === null || formData === void 0 ? void 0 : formData.feedback_replay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 5\n  }, this);\n}, \"/JjL4q6hbvUkM8aIr5aZAnfsDh0=\", false, function () {\n  return [useStyles];\n}));\n_c4 = FeedbackReplayCard;\nexport default AppUserFeedback;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"AppUserFeedback\");\n$RefreshReg$(_c2, \"FeedbackCard\");\n$RefreshReg$(_c3, \"FeedbackReplayCard$React.memo\");\n$RefreshReg$(_c4, \"FeedbackReplayCard\");","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/pages/AppUsers/AppUserFeedback.tsx"],"names":["React","useEffect","useState","moment","makeStyles","Card","CardHeader","CardContent","Avatar","Typography","Divider","Input","Paper","Tooltip","IconButton","CircularProgress","AccessTimeIcon","SendIcon","useService","useSnackbar","Pagination","useStyles","theme","root","subheader","display","alignItems","accessTimeIcon","color","palette","text","secondary","fontSize","height","width","marginRight","content","paddingTop","message","marginBottom","spacing","divider","marginTop","replayInsertDiv","paper","flexGrow","marginLeft","padding","input","replayListDiv","bubble","borderRadius","shape","backgroundColor","background","default","header","time","replayMessage","actions","justifyContent","lColor","green","main","AppUserFeedback","props","classes","data","Post","Snackbar","stateData","setStateData","page_no","page_limit","id","pageCount","setPageCount","dataList","setDataList","loading","setLoading","listFeedback","then","res","console","log","error","page_count","show","catch","err","onPageChange","event","value","prevState","prevData","_id","map","index","length","FeedbackCard","formData","setFormData","replayText","setReplayText","replaySubmit","replay","push","handleReplayChange","e","target","name","profilePic","created_at","fromNow","feedback","FeedbackReplayCard","memo","replay_by_name","replay_by_image","feedback_replay"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActionArea,\n  CardMedia,\n  Avatar,\n  Link,\n  Typography,\n  Divider,\n  Input,\n  Paper,\n  Tooltip,\n  IconButton,\n  CircularProgress\n} from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport SendIcon from '@material-ui/icons/Send';\nimport useService from '../../hook/useService';\nimport useSnackbar from '../../hook/useSnackbar';\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\nimport { Pagination } from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme: any) => ({\n  root: {},\n  subheader: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  accessTimeIcon: {\n    color: theme.palette.text.secondary,\n    fontSize: '14px',\n    height: 14,\n    width: 14,\n    marginRight: 6\n  },\n  content: {\n    paddingTop: 0\n  },\n  message: {\n    marginBottom: theme.spacing(2)\n  },\n  divider: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  },\n  replayInsertDiv: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  paper: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(2),\n    padding: theme.spacing(0.5, 2)\n  },\n  input: {\n    width: '100%'\n  },\n  replayListDiv: {\n    display: 'flex',\n    marginBottom: theme.spacing(2)\n  },\n  bubble: {\n    flexGrow: 1,\n    padding: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: theme.palette.background.default\n  },\n  header: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  time: {\n    marginLeft: 'auto'\n  },\n  replayMessage: {\n    marginTop: theme.spacing(1)\n  },\n  actions: {\n    display: 'flex',\n    padding: theme.spacing(2, 1),\n    justifyContent: 'center',\n  },\n  lColor: {\n    color: theme.palette.green.main,\n  }\n\n}));\n\nconst AppUserFeedback = (props: any) => {\n  const classes = useStyles();\n  const { data } = props;\n  const { Post } = useService();\n  const Snackbar = useSnackbar();\n  // const ConfModel = useConfModel();\n\n  const [stateData, setStateData] = useState({ page_no: 1, page_limit: 10, id: '' });\n  const [pageCount, setPageCount] = useState(0);\n  const [dataList, setDataList] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const listFeedback = async (data: any = stateData) => {\n    setLoading(true);\n    Post('app/listFeedback', data)\n      .then((res: any) => {\n        console.log('listFeedback', res);\n        setLoading(false);\n        if (!res.error) {\n          setDataList(res.data);\n          setPageCount(res.page_count);\n        } else {\n          Snackbar.show(res.message, 'error');\n        }\n      })\n      .catch((err: any) => {\n        console.log('err', err);\n        setLoading(false);\n        Snackbar.show(err.message, 'error');\n      });\n  };\n\n  const onPageChange = (event: React.ChangeEvent<unknown>, value: number) => {\n    setStateData((prevState: any) => ({ ...prevState, page_no: value }));\n    listFeedback({ ...stateData, page_no: value })\n  };\n\n  useEffect(() => {\n    setStateData((prevData) => ({ ...prevData, id: data._id }))\n    listFeedback({ ...stateData, id: data._id })\n  }, [props]);\n\n  return (\n    <>\n      {!loading && dataList.map((data: any, index: number) => <FeedbackCard data={data} />)}\n      {loading && <div className={classes.actions}><CircularProgress className={classes.lColor} /></div>}\n      {!loading && dataList.length == 0 && <div className={classes.actions}>No Feedback</div>}\n      <div className={classes.actions}>\n        <Pagination\n          count={pageCount}\n          page={stateData.page_no}\n          onChange={onPageChange}\n        />\n      </div>\n    </>\n  );\n};\n\nconst FeedbackCard = (props: any) => {\n  const classes = useStyles();\n  const { data } = props;\n  const { Post } = useService();\n  const Snackbar = useSnackbar()\n  const [formData, setFormData] = useState<any>(data);\n  const [replayText, setReplayText] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const replaySubmit = () => {\n    setLoading(true);\n    Post('app/postReplay', { id: formData._id, replay: replayText })\n      .then((res: any) => {\n        console.log('postReplay', res);\n        setLoading(false);\n        formData.replay.push(res.data);\n        setFormData((prevState: any) => formData)\n        setReplayText('')\n      })\n      .catch((err: any) => {\n        console.log('err', err);\n        setLoading(false);\n        Snackbar.show(err.message, 'error');\n      });\n  };\n\n\n  const handleReplayChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setReplayText(e.target.value)\n  }\n\n\n  useEffect(() => {\n    setFormData(data)\n  }, [props]);\n\n  return (\n    <Card>\n      <CardHeader\n        avatar={\n          <Avatar alt={formData?.name} src={formData?.profilePic} />\n        }\n        disableTypography\n        subheader={\n          <div className={classes.subheader}>\n            <AccessTimeIcon className={classes.accessTimeIcon} />\n            <Typography variant=\"body2\">\n              {moment(formData?.created_at).fromNow()}\n            </Typography>\n          </div>\n        }\n        title={formData?.name}\n      />\n      <CardContent className={classes.content}>\n        <Typography className={classes.message} variant=\"body1\">\n          {formData?.feedback}\n        </Typography>\n\n        {!(formData?.replay.length == 0) && <Divider className={classes.divider} />}\n        {formData?.replay && formData?.replay.map((data: any, index: number) => <FeedbackReplayCard key={index} data={data} />)}\n\n        <Divider className={classes.divider} />\n        <div className={classes.replayInsertDiv} >\n          <Paper\n            className={classes.paper}\n            elevation={1}\n          >\n            <Input\n              value={replayText}\n              className={classes.input}\n              disableUnderline\n              onChange={handleReplayChange}\n              placeholder=\"Leave a replay\"\n            />\n          </Paper>\n          <Tooltip title=\"Send\">\n            <IconButton color='primary' disabled={loading} onClick={replaySubmit}>\n              <SendIcon />\n            </IconButton>\n          </Tooltip>\n\n        </div>\n\n\n      </CardContent>\n    </Card>\n\n  )\n}\n\nconst FeedbackReplayCard = React.memo((props: any) => {\n  const classes = useStyles();\n  const { data } = props;\n  const [formData, setFormData] = useState<any>({});\n  useEffect(() => {\n    console.log('data', data)\n    setFormData(data)\n  }, [props]);\n  return (\n\n    <div className={classes.replayListDiv}>\n      <Avatar alt={formData?.replay_by_name} src={formData?.replay_by_image} />\n      <div className={classes.bubble}>\n        <div className={classes.header}>\n          <Typography color=\"textPrimary\" variant=\"h6\">\n            {formData?.replay_by_name}\n          </Typography>\n          <Typography className={classes.time} variant=\"body2\" >\n            {moment(formData?.created_at).fromNow()}\n          </Typography>\n        </div>\n        <Typography className={classes.replayMessage} variant=\"body1\" >\n          {formData?.feedback_replay}\n        </Typography>\n      </div>\n    </div>\n  )\n})\n\nexport default AppUserFeedback;\n"]},"metadata":{},"sourceType":"module"}