{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pyramidion\\\\WebApp\\\\Izze-Admin\\\\src\\\\components\\\\Common\\\\DialogBox\\\\DialogBox.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { createStyles, withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => createStyles({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(0.5),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst useStyles = makeStyles(theme => ({\n  modelStyle: {\n    '& .MuiDialog-paperWidthSm': {\n      width: '80%'\n    }\n  }\n}));\nconst DialogTitle = withStyles(styles)(props => {\n  const {\n    children,\n    classes,\n    onClose,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(MuiDialogTitle, {\n    disableTypography: true,\n    className: classes.root,\n    ...other,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), onClose ? /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"close\",\n      className: classes.closeButton,\n      onClick: onClose,\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent);\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1)\n  }\n}))(MuiDialogActions);\n\nfunction DialogBox(props) {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      onClose: props.close,\n      \"aria-labelledby\": \"customized-dialog-title\",\n      open: props.open,\n      className: classes.modelStyle,\n      children: [props.Title && /*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"customized-dialog-title\",\n        onClose: props.close,\n        children: props.Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: true,\n        children: props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DialogBox, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = DialogBox;\nexport default DialogBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"DialogBox\");","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/components/Common/DialogBox/DialogBox.tsx"],"names":["React","createStyles","withStyles","Dialog","MuiDialogTitle","MuiDialogContent","MuiDialogActions","IconButton","CloseIcon","Typography","makeStyles","styles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","useStyles","modelStyle","width","DialogTitle","props","children","classes","onClose","other","DialogContent","DialogActions","DialogBox","close","open","Title"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles,\r\n} from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: 0,\r\n      padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n      position: 'absolute',\r\n      right: theme.spacing(1),\r\n      top: theme.spacing(0.5),\r\n      color: theme.palette.grey[500],\r\n    },\r\n  });\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  modelStyle: {\r\n    '& .MuiDialog-paperWidthSm': {\r\n      width: '80%',\r\n    },\r\n  },\r\n}));\r\n\r\nexport interface DialogTitleProps extends WithStyles<typeof styles> {\r\n  id: string;\r\n  children: React.ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\nconst DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant='h6'>{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label='close'\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme: Theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme: Theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nfunction DialogBox(props: any) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        onClose={props.close}\r\n        aria-labelledby='customized-dialog-title'\r\n        open={props.open}\r\n        className={classes.modelStyle}\r\n      >\r\n        {props.Title && (\r\n          <DialogTitle id='customized-dialog-title' onClose={props.close}>\r\n            {props.Title}\r\n          </DialogTitle>\r\n        )}\r\n\r\n        <DialogContent dividers>{props.children}</DialogContent>\r\n        {/* <DialogActions>\r\n          <Button autoFocus onClick={props} color='primary'>\r\n            Save changes\r\n          </Button>\r\n        </DialogActions> */}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\nexport default DialogBox;\r\n"]},"metadata":{},"sourceType":"module"}