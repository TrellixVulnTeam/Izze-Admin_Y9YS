{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pyramidion\\\\WebApp\\\\Izze-Admin\\\\src\\\\pages\\\\SkinCarePlan\\\\SkinCarePlan.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles, Grid, Typography, Dialog, Button } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport Page from '../../components/Page/Page';\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: theme.breakpoints.values.lg,\n    maxWidth: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(3)\n  },\n  themeButton: {\n    color: theme.palette.white,\n    backgroundColor: theme.palette.green.main,\n    '&:hover': {\n      backgroundColor: theme.palette.green.dark\n    }\n  }\n}));\n\nfunction SkinCarePlan() {\n  _s();\n\n  const classes = useStyles();\n  const [addEditDialog, setAddEditDialog] = React.useState({\n    isOpen: false,\n    title: '',\n    okBtnText: '',\n    isEdit: false,\n    data: {}\n  });\n\n  const openAddDialog = () => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      title: 'Add Skin Care Plan',\n      isEdit: false,\n      okBtnText: 'Save'\n    }));\n  };\n\n  const closeAddEditDialog = () => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: false\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Page, {\n      title: \"Skin Care Recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      alignItems: \"flex-end\",\n      container: true,\n      justify: \"space-between\",\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h3\",\n          children: \"Skin Care Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => openAddDialog(),\n          className: classes.themeButton,\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 24\n          }, this),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddEditDialog, { ...addEditDialog,\n      onClose: closeAddEditDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SkinCarePlan, \"s5o9kyFm5KAS0TTYVhpPTPgOC/g=\", false, function () {\n  return [useStyles];\n});\n\n_c = SkinCarePlan;\n\nconst AddEditDialog = props => {\n  const {\n    isEdit,\n    isOpen,\n    okBtnText = 'OK',\n    onClose,\n    title\n  } = props;\n  const initialFormValues = {\n    skinType: '',\n    skinIssues: '',\n    recipe: ''\n  };\n\n  const onSubmit = () => {\n    alert('submmitting');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isOpen,\n      disableBackdropClick: true,\n      disableEscapeKeyDown: true,\n      fullWidth: true,\n      maxWidth: \"md\",\n      \"aria-labelledby\": \"dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"dialog-title\",\n        onClose: onClose,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        enableReinitialize: true,\n        initialValues: initialFormValues,\n        onSubmit: onSubmit,\n        validationSchema: Yup.object().shape({\n          recipeName: Yup.string().trim().required('Recipe name is required'),\n          skinType: Yup.string().trim().required('Skin type is required'),\n          ingredients: Yup.array().required('Ingredients is required'),\n          image: Yup.object({\n            file: Yup.mixed().required('A file is required')\n          })\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = AddEditDialog;\nexport default SkinCarePlan;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SkinCarePlan\");\n$RefreshReg$(_c2, \"AddEditDialog\");","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/pages/SkinCarePlan/SkinCarePlan.tsx"],"names":["React","makeStyles","Grid","Typography","Dialog","Button","AddIcon","Page","DialogTitle","Formik","Yup","useStyles","theme","root","width","breakpoints","values","lg","maxWidth","margin","padding","spacing","themeButton","color","palette","white","backgroundColor","green","main","dark","SkinCarePlan","classes","addEditDialog","setAddEditDialog","useState","isOpen","title","okBtnText","isEdit","data","openAddDialog","prevState","closeAddEditDialog","AddEditDialog","props","onClose","initialFormValues","skinType","skinIssues","recipe","onSubmit","alert","object","shape","recipeName","string","trim","required","ingredients","array","image","file","mixed"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  makeStyles,\r\n  Grid,\r\n  Typography,\r\n  Paper,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Page from '../../components/Page/Page';\r\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  root: {\r\n    width: theme.breakpoints.values.lg,\r\n    maxWidth: '100%',\r\n    margin: '0 auto',\r\n    padding: theme.spacing(3),\r\n  },\r\n  themeButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n  },\r\n}));\r\n\r\nfunction SkinCarePlan() {\r\n  const classes = useStyles();\r\n  const [addEditDialog, setAddEditDialog] = React.useState({\r\n    isOpen: false,\r\n    title: '',\r\n    okBtnText: '',\r\n    isEdit: false,\r\n    data: {},\r\n  });\r\n\r\n  const openAddDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      title: 'Add Skin Care Plan',\r\n      isEdit: false,\r\n      okBtnText: 'Save',\r\n    }));\r\n  };\r\n\r\n  const closeAddEditDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Page title='Skin Care Recipe' />\r\n\r\n      {/* =======Header====== */}\r\n      <Grid alignItems='flex-end' container justify='space-between' spacing={3}>\r\n        <Grid item>\r\n          <Typography component='h1' variant='h3'>\r\n            Skin Care Plan\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant='contained'\r\n            onClick={() => openAddDialog()}\r\n            className={classes.themeButton}\r\n            startIcon={<AddIcon />}\r\n          >\r\n            Add\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* ==========Add & Edit Dialoge======== */}\r\n\r\n      <AddEditDialog {...addEditDialog} onClose={closeAddEditDialog} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst AddEditDialog = (props: any) => {\r\n  const { isEdit, isOpen, okBtnText = 'OK', onClose, title } = props;\r\n  const initialFormValues = {\r\n    skinType: '',\r\n    skinIssues: '',\r\n    recipe: '',\r\n  };\r\n\r\n  const onSubmit = () =>{\r\n      alert('submmitting')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={isOpen}\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        fullWidth\r\n        maxWidth='md'\r\n        aria-labelledby='dialog-title'\r\n      >\r\n        <DialogTitle id='dialog-title' onClose={onClose}>\r\n          {title}\r\n        </DialogTitle>\r\n        <Formik \r\n        enableReinitialize\r\n        initialValues={initialFormValues}\r\n        onSubmit={onSubmit}\r\n        validationSchema={Yup.object().shape({\r\n          recipeName: Yup.string().trim().required('Recipe name is required'),\r\n          skinType: Yup.string().trim().required('Skin type is required'),\r\n          ingredients: Yup.array().required('Ingredients is required'),\r\n          image: Yup.object({\r\n            file: Yup.mixed().required('A file is required'),\r\n          }),\r\n        })}\r\n        >\r\n\r\n        </Formik>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SkinCarePlan;\r\n"]},"metadata":{},"sourceType":"module"}