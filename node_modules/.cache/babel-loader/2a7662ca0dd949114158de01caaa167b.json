{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pyramidion\\\\WebApp\\\\Izze-Admin\\\\src\\\\pages\\\\SignIn\\\\SignIn.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider'; // import { useTheme } from '@material-ui/core/styles';\n// import useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport firebase from '../../firebase';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { LoginApi } from '../../Services/Api/Api';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  loginStyle: {\n    width: '80%',\n    backgroundColor: 'white',\n    margin: 'auto',\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(15),\n    borderRadius: '10px',\n    boxShadow: ' 0px 20px 40px #0000001F',\n    [theme.breakpoints.down('md')]: {\n      width: '90%'\n    }\n  },\n  SigninTextStyle: {\n    textAlign: 'start',\n    paddingLeft: theme.spacing(4),\n    paddingBottom: theme.spacing(2),\n    paddingTop: theme.spacing(1),\n    fontWeight: 500,\n    color: '#41A58D'\n  },\n  textboxStyle: {\n    paddingTop: theme.spacing(1)\n  },\n  textboxStyle1: {\n    paddingTop: theme.spacing(3)\n  },\n  textfieldStyle: {\n    width: '90%'\n  },\n  forgotpasswordStyle: {\n    paddingTop: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    textAlign: 'end',\n    textDecoration: 'underline',\n    cursor: 'pointer'\n  },\n  buttonStyle: {\n    display: 'flex',\n    flex: 1,\n    justifyContent: 'space-between',\n    padding: theme.spacing(3.5)\n  },\n  signUpbutton: {\n    width: '40%',\n    backgroundColor: 'white',\n    border: '2px solid #41A58D',\n    color: '#41A58D',\n    textTransform: 'capitalize',\n    '&:hover': {\n      backgroundColor: '#41A58D',\n      color: 'white'\n    }\n  },\n  signinButton: {\n    width: '40%',\n    backgroundColor: '#41A58D',\n    color: 'white',\n    textTransform: 'capitalize',\n    '&:hover': {\n      backgroundColor: 'white',\n      color: '#41A58D',\n      border: '2px solid #41A58D'\n    }\n  }\n}));\nconst validationSchema = Yup.object().shape({\n  userEmail: Yup.string().email('Enter the valid password').required('Required'),\n  userPassword: Yup.string().min(8, 'Password must be atleast 8 character').required('Required')\n});\n\nfunction SignIn(props) {\n  _s();\n\n  const classes = useStyles(); // const theme = useTheme();\n  // const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n\n  const [userEmail, setUserEmail] = React.useState('');\n  const [userPassword, setUserPassowrd] = React.useState('');\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const loginUser = () => {\n    setIsLoading(true);\n    firebase.auth().signInWithEmailAndPassword(userEmail, userPassword).then(response => {\n      localStorage.setItem('uid', response.user.uid);\n    }).then(() => {\n      setIsLoading(false);\n      LoginApi({}, onSuccessLogin);\n    }).catch(error => {\n      setIsLoading(false);\n      console.log('error', error);\n    });\n  };\n\n  const onSuccessLogin = response => {\n    setIsLoading(false);\n    props.history.push('/dashboard');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 12,\n        lg: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 12,\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.loginStyle,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              className: classes.SigninTextStyle,\n              children: \"SignIn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              style: {\n                width: '90%',\n                marginLeft: '30px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Formik, {\n                initialValues: {\n                  userEmail: '',\n                  userPassword: ''\n                },\n                onSubmit: () => {\n                  loginUser();\n                },\n                children: props => {\n                  const {\n                    values,\n                    touched,\n                    errors,\n                    isSubmitting,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit\n                  } = props;\n                  return /*#__PURE__*/_jsxDEV(\"form\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: classes.textboxStyle,\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        className: classes.textfieldStyle,\n                        value: userEmail,\n                        onChange: e => setUserEmail(e.target.value),\n                        label: \"Enter Email\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 153,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 152,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: classes.textboxStyle1,\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        type: \"password\",\n                        value: userPassword,\n                        onChange: e => setUserPassowrd(e.target.value),\n                        className: classes.textfieldStyle,\n                        label: \"Enter Password\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 161,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 160,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 23\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.forgotpasswordStyle,\n              children: \"Forgot Password ?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.buttonStyle,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                className: classes.signUpbutton,\n                children: \"SignUp\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: loginUser,\n                className: classes.signinButton,\n                children: [isLoading ? 'Signing In' : 'Sign In', isLoading ? /*#__PURE__*/_jsxDEV(\"i\", {\n                  style: {\n                    fontSize: 15,\n                    marginLeft: 20\n                  },\n                  className: \"fas fa-spinner fa-pulse\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 21\n                }, this) : '']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 12,\n        lg: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignIn, \"gGkoSPlz3jxA8kqDTREQVNdRe3I=\", false, function () {\n  return [useStyles];\n});\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/pages/SignIn/SignIn.tsx"],"names":["React","Typography","Grid","TextField","Button","Divider","firebase","makeStyles","LoginApi","Formik","Yup","useStyles","theme","loginStyle","width","backgroundColor","margin","padding","spacing","marginTop","borderRadius","boxShadow","breakpoints","down","SigninTextStyle","textAlign","paddingLeft","paddingBottom","paddingTop","fontWeight","color","textboxStyle","textboxStyle1","textfieldStyle","forgotpasswordStyle","paddingRight","textDecoration","cursor","buttonStyle","display","flex","justifyContent","signUpbutton","border","textTransform","signinButton","validationSchema","object","shape","userEmail","string","email","required","userPassword","min","SignIn","props","classes","setUserEmail","useState","setUserPassowrd","isLoading","setIsLoading","loginUser","auth","signInWithEmailAndPassword","then","response","localStorage","setItem","user","uid","onSuccessLogin","catch","error","console","log","history","push","marginLeft","values","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","e","target","value","fontSize"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CACA;AACA;;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,KAAY;AACvCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE,KADG;AAEVC,IAAAA,eAAe,EAAE,OAFP;AAGVC,IAAAA,MAAM,EAAE,MAHE;AAIVC,IAAAA,OAAO,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd,CAJC;AAKVC,IAAAA,SAAS,EAAEP,KAAK,CAACM,OAAN,CAAc,EAAd,CALD;AAMVE,IAAAA,YAAY,EAAE,MANJ;AAOVC,IAAAA,SAAS,EAAE,0BAPD;AAQV,KAACT,KAAK,CAACU,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC9BT,MAAAA,KAAK,EAAE;AADuB;AARtB,GAD2B;AAavCU,EAAAA,eAAe,EAAE;AACfC,IAAAA,SAAS,EAAE,OADI;AAEfC,IAAAA,WAAW,EAAEd,KAAK,CAACM,OAAN,CAAc,CAAd,CAFE;AAGfS,IAAAA,aAAa,EAAEf,KAAK,CAACM,OAAN,CAAc,CAAd,CAHA;AAIfU,IAAAA,UAAU,EAAEhB,KAAK,CAACM,OAAN,CAAc,CAAd,CAJG;AAKfW,IAAAA,UAAU,EAAE,GALG;AAMfC,IAAAA,KAAK,EAAE;AANQ,GAbsB;AAqBvCC,EAAAA,YAAY,EAAE;AACZH,IAAAA,UAAU,EAAEhB,KAAK,CAACM,OAAN,CAAc,CAAd;AADA,GArByB;AAwBvCc,EAAAA,aAAa,EAAE;AACbJ,IAAAA,UAAU,EAAEhB,KAAK,CAACM,OAAN,CAAc,CAAd;AADC,GAxBwB;AA2BvCe,EAAAA,cAAc,EAAE;AACdnB,IAAAA,KAAK,EAAE;AADO,GA3BuB;AA8BvCoB,EAAAA,mBAAmB,EAAE;AACnBN,IAAAA,UAAU,EAAEhB,KAAK,CAACM,OAAN,CAAc,CAAd,CADO;AAEnBiB,IAAAA,YAAY,EAAEvB,KAAK,CAACM,OAAN,CAAc,CAAd,CAFK;AAGnBO,IAAAA,SAAS,EAAE,KAHQ;AAInBW,IAAAA,cAAc,EAAE,WAJG;AAKnBC,IAAAA,MAAM,EAAE;AALW,GA9BkB;AAqCvCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,OAAO,EAAE,MADE;AAEXC,IAAAA,IAAI,EAAE,CAFK;AAGXC,IAAAA,cAAc,EAAE,eAHL;AAIXxB,IAAAA,OAAO,EAAEL,KAAK,CAACM,OAAN,CAAc,GAAd;AAJE,GArC0B;AA2CvCwB,EAAAA,YAAY,EAAE;AACZ5B,IAAAA,KAAK,EAAE,KADK;AAEZC,IAAAA,eAAe,EAAE,OAFL;AAGZ4B,IAAAA,MAAM,EAAE,mBAHI;AAIZb,IAAAA,KAAK,EAAE,SAJK;AAKZc,IAAAA,aAAa,EAAE,YALH;AAMZ,eAAW;AACT7B,MAAAA,eAAe,EAAE,SADR;AAETe,MAAAA,KAAK,EAAE;AAFE;AANC,GA3CyB;AAsDvCe,EAAAA,YAAY,EAAE;AACZ/B,IAAAA,KAAK,EAAE,KADK;AAEZC,IAAAA,eAAe,EAAE,SAFL;AAGZe,IAAAA,KAAK,EAAE,OAHK;AAIZc,IAAAA,aAAa,EAAE,YAJH;AAKZ,eAAW;AACT7B,MAAAA,eAAe,EAAE,OADR;AAETe,MAAAA,KAAK,EAAE,SAFE;AAGTa,MAAAA,MAAM,EAAE;AAHC;AALC;AAtDyB,CAAZ,CAAD,CAA5B;AAmEA,MAAMG,gBAAgB,GAAGpC,GAAG,CAACqC,MAAJ,GAAaC,KAAb,CAAmB;AAC1CC,EAAAA,SAAS,EAAEvC,GAAG,CAACwC,MAAJ,GACRC,KADQ,CACF,0BADE,EAERC,QAFQ,CAEC,UAFD,CAD+B;AAI1CC,EAAAA,YAAY,EAAE3C,GAAG,CAACwC,MAAJ,GACXI,GADW,CACP,CADO,EACJ,sCADI,EAEXF,QAFW,CAEF,UAFE;AAJ4B,CAAnB,CAAzB;;AASA,SAASG,MAAT,CAAgBC,KAAhB,EAA4B;AAAA;;AAC1B,QAAMC,OAAO,GAAG9C,SAAS,EAAzB,CAD0B,CAE1B;AACA;;AACA,QAAM,CAACsC,SAAD,EAAYS,YAAZ,IAA4B1D,KAAK,CAAC2D,QAAN,CAAe,EAAf,CAAlC;AACA,QAAM,CAACN,YAAD,EAAeO,eAAf,IAAkC5D,KAAK,CAAC2D,QAAN,CAAe,EAAf,CAAxC;AACA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4B9D,KAAK,CAAC2D,QAAN,CAAe,KAAf,CAAlC;;AAEA,QAAMI,SAAS,GAAG,MAAM;AACtBD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAxD,IAAAA,QAAQ,CACL0D,IADH,GAEGC,0BAFH,CAE8BhB,SAF9B,EAEyCI,YAFzC,EAGGa,IAHH,CAGSC,QAAD,IAAmB;AACvBC,MAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BF,QAAQ,CAACG,IAAT,CAAcC,GAA1C;AACD,KALH,EAMGL,IANH,CAMQ,MAAM;AACVJ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAtD,MAAAA,QAAQ,CAAC,EAAD,EAAKgE,cAAL,CAAR;AACD,KATH,EAUGC,KAVH,CAUUC,KAAD,IAAgB;AACrBZ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACD,KAbH;AAcD,GAhBD;;AAkBA,QAAMF,cAAc,GAAIL,QAAD,IAAmB;AACxCL,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAN,IAAAA,KAAK,CAACqB,OAAN,CAAcC,IAAd,CAAmB,YAAnB;AACD,GAHD;;AAKA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,EAAvB;AAA2B,QAAA,EAAE,EAAE;AAA/B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,EAAvB;AAA2B,QAAA,EAAE,EAAE,CAA/B;AAAA,+BACE;AAAK,UAAA,SAAS,EAAErB,OAAO,CAAC5C,UAAxB;AAAA,iCACE;AAAA,oCACE,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,IAApB;AAAyB,cAAA,SAAS,EAAE4C,OAAO,CAACjC,eAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,OAAD;AAAS,cAAA,KAAK,EAAE;AAAEV,gBAAAA,KAAK,EAAE,KAAT;AAAgBiE,gBAAAA,UAAU,EAAE;AAA5B;AAAhB;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAA,qCACE,QAAC,MAAD;AACE,gBAAA,aAAa,EAAE;AAAE9B,kBAAAA,SAAS,EAAE,EAAb;AAAiBI,kBAAAA,YAAY,EAAE;AAA/B,iBADjB;AAEE,gBAAA,QAAQ,EAAE,MAAM;AACdU,kBAAAA,SAAS;AACV,iBAJH;AAAA,0BAMIP,KAAD,IAAW;AACV,wBAAM;AACJwB,oBAAAA,MADI;AAEJC,oBAAAA,OAFI;AAGJC,oBAAAA,MAHI;AAIJC,oBAAAA,YAJI;AAKJC,oBAAAA,YALI;AAMJC,oBAAAA,UANI;AAOJC,oBAAAA;AAPI,sBAQF9B,KARJ;AASA,sCACE;AAAA,4CACE;AAAK,sBAAA,SAAS,EAAEC,OAAO,CAAC1B,YAAxB;AAAA,6CACE,QAAC,SAAD;AACE,wBAAA,SAAS,EAAE0B,OAAO,CAACxB,cADrB;AAEE,wBAAA,KAAK,EAAEgB,SAFT;AAGE,wBAAA,QAAQ,EAAGsC,CAAD,IAAO7B,YAAY,CAAC6B,CAAC,CAACC,MAAF,CAASC,KAAV,CAH/B;AAIE,wBAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,4BADF,eASE;AAAK,sBAAA,SAAS,EAAEhC,OAAO,CAACzB,aAAxB;AAAA,6CACE,QAAC,SAAD;AACE,wBAAA,IAAI,EAAC,UADP;AAEE,wBAAA,KAAK,EAAEqB,YAFT;AAGE,wBAAA,QAAQ,EAAGkC,CAAD,IAAO3B,eAAe,CAAC2B,CAAC,CAACC,MAAF,CAASC,KAAV,CAHlC;AAIE,wBAAA,SAAS,EAAEhC,OAAO,CAACxB,cAJrB;AAKE,wBAAA,KAAK,EAAC;AALR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,4BATF;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF;AAqBD;AArCH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBALF,eA8CE,QAAC,UAAD;AAAY,cAAA,SAAS,EAAEwB,OAAO,CAACvB,mBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA9CF,eAiDE;AAAK,cAAA,SAAS,EAAEuB,OAAO,CAACnB,WAAxB;AAAA,sCACE,QAAC,MAAD;AAAQ,gBAAA,SAAS,EAAEmB,OAAO,CAACf,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAEqB,SAAjB;AAA4B,gBAAA,SAAS,EAAEN,OAAO,CAACZ,YAA/C;AAAA,2BACGgB,SAAS,GAAG,YAAH,GAAkB,SAD9B,EAEGA,SAAS,gBACR;AACE,kBAAA,KAAK,EAAE;AAAE6B,oBAAAA,QAAQ,EAAE,EAAZ;AAAgBX,oBAAAA,UAAU,EAAE;AAA5B,mBADT;AAEE,kBAAA,SAAS,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,wBADQ,GAMR,EARJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjDF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAsEE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,EAAvB;AAA2B,QAAA,EAAE,EAAE;AAA/B;AAAA;AAAA;AAAA;AAAA,cAtEF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4ED;;GA3GQxB,M;UACS5C,S;;;KADT4C,M;AA6GT,eAAeA,MAAf","sourcesContent":["import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\n// import { useTheme } from '@material-ui/core/styles';\r\n// import useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport firebase from '../../firebase';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { LoginApi } from '../../Services/Api/Api';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  loginStyle: {\r\n    width: '80%',\r\n    backgroundColor: 'white',\r\n    margin: 'auto',\r\n    padding: theme.spacing(2),\r\n    marginTop: theme.spacing(15),\r\n    borderRadius: '10px',\r\n    boxShadow: ' 0px 20px 40px #0000001F',\r\n    [theme.breakpoints.down('md')]: {\r\n      width: '90%',\r\n    },\r\n  },\r\n  SigninTextStyle: {\r\n    textAlign: 'start',\r\n    paddingLeft: theme.spacing(4),\r\n    paddingBottom: theme.spacing(2),\r\n    paddingTop: theme.spacing(1),\r\n    fontWeight: 500,\r\n    color: '#41A58D',\r\n  },\r\n  textboxStyle: {\r\n    paddingTop: theme.spacing(1),\r\n  },\r\n  textboxStyle1: {\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  textfieldStyle: {\r\n    width: '90%',\r\n  },\r\n  forgotpasswordStyle: {\r\n    paddingTop: theme.spacing(3),\r\n    paddingRight: theme.spacing(3),\r\n    textAlign: 'end',\r\n    textDecoration: 'underline',\r\n    cursor: 'pointer',\r\n  },\r\n  buttonStyle: {\r\n    display: 'flex',\r\n    flex: 1,\r\n    justifyContent: 'space-between',\r\n    padding: theme.spacing(3.5),\r\n  },\r\n  signUpbutton: {\r\n    width: '40%',\r\n    backgroundColor: 'white',\r\n    border: '2px solid #41A58D',\r\n    color: '#41A58D',\r\n    textTransform: 'capitalize',\r\n    '&:hover': {\r\n      backgroundColor: '#41A58D',\r\n      color: 'white',\r\n    },\r\n  },\r\n  signinButton: {\r\n    width: '40%',\r\n    backgroundColor: '#41A58D',\r\n    color: 'white',\r\n    textTransform: 'capitalize',\r\n    '&:hover': {\r\n      backgroundColor: 'white',\r\n      color: '#41A58D',\r\n      border: '2px solid #41A58D',\r\n    },\r\n  },\r\n}));\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  userEmail: Yup.string()\r\n    .email('Enter the valid password')\r\n    .required('Required'),\r\n  userPassword: Yup.string()\r\n    .min(8, 'Password must be atleast 8 character')\r\n    .required('Required'),\r\n});\r\n\r\nfunction SignIn(props: any) {\r\n  const classes = useStyles();\r\n  // const theme = useTheme();\r\n  // const isMobile = useMediaQuery(theme.breakpoints.down('md'));\r\n  const [userEmail, setUserEmail] = React.useState('');\r\n  const [userPassword, setUserPassowrd] = React.useState('');\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n\r\n  const loginUser = () => {\r\n    setIsLoading(true);\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(userEmail, userPassword)\r\n      .then((response: any) => {\r\n        localStorage.setItem('uid', response.user.uid);\r\n      })\r\n      .then(() => {\r\n        setIsLoading(false);\r\n        LoginApi({}, onSuccessLogin);\r\n      })\r\n      .catch((error: any) => {\r\n        setIsLoading(false);\r\n        console.log('error', error);\r\n      });\r\n  };\r\n\r\n  const onSuccessLogin = (response: any) => {\r\n    setIsLoading(false);\r\n    props.history.push('/dashboard');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Grid container>\r\n        <Grid item xs={12} md={12} lg={3}></Grid>\r\n        <Grid item xs={12} md={12} lg={6}>\r\n          <div className={classes.loginStyle}>\r\n            <div>\r\n              <Typography variant='h5' className={classes.SigninTextStyle}>\r\n                SignIn\r\n              </Typography>\r\n              <Divider style={{ width: '90%', marginLeft: '30px' }} />\r\n              <div>\r\n                <Formik\r\n                  initialValues={{ userEmail: '', userPassword: '' }}\r\n                  onSubmit={() => {\r\n                    loginUser();\r\n                  }}\r\n                >\r\n                  {(props) => {\r\n                    const {\r\n                      values,\r\n                      touched,\r\n                      errors,\r\n                      isSubmitting,\r\n                      handleChange,\r\n                      handleBlur,\r\n                      handleSubmit,\r\n                    } = props;\r\n                    return (\r\n                      <form>\r\n                        <div className={classes.textboxStyle}>\r\n                          <TextField\r\n                            className={classes.textfieldStyle}\r\n                            value={userEmail}\r\n                            onChange={(e) => setUserEmail(e.target.value)}\r\n                            label='Enter Email'\r\n                          />\r\n                        </div>\r\n                        <div className={classes.textboxStyle1}>\r\n                          <TextField\r\n                            type='password'\r\n                            value={userPassword}\r\n                            onChange={(e) => setUserPassowrd(e.target.value)}\r\n                            className={classes.textfieldStyle}\r\n                            label='Enter Password'\r\n                          />\r\n                        </div>\r\n                      </form>\r\n                    );\r\n                  }}\r\n                </Formik>\r\n              </div>\r\n              <Typography className={classes.forgotpasswordStyle}>\r\n                Forgot Password ?\r\n              </Typography>\r\n              <div className={classes.buttonStyle}>\r\n                <Button className={classes.signUpbutton}>SignUp</Button>\r\n                <Button onClick={loginUser} className={classes.signinButton}>\r\n                  {isLoading ? 'Signing In' : 'Sign In'}\r\n                  {isLoading ? (\r\n                    <i\r\n                      style={{ fontSize: 15, marginLeft: 20 }}\r\n                      className='fas fa-spinner fa-pulse'\r\n                    ></i>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12} md={12} lg={3}></Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n"]},"metadata":{},"sourceType":"module"}