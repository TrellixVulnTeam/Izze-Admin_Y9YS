{"ast":null,"code":"import Axios from 'axios';\nconst BaseUrl = process.env.REACT_APP_API_BASE_URL;\nexport const PostApi = (url, data = {}, idToken = null) => {\n  return new Promise((resolve, reject) => {\n    Axios({\n      method: 'POST',\n      url: BaseUrl + url,\n      data: data,\n      headers: {\n        Accept: 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json',\n        authorization: `Token ${idToken}`\n      }\n    }).then(res => resolve(res.data)).catch(err => {\n      var _err$response;\n\n      return reject((err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err);\n    });\n  });\n};\n_c = PostApi;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostApi\");","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/utils/ApiService.tsx"],"names":["Axios","BaseUrl","process","env","REACT_APP_API_BASE_URL","PostApi","url","data","idToken","Promise","resolve","reject","method","headers","Accept","authorization","then","res","catch","err","response"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,sBAA5B;AACA,OAAO,MAAMC,OAAO,GAAG,CAACC,GAAD,EAAWC,IAAS,GAAG,EAAvB,EAA2BC,OAAY,GAAG,IAA1C,KAAmD;AACxE,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCX,IAAAA,KAAK,CAAC;AACJY,MAAAA,MAAM,EAAE,MADJ;AAEJN,MAAAA,GAAG,EAAEL,OAAO,GAAGK,GAFX;AAGJC,MAAAA,IAAI,EAAEA,IAHF;AAIJM,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,uCAA+B,GAFxB;AAGP,wBAAgB,kBAHT;AAIPC,QAAAA,aAAa,EAAG,SAAQP,OAAQ;AAJzB;AAJL,KAAD,CAAL,CAUGQ,IAVH,CAUSC,GAAD,IAAcP,OAAO,CAACO,GAAG,CAACV,IAAL,CAV7B,EAWGW,KAXH,CAWUC,GAAD;AAAA;;AAAA,aAAcR,MAAM,CAAC,CAAAQ,GAAG,SAAH,IAAAA,GAAG,WAAH,6BAAAA,GAAG,CAAEC,QAAL,gEAAeb,IAAf,KAAuBY,GAAxB,CAApB;AAAA,KAXT;AAYD,GAbM,CAAP;AAcD,CAfM;KAAMd,O","sourcesContent":["import Axios from 'axios';\r\nconst BaseUrl = process.env.REACT_APP_API_BASE_URL;\r\nexport const PostApi = (url: any, data: any = {}, idToken: any = null) => {\r\n  return new Promise((resolve, reject) => {\r\n    Axios({\r\n      method: 'POST',\r\n      url: BaseUrl + url,\r\n      data: data,\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Content-Type': 'application/json',\r\n        authorization: `Token ${idToken}`,\r\n      },\r\n    }).then((res: any) => resolve(res.data))\r\n      .catch((err: any) => reject(err?.response?.data || err));\r\n  })\r\n};\r\n"]},"metadata":{},"sourceType":"module"}