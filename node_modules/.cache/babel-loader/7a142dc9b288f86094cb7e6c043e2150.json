{"ast":null,"code":"import { Node, mergeAttributes } from '@tiptap/core';\nimport { wrappingInputRule } from 'prosemirror-inputrules';\nvar inputRegex = /^\\s*([-+*])\\s$/;\nvar BulletList = Node.create({\n  name: 'bulletList',\n  defaultOptions: {\n    HTMLAttributes: {}\n  },\n  group: 'block list',\n  content: 'listItem+',\n  parseHTML: function parseHTML() {\n    return [{\n      tag: 'ul'\n    }];\n  },\n  renderHTML: function renderHTML(_ref) {\n    var HTMLAttributes = _ref.HTMLAttributes;\n    return ['ul', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n  },\n  addCommands: function addCommands() {\n    return {\n      toggleBulletList: function toggleBulletList() {\n        return function (_ref2) {\n          var commands = _ref2.commands;\n          return commands.toggleList('bulletList', 'listItem');\n        };\n      }\n    };\n  },\n  addKeyboardShortcuts: function addKeyboardShortcuts() {\n    var _this = this;\n\n    return {\n      'Mod-Shift-8': function ModShift8() {\n        return _this.editor.commands.toggleBulletList();\n      }\n    };\n  },\n  addInputRules: function addInputRules() {\n    return [wrappingInputRule(inputRegex, this.type)];\n  }\n});\nexport default BulletList;\nexport { BulletList, inputRegex };","map":{"version":3,"sources":["../src/bullet-list.ts"],"names":[],"mappings":";;IAkBa,UAAU,GAAG,gB;IAEb,UAAU,GAAG,IAAI,CAAC,MAAL,CAA+B;AACvD,EAAA,IAAI,EAAE,YADiD;AAGvD,EAAA,cAAc,EAAE;AACd,IAAA,cAAc,EAAE;AADF,GAHuC;AAOvD,EAAA,KAAK,EAAE,YAPgD;AASvD,EAAA,OAAO,EAAE,WAT8C;AAWvD,EAAA,SAXuD,uBAW9C;AACP,WAAO,CACL;AAAE,MAAA,GAAG,EAAE;AAAP,KADK,CAAP;AAGD,GAfsD;AAiBvD,EAAA,UAjBuD,4BAiB1B;AAAA,QAAhB,cAAgB,QAAhB,cAAgB;AAC3B,WAAO,CAAC,IAAD,EAAO,eAAe,CAAC,KAAK,OAAL,CAAa,cAAd,EAA8B,cAA9B,CAAtB,EAAqE,CAArE,CAAP;AACD,GAnBsD;AAqBvD,EAAA,WArBuD,yBAqB5C;AACT,WAAO;AACL,MAAA,gBAAgB,EAAE;AAAA,eAAM,iBAAa;AAAA,cAAV,QAAU,SAAV,QAAU;AACnC,iBAAO,QAAQ,CAAC,UAAT,CAAoB,YAApB,EAAkC,UAAlC,CAAP;AACD,SAFiB;AAAA;AADb,KAAP;AAKD,GA3BsD;AA6BvD,EAAA,oBA7BuD,kCA6BnC;AAAA;;AAClB,WAAO;AACL,qBAAe;AAAA,eAAM,KAAI,CAAC,MAAL,CAAY,QAAZ,CAAqB,gBAArB,EAAN;AAAA;AADV,KAAP;AAGD,GAjCsD;AAmCvD,EAAA,aAnCuD,2BAmC1C;AACX,WAAO,CACL,iBAAiB,CAAC,UAAD,EAAa,KAAK,IAAlB,CADZ,CAAP;AAGD;AAvCsD,CAA/B,C","sourcesContent":["import { Command, Node, mergeAttributes } from '@tiptap/core'\nimport { wrappingInputRule } from 'prosemirror-inputrules'\n\nexport interface BulletListOptions {\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands {\n    bulletList: {\n      /**\n       * Toggle a bullet list\n       */\n      toggleBulletList: () => Command,\n    }\n  }\n}\n\nexport const inputRegex = /^\\s*([-+*])\\s$/\n\nexport const BulletList = Node.create<BulletListOptions>({\n  name: 'bulletList',\n\n  defaultOptions: {\n    HTMLAttributes: {},\n  },\n\n  group: 'block list',\n\n  content: 'listItem+',\n\n  parseHTML() {\n    return [\n      { tag: 'ul' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['ul', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      toggleBulletList: () => ({ commands }) => {\n        return commands.toggleList('bulletList', 'listItem')\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Shift-8': () => this.editor.commands.toggleBulletList(),\n    }\n  },\n\n  addInputRules() {\n    return [\n      wrappingInputRule(inputRegex, this.type),\n    ]\n  },\n})\n"]},"metadata":{},"sourceType":"module"}