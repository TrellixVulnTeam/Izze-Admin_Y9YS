{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pyramidion\\\\WebApp\\\\Izze-Admin\\\\src\\\\components\\\\TopNavBar\\\\NavBar.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Drawer, Divider, Paper, Avatar, Typography, Toolbar, Button } from '@material-ui/core';\nimport { Hidden } from '@material-ui/core';\nimport Navigation from './Navigation';\nimport MobxObserver from '../../Mobx/Helpers/MobxObserver';\nimport { useStore } from '../../Mobx/Helpers/UseStore';\nimport { toJS } from 'mobx';\nimport { AdminViewProfileRoute } from '../../Routes/RoutesConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    overflowY: 'auto'\n  },\n  content: {\n    padding: theme.spacing(2)\n  },\n  profile: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    minHeight: 'fit-content'\n  },\n  avatar: {\n    width: 60,\n    height: 60\n  },\n  name: {\n    marginTop: theme.spacing(1)\n  },\n  divider: {\n    marginTop: theme.spacing(2)\n  },\n  navigation: {\n    marginTop: theme.spacing(2)\n  },\n  drawer: {\n    width: 255,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: 255 // zIndex: -100,\n\n  },\n  drawerContainer: {\n    overflow: 'auto'\n  },\n  themeButton: {\n    textTransform: 'none',\n    color: theme.palette.white,\n    backgroundColor: theme.palette.green.main,\n    '&:hover': {\n      backgroundColor: theme.palette.green.dark\n    }\n  }\n}));\n\nconst NavBar = props => {\n  _s();\n\n  var _UserDetails$image;\n\n  const {\n    openMobile,\n    onMobileClose,\n    className,\n    ...rest\n  } = props;\n  const {\n    UserStore\n  } = useStore();\n  const {\n    UserDetails,\n    MenuConfig\n  } = toJS(UserStore);\n  const classes = useStyles();\n  const location = useLocation();\n  useEffect(() => {\n    if (openMobile) {\n      onMobileClose && onMobileClose();\n    }\n  }, [location.pathname]);\n\n  const navbarContent = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.content,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.profile,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        alt: UserDetails === null || UserDetails === void 0 ? void 0 : UserDetails.name,\n        className: classes.avatar,\n        component: RouterLink,\n        src: UserDetails === null || UserDetails === void 0 ? void 0 : (_UserDetails$image = UserDetails.image) === null || _UserDetails$image === void 0 ? void 0 : _UserDetails$image.url,\n        to: AdminViewProfileRoute\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.name,\n        variant: \"h4\",\n        children: UserDetails === null || UserDetails === void 0 ? void 0 : UserDetails.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: UserDetails === null || UserDetails === void 0 ? void 0 : UserDetails.user_type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        className: classes.themeButton,\n        component: RouterLink,\n        to: AdminViewProfileRoute,\n        children: \"View Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      className: classes.divider\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: classes.navigation,\n      children: MenuConfig.map(list => /*#__PURE__*/_jsxDEV(Navigation, {\n        component: \"div\",\n        pages: list.pages,\n        title: list.title\n      }, list.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Hidden, {\n      lgUp: true,\n      children: /*#__PURE__*/_jsxDEV(Drawer, {\n        anchor: \"left\",\n        className: classes.drawer,\n        variant: \"temporary\",\n        classes: {\n          paper: classes.drawerPaper\n        },\n        onClose: onMobileClose,\n        open: openMobile,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.drawerContainer,\n          children: navbarContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n      mdDown: true,\n      children: /*#__PURE__*/_jsxDEV(Paper, { ...rest,\n        className: clsx(classes.root, className),\n        elevation: 1,\n        square: true,\n        children: [/*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), navbarContent]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NavBar, \"vnd+CF3KqYnX9AAc0158aLa2r7Y=\", false, function () {\n  return [useStore, useStyles, useLocation];\n});\n\n_c = NavBar;\nexport default _c2 = MobxObserver(NavBar);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NavBar\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/components/TopNavBar/NavBar.tsx"],"names":["React","Fragment","useEffect","Link","RouterLink","useLocation","clsx","makeStyles","Drawer","Divider","Paper","Avatar","Typography","Toolbar","Button","Hidden","Navigation","MobxObserver","useStore","toJS","AdminViewProfileRoute","useStyles","theme","root","height","overflowY","content","padding","spacing","profile","display","flexDirection","alignItems","minHeight","avatar","width","name","marginTop","divider","navigation","drawer","flexShrink","drawerPaper","drawerContainer","overflow","themeButton","textTransform","color","palette","white","backgroundColor","green","main","dark","NavBar","props","openMobile","onMobileClose","className","rest","UserStore","UserDetails","MenuConfig","classes","location","pathname","navbarContent","image","url","user_type","map","list","pages","title","paper"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Drawer, Divider, Paper, Avatar, Typography, Toolbar, Button, } from '@material-ui/core';\nimport { Hidden } from '@material-ui/core';\nimport Navigation from './Navigation';\n\nimport MobxObserver from '../../Mobx/Helpers/MobxObserver';\nimport { useStore } from '../../Mobx/Helpers/UseStore';\nimport { toJS } from 'mobx';\nimport { AdminViewProfileRoute } from '../../Routes/RoutesConstants';\n\nconst useStyles = makeStyles((theme: any) => ({\n  root: {\n    height: '100%',\n    overflowY: 'auto',\n  },\n  content: {\n    padding: theme.spacing(2),\n  },\n  profile: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    minHeight: 'fit-content',\n  },\n  avatar: {\n    width: 60,\n    height: 60,\n  },\n  name: {\n    marginTop: theme.spacing(1),\n  },\n  divider: {\n    marginTop: theme.spacing(2),\n  },\n  navigation: {\n    marginTop: theme.spacing(2),\n  },\n  drawer: {\n    width: 255,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: 255,\n    // zIndex: -100,\n  },\n  drawerContainer: {\n    overflow: 'auto',\n  },\n  themeButton: {\n    textTransform: 'none',\n    color: theme.palette.white,\n    backgroundColor: theme.palette.green.main,\n    '&:hover': {\n      backgroundColor: theme.palette.green.dark,\n    },\n  },\n\n}));\n\nconst NavBar = (props: any) => {\n  const { openMobile, onMobileClose, className, ...rest } = props;\n  const { UserStore } = useStore();\n  const { UserDetails, MenuConfig } = toJS(UserStore)\n\n\n  const classes = useStyles();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (openMobile) {\n      onMobileClose && onMobileClose();\n    }\n  }, [location.pathname]);\n\n  const navbarContent = (\n    <div className={classes.content}>\n      <div className={classes.profile}>\n        <Avatar\n          alt={UserDetails?.name}\n          className={classes.avatar}\n          component={RouterLink}\n          src={UserDetails?.image?.url}\n          to={AdminViewProfileRoute}\n        />\n        <Typography className={classes.name} variant='h4'>\n          {UserDetails?.name}\n        </Typography>\n        <Typography variant='body2'>{UserDetails?.user_type}</Typography>\n\n        <Button size='small' className={classes.themeButton} component={RouterLink} to={AdminViewProfileRoute}>View Profile</Button>\n      </div>\n      <Divider className={classes.divider} />\n      <nav className={classes.navigation}>\n        {MenuConfig.map((list: any) => (\n          <Navigation\n            component='div'\n            key={list.title}\n            pages={list.pages}\n            title={list.title}\n          />\n        ))}\n      </nav>\n    </div>\n  );\n\n  return (\n    <Fragment>\n      <Hidden lgUp>\n        <Drawer\n          anchor='left'\n          className={classes.drawer}\n          variant='temporary'\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          onClose={onMobileClose}\n          open={openMobile}\n        >\n          <div className={classes.drawerContainer}>{navbarContent}</div>\n        </Drawer>\n      </Hidden>\n      <Hidden mdDown>\n        <Paper\n          {...rest}\n          className={clsx(classes.root, className)}\n          elevation={1}\n          square\n        >\n          <Toolbar />\n          {navbarContent}\n        </Paper>\n      </Hidden>\n    </Fragment>\n  );\n};\n\nexport default MobxObserver(NavBar);\n"]},"metadata":{},"sourceType":"module"}