{"ast":null,"code":"import * as Yup from 'yup';\nexport const MealTime = {\n  isEdit: true,\n  meal_time: '',\n  order: 0,\n  recipe: []\n};\nexport const initialFormValues = {\n  diet_type: '',\n  calories: '',\n  meal_days: Array(10).fill(null).map((d, i) => ({\n    day: i + 1,\n    meals: []\n  }))\n};\nexport const validation = Yup.object().shape({\n  diet_type: Yup.string().trim().required('Diet type is required'),\n  calories: Yup.number().required('Calories is required'),\n  meal_days: Yup.array().of(Yup.object().shape({\n    day: Yup.number().required('Day is required'),\n    meals: Yup.array().of(Yup.object().shape({\n      recipe: Yup.array().of(Yup.object().shape({\n        id: Yup.string().trim().required('Recipe is Required')\n      })).min(1, 'Recipe is Required'),\n      meal_time: Yup.string().required('Name is required')\n    }))\n  })).min(10, 'Field is Required')\n});","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/pages/MealPlan/FormikValues.tsx"],"names":["Yup","MealTime","isEdit","meal_time","order","recipe","initialFormValues","diet_type","calories","meal_days","Array","fill","map","d","i","day","meals","validation","object","shape","string","trim","required","number","array","of","id","min"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AA0BA,OAAO,MAAMC,QAAqB,GAAG;AACnCC,EAAAA,MAAM,EAAE,IAD2B;AAEnCC,EAAAA,SAAS,EAAE,EAFwB;AAGnCC,EAAAA,KAAK,EAAE,CAH4B;AAInCC,EAAAA,MAAM,EAAE;AAJ2B,CAA9B;AAOP,OAAO,MAAMC,iBAA2B,GAAG;AACzCC,EAAAA,SAAS,EAAE,EAD8B;AAEzCC,EAAAA,QAAQ,EAAE,EAF+B;AAGzCC,EAAAA,SAAS,EAAEC,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,CAAe,IAAf,EAAqBC,GAArB,CAAyB,CAACC,CAAD,EAAIC,CAAJ,MAAW;AAAEC,IAAAA,GAAG,EAAED,CAAC,GAAG,CAAX;AAAcE,IAAAA,KAAK,EAAE;AAArB,GAAX,CAAzB;AAH8B,CAApC;AAMP,OAAO,MAAMC,UAAU,GAAGjB,GAAG,CAACkB,MAAJ,GAAaC,KAAb,CAAmB;AAC3CZ,EAAAA,SAAS,EAAEP,GAAG,CAACoB,MAAJ,GAAaC,IAAb,GAAoBC,QAApB,CAA6B,uBAA7B,CADgC;AAE3Cd,EAAAA,QAAQ,EAAER,GAAG,CAACuB,MAAJ,GAAaD,QAAb,CAAsB,sBAAtB,CAFiC;AAG3Cb,EAAAA,SAAS,EAAET,GAAG,CAACwB,KAAJ,GAAYC,EAAZ,CACTzB,GAAG,CAACkB,MAAJ,GAAaC,KAAb,CAAmB;AACjBJ,IAAAA,GAAG,EAAEf,GAAG,CAACuB,MAAJ,GAAaD,QAAb,CAAsB,iBAAtB,CADY;AAEjBN,IAAAA,KAAK,EAAEhB,GAAG,CAACwB,KAAJ,GAAYC,EAAZ,CACLzB,GAAG,CAACkB,MAAJ,GAAaC,KAAb,CAAmB;AACjBd,MAAAA,MAAM,EAAEL,GAAG,CAACwB,KAAJ,GAAYC,EAAZ,CACNzB,GAAG,CAACkB,MAAJ,GAAaC,KAAb,CAAmB;AACjBO,QAAAA,EAAE,EAAE1B,GAAG,CAACoB,MAAJ,GAAaC,IAAb,GAAoBC,QAApB,CAA6B,oBAA7B;AADa,OAAnB,CADM,EAGFK,GAHE,CAGE,CAHF,EAGK,oBAHL,CADS;AAKjBxB,MAAAA,SAAS,EAAEH,GAAG,CAACoB,MAAJ,GAAaE,QAAb,CAAsB,kBAAtB;AALM,KAAnB,CADK;AAFU,GAAnB,CADS,EAYLK,GAZK,CAYD,EAZC,EAYG,mBAZH;AAHgC,CAAnB,CAAnB","sourcesContent":["import * as Yup from 'yup';\r\n\r\ninterface IntRecipe {\r\n  id: string\r\n}\r\n\r\ninterface IntMealTime {\r\n  isEdit: Boolean,\r\n  meal_time: string,\r\n  order: number,\r\n  recipe: IntRecipe[],\r\n}\r\n\r\ninterface IntMealDays {\r\n  day: number,\r\n  meals: any\r\n}\r\n\r\ninterface MealPlan {\r\n  diet_type: string,\r\n  calories: string,\r\n  meal_days: IntMealDays[]\r\n}\r\n\r\n\r\n\r\nexport const MealTime: IntMealTime = {\r\n  isEdit: true,\r\n  meal_time: '',\r\n  order: 0,\r\n  recipe: []\r\n}\r\n\r\nexport const initialFormValues: MealPlan = {\r\n  diet_type: '',\r\n  calories: '',\r\n  meal_days: Array(10).fill(null).map((d, i) => ({ day: i + 1, meals: [] }))\r\n};\r\n\r\nexport const validation = Yup.object().shape({\r\n  diet_type: Yup.string().trim().required('Diet type is required'),\r\n  calories: Yup.number().required('Calories is required'),\r\n  meal_days: Yup.array().of(\r\n    Yup.object().shape({\r\n      day: Yup.number().required('Day is required'),\r\n      meals: Yup.array().of(\r\n        Yup.object().shape({\r\n          recipe: Yup.array().of(\r\n            Yup.object().shape({\r\n              id: Yup.string().trim().required('Recipe is Required'),\r\n            })).min(1, 'Recipe is Required'),\r\n          meal_time: Yup.string().required('Name is required'),\r\n        })\r\n      )\r\n    })).min(10, 'Field is Required')\r\n})\r\n"]},"metadata":{},"sourceType":"module"}