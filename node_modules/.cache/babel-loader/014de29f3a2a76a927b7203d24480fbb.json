{"ast":null,"code":"export const uploadImageCloudinary = file => {\n  const data = new FormData();\n  data.append(\"file\", file);\n  data.append(\"upload_preset\", \"IzzeDev\");\n  data.append(\"cloud_name\", \"drbfa8358\");\n  return fetch(\"https://api.cloudinary.com/v1_1/drbfa8358/image/upload\", {\n    method: \"post\",\n    body: data\n  }).then(resp => resp.json()).then(({\n    public_id,\n    secure_url\n  }) => {\n    return {\n      public_id,\n      url: secure_url\n    };\n  });\n};\nexport const uploadNewImage = imageData => {\n  const {\n    isNew,\n    file\n  } = imageData;\n\n  if (isNew) {\n    return uploadImageCloudinary(file);\n  } else {\n    return Promise.resolve(file);\n  }\n};","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/utils/CloudinaryUtils.tsx"],"names":["uploadImageCloudinary","file","data","FormData","append","fetch","method","body","then","resp","json","public_id","secure_url","url","uploadNewImage","imageData","isNew","Promise","resolve"],"mappings":"AAAA,OAAO,MAAMA,qBAAqB,GAAIC,IAAD,IAAe;AAClD,QAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,EAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBH,IAApB;AACAC,EAAAA,IAAI,CAACE,MAAL,CAAY,eAAZ,EAA6B,SAA7B;AACAF,EAAAA,IAAI,CAACE,MAAL,CAAY,YAAZ,EAA0B,WAA1B;AACA,SAAOC,KAAK,CAAC,wDAAD,EAA2D;AACrEC,IAAAA,MAAM,EAAE,MAD6D;AAErEC,IAAAA,IAAI,EAAEL;AAF+D,GAA3D,CAAL,CAGJM,IAHI,CAGCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAHT,EAIJF,IAJI,CAIC,CAAC;AAAEG,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAAD,KAA+B;AACnC,WAAO;AAAED,MAAAA,SAAF;AAAaE,MAAAA,GAAG,EAAED;AAAlB,KAAP;AACD,GANI,CAAP;AAOD,CAZM;AAcP,OAAO,MAAME,cAAc,GAAIC,SAAD,IAAoB;AAChD,QAAM;AAAEC,IAAAA,KAAF;AAASf,IAAAA;AAAT,MAAkBc,SAAxB;;AACA,MAAIC,KAAJ,EAAW;AACT,WAAOhB,qBAAqB,CAACC,IAAD,CAA5B;AACD,GAFD,MAEO;AACL,WAAOgB,OAAO,CAACC,OAAR,CAAgBjB,IAAhB,CAAP;AACD;AACF,CAPM","sourcesContent":["export const uploadImageCloudinary = (file: any) => {\r\n  const data = new FormData()\r\n  data.append(\"file\", file)\r\n  data.append(\"upload_preset\", \"IzzeDev\")\r\n  data.append(\"cloud_name\", \"drbfa8358\")\r\n  return fetch(\"https://api.cloudinary.com/v1_1/drbfa8358/image/upload\", {\r\n    method: \"post\",\r\n    body: data\r\n  }).then(resp => resp.json())\r\n    .then(({ public_id, secure_url }) => {\r\n      return { public_id, url: secure_url }\r\n    })\r\n}\r\n\r\nexport const uploadNewImage = (imageData: any) => {\r\n  const { isNew, file } = imageData\r\n  if (isNew) {\r\n    return uploadImageCloudinary(file)\r\n  } else {\r\n    return Promise.resolve(file)\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}