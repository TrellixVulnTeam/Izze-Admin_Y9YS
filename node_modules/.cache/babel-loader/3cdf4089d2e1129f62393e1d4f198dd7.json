{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pyramidion\\\\WebApp\\\\Izze-Admin\\\\src\\\\pages\\\\MealPlan\\\\MealPlan.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport { Button, Card, CardActions, CardContent, CircularProgress, Dialog, DialogActions, DialogContent, FormControl, FormHelperText, Grid, IconButton, makeStyles, Paper, Tab, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, Tooltip, Typography } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\nimport CheckIcon from '@material-ui/icons/Check';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { Pagination, TabContext, TabList, TabPanel } from '@material-ui/lab';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { Formik, getIn, useFormikContext } from 'formik';\nimport React, { useEffect, useRef, useState } from 'react';\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\nimport Page from '../../components/Page/Page';\nimport useConfModel from '../../hook/useConfModel';\nimport useService from '../../hook/useService';\nimport useSnackbar from '../../hook/useSnackbar';\nimport { initialFormValues, MealTime, validation } from './FormikValues';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: theme.breakpoints.values.lg,\n    maxWidth: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(3)\n  },\n  content: {\n    padding: 0\n  },\n  tabCard: {\n    marginTop: theme.spacing(3)\n  },\n  themeButton: {\n    color: theme.palette.white,\n    backgroundColor: theme.palette.green.main,\n    '&:hover': {\n      backgroundColor: theme.palette.green.dark\n    }\n  },\n  sEvenly: {\n    display: 'flex',\n    justifyContent: 'space-evenly'\n  },\n  sBetween: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  iconPadd: {\n    padding: 5\n  },\n  jCenter: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  actions: {\n    padding: theme.spacing(1),\n    justifyContent: 'center'\n  },\n  tabRoot: {\n    minWidth: 0,\n    textTransform: 'none' // margin: '10px 0px',\n\n  },\n  tabIndicator: {\n    backgroundColor: theme.palette.green.main\n  },\n  tabTextColorInherit: {\n    backgroundColor: theme.palette.green.main,\n    color: 'white',\n    border: '1px solid white'\n  },\n  tabPanelRoot: {\n    padding: 0,\n    // paddingBottom: 0,\n    width: '100%'\n  },\n  listItemRoot: {\n    backgroundColor: '#7ac0af2b',\n    margin: '10px 0px'\n  },\n  flexDisplay: {\n    display: 'flex'\n  },\n  paperRoot: {\n    display: 'flex',\n    marginTop: '20px'\n  },\n  paperRoot1: {\n    display: 'flex',\n    marginTop: '20px'\n  },\n  tablePanelRoot: {\n    padding: '0px'\n  },\n  largeAvatar: {\n    width: theme.spacing(10),\n    height: theme.spacing(10)\n  },\n  justPadding: {\n    padding: 10,\n    borderRadius: 10\n  },\n  tabBtnIcon: {\n    height: '100%',\n    minWidth: 0,\n    textTransform: 'none'\n  },\n  divTab: {\n    flexDirection: 'column',\n    display: 'flex'\n  }\n}));\nconst DietTypeDrop = [{\n  id: 'VEG',\n  name: 'Vegetarian'\n}, {\n  id: 'NONVEG',\n  name: 'Non-Vegetarian'\n}, {\n  id: 'EGG',\n  name: 'Eggetarian'\n}];\nconst CaloriesDrop = [{\n  id: '2000',\n  name: '2000'\n}, {\n  id: '2100',\n  name: '2100'\n}, {\n  id: '2200',\n  name: '2200'\n}, {\n  id: '2300',\n  name: '2300'\n}];\n\nconst MealPlan = () => {\n  _s();\n\n  const classes = useStyles();\n  const Snackbar = useSnackbar();\n  const {\n    Post\n  } = useService();\n  const ConfModel = useConfModel();\n  const [loading, setLoading] = useState(true);\n  const [stateData, setStateData] = useState({\n    page_no: 1,\n    page_limit: 10\n  });\n  const [pageCount, setPageCount] = useState(0);\n  const [mealPlanList, setMealPlanList] = useState([]);\n  const [addEditDialog, setAddEditDialog] = useState({\n    isOpen: false,\n    title: '',\n    okBtnText: '',\n    isEdit: false,\n    data: {}\n  });\n  const [viewDialog, setViewDialog] = useState({\n    isOpen: false,\n    title: '',\n    data: {}\n  });\n\n  const openAddDialog = () => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      title: 'Add Meal Plan',\n      isEdit: false,\n      okBtnText: 'Save'\n    }));\n  };\n\n  const openEditDialog = data => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      isEdit: true,\n      data,\n      title: 'Edit Meal Plan',\n      okBtnText: 'Edit'\n    }));\n  };\n\n  const onDelete = data => {\n    const {\n      openModel,\n      setLoading,\n      closeModel\n    } = ConfModel;\n\n    const submitFunction = () => {\n      setLoading(true);\n      Post('app/deleteMealPlan', {\n        id: data._id\n      }).then(async res => {\n        setLoading(false);\n        closeModel();\n        onSuccessAction();\n        Snackbar.show(res.message, 'success');\n      }).catch(err => {\n        setLoading(false);\n        Snackbar.show('Internal Server Error', 'error');\n      });\n    };\n\n    openModel(submitFunction);\n  };\n\n  const openViewDialog = data => {\n    setViewDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      data,\n      title: 'View Meal Ingredient'\n    }));\n  };\n\n  const listMealPlan = async () => {\n    setLoading(true);\n    Post('app/listMealPlan', stateData).then(res => {\n      setLoading(false);\n\n      if (!res.error) {\n        setMealPlanList(res.data);\n        setPageCount(res.page_count);\n      } else {\n        Snackbar.show(res.message, 'error');\n      }\n    }).catch(err => {\n      console.log('err', err);\n      setLoading(false);\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  const onPageChange = (event, value) => {\n    setStateData(prevState => ({ ...prevState,\n      page_no: value\n    }));\n  };\n\n  const closeAddEditDialog = () => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: false\n    }));\n  };\n\n  const closeViewDialog = () => {\n    setViewDialog(prevState => ({ ...prevState,\n      isOpen: false\n    }));\n  };\n\n  const onSuccessAction = () => {\n    listMealPlan();\n    closeAddEditDialog();\n  };\n\n  const getDropValues = (dropValues, value) => {\n    var _dropValues$find;\n\n    return ((_dropValues$find = dropValues.find(({\n      id\n    }) => id == value)) === null || _dropValues$find === void 0 ? void 0 : _dropValues$find.name) || '';\n  };\n\n  useEffect(() => {\n    listMealPlan();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Page, {\n      title: \"Meal Ingredients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      alignItems: \"flex-end\",\n      container: true,\n      justify: \"space-between\",\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h3\",\n          children: \"Meal Ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => openAddDialog(),\n          className: classes.themeButton,\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 24\n          }, this),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 0,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            size: \"small\",\n            placeholder: \"Name\",\n            variant: \"outlined\",\n            name: \"state\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.tabCard,\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        className: classes.content,\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"#\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Diet Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Calories\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: [!loading && mealPlanList.map((data, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: stateData.page_limit * (stateData.page_no - 1) + index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: getDropValues(DietTypeDrop, data === null || data === void 0 ? void 0 : data.diet_type)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: data === null || data === void 0 ? void 0 : data.calories\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: classes.sEvenly,\n                    children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                      title: \"View\",\n                      arrow: true,\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        className: classes.iconPadd,\n                        onClick: () => openViewDialog(data),\n                        children: /*#__PURE__*/_jsxDEV(CenterFocusStrongIcon, {\n                          color: \"primary\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 310,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 306,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 305,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                      title: \"Edit\",\n                      arrow: true,\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        className: classes.iconPadd,\n                        onClick: () => openEditDialog(data),\n                        children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                          color: \"action\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 318,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 314,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 313,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                      title: \"Delete\",\n                      arrow: true,\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        className: classes.iconPadd,\n                        onClick: () => onDelete(data),\n                        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                          color: \"secondary\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 326,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 322,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 321,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 21\n              }, this)), loading && /*#__PURE__*/_jsxDEV(TableLoader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 29\n              }, this), !loading && mealPlanList.length == 0 && /*#__PURE__*/_jsxDEV(TableNoData, {\n                children: \"No Data Found\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Pagination, {\n          count: pageCount,\n          page: stateData.page_no,\n          onChange: onPageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), addEditDialog.isOpen && /*#__PURE__*/_jsxDEV(AddEditModel, { ...addEditDialog,\n      onClose: closeAddEditDialog,\n      onSuccess: onSuccessAction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 32\n    }, this), viewDialog.isOpen && /*#__PURE__*/_jsxDEV(ViewNutritionModel, { ...viewDialog,\n      onClose: closeViewDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MealPlan, \"7JlnaCJLHybNbXAH66ntvv1JhtU=\", false, function () {\n  return [useStyles, useSnackbar, useService, useConfModel];\n});\n\n_c = MealPlan;\nexport const AddEditModel = props => {\n  _s2();\n\n  const {\n    isEdit,\n    isOpen,\n    okBtnText = 'OK',\n    onClose,\n    data,\n    title,\n    onSuccess\n  } = props;\n  const formikRef = useRef(null);\n  const classes = useStyles();\n  const Snackbar = useSnackbar();\n  const {\n    Post\n  } = useService();\n  const [tabValue, setTabValue] = useState('0');\n  const [recipeList, setRecipeList] = useState([]);\n  const [initialValue, setInitialValue] = useState({ ...initialFormValues\n  });\n\n  const onSubmit = (value, helper) => {\n    helper.setSubmitting(true);\n    const postData = { ...value\n    };\n    !isEdit && addData(postData, helper);\n    isEdit && editData(postData, helper);\n  };\n\n  const addData = (data, {\n    setSubmitting,\n    resetForm\n  }) => {\n    setSubmitting(true);\n    Post('app/addMealPlan', data).then(res => {\n      Snackbar.show(res.message, 'success');\n      setSubmitting(false);\n      resetForm();\n      onSuccess();\n    }).catch(err => {\n      setSubmitting(false);\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  const editData = (data, {\n    setSubmitting,\n    resetForm\n  }) => {\n    setSubmitting(true);\n    Post('app/editMealPlan', data).then(res => {\n      Snackbar.show(res.message, 'success');\n      setSubmitting(false);\n      resetForm();\n      onSuccess();\n    }).catch(err => {\n      setSubmitting(false);\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  const handleChangeTab = newValue => {\n    setTabValue(newValue);\n  };\n\n  const listAllMealRecipe = () => {\n    Post('app/listAllMealRecipe', {}).then(response => {\n      if (!response.error) {\n        setRecipeList(response.data);\n      } else {\n        Snackbar.show(response.message, 'error');\n      }\n    }).catch(error => {\n      Snackbar.show(error.message, 'error');\n    });\n  };\n\n  useEffect(() => {\n    if (isEdit) {\n      const {\n        _id,\n        ...rest\n      } = data;\n      const editData = { ...rest,\n        id: _id\n      };\n      let mealDays = editData.meal_days.map(MealDays => {\n        const {\n          meals,\n          ...rest\n        } = MealDays;\n        let NewMeals = meals.map(MealData => {\n          const {\n            recipe,\n            ...rest\n          } = MealData;\n          const RecipeIds = recipeList.map(({\n            _id\n          }) => _id);\n          const NewRecipe = recipe.filter(({\n            _id\n          }) => RecipeIds.includes(_id)).map(({\n            _id\n          }) => ({\n            id: _id\n          }));\n          return { ...rest,\n            isEdit: false,\n            recipe: NewRecipe\n          };\n        });\n        return { ...rest,\n          meals: NewMeals\n        };\n      });\n      editData.meal_days = mealDays;\n      console.log('editData', editData);\n      setInitialValue(editData);\n    } else {\n      setInitialValue(initialFormValues);\n    }\n  }, [props, recipeList]);\n  useEffect(() => {\n    listAllMealRecipe();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isOpen,\n      disableBackdropClick: true,\n      disableEscapeKeyDown: true,\n      fullWidth: true,\n      fullScreen: true,\n      maxWidth: \"lg\",\n      \"aria-labelledby\": \"dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"dialog-title\",\n        onClose: onClose,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        innerRef: formikRef,\n        enableReinitialize: true,\n        initialValues: initialValue,\n        validationSchema: validation,\n        onSubmit: onSubmit,\n        children: ({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          setFieldValue,\n          submitForm,\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n            dividers: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  options: DietTypeDrop,\n                  value: DietTypeDrop.find(data => data.id == values.diet_type),\n                  getOptionLabel: option => option.name,\n                  getOptionSelected: option => option.id == values.diet_type,\n                  onChange: (event, newValue) => {\n                    setFieldValue('diet_type', (newValue === null || newValue === void 0 ? void 0 : newValue.id) || '');\n                  },\n                  onBlur: handleBlur,\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    label: \"Diet Types\",\n                    variant: \"outlined\",\n                    error: Boolean(touched.diet_type && errors.diet_type),\n                    helperText: touched.diet_type && errors.diet_type,\n                    inputProps: { ...params.inputProps\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 505,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  options: CaloriesDrop,\n                  value: CaloriesDrop.find(data => data.id == values.calories),\n                  getOptionLabel: option => option.name,\n                  getOptionSelected: option => option.id == values.calories,\n                  onChange: (event, newValue) => {\n                    setFieldValue('calories', (newValue === null || newValue === void 0 ? void 0 : newValue.id) || '');\n                  },\n                  onBlur: handleBlur,\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    label: \"Calories\",\n                    variant: \"outlined\",\n                    error: Boolean(touched.calories && errors.calories),\n                    helperText: touched.calories && errors.calories,\n                    inputProps: { ...params.inputProps\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 529,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 519,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TabContext, {\n                value: tabValue || '',\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 2,\n                  children: /*#__PURE__*/_jsxDEV(TabList, {\n                    classes: {\n                      indicator: classes.tabIndicator\n                    },\n                    onChange: (e, value) => handleChangeTab(value),\n                    orientation: \"vertical\",\n                    variant: \"standard\",\n                    children: values === null || values === void 0 ? void 0 : values.meal_days.map((mealDay, i) => {\n                      const {\n                        day\n                      } = mealDay;\n                      return /*#__PURE__*/_jsxDEV(Tab, {\n                        classes: {\n                          root: classes.tabRoot,\n                          textColorInherit: classes.tabTextColorInherit\n                        },\n                        label: `Day - ${day}`,\n                        value: day.toString()\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 558,\n                        columnNumber: 29\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 547,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 546,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 10,\n                  children: values === null || values === void 0 ? void 0 : values.meal_days.map((mealDay, i) => {\n                    const {\n                      day,\n                      meals\n                    } = mealDay;\n                    return /*#__PURE__*/_jsxDEV(TabPanel, {\n                      className: classes.tabPanelRoot,\n                      value: day.toString(),\n                      children: /*#__PURE__*/_jsxDEV(MealTab, {\n                        index: i,\n                        meals: meals,\n                        recipeList: recipeList\n                      }, i, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 574,\n                        columnNumber: 29\n                      }, this)\n                    }, i, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 573,\n                      columnNumber: 27\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 569,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: onClose,\n              variant: \"outlined\",\n              color: \"secondary\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: classes.themeButton,\n              onClick: () => submitForm(),\n              disabled: isSubmitting,\n              variant: \"outlined\",\n              children: isSubmitting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 24,\n                style: {\n                  color: 'white'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 597,\n                columnNumber: 21\n              }, this) : okBtnText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s2(AddEditModel, \"9dopXLVYxvNw/ek7nfvL7LCbYMw=\", false, function () {\n  return [useStyles, useSnackbar, useService];\n});\n\n_c2 = AddEditModel;\n\nconst ViewNutritionModel = props => {\n  _s3();\n\n  const {\n    isOpen,\n    title,\n    onClose,\n    data\n  } = props;\n  const classes = useStyles();\n  const [formValue, setFormValue] = useState(data);\n  const [value, setValue] = React.useState('Fats');\n  const [timings, setTimings] = React.useState('Early-Morning');\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleTimingChange = (event, newValue) => {\n    setTimings(newValue);\n  };\n\n  useEffect(() => {\n    setFormValue(data);\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    disableBackdropClick: true,\n    disableEscapeKeyDown: true,\n    fullWidth: true,\n    maxWidth: \"md\",\n    \"aria-labelledby\": \"dialog-view-title\",\n    open: isOpen,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"dialog-view-title\",\n      onClose: onClose,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        variant: \"outlined\",\n        color: \"secondary\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 634,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(ViewNutritionModel, \"lQ7JJ5bGQ8VLPHJx7q2ZA9oRR4M=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = ViewNutritionModel;\n\nconst MealTab = ({\n  meals,\n  recipeList,\n  index\n}) => {\n  _s4();\n\n  const {\n    values,\n    touched,\n    errors,\n    setFieldValue,\n    handleChange,\n    handleBlur\n  } = useFormikContext();\n  const classes = useStyles();\n  const [tabValue, setTabValue] = useState('0');\n  const FieldName = `meal_days[${index}]`;\n\n  const getArrayError = error => {\n    return typeof error == 'string' ? error : '';\n  };\n\n  const handleChangeTab = newValue => {\n    setTabValue(newValue);\n  };\n\n  const addNewTab = (values, setFieldValue) => {\n    const {\n      meals\n    } = getIn(values, FieldName);\n    meals.push(MealTime);\n    setFieldValue(`${FieldName}.meals`, meals);\n  };\n\n  const submitMealTime = (i, values, setFieldValue) => {\n    const {\n      meals\n    } = getIn(values, FieldName);\n    const NewMeals = { ...meals[i]\n    };\n    NewMeals.isEdit = false;\n    meals[i] = NewMeals;\n    setFieldValue(`${FieldName}.meals`, meals);\n    handleChangeTab(i.toString());\n  };\n\n  const editMealTime = (i, values, setFieldValue) => {\n    const {\n      meals\n    } = getIn(values, FieldName);\n    const NewMeals = { ...meals[i]\n    };\n    NewMeals.isEdit = true;\n    meals[i] = NewMeals;\n    setFieldValue(`${FieldName}.meals`, meals);\n    handleChangeTab(i.toString());\n  };\n\n  const deleteMealTime = (i, values, setFieldValue) => {\n    const {\n      meals\n    } = getIn(values, FieldName);\n    const NewMeals = meals.filter((d, index) => index != i);\n    setFieldValue(`${FieldName}.meals`, NewMeals);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TabContext, {\n    value: tabValue || '',\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      xs: 12,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(TabList, {\n          classes: {\n            indicator: classes.tabIndicator\n          },\n          orientation: \"vertical\",\n          variant: \"standard\",\n          children: [meals.map((mealData, i) => {\n            let FieldNameSub = `${FieldName}.meals[${i}]`;\n            let FieldTouched = getIn(touched, FieldNameSub);\n            let FieldErrors = getIn(errors, FieldNameSub);\n            let FieldValues = getIn(values, FieldNameSub);\n            const TabSelected = i == Number(tabValue);\n            const SelectedStyle = TabSelected ? {\n              borderRight: '2px solid #41a58d'\n            } : {\n              borderRight: '2px solid white'\n            };\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.divTab,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                container: true,\n                xs: 12,\n                spacing: 1,\n                style: {\n                  margin: 'inherit',\n                  ...SelectedStyle\n                },\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: mealData.isEdit ? 10 : 8,\n                  children: [mealData.isEdit && /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    size: \"small\",\n                    label: \"Name\",\n                    name: `${FieldNameSub}.meal_time`,\n                    variant: \"outlined\",\n                    error: Boolean((FieldTouched === null || FieldTouched === void 0 ? void 0 : FieldTouched.meal_time) && (FieldErrors === null || FieldErrors === void 0 ? void 0 : FieldErrors.meal_time)),\n                    helperText: (FieldTouched === null || FieldTouched === void 0 ? void 0 : FieldTouched.meal_time) && (FieldErrors === null || FieldErrors === void 0 ? void 0 : FieldErrors.meal_time),\n                    value: mealData === null || mealData === void 0 ? void 0 : mealData.meal_time,\n                    onChange: handleChange,\n                    onBlur: handleBlur\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 726,\n                    columnNumber: 25\n                  }, this), !mealData.isEdit && /*#__PURE__*/_jsxDEV(Button, {\n                    fullWidth: true,\n                    className: !Boolean((FieldTouched === null || FieldTouched === void 0 ? void 0 : FieldTouched.meal_time) && (FieldErrors === null || FieldErrors === void 0 ? void 0 : FieldErrors.meal_time)) ? classes.themeButton : '',\n                    classes: {\n                      fullWidth: classes.tabBtnIcon\n                    },\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    onClick: e => handleChangeTab(i.toString()),\n                    children: !Boolean((FieldTouched === null || FieldTouched === void 0 ? void 0 : FieldTouched.meal_time) && (FieldErrors === null || FieldErrors === void 0 ? void 0 : FieldErrors.meal_time)) ? mealData === null || mealData === void 0 ? void 0 : mealData.meal_time : FieldErrors === null || FieldErrors === void 0 ? void 0 : FieldErrors.meal_time\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 741,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 724,\n                  columnNumber: 21\n                }, this), mealData.isEdit && /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 2,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    fullWidth: true,\n                    className: classes.themeButton,\n                    classes: {\n                      fullWidth: classes.tabBtnIcon\n                    },\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    onClick: () => submitMealTime(i, values, setFieldValue),\n                    children: /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 767,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 757,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 756,\n                  columnNumber: 23\n                }, this), !mealData.isEdit && /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 2,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    fullWidth: true,\n                    classes: {\n                      fullWidth: classes.tabBtnIcon\n                    },\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: () => editMealTime(i, values, setFieldValue),\n                    children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 782,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 773,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 772,\n                  columnNumber: 42\n                }, this), !mealData.isEdit && /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 2,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    fullWidth: true,\n                    classes: {\n                      fullWidth: classes.tabBtnIcon\n                    },\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    onClick: () => deleteMealTime(i, values, setFieldValue),\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 798,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 789,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 788,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 723,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 722,\n              columnNumber: 17\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.divTab,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              xs: 12,\n              spacing: 1,\n              style: {\n                margin: 'inherit'\n              },\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  error: Boolean(getIn(touched, `${FieldName}.meals`) && getArrayError(getIn(errors, `${FieldName}.meals`))),\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    fullWidth: true,\n                    className: classes.themeButton,\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    onClick: () => addNewTab(values, setFieldValue),\n                    children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 821,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 814,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                    children: getIn(touched, 'nutrition') && getArrayError(getIn(errors, 'nutrition'))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 824,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 811,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 810,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 809,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 808,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 707,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        children: meals.map((mealData, i) => {\n          let FieldNameSub = `${FieldName}.meals[${i}]`;\n          let FieldTouched = getIn(touched, FieldNameSub);\n          let FieldErrors = getIn(errors, FieldNameSub);\n          return /*#__PURE__*/_jsxDEV(TabPanel, {\n            className: classes.tabPanelRoot,\n            value: i.toString(),\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  align: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: mealData === null || mealData === void 0 ? void 0 : mealData.meal_time\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 845,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 844,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 843,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 12,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  multiple: true,\n                  options: recipeList,\n                  value: recipeList.filter(data => mealData.recipe.map(({\n                    id\n                  }) => id).includes(data._id)),\n                  getOptionLabel: option => option.name,\n                  onChange: (event, newValue) => {\n                    let RecIds = newValue.map(({\n                      _id\n                    }) => ({\n                      id: _id\n                    }));\n                    setFieldValue(`${FieldNameSub}.recipe`, RecIds || []);\n                  },\n                  onBlur: handleBlur,\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    label: \"Recipe\",\n                    variant: \"outlined\",\n                    error: Boolean((FieldTouched === null || FieldTouched === void 0 ? void 0 : FieldTouched.recipe) && (FieldErrors === null || FieldErrors === void 0 ? void 0 : FieldErrors.recipe)),\n                    helperText: (FieldTouched === null || FieldTouched === void 0 ? void 0 : FieldTouched.recipe) && (FieldErrors === null || FieldErrors === void 0 ? void 0 : FieldErrors.recipe),\n                    inputProps: { ...params.inputProps\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 860,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 849,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 848,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 842,\n              columnNumber: 17\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 840,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 705,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 704,\n    columnNumber: 5\n  }, this);\n};\n\n_s4(MealTab, \"tmRjcb4WxcxtB7FEmms70ExVT50=\", false, function () {\n  return [useFormikContext, useStyles];\n});\n\n_c4 = MealTab;\nexport default MealPlan;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"MealPlan\");\n$RefreshReg$(_c2, \"AddEditModel\");\n$RefreshReg$(_c3, \"ViewNutritionModel\");\n$RefreshReg$(_c4, \"MealTab\");","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/pages/MealPlan/MealPlan.tsx"],"names":["Button","Card","CardActions","CardContent","CircularProgress","Dialog","DialogActions","DialogContent","FormControl","FormHelperText","Grid","IconButton","makeStyles","Paper","Tab","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TextField","Tooltip","Typography","AddIcon","CenterFocusStrongIcon","CheckIcon","DeleteIcon","EditIcon","Pagination","TabContext","TabList","TabPanel","Autocomplete","Formik","getIn","useFormikContext","React","useEffect","useRef","useState","DialogTitle","TableLoader","TableNoData","Page","useConfModel","useService","useSnackbar","initialFormValues","MealTime","validation","useStyles","theme","root","width","breakpoints","values","lg","maxWidth","margin","padding","spacing","content","tabCard","marginTop","themeButton","color","palette","white","backgroundColor","green","main","dark","sEvenly","display","justifyContent","sBetween","iconPadd","jCenter","actions","tabRoot","minWidth","textTransform","tabIndicator","tabTextColorInherit","border","tabPanelRoot","listItemRoot","flexDisplay","paperRoot","paperRoot1","tablePanelRoot","largeAvatar","height","justPadding","borderRadius","tabBtnIcon","divTab","flexDirection","DietTypeDrop","id","name","CaloriesDrop","MealPlan","classes","Snackbar","Post","ConfModel","loading","setLoading","stateData","setStateData","page_no","page_limit","pageCount","setPageCount","mealPlanList","setMealPlanList","addEditDialog","setAddEditDialog","isOpen","title","okBtnText","isEdit","data","viewDialog","setViewDialog","openAddDialog","prevState","openEditDialog","onDelete","openModel","closeModel","submitFunction","_id","then","res","onSuccessAction","show","message","catch","err","openViewDialog","listMealPlan","error","page_count","console","log","onPageChange","event","value","closeAddEditDialog","closeViewDialog","getDropValues","dropValues","find","map","index","diet_type","calories","length","AddEditModel","props","onClose","onSuccess","formikRef","tabValue","setTabValue","recipeList","setRecipeList","initialValue","setInitialValue","onSubmit","helper","setSubmitting","postData","addData","editData","resetForm","handleChangeTab","newValue","listAllMealRecipe","response","rest","mealDays","meal_days","MealDays","meals","NewMeals","MealData","recipe","RecipeIds","NewRecipe","filter","includes","errors","touched","handleChange","handleBlur","setFieldValue","submitForm","isSubmitting","option","params","Boolean","inputProps","indicator","e","mealDay","i","day","textColorInherit","toString","ViewNutritionModel","formValue","setFormValue","setValue","timings","setTimings","handleTimingChange","MealTab","FieldName","getArrayError","addNewTab","push","submitMealTime","editMealTime","deleteMealTime","d","mealData","FieldNameSub","FieldTouched","FieldErrors","FieldValues","TabSelected","Number","SelectedStyle","borderRight","meal_time","fullWidth","RecIds"],"mappings":"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","sourcesContent":["import { Button, Card, CardActions, CardContent, CircularProgress, Dialog, DialogActions, DialogContent, FormControl, FormHelperText, Grid, IconButton, makeStyles, Paper, Tab, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, Tooltip, Typography } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Pagination, TabContext, TabList, TabPanel } from '@material-ui/lab';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Formik, getIn, useFormikContext } from 'formik';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\r\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\r\nimport Page from '../../components/Page/Page';\r\nimport useConfModel from '../../hook/useConfModel';\r\nimport useService from '../../hook/useService';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport { initialFormValues, MealTime, validation } from './FormikValues';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  root: {\r\n    width: theme.breakpoints.values.lg,\r\n    maxWidth: '100%',\r\n    margin: '0 auto',\r\n    padding: theme.spacing(3),\r\n  },\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  tabCard: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  themeButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n  },\r\n  sEvenly: {\r\n    display: 'flex',\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  sBetween: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  iconPadd: {\r\n    padding: 5,\r\n  },\r\n  jCenter: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(1),\r\n    justifyContent: 'center',\r\n  },\r\n  tabRoot: {\r\n    minWidth: 0,\r\n    textTransform: 'none'\r\n    // margin: '10px 0px',\r\n  },\r\n  tabIndicator: {\r\n    backgroundColor: theme.palette.green.main,\r\n  },\r\n  tabTextColorInherit: {\r\n    backgroundColor: theme.palette.green.main,\r\n    color: 'white',\r\n    border: '1px solid white',\r\n  },\r\n  tabPanelRoot: {\r\n    padding: 0,\r\n    // paddingBottom: 0,\r\n    width: '100%',\r\n  },\r\n  listItemRoot: {\r\n    backgroundColor: '#7ac0af2b',\r\n    margin: '10px 0px',\r\n  },\r\n  flexDisplay: {\r\n    display: 'flex',\r\n  },\r\n  paperRoot: {\r\n    display: 'flex',\r\n    marginTop: '20px',\r\n  },\r\n  paperRoot1: {\r\n    display: 'flex',\r\n    marginTop: '20px',\r\n  },\r\n  tablePanelRoot: {\r\n    padding: '0px',\r\n  },\r\n  largeAvatar: {\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10)\r\n  },\r\n  justPadding: {\r\n    padding: 10,\r\n    borderRadius: 10\r\n  },\r\n  tabBtnIcon: {\r\n    height: '100%',\r\n    minWidth: 0,\r\n    textTransform: 'none'\r\n  },\r\n  divTab: {\r\n    flexDirection: 'column',\r\n    display: 'flex'\r\n  }\r\n}));\r\n\r\nconst DietTypeDrop = [\r\n  { id: 'VEG', name: 'Vegetarian' },\r\n  { id: 'NONVEG', name: 'Non-Vegetarian' },\r\n  { id: 'EGG', name: 'Eggetarian' },\r\n];\r\n\r\nconst CaloriesDrop = [\r\n  { id: '2000', name: '2000' },\r\n  { id: '2100', name: '2100' },\r\n  { id: '2200', name: '2200' },\r\n  { id: '2300', name: '2300' },\r\n];\r\n\r\nconst MealPlan = () => {\r\n  const classes = useStyles();\r\n  const Snackbar = useSnackbar();\r\n  const { Post } = useService();\r\n  const ConfModel = useConfModel();\r\n  const [loading, setLoading] = useState(true);\r\n  const [stateData, setStateData] = useState({ page_no: 1, page_limit: 10 });\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const [mealPlanList, setMealPlanList] = useState([]);\r\n  const [addEditDialog, setAddEditDialog] = useState({\r\n    isOpen: false,\r\n    title: '',\r\n    okBtnText: '',\r\n    isEdit: false,\r\n    data: {},\r\n  });\r\n\r\n  const [viewDialog, setViewDialog] = useState({\r\n    isOpen: false,\r\n    title: '',\r\n    data: {},\r\n  });\r\n\r\n  const openAddDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      title: 'Add Meal Plan',\r\n      isEdit: false,\r\n      okBtnText: 'Save',\r\n    }));\r\n  };\r\n\r\n  const openEditDialog = (data: any) => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      isEdit: true,\r\n      data,\r\n      title: 'Edit Meal Plan',\r\n      okBtnText: 'Edit',\r\n    }));\r\n  };\r\n\r\n  const onDelete = (data: any) => {\r\n    const { openModel, setLoading, closeModel } = ConfModel;\r\n    const submitFunction = () => {\r\n      setLoading(true);\r\n      Post('app/deleteMealPlan', { id: data._id })\r\n        .then(async (res: any) => {\r\n          setLoading(false);\r\n          closeModel();\r\n          onSuccessAction();\r\n          Snackbar.show(res.message, 'success');\r\n        })\r\n        .catch((err: any) => {\r\n          setLoading(false);\r\n          Snackbar.show('Internal Server Error', 'error');\r\n        });\r\n    };\r\n    openModel(submitFunction);\r\n  };\r\n\r\n  const openViewDialog = (data: any) => {\r\n    setViewDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      data,\r\n      title: 'View Meal Ingredient',\r\n    }));\r\n  };\r\n\r\n  const listMealPlan = async () => {\r\n    setLoading(true);\r\n    Post('app/listMealPlan', stateData)\r\n      .then((res: any) => {\r\n        setLoading(false);\r\n        if (!res.error) {\r\n          setMealPlanList(res.data);\r\n          setPageCount(res.page_count);\r\n        } else {\r\n          Snackbar.show(res.message, 'error');\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        console.log('err', err);\r\n        setLoading(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const onPageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    setStateData((prevState: any) => ({ ...prevState, page_no: value }));\r\n  };\r\n\r\n  const closeAddEditDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const closeViewDialog = () => {\r\n    setViewDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const onSuccessAction = () => {\r\n    listMealPlan();\r\n    closeAddEditDialog();\r\n  };\r\n\r\n  const getDropValues = (dropValues: any, value: string) => {\r\n    return dropValues.find(({ id }: any) => id == value)?.name || ''\r\n  };\r\n\r\n  useEffect(() => {\r\n    listMealPlan();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Page title='Meal Ingredients' />\r\n\r\n      <Grid alignItems='flex-end' container justify='space-between' spacing={3}>\r\n        <Grid item>\r\n          <Typography component='h1' variant='h3'>\r\n            Meal Ingredients\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant='contained'\r\n            onClick={() => openAddDialog()}\r\n            className={classes.themeButton}\r\n            startIcon={<AddIcon />}\r\n          >\r\n            Add\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* =============Search======== */}\r\n      <Grid container spacing={3}>\r\n        <Grid item>\r\n          <Paper elevation={0}>\r\n            <TextField\r\n              fullWidth\r\n              size='small'\r\n              placeholder='Name'\r\n              variant='outlined'\r\n              name='state'\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Card className={classes.tabCard}>\r\n        <CardContent className={classes.content}>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align='center'>#</TableCell>\r\n                  <TableCell align='center'>Diet Type</TableCell>\r\n                  <TableCell align='center'>Calories</TableCell>\r\n                  <TableCell align='center'>Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {!loading &&\r\n                  mealPlanList.map((data: any, index: number) => (\r\n                    <TableRow hover key={index}>\r\n                      <TableCell align='center'>\r\n                        {stateData.page_limit * (stateData.page_no - 1) +\r\n                          index +\r\n                          1}\r\n                      </TableCell>\r\n                      <TableCell align='center'>{getDropValues(DietTypeDrop, data?.diet_type)}</TableCell>\r\n                      <TableCell align='center'>{data?.calories}</TableCell>\r\n                      <TableCell align='center'>\r\n                        <div className={classes.sEvenly}>\r\n                          <Tooltip title='View' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openViewDialog(data)}\r\n                            >\r\n                              <CenterFocusStrongIcon color='primary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Edit' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openEditDialog(data)}\r\n                            >\r\n                              <EditIcon color='action' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Delete' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => onDelete(data)}\r\n                            >\r\n                              <DeleteIcon color='secondary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                {loading && <TableLoader />}\r\n                {!loading && mealPlanList.length == 0 && (\r\n                  <TableNoData>No Data Found</TableNoData>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </CardContent>\r\n\r\n        <CardActions className={classes.actions}>\r\n          <Pagination\r\n            count={pageCount}\r\n            page={stateData.page_no}\r\n            onChange={onPageChange}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n\r\n      {addEditDialog.isOpen && <AddEditModel {...addEditDialog} onClose={closeAddEditDialog} onSuccess={onSuccessAction} />}\r\n      {viewDialog.isOpen && <ViewNutritionModel {...viewDialog} onClose={closeViewDialog} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const AddEditModel = (props: any) => {\r\n  const {\r\n    isEdit,\r\n    isOpen,\r\n    okBtnText = 'OK',\r\n    onClose,\r\n    data,\r\n    title,\r\n    onSuccess,\r\n  } = props;\r\n  const formikRef = useRef<any>(null);\r\n  const classes = useStyles();\r\n  const Snackbar = useSnackbar();\r\n  const { Post } = useService();\r\n  const [tabValue, setTabValue] = useState('0');\r\n  const [recipeList, setRecipeList] = useState([])\r\n\r\n\r\n  const [initialValue, setInitialValue] = useState({\r\n    ...initialFormValues,\r\n  });\r\n\r\n  const onSubmit = (value: any, helper: any) => {\r\n    helper.setSubmitting(true);\r\n    const postData = { ...value };\r\n    !isEdit && addData(postData, helper);\r\n    isEdit && editData(postData, helper);\r\n  };\r\n\r\n  const addData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n    Post('app/addMealPlan', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const editData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n    Post('app/editMealPlan', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n\r\n\r\n  const handleChangeTab = (newValue: string) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const listAllMealRecipe = () => {\r\n    Post('app/listAllMealRecipe', {})\r\n      .then((response: any) => {\r\n        if (!response.error) {\r\n          setRecipeList(response.data);\r\n        } else {\r\n          Snackbar.show(response.message, 'error');\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        Snackbar.show(error.message, 'error');\r\n      });\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (isEdit) {\r\n      const { _id, ...rest } = data;\r\n      const editData = { ...rest, id: _id };\r\n\r\n      let mealDays = editData.meal_days.map((MealDays: any) => {\r\n        const { meals, ...rest } = MealDays\r\n        let NewMeals = meals.map((MealData: any) => {\r\n          const { recipe, ...rest } = MealData\r\n          const RecipeIds = recipeList.map(({ _id }: any) => _id)\r\n          const NewRecipe = recipe.filter(({ _id }: any) => RecipeIds.includes(_id)).map(({ _id }: any) => ({ id: _id }));\r\n          return { ...rest, isEdit: false, recipe: NewRecipe }\r\n        })\r\n        return { ...rest, meals: NewMeals }\r\n      })\r\n      editData.meal_days = mealDays\r\n      console.log('editData', editData)\r\n      setInitialValue(editData);\r\n    } else {\r\n      setInitialValue(initialFormValues);\r\n    }\r\n  }, [props, recipeList]);\r\n\r\n  useEffect(() => {\r\n    listAllMealRecipe();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={isOpen}\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        fullWidth\r\n        fullScreen\r\n        maxWidth='lg'\r\n        aria-labelledby='dialog-title'\r\n      >\r\n        <DialogTitle id='dialog-title' onClose={onClose}>\r\n          {title}\r\n        </DialogTitle>\r\n        <Formik\r\n          innerRef={formikRef}\r\n          enableReinitialize\r\n          initialValues={initialValue}\r\n          validationSchema={validation}\r\n          onSubmit={onSubmit}\r\n        >\r\n          {({ values, errors, touched, handleChange, handleBlur, setFieldValue, submitForm, isSubmitting }) => (\r\n            <>\r\n              <DialogContent dividers>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <Autocomplete\r\n                      options={DietTypeDrop}\r\n                      value={DietTypeDrop.find((data: any) => data.id == values.diet_type)}\r\n                      getOptionLabel={(option: any) => option.name}\r\n                      getOptionSelected={(option) => option.id == values.diet_type}\r\n                      onChange={(event: any, newValue: any) => {\r\n                        setFieldValue('diet_type', newValue?.id || '');\r\n                      }}\r\n                      onBlur={handleBlur}\r\n                      renderInput={(params: any) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label='Diet Types'\r\n                          variant='outlined'\r\n                          error={Boolean(touched.diet_type && errors.diet_type)}\r\n                          helperText={touched.diet_type && errors.diet_type}\r\n                          inputProps={{\r\n                            ...params.inputProps,\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Autocomplete\r\n                      options={CaloriesDrop}\r\n                      value={CaloriesDrop.find((data: any) => data.id == values.calories)}\r\n                      getOptionLabel={(option: any) => option.name}\r\n                      getOptionSelected={(option) => option.id == values.calories}\r\n                      onChange={(event: any, newValue: any) => {\r\n                        setFieldValue('calories', newValue?.id || '');\r\n                      }}\r\n                      onBlur={handleBlur}\r\n                      renderInput={(params: any) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label='Calories'\r\n                          variant='outlined'\r\n                          error={Boolean(touched.calories && errors.calories)}\r\n                          helperText={touched.calories && errors.calories}\r\n                          inputProps={{\r\n                            ...params.inputProps,\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n\r\n                  {/* <Paper className={classes.paperRoot}> */}\r\n\r\n                  <TabContext value={tabValue || ''}>\r\n                    <Grid item xs={2}>\r\n                      <TabList\r\n                        classes={{\r\n                          indicator: classes.tabIndicator\r\n                        }}\r\n                        onChange={(e, value) => handleChangeTab(value)}\r\n                        orientation=\"vertical\"\r\n                        variant=\"standard\"\r\n                      >\r\n                        {values?.meal_days.map((mealDay: any, i: number) => {\r\n                          const { day } = mealDay\r\n                          return (\r\n                            <Tab\r\n                              classes={{ root: classes.tabRoot, textColorInherit: classes.tabTextColorInherit }}\r\n                              label={`Day - ${day}`}\r\n                              value={day.toString()} />\r\n                          )\r\n                        }\r\n                        )}\r\n\r\n                      </TabList>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={10}>\r\n                      {values?.meal_days.map((mealDay: any, i: number) => {\r\n                        const { day, meals } = mealDay\r\n                        return (\r\n                          <TabPanel key={i} className={classes.tabPanelRoot} value={day.toString()}>\r\n                            <MealTab key={i} index={i} meals={meals} recipeList={recipeList} />\r\n                          </TabPanel>\r\n                        )\r\n                      })}\r\n                    </Grid>\r\n\r\n                  </TabContext>\r\n                  {/* </Paper> */}\r\n\r\n                </Grid>\r\n              </DialogContent>\r\n\r\n              <DialogActions>\r\n                <Button onClick={onClose} variant='outlined' color='secondary'>\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  className={classes.themeButton}\r\n                  onClick={() => submitForm()}\r\n                  disabled={isSubmitting}\r\n                  variant='outlined'\r\n                >\r\n                  {isSubmitting ? (\r\n                    <CircularProgress size={24} style={{ color: 'white' }} />\r\n                  ) : (\r\n                    okBtnText\r\n                  )}\r\n                </Button>\r\n              </DialogActions>\r\n            </>\r\n          )}\r\n        </Formik>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ViewNutritionModel = (props: any) => {\r\n  const { isOpen, title, onClose, data } = props;\r\n  const classes = useStyles();\r\n  const [formValue, setFormValue] = useState(data);\r\n  const [value, setValue] = React.useState<any>('Fats');\r\n  const [timings, setTimings] = React.useState('Early-Morning');\r\n\r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: string) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleTimingChange = (\r\n    event: React.ChangeEvent<{}>,\r\n    newValue: string\r\n  ) => {\r\n    setTimings(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFormValue(data);\r\n  }, [props]);\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      fullWidth\r\n      maxWidth='md'\r\n      aria-labelledby='dialog-view-title'\r\n      open={isOpen}\r\n    >\r\n      <DialogTitle id='dialog-view-title' onClose={onClose}>\r\n        {title}\r\n      </DialogTitle>\r\n\r\n      <DialogContent dividers>\r\n\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={onClose} variant='outlined' color='secondary'>\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst MealTab = ({ meals, recipeList, index }: any) => {\r\n  const { values, touched, errors, setFieldValue, handleChange, handleBlur } = useFormikContext()\r\n  const classes = useStyles()\r\n  const [tabValue, setTabValue] = useState('0');\r\n  const FieldName = `meal_days[${index}]`\r\n\r\n  const getArrayError = (error: any) => {\r\n    return typeof error == 'string' ? error : ''\r\n  }\r\n\r\n  const handleChangeTab = (newValue: string) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  const addNewTab = (values: any, setFieldValue: any) => {\r\n    const { meals } = getIn(values, FieldName)\r\n    meals.push(MealTime)\r\n    setFieldValue(`${FieldName}.meals`, meals)\r\n  }\r\n\r\n  const submitMealTime = (i: number, values: any, setFieldValue: any) => {\r\n    const { meals } = getIn(values, FieldName)\r\n    const NewMeals = { ...meals[i] }\r\n    NewMeals.isEdit = false\r\n    meals[i] = NewMeals\r\n    setFieldValue(`${FieldName}.meals`, meals)\r\n    handleChangeTab(i.toString())\r\n  }\r\n\r\n  const editMealTime = (i: number, values: any, setFieldValue: any) => {\r\n    const { meals } = getIn(values, FieldName)\r\n    const NewMeals = { ...meals[i] }\r\n    NewMeals.isEdit = true\r\n    meals[i] = NewMeals\r\n    setFieldValue(`${FieldName}.meals`, meals)\r\n    handleChangeTab(i.toString())\r\n  }\r\n\r\n  const deleteMealTime = (i: number, values: any, setFieldValue: any) => {\r\n    const { meals } = getIn(values, FieldName)\r\n    const NewMeals = meals.filter((d: any, index: number) => index != i)\r\n    setFieldValue(`${FieldName}.meals`, NewMeals)\r\n  }\r\n\r\n  return (\r\n    <TabContext value={tabValue || ''}>\r\n      <Grid item container xs={12} spacing={2}>\r\n        <Grid item xs={4}>\r\n          <TabList\r\n            classes={{\r\n              indicator: classes.tabIndicator\r\n            }}\r\n            orientation=\"vertical\"\r\n            variant=\"standard\"\r\n          >\r\n            {meals.map((mealData: any, i: number) => {\r\n              let FieldNameSub: any = `${FieldName}.meals[${i}]`\r\n              let FieldTouched: any = getIn(touched, FieldNameSub)\r\n              let FieldErrors: any = getIn(errors, FieldNameSub)\r\n              let FieldValues: any = getIn(values, FieldNameSub)\r\n              const TabSelected = i == Number(tabValue)\r\n              const SelectedStyle = TabSelected ? { borderRight: '2px solid #41a58d' } : { borderRight: '2px solid white' }\r\n              return (\r\n                <div className={classes.divTab}>\r\n                  <Grid item container xs={12} spacing={1} style={{ margin: 'inherit', ...SelectedStyle }}>\r\n                    <Grid item xs={mealData.isEdit ? 10 : 8}>\r\n                      {mealData.isEdit &&\r\n                        <TextField\r\n                          fullWidth\r\n                          size='small'\r\n                          label='Name'\r\n                          name={`${FieldNameSub}.meal_time`}\r\n                          variant='outlined'\r\n                          error={Boolean(FieldTouched?.meal_time && FieldErrors?.meal_time)}\r\n                          helperText={FieldTouched?.meal_time && FieldErrors?.meal_time}\r\n                          value={mealData?.meal_time}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      }\r\n\r\n                      {!mealData.isEdit &&\r\n                        <Button\r\n                          fullWidth\r\n                          className={!Boolean(FieldTouched?.meal_time && FieldErrors?.meal_time) ? classes.themeButton : ''}\r\n                          classes={{\r\n                            fullWidth: classes.tabBtnIcon\r\n                          }}\r\n                          variant='contained'\r\n                          color='secondary'\r\n                          onClick={(e) => handleChangeTab(i.toString())}\r\n                        >\r\n                          {!Boolean(FieldTouched?.meal_time && FieldErrors?.meal_time) ? mealData?.meal_time : FieldErrors?.meal_time}\r\n                        </Button>}\r\n                    </Grid>\r\n\r\n                    {mealData.isEdit &&\r\n                      <Grid item xs={2}>\r\n                        <Button\r\n                          fullWidth\r\n                          className={classes.themeButton}\r\n                          classes={{\r\n                            fullWidth: classes.tabBtnIcon\r\n                          }}\r\n                          variant='contained'\r\n                          color='secondary'\r\n                          onClick={() => submitMealTime(i, values, setFieldValue)}\r\n                        >\r\n                          <CheckIcon />\r\n                        </Button>\r\n                      </Grid>\r\n                    }\r\n\r\n                    {!mealData.isEdit && <Grid item xs={2} >\r\n                      <Button\r\n                        fullWidth\r\n                        classes={{\r\n                          fullWidth: classes.tabBtnIcon\r\n                        }}\r\n                        variant='contained'\r\n                        color='primary'\r\n                        onClick={() => editMealTime(i, values, setFieldValue)}\r\n                      >\r\n                        <EditIcon />\r\n                      </Button>\r\n                    </Grid>\r\n                    }\r\n\r\n                    {!mealData.isEdit &&\r\n                      <Grid item xs={2}>\r\n                        <Button\r\n                          fullWidth\r\n                          classes={{\r\n                            fullWidth: classes.tabBtnIcon\r\n                          }}\r\n                          variant='contained'\r\n                          color='secondary'\r\n                          onClick={() => deleteMealTime(i, values, setFieldValue)}\r\n                        >\r\n                          <DeleteIcon />\r\n                        </Button>\r\n                      </Grid>\r\n                    }\r\n                  </Grid>\r\n                </div>\r\n              )\r\n            }\r\n            )}\r\n\r\n            <div className={classes.divTab}>\r\n              <Grid container xs={12} spacing={1} style={{ margin: 'inherit' }}>\r\n                <Grid item xs={12}>\r\n                  <FormControl fullWidth\r\n                    error={Boolean(getIn(touched, `${FieldName}.meals`) && getArrayError(getIn(errors, `${FieldName}.meals`)))}\r\n                  >\r\n                    <Button\r\n                      fullWidth\r\n                      className={classes.themeButton}\r\n                      variant='contained'\r\n                      color='secondary'\r\n                      onClick={() => addNewTab(values, setFieldValue)}\r\n                    >\r\n                      <AddIcon />\r\n                    </Button>\r\n\r\n                    <FormHelperText>\r\n                      {getIn(touched, 'nutrition') && getArrayError(getIn(errors, 'nutrition'))}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </TabList>\r\n        </Grid>\r\n\r\n        <Grid item xs={8}>\r\n          {meals.map((mealData: any, i: number) => {\r\n            let FieldNameSub: any = `${FieldName}.meals[${i}]`\r\n            let FieldTouched: any = getIn(touched, FieldNameSub)\r\n            let FieldErrors: any = getIn(errors, FieldNameSub)\r\n            return (\r\n              <TabPanel key={i} className={classes.tabPanelRoot} value={i.toString()}>\r\n\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12}>\r\n                    <Typography variant='h5' align='center'>\r\n                      <strong>{mealData?.meal_time}</strong>\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item md={12} xs={12}>\r\n                    <Autocomplete\r\n                      multiple\r\n                      options={recipeList}\r\n                      value={recipeList.filter((data: any) => mealData.recipe.map(({ id }: any) => id).includes(data._id))}\r\n                      getOptionLabel={(option: any) => option.name}\r\n                      onChange={(event: any, newValue: any) => {\r\n                        let RecIds = newValue.map(({ _id }: any) => ({ id: _id }))\r\n                        setFieldValue(`${FieldNameSub}.recipe`, RecIds || []);\r\n                      }}\r\n                      onBlur={handleBlur}\r\n                      renderInput={(params: any) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label='Recipe'\r\n                          variant='outlined'\r\n                          error={Boolean(FieldTouched?.recipe && FieldErrors?.recipe)}\r\n                          helperText={FieldTouched?.recipe && FieldErrors?.recipe}\r\n                          inputProps={{\r\n                            ...params.inputProps,\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n\r\n              </TabPanel>\r\n            )\r\n          }\r\n          )}\r\n\r\n        </Grid>\r\n\r\n      </Grid>\r\n    </TabContext >\r\n  )\r\n}\r\n\r\nexport default MealPlan;\r\n"]},"metadata":{},"sourceType":"module"}