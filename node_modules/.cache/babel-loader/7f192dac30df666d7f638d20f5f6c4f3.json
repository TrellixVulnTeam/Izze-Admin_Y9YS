{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pyramidion\\\\WebApp\\\\Izze-Admin\\\\src\\\\pages\\\\MealPlan\\\\MealPlan.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport { Button, Card, CardActions, CardContent, CardMedia, CircularProgress, Dialog, DialogActions, DialogContent, Divider, FormControl, FormHelperText, Grid, IconButton, makeStyles, Paper, Tab, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, Tooltip, Typography } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\nimport CheckIcon from '@material-ui/icons/Check';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { Pagination, TabContext, TabList, TabPanel } from '@material-ui/lab';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { Formik, getIn, useFormikContext, FieldArray } from 'formik';\nimport React, { useEffect, useRef, useState } from 'react';\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\nimport Page from '../../components/Page/Page';\nimport useConfModel from '../../hook/useConfModel';\nimport useService from '../../hook/useService';\nimport useSnackbar from '../../hook/useSnackbar';\nimport { initialFormValues, MealTime, validation } from './FormikValues';\nimport clsx from 'clsx';\nimport useCalories from '../../hook/useCalories';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport getDropValues, { DietTypeDrop } from '../../utils/PlanDropdowns';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: theme.breakpoints.values.lg,\n    maxWidth: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(3)\n  },\n  content: {\n    padding: 0\n  },\n  tabCard: {\n    marginTop: theme.spacing(3)\n  },\n  themeButton: {\n    color: theme.palette.white,\n    backgroundColor: theme.palette.green.main,\n    '&:hover': {\n      backgroundColor: theme.palette.green.dark\n    }\n  },\n  sEvenly: {\n    display: 'flex',\n    justifyContent: 'space-evenly'\n  },\n  sBetween: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  iconPadd: {\n    padding: 5\n  },\n  jCenter: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  actions: {\n    padding: theme.spacing(1),\n    justifyContent: 'center'\n  },\n  tabRoot: {\n    minWidth: 0,\n    textTransform: 'none' // margin: '10px 0px',\n\n  },\n  tabIndicator: {\n    backgroundColor: theme.palette.green.main\n  },\n  tabTextColorInherit: {\n    backgroundColor: theme.palette.green.main,\n    color: 'white',\n    border: '1px solid white'\n  },\n  tabPanelRoot: {\n    padding: 0,\n    // paddingBottom: 0,\n    width: '100%'\n  },\n  listItemRoot: {\n    backgroundColor: '#7ac0af2b',\n    margin: '10px 0px'\n  },\n  flexDisplay: {\n    display: 'flex'\n  },\n  paperRoot: {\n    display: 'flex',\n    marginTop: '20px'\n  },\n  paperRoot1: {\n    display: 'flex',\n    marginTop: '20px'\n  },\n  tablePanelRoot: {\n    padding: '0px'\n  },\n  largeAvatar: {\n    width: theme.spacing(10),\n    height: theme.spacing(10)\n  },\n  justPadding: {\n    padding: 10,\n    borderRadius: 10\n  },\n  tabBtnIcon: {\n    height: '100%',\n    minWidth: 0,\n    textTransform: 'none'\n  },\n  divTab: {\n    flexDirection: 'column',\n    display: 'flex'\n  },\n  cardRoot: {\n    borderRadius: theme.spacing(3),\n    position: 'relative'\n  },\n  cardMediaRoot: {\n    height: theme.spacing(25)\n  },\n  cardContentRoot: {\n    backgroundColor: '#EFF1F3',\n    padding: theme.spacing(2),\n    paddingBottom: `${theme.spacing(2)}px !important`\n  },\n  cardActionsRoot: {\n    padding: 0,\n    paddingTop: theme.spacing(1)\n  },\n  ulRoot: {\n    listStyle: 'none',\n    padding: 0,\n    margin: 0\n  },\n  liRoot: {\n    paddingLeft: '1em',\n    textIndent: '-.7em'\n  },\n  colorProtein: {\n    '&::before': {\n      content: \"'•  '\",\n      color: '#9A88FF'\n    }\n  },\n  colorFat: {\n    '&::before': {\n      content: \"'•  '\",\n      color: '#E57B91'\n    }\n  },\n  colorCarbs: {\n    '&::before': {\n      content: \"'•  '\",\n      color: ''\n    }\n  },\n  dividerRoot: {\n    background: ' #474749 0% 0% no-repeat padding-box',\n    opacity: '0.25',\n    height: theme.spacing(3)\n  },\n  mealTimeText: {\n    margin: theme.spacing(2, 0)\n  },\n  nutritionTextDiv: {\n    border: '1px solid #EFF1F3',\n    color: '#EFF1F3',\n    borderRadius: 20,\n    padding: theme.spacing(0.5, 1),\n    width: 'fit-content',\n    position: 'absolute',\n    top: theme.spacing(2),\n    left: theme.spacing(2)\n  },\n  nutritionText: {\n    fontSize: '0.5rem'\n  }\n}));\n\nconst MealPlan = () => {\n  _s();\n\n  const classes = useStyles();\n  const Snackbar = useSnackbar();\n  const {\n    Post\n  } = useService();\n  const ConfModel = useConfModel();\n  const [loading, setLoading] = useState(true);\n  const [stateData, setStateData] = useState({\n    page_no: 1,\n    page_limit: 10\n  });\n  const [pageCount, setPageCount] = useState(0);\n  const [mealPlanList, setMealPlanList] = useState([]);\n  const [addEditDialog, setAddEditDialog] = useState({\n    isOpen: false,\n    isDuplicate: false,\n    title: '',\n    okBtnText: '',\n    isEdit: false,\n    data: {}\n  });\n  const [viewDialog, setViewDialog] = useState({\n    isOpen: false,\n    title: '',\n    data: {}\n  });\n\n  const openAddDialog = () => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      title: 'Add Meal Plan',\n      isEdit: false,\n      okBtnText: 'Save'\n    }));\n  };\n\n  const openEditDialog = data => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      isEdit: true,\n      data,\n      title: 'Edit Meal Plan',\n      okBtnText: 'Edit'\n    }));\n  };\n\n  const openDuplicateDialog = data => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isDuplicate: true,\n      isOpen: true,\n      isEdit: false,\n      data,\n      title: 'Duplicate Nutrition Plan',\n      okBtnText: 'Duplicate'\n    }));\n  };\n\n  const onDelete = data => {\n    const {\n      openModel,\n      setLoading,\n      closeModel\n    } = ConfModel;\n\n    const submitFunction = () => {\n      setLoading(true);\n      Post('app/deleteMealPlan', {\n        id: data._id\n      }).then(async res => {\n        setLoading(false);\n        closeModel();\n        onSuccessAction();\n        Snackbar.show(res.message, 'success');\n      }).catch(err => {\n        setLoading(false);\n        Snackbar.show('Internal Server Error', 'error');\n      });\n    };\n\n    openModel(submitFunction);\n  };\n\n  const openViewDialog = data => {\n    setViewDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      data,\n      title: 'View Meal Plan'\n    }));\n  };\n\n  const listMealPlan = async () => {\n    setLoading(true);\n    Post('app/listMealPlan', stateData).then(res => {\n      setLoading(false);\n\n      if (!res.error) {\n        setMealPlanList(res.data);\n        setPageCount(res.page_count);\n      } else {\n        Snackbar.show(res.message, 'error');\n      }\n    }).catch(err => {\n      console.log('err', err);\n      setLoading(false);\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  const onPageChange = (event, value) => {\n    setStateData(prevState => ({ ...prevState,\n      page_no: value\n    }));\n  };\n\n  const closeAddEditDialog = () => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: false,\n      isDuplicate: false\n    }));\n  };\n\n  const closeViewDialog = () => {\n    setViewDialog(prevState => ({ ...prevState,\n      isOpen: false\n    }));\n  };\n\n  const onSuccessAction = () => {\n    listMealPlan();\n    closeAddEditDialog();\n  };\n\n  useEffect(() => {\n    listMealPlan();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Page, {\n      title: \"Meal Plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      alignItems: \"flex-end\",\n      container: true,\n      justify: \"space-between\",\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h3\",\n          children: \"Meal Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => openAddDialog(),\n          className: classes.themeButton,\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 24\n          }, this),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.tabCard,\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        className: classes.content,\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"#\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Diet Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Calories\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: [!loading && mealPlanList.map((data, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: stateData.page_limit * (stateData.page_no - 1) + index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: getDropValues(DietTypeDrop, data === null || data === void 0 ? void 0 : data.diet_type)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: data === null || data === void 0 ? void 0 : data.calories\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: classes.sEvenly,\n                    children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                      title: \"View\",\n                      arrow: true,\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        className: classes.iconPadd,\n                        onClick: () => openViewDialog(data),\n                        children: /*#__PURE__*/_jsxDEV(CenterFocusStrongIcon, {\n                          color: \"primary\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 376,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 372,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 371,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                      title: \"Edit\",\n                      arrow: true,\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        className: classes.iconPadd,\n                        onClick: () => openEditDialog(data),\n                        children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                          color: \"action\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 384,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 380,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 379,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                      title: \"Duplicate\",\n                      arrow: true,\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        className: classes.iconPadd,\n                        onClick: () => openDuplicateDialog(data),\n                        children: /*#__PURE__*/_jsxDEV(FileCopyIcon, {\n                          color: \"action\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 392,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 388,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 387,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                      title: \"Delete\",\n                      arrow: true,\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        className: classes.iconPadd,\n                        onClick: () => onDelete(data),\n                        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                          color: \"secondary\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 400,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 396,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 395,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 370,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 21\n              }, this)), loading && /*#__PURE__*/_jsxDEV(TableLoader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 29\n              }, this), !loading && mealPlanList.length == 0 && /*#__PURE__*/_jsxDEV(TableNoData, {\n                children: \"No Data Found\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Pagination, {\n          count: pageCount,\n          page: stateData.page_no,\n          onChange: onPageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this), addEditDialog.isOpen && /*#__PURE__*/_jsxDEV(AddEditModel, { ...addEditDialog,\n      onClose: closeAddEditDialog,\n      onSuccess: onSuccessAction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 32\n    }, this), viewDialog.isOpen && /*#__PURE__*/_jsxDEV(ViewModel, { ...viewDialog,\n      onClose: closeViewDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 310,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MealPlan, \"9yEgte+Ykql7hQV4awVUSQCVAVU=\", false, function () {\n  return [useStyles, useSnackbar, useService, useConfModel];\n});\n\n_c = MealPlan;\nexport const AddEditModel = props => {\n  _s2();\n\n  const {\n    isEdit,\n    isOpen,\n    isDuplicate,\n    okBtnText = 'OK',\n    onClose,\n    data,\n    title,\n    onSuccess\n  } = props;\n  const formikRef = useRef(null);\n  const getCaloriesData = useCalories();\n  const classes = useStyles();\n  const Snackbar = useSnackbar();\n  const {\n    Post\n  } = useService();\n  const [tabValue, setTabValue] = useState('0');\n  const [recipeList, setRecipeList] = useState([]);\n  const [initialValue, setInitialValue] = useState({ ...initialFormValues\n  });\n\n  const onSubmit = (value, helper) => {\n    helper.setSubmitting(true);\n    const postData = { ...value\n    };\n    !isEdit && addData(postData, helper);\n    isDuplicate && addData(postData, helper);\n    isEdit && editData(postData, helper);\n  };\n\n  const addData = (data, {\n    setSubmitting,\n    resetForm\n  }) => {\n    setSubmitting(true);\n    Post('app/addMealPlan', data).then(res => {\n      Snackbar.show(res.message, 'success');\n      setSubmitting(false);\n      resetForm();\n      onSuccess();\n    }).catch(err => {\n      setSubmitting(false);\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  const editData = (data, {\n    setSubmitting,\n    resetForm\n  }) => {\n    setSubmitting(true);\n    Post('app/editMealPlan', data).then(res => {\n      Snackbar.show(res.message, 'success');\n      setSubmitting(false);\n      resetForm();\n      onSuccess();\n    }).catch(err => {\n      setSubmitting(false);\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  const handleChangeTab = newValue => {\n    setTabValue(newValue);\n  };\n\n  const listAllMealRecipe = () => {\n    Post('app/listAllMealRecipe', {}).then(response => {\n      if (!response.error) {\n        setRecipeList(response.data);\n      } else {\n        Snackbar.show(response.message, 'error');\n      }\n    }).catch(error => {\n      Snackbar.show(error.message, 'error');\n    });\n  };\n\n  useEffect(() => {\n    if (isEdit || isDuplicate) {\n      const {\n        _id,\n        ...rest\n      } = data;\n      const editData = { ...rest,\n        id: _id\n      };\n      let mealDays = editData.meal_days.map(MealDays => {\n        const {\n          meals,\n          ...rest\n        } = MealDays;\n        let NewMeals = meals.map(MealData => {\n          const {\n            recipe,\n            ...rest\n          } = MealData;\n          const RecipeIds = recipeList.map(({\n            _id\n          }) => _id);\n          const NewRecipe = recipe.filter(({\n            _id\n          }) => RecipeIds.includes(_id)).map(({\n            _id\n          }) => ({\n            id: _id\n          }));\n          return { ...rest,\n            isEdit: false,\n            recipe: NewRecipe\n          };\n        });\n        return { ...rest,\n          meals: NewMeals\n        };\n      });\n      editData.meal_days = mealDays;\n      console.log('editData', editData);\n      setInitialValue(editData);\n    } else {\n      setInitialValue(initialFormValues);\n    }\n  }, [props, recipeList]);\n  useEffect(() => {\n    listAllMealRecipe();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isOpen,\n      disableBackdropClick: true,\n      disableEscapeKeyDown: true,\n      fullWidth: true,\n      fullScreen: true,\n      maxWidth: \"lg\",\n      \"aria-labelledby\": \"dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"dialog-title\",\n        onClose: onClose,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        innerRef: formikRef,\n        enableReinitialize: true,\n        initialValues: initialValue,\n        validationSchema: validation,\n        onSubmit: onSubmit,\n        children: ({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          setFieldValue,\n          submitForm,\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n            dividers: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  options: DietTypeDrop,\n                  value: DietTypeDrop.find(data => data.id == values.diet_type),\n                  getOptionLabel: option => option.name,\n                  getOptionSelected: option => option.id == values.diet_type,\n                  onChange: (event, newValue) => {\n                    setFieldValue('diet_type', (newValue === null || newValue === void 0 ? void 0 : newValue.id) || '');\n                  },\n                  onBlur: handleBlur,\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    label: \"Diet Types\",\n                    variant: \"outlined\",\n                    error: Boolean(touched.diet_type && errors.diet_type),\n                    helperText: touched.diet_type && errors.diet_type,\n                    inputProps: { ...params.inputProps\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 576,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 566,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  options: getCaloriesData,\n                  value: getCaloriesData.find(data => data.id == values.calories),\n                  getOptionLabel: option => option.name,\n                  getOptionSelected: option => option.id == values.calories,\n                  onChange: (event, newValue) => {\n                    setFieldValue('calories', (newValue === null || newValue === void 0 ? void 0 : newValue.id) || '');\n                  },\n                  onBlur: handleBlur,\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    label: \"Calories\",\n                    variant: \"outlined\",\n                    error: Boolean(touched.calories && errors.calories),\n                    helperText: touched.calories && errors.calories,\n                    inputProps: { ...params.inputProps\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 600,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 590,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 589,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h4\",\n                  align: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Add Meal Plan\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 614,\n                    columnNumber: 61\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 614,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 613,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TabContext, {\n                value: tabValue || '',\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 2,\n                  children: /*#__PURE__*/_jsxDEV(TabList, {\n                    classes: {\n                      indicator: classes.tabIndicator\n                    },\n                    onChange: (e, value) => handleChangeTab(value),\n                    orientation: \"vertical\",\n                    variant: \"standard\",\n                    children: values === null || values === void 0 ? void 0 : values.meal_days.map((mealDay, i) => {\n                      const {\n                        day\n                      } = mealDay;\n                      return /*#__PURE__*/_jsxDEV(Tab, {\n                        classes: {\n                          root: classes.tabRoot,\n                          textColorInherit: classes.tabTextColorInherit\n                        },\n                        label: `Day - ${day}`,\n                        value: day.toString()\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 632,\n                        columnNumber: 29\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 621,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 620,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 10,\n                  children: values === null || values === void 0 ? void 0 : values.meal_days.map((mealDay, i) => {\n                    const {\n                      day,\n                      meals\n                    } = mealDay;\n                    return /*#__PURE__*/_jsxDEV(TabPanel, {\n                      className: classes.tabPanelRoot,\n                      value: day.toString(),\n                      children: /*#__PURE__*/_jsxDEV(MealTab, {\n                        index: i,\n                        meals: meals,\n                        recipeList: recipeList\n                      }, i, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 648,\n                        columnNumber: 29\n                      }, this)\n                    }, i, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 647,\n                      columnNumber: 27\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 643,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 619,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: onClose,\n              variant: \"outlined\",\n              color: \"secondary\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 661,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: classes.themeButton,\n              onClick: () => submitForm(),\n              disabled: isSubmitting,\n              variant: \"outlined\",\n              children: isSubmitting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 24,\n                style: {\n                  color: 'white'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 671,\n                columnNumber: 21\n              }, this) : okBtnText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 664,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s2(AddEditModel, \"Uz+JQ4EmkiF46zdzOiE+8hQ50tY=\", false, function () {\n  return [useCalories, useStyles, useSnackbar, useService];\n});\n\n_c2 = AddEditModel;\n\nconst ViewModel = props => {\n  _s3();\n\n  const {\n    isOpen,\n    title,\n    onClose,\n    data\n  } = props;\n  const classes = useStyles();\n  const [formValue, setFormValue] = useState(data);\n  const [tabValue, setTabValue] = useState('1');\n\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  useEffect(() => {\n    setFormValue(data);\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    disableBackdropClick: true,\n    disableEscapeKeyDown: true,\n    fullWidth: true,\n    maxWidth: \"md\",\n    \"aria-labelledby\": \"dialog-view-title\",\n    open: isOpen,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"dialog-view-title\",\n      onClose: onClose,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 708,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: /*#__PURE__*/_jsxDEV(TableBody, {\n            children: [/*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Diet Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 718,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: getDropValues(DietTypeDrop, formValue === null || formValue === void 0 ? void 0 : formValue.diet_type)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 719,\n                  columnNumber: 28\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 719,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 717,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Calories\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 722,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: formValue === null || formValue === void 0 ? void 0 : formValue.calories\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 723,\n                  columnNumber: 28\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 723,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 721,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 716,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        children: /*#__PURE__*/_jsxDEV(TabContext, {\n          value: tabValue || '',\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            container: true,\n            xs: 12,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              children: /*#__PURE__*/_jsxDEV(TabList, {\n                classes: {\n                  indicator: classes.tabIndicator\n                },\n                onChange: handleTabChange,\n                orientation: \"vertical\",\n                variant: \"standard\",\n                children: formValue === null || formValue === void 0 ? void 0 : formValue.meal_days.map((mealDay, i) => {\n                  const {\n                    day\n                  } = mealDay;\n                  return /*#__PURE__*/_jsxDEV(Tab, {\n                    classes: {\n                      root: classes.tabRoot,\n                      textColorInherit: classes.tabTextColorInherit\n                    },\n                    label: `Day - ${day}`,\n                    value: day.toString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 745,\n                    columnNumber: 23\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 734,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 733,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 10,\n              children: formValue === null || formValue === void 0 ? void 0 : formValue.meal_days.map((mealDay, i) => {\n                const {\n                  day,\n                  meals = []\n                } = mealDay;\n                return /*#__PURE__*/_jsxDEV(TabPanel, {\n                  className: classes.tabPanelRoot,\n                  value: day.toString(),\n                  children: meals.map((mealData, i) => {\n                    const {\n                      meal_time,\n                      recipe = []\n                    } = mealData;\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 12,\n                        className: classes.mealTimeText,\n                        children: /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"h5\",\n                          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                            children: meal_time\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 767,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 766,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 765,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        container: true,\n                        xs: 12,\n                        spacing: 2,\n                        children: recipe.map((recData, i) => {\n                          var _recData$image;\n\n                          return /*#__PURE__*/_jsxDEV(Grid, {\n                            item: true,\n                            xs: 12,\n                            sm: 12,\n                            md: 6,\n                            children: /*#__PURE__*/_jsxDEV(Card, {\n                              elevation: 0,\n                              className: classes.cardRoot,\n                              children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n                                className: classes.cardMediaRoot,\n                                image: (_recData$image = recData.image) === null || _recData$image === void 0 ? void 0 : _recData$image.url,\n                                title: recData.name\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 777,\n                                columnNumber: 39\n                              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                className: classes.nutritionTextDiv,\n                                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                  className: classes.nutritionText,\n                                  children: [\" \", recData.nutrition]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 784,\n                                  columnNumber: 41\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 783,\n                                columnNumber: 39\n                              }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                                className: classes.cardContentRoot,\n                                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                                  gutterBottom: true,\n                                  variant: \"h5\",\n                                  component: \"h2\",\n                                  children: recData.name\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 788,\n                                  columnNumber: 41\n                                }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                                  disableSpacing: true,\n                                  className: classes.cardActionsRoot,\n                                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                                      variant: \"body2\",\n                                      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                                        className: classes.ulRoot,\n                                        children: /*#__PURE__*/_jsxDEV(\"li\", {\n                                          className: clsx(classes.liRoot, classes.colorProtein),\n                                          children: \"Protein\"\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 795,\n                                          columnNumber: 49\n                                        }, this)\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 794,\n                                        columnNumber: 47\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 793,\n                                      columnNumber: 45\n                                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                                      variant: \"body1\",\n                                      children: recData.protein\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 798,\n                                      columnNumber: 45\n                                    }, this)]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 792,\n                                    columnNumber: 43\n                                  }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                                    className: classes.dividerRoot,\n                                    orientation: \"vertical\",\n                                    variant: \"middle\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 802,\n                                    columnNumber: 43\n                                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                                      variant: \"body2\",\n                                      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                                        className: classes.ulRoot,\n                                        children: /*#__PURE__*/_jsxDEV(\"li\", {\n                                          className: clsx(classes.liRoot, classes.colorFat),\n                                          children: \"Fat\"\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 806,\n                                          columnNumber: 49\n                                        }, this)\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 805,\n                                        columnNumber: 47\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 804,\n                                      columnNumber: 45\n                                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                                      variant: \"body1\",\n                                      children: recData.fat\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 809,\n                                      columnNumber: 45\n                                    }, this)]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 803,\n                                    columnNumber: 43\n                                  }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                                    className: classes.dividerRoot,\n                                    orientation: \"vertical\",\n                                    variant: \"middle\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 813,\n                                    columnNumber: 43\n                                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                                      variant: \"body2\",\n                                      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                                        className: classes.ulRoot,\n                                        children: /*#__PURE__*/_jsxDEV(\"li\", {\n                                          className: clsx(classes.liRoot, classes.colorCarbs),\n                                          children: \"Carbs\"\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 817,\n                                          columnNumber: 49\n                                        }, this)\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 816,\n                                        columnNumber: 47\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 815,\n                                      columnNumber: 45\n                                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                                      variant: \"body1\",\n                                      children: recData.carbs\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 820,\n                                      columnNumber: 45\n                                    }, this)]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 814,\n                                    columnNumber: 43\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 791,\n                                  columnNumber: 41\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 787,\n                                columnNumber: 39\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 775,\n                              columnNumber: 37\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 774,\n                            columnNumber: 35\n                          }, this);\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 771,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true);\n                  })\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 760,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 756,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 712,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        variant: \"outlined\",\n        color: \"secondary\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 849,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 848,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 700,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(ViewModel, \"gMuzV5Nm6k1IUrVIrjZMjdfcFX0=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = ViewModel;\n\nconst MealTab = ({\n  meals,\n  recipeList,\n  index\n}) => {\n  _s4();\n\n  const {\n    values,\n    touched,\n    errors,\n    setFieldValue,\n    handleChange,\n    handleBlur\n  } = useFormikContext();\n  const classes = useStyles();\n  const [tabValue, setTabValue] = useState('0');\n  const FieldName = `meal_days[${index}]`;\n\n  const getArrayError = error => {\n    return typeof error == 'string' ? error : '';\n  };\n\n  const handleChangeTab = newValue => {\n    setTabValue(newValue);\n  };\n\n  const addNewTab = (values, setFieldValue, push) => {\n    // const { meals } = getIn(values, FieldName)\n    push(MealTime); // setFieldValue(`${FieldName}.meals`, meals)\n  };\n\n  const submitMealTime = (i, values, setFieldValue) => {\n    const {\n      meals\n    } = getIn(values, FieldName);\n    const NewMeals = { ...meals[i]\n    };\n    NewMeals.isEdit = false;\n    meals[i] = NewMeals;\n    setFieldValue(`${FieldName}.meals`, meals);\n    handleChangeTab(i.toString());\n  };\n\n  const editMealTime = (i, values, setFieldValue) => {\n    const {\n      meals\n    } = getIn(values, FieldName);\n    const NewMeals = { ...meals[i]\n    };\n    NewMeals.isEdit = true;\n    meals[i] = NewMeals;\n    setFieldValue(`${FieldName}.meals`, meals);\n    handleChangeTab(i.toString());\n  };\n\n  const deleteMealTime = (i, values, setFieldValue) => {\n    const {\n      meals\n    } = getIn(values, FieldName);\n    const NewMeals = meals.filter((d, index) => index != i);\n    setFieldValue(`${FieldName}.meals`, NewMeals);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TabContext, {\n    value: tabValue || '',\n    children: /*#__PURE__*/_jsxDEV(FieldArray, {\n      name: `${FieldName}.meals`,\n      validateOnChange: true,\n      children: ({\n        push,\n        remove\n      }) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        xs: 12,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(TabList, {\n            classes: {\n              indicator: classes.tabIndicator\n            },\n            orientation: \"vertical\",\n            variant: \"standard\",\n            children: [meals.map((mealData, i) => {\n              let FieldNameSub = `${FieldName}.meals[${i}]`;\n              let FieldTouched = getIn(touched, FieldNameSub);\n              let FieldErrors = getIn(errors, FieldNameSub);\n              let FieldValues = getIn(values, FieldNameSub);\n              const TabSelected = i == Number(tabValue);\n              const SelectedStyle = TabSelected ? {\n                borderRight: '2px solid #41a58d'\n              } : {\n                borderRight: '2px solid white'\n              };\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.divTab,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  container: true,\n                  xs: 12,\n                  spacing: 1,\n                  style: {\n                    margin: 'inherit',\n                    ...SelectedStyle\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: mealData.isEdit ? 10 : 6,\n                    children: [mealData.isEdit && /*#__PURE__*/_jsxDEV(TextField, {\n                      fullWidth: true,\n                      size: \"small\",\n                      label: \"Name\",\n                      name: `${FieldNameSub}.meal_time`,\n                      variant: \"outlined\",\n                      error: Boolean((FieldTouched === null || FieldTouched === void 0 ? void 0 : FieldTouched.meal_time) && (FieldErrors === null || FieldErrors === void 0 ? void 0 : FieldErrors.meal_time)),\n                      helperText: (FieldTouched === null || FieldTouched === void 0 ? void 0 : FieldTouched.meal_time) && (FieldErrors === null || FieldErrors === void 0 ? void 0 : FieldErrors.meal_time),\n                      value: mealData === null || mealData === void 0 ? void 0 : mealData.meal_time,\n                      onChange: handleChange,\n                      onBlur: handleBlur\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 926,\n                      columnNumber: 29\n                    }, this), !mealData.isEdit && /*#__PURE__*/_jsxDEV(Button, {\n                      fullWidth: true,\n                      className: !Boolean((FieldTouched === null || FieldTouched === void 0 ? void 0 : FieldTouched.meal_time) && (FieldErrors === null || FieldErrors === void 0 ? void 0 : FieldErrors.meal_time)) ? classes.themeButton : '',\n                      classes: {\n                        fullWidth: classes.tabBtnIcon\n                      },\n                      variant: \"contained\",\n                      color: \"secondary\",\n                      children: !Boolean((FieldTouched === null || FieldTouched === void 0 ? void 0 : FieldTouched.meal_time) && (FieldErrors === null || FieldErrors === void 0 ? void 0 : FieldErrors.meal_time)) ? mealData === null || mealData === void 0 ? void 0 : mealData.meal_time : FieldErrors === null || FieldErrors === void 0 ? void 0 : FieldErrors.meal_time\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 940,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 924,\n                    columnNumber: 25\n                  }, this), mealData.isEdit && /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 2,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      fullWidth: true,\n                      className: classes.themeButton,\n                      classes: {\n                        fullWidth: classes.tabBtnIcon\n                      },\n                      variant: \"contained\",\n                      color: \"secondary\",\n                      onClick: () => submitMealTime(i, values, setFieldValue),\n                      children: /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 964,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 954,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 953,\n                    columnNumber: 27\n                  }, this), !mealData.isEdit && /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 2,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      fullWidth: true,\n                      classes: {\n                        fullWidth: classes.tabBtnIcon\n                      },\n                      variant: \"contained\",\n                      color: \"primary\",\n                      onClick: e => handleChangeTab(i.toString()),\n                      children: tabValue === i.toString() ? /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 978,\n                        columnNumber: 58\n                      }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowUpIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 978,\n                        columnNumber: 81\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 969,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 968,\n                    columnNumber: 46\n                  }, this), !mealData.isEdit && /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 2,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      fullWidth: true,\n                      classes: {\n                        fullWidth: classes.tabBtnIcon\n                      },\n                      variant: \"contained\",\n                      color: \"primary\",\n                      onClick: () => editMealTime(i, values, setFieldValue),\n                      children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 992,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 983,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 982,\n                    columnNumber: 46\n                  }, this), !mealData.isEdit && /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 2,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      fullWidth: true,\n                      classes: {\n                        fullWidth: classes.tabBtnIcon\n                      },\n                      variant: \"contained\",\n                      color: \"secondary\",\n                      onClick: () => remove(i),\n                      children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1007,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 998,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 997,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"caption\",\n                      color: \"error\",\n                      children: getIn(touched, `${FieldName}.meals[${i}].recipe`) && getArrayError(getIn(errors, `${FieldName}.meals[${i}].recipe`))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1012,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1011,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 923,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 922,\n                columnNumber: 21\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.divTab,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                xs: 12,\n                spacing: 1,\n                style: {\n                  margin: 'inherit'\n                },\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    fullWidth: true,\n                    error: Boolean(getIn(touched, `${FieldName}.meals`) && getArrayError(getIn(errors, `${FieldName}.meals`))),\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      fullWidth: true,\n                      className: classes.themeButton,\n                      variant: \"contained\",\n                      color: \"secondary\",\n                      onClick: () => addNewTab(values, setFieldValue, push),\n                      endIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1031,\n                        columnNumber: 36\n                      }, this),\n                      children: \"Add Meal Time\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1025,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                      children: getIn(touched, 'nutrition') && getArrayError(getIn(errors, 'nutrition'))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1036,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1022,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1021,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1020,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1019,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 907,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 906,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 8,\n          children: meals.map((mealData, i) => {\n            let FieldNameSub = `${FieldName}.meals[${i}]`;\n            let FieldTouched = getIn(touched, FieldNameSub);\n            let FieldErrors = getIn(errors, FieldNameSub);\n            return /*#__PURE__*/_jsxDEV(TabPanel, {\n              className: classes.tabPanelRoot,\n              value: i.toString(),\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h5\",\n                    align: \"center\",\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: mealData === null || mealData === void 0 ? void 0 : mealData.meal_time\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1055,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1054,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1053,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 12,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                    multiple: true,\n                    options: recipeList,\n                    value: recipeList.filter(data => mealData.recipe.map(({\n                      id\n                    }) => id).includes(data._id)),\n                    getOptionLabel: option => option.name,\n                    onChange: (event, newValue) => {\n                      let RecIds = newValue.map(({\n                        _id\n                      }) => ({\n                        id: _id\n                      }));\n                      setFieldValue(`${FieldNameSub}.recipe`, RecIds || []);\n                    },\n                    onBlur: handleBlur,\n                    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                      label: \"Recipe\",\n                      variant: \"outlined\",\n                      error: Boolean((FieldTouched === null || FieldTouched === void 0 ? void 0 : FieldTouched.recipe) && (FieldErrors === null || FieldErrors === void 0 ? void 0 : FieldErrors.recipe)),\n                      helperText: (FieldTouched === null || FieldTouched === void 0 ? void 0 : FieldTouched.recipe) && (FieldErrors === null || FieldErrors === void 0 ? void 0 : FieldErrors.recipe),\n                      inputProps: { ...params.inputProps\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1070,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1059,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1058,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1052,\n                columnNumber: 21\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1051,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1045,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 905,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 903,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 902,\n    columnNumber: 5\n  }, this);\n};\n\n_s4(MealTab, \"tmRjcb4WxcxtB7FEmms70ExVT50=\", false, function () {\n  return [useFormikContext, useStyles];\n});\n\n_c4 = MealTab;\nexport default MealPlan;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"MealPlan\");\n$RefreshReg$(_c2, \"AddEditModel\");\n$RefreshReg$(_c3, \"ViewModel\");\n$RefreshReg$(_c4, \"MealTab\");","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/pages/MealPlan/MealPlan.tsx"],"names":["Button","Card","CardActions","CardContent","CardMedia","CircularProgress","Dialog","DialogActions","DialogContent","Divider","FormControl","FormHelperText","Grid","IconButton","makeStyles","Paper","Tab","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TextField","Tooltip","Typography","AddIcon","CenterFocusStrongIcon","CheckIcon","DeleteIcon","EditIcon","Pagination","TabContext","TabList","TabPanel","Autocomplete","Formik","getIn","useFormikContext","FieldArray","React","useEffect","useRef","useState","DialogTitle","TableLoader","TableNoData","Page","useConfModel","useService","useSnackbar","initialFormValues","MealTime","validation","clsx","useCalories","ChevronRightIcon","KeyboardArrowUpIcon","getDropValues","DietTypeDrop","FileCopyIcon","useStyles","theme","root","width","breakpoints","values","lg","maxWidth","margin","padding","spacing","content","tabCard","marginTop","themeButton","color","palette","white","backgroundColor","green","main","dark","sEvenly","display","justifyContent","sBetween","iconPadd","jCenter","actions","tabRoot","minWidth","textTransform","tabIndicator","tabTextColorInherit","border","tabPanelRoot","listItemRoot","flexDisplay","paperRoot","paperRoot1","tablePanelRoot","largeAvatar","height","justPadding","borderRadius","tabBtnIcon","divTab","flexDirection","cardRoot","position","cardMediaRoot","cardContentRoot","paddingBottom","cardActionsRoot","paddingTop","ulRoot","listStyle","liRoot","paddingLeft","textIndent","colorProtein","colorFat","colorCarbs","dividerRoot","background","opacity","mealTimeText","nutritionTextDiv","top","left","nutritionText","fontSize","MealPlan","classes","Snackbar","Post","ConfModel","loading","setLoading","stateData","setStateData","page_no","page_limit","pageCount","setPageCount","mealPlanList","setMealPlanList","addEditDialog","setAddEditDialog","isOpen","isDuplicate","title","okBtnText","isEdit","data","viewDialog","setViewDialog","openAddDialog","prevState","openEditDialog","openDuplicateDialog","onDelete","openModel","closeModel","submitFunction","id","_id","then","res","onSuccessAction","show","message","catch","err","openViewDialog","listMealPlan","error","page_count","console","log","onPageChange","event","value","closeAddEditDialog","closeViewDialog","map","index","diet_type","calories","length","AddEditModel","props","onClose","onSuccess","formikRef","getCaloriesData","tabValue","setTabValue","recipeList","setRecipeList","initialValue","setInitialValue","onSubmit","helper","setSubmitting","postData","addData","editData","resetForm","handleChangeTab","newValue","listAllMealRecipe","response","rest","mealDays","meal_days","MealDays","meals","NewMeals","MealData","recipe","RecipeIds","NewRecipe","filter","includes","errors","touched","handleChange","handleBlur","setFieldValue","submitForm","isSubmitting","find","option","name","params","Boolean","inputProps","indicator","e","mealDay","i","day","textColorInherit","toString","ViewModel","formValue","setFormValue","handleTabChange","mealData","meal_time","recData","image","url","nutrition","protein","fat","carbs","MealTab","FieldName","getArrayError","addNewTab","push","submitMealTime","editMealTime","deleteMealTime","d","remove","FieldNameSub","FieldTouched","FieldErrors","FieldValues","TabSelected","Number","SelectedStyle","borderRight","fullWidth","RecIds"],"mappings":"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","sourcesContent":["import { Button, Card, CardActionArea, CardActions, CardContent, CardMedia, CircularProgress, Dialog, DialogActions, DialogContent, Divider, FormControl, FormHelperText, Grid, IconButton, makeStyles, Paper, Tab, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, Tooltip, Typography } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Pagination, TabContext, TabList, TabPanel } from '@material-ui/lab';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Formik, getIn, useFormikContext, FieldArray } from 'formik';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\r\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\r\nimport Page from '../../components/Page/Page';\r\nimport useConfModel from '../../hook/useConfModel';\r\nimport useService from '../../hook/useService';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport { initialFormValues, MealTime, validation } from './FormikValues';\r\nimport clsx from 'clsx';\r\nimport useCalories from '../../hook/useCalories';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport getDropValues, { DietTypeDrop } from '../../utils/PlanDropdowns';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  root: {\r\n    width: theme.breakpoints.values.lg,\r\n    maxWidth: '100%',\r\n    margin: '0 auto',\r\n    padding: theme.spacing(3),\r\n  },\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  tabCard: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  themeButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n  },\r\n  sEvenly: {\r\n    display: 'flex',\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  sBetween: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  iconPadd: {\r\n    padding: 5,\r\n  },\r\n  jCenter: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(1),\r\n    justifyContent: 'center',\r\n  },\r\n  tabRoot: {\r\n    minWidth: 0,\r\n    textTransform: 'none'\r\n    // margin: '10px 0px',\r\n  },\r\n  tabIndicator: {\r\n    backgroundColor: theme.palette.green.main,\r\n  },\r\n  tabTextColorInherit: {\r\n    backgroundColor: theme.palette.green.main,\r\n    color: 'white',\r\n    border: '1px solid white',\r\n  },\r\n  tabPanelRoot: {\r\n    padding: 0,\r\n    // paddingBottom: 0,\r\n    width: '100%',\r\n  },\r\n  listItemRoot: {\r\n    backgroundColor: '#7ac0af2b',\r\n    margin: '10px 0px',\r\n  },\r\n  flexDisplay: {\r\n    display: 'flex',\r\n  },\r\n  paperRoot: {\r\n    display: 'flex',\r\n    marginTop: '20px',\r\n  },\r\n  paperRoot1: {\r\n    display: 'flex',\r\n    marginTop: '20px',\r\n  },\r\n  tablePanelRoot: {\r\n    padding: '0px',\r\n  },\r\n  largeAvatar: {\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10)\r\n  },\r\n  justPadding: {\r\n    padding: 10,\r\n    borderRadius: 10\r\n  },\r\n  tabBtnIcon: {\r\n    height: '100%',\r\n    minWidth: 0,\r\n    textTransform: 'none'\r\n  },\r\n  divTab: {\r\n    flexDirection: 'column',\r\n    display: 'flex'\r\n  },\r\n  cardRoot: {\r\n    borderRadius: theme.spacing(3),\r\n    position: 'relative'\r\n  },\r\n  cardMediaRoot: {\r\n    height: theme.spacing(25)\r\n  },\r\n  cardContentRoot: {\r\n    backgroundColor: '#EFF1F3',\r\n    padding: theme.spacing(2),\r\n    paddingBottom: `${theme.spacing(2)}px !important`\r\n  },\r\n  cardActionsRoot: {\r\n    padding: 0,\r\n    paddingTop: theme.spacing(1)\r\n  },\r\n  ulRoot: {\r\n    listStyle: 'none',\r\n    padding: 0,\r\n    margin: 0,\r\n  },\r\n  liRoot: {\r\n    paddingLeft: '1em',\r\n    textIndent: '-.7em',\r\n  },\r\n  colorProtein: {\r\n    '&::before': {\r\n      content: \"'•  '\",\r\n      color: '#9A88FF',\r\n    }\r\n  },\r\n  colorFat: {\r\n    '&::before': {\r\n      content: \"'•  '\",\r\n      color: '#E57B91',\r\n    }\r\n  },\r\n  colorCarbs: {\r\n    '&::before': {\r\n      content: \"'•  '\",\r\n      color: '',\r\n    }\r\n  },\r\n  dividerRoot: {\r\n    background: ' #474749 0% 0% no-repeat padding-box',\r\n    opacity: '0.25',\r\n    height: theme.spacing(3)\r\n  },\r\n  mealTimeText: {\r\n    margin: theme.spacing(2, 0)\r\n  },\r\n  nutritionTextDiv: {\r\n    border: '1px solid #EFF1F3',\r\n    color: '#EFF1F3',\r\n    borderRadius: 20,\r\n    padding: theme.spacing(0.5, 1),\r\n    width: 'fit-content',\r\n    position: 'absolute',\r\n    top: theme.spacing(2),\r\n    left: theme.spacing(2),\r\n  },\r\n  nutritionText: {\r\n    fontSize: '0.5rem',\r\n  }\r\n}));\r\n\r\nconst MealPlan = () => {\r\n  const classes = useStyles();\r\n  const Snackbar = useSnackbar();\r\n  const { Post } = useService();\r\n  const ConfModel = useConfModel();\r\n  const [loading, setLoading] = useState(true);\r\n  const [stateData, setStateData] = useState({ page_no: 1, page_limit: 10 });\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const [mealPlanList, setMealPlanList] = useState([]);\r\n  const [addEditDialog, setAddEditDialog] = useState({\r\n    isOpen: false,\r\n    isDuplicate : false,\r\n    title: '',\r\n    okBtnText: '',\r\n    isEdit: false,\r\n    data: {},\r\n  });\r\n\r\n  const [viewDialog, setViewDialog] = useState({\r\n    isOpen: false,\r\n    title: '',\r\n    data: {},\r\n  });\r\n\r\n  const openAddDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      title: 'Add Meal Plan',\r\n      isEdit: false,\r\n      okBtnText: 'Save',\r\n    }));\r\n  };\r\n\r\n  const openEditDialog = (data: any) => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      isEdit: true,\r\n      data,\r\n      title: 'Edit Meal Plan',\r\n      okBtnText: 'Edit',\r\n    }));\r\n  };\r\n\r\n  const openDuplicateDialog = (data: any) => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isDuplicate : true,\r\n      isOpen: true,\r\n      isEdit: false,\r\n      data,\r\n      title: 'Duplicate Nutrition Plan',\r\n      okBtnText: 'Duplicate',\r\n    }));\r\n  };\r\n\r\n  const onDelete = (data: any) => {\r\n    const { openModel, setLoading, closeModel } = ConfModel;\r\n    const submitFunction = () => {\r\n      setLoading(true);\r\n      Post('app/deleteMealPlan', { id: data._id })\r\n        .then(async (res: any) => {\r\n          setLoading(false);\r\n          closeModel();\r\n          onSuccessAction();\r\n          Snackbar.show(res.message, 'success');\r\n        })\r\n        .catch((err: any) => {\r\n          setLoading(false);\r\n          Snackbar.show('Internal Server Error', 'error');\r\n        });\r\n    };\r\n    openModel(submitFunction);\r\n  };\r\n\r\n  const openViewDialog = (data: any) => {\r\n    setViewDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      data,\r\n      title: 'View Meal Plan',\r\n    }));\r\n  };\r\n\r\n  const listMealPlan = async () => {\r\n    setLoading(true);\r\n    Post('app/listMealPlan', stateData)\r\n      .then((res: any) => {\r\n        setLoading(false);\r\n        if (!res.error) {\r\n          setMealPlanList(res.data);\r\n          setPageCount(res.page_count);\r\n        } else {\r\n          Snackbar.show(res.message, 'error');\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        console.log('err', err);\r\n        setLoading(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const onPageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    setStateData((prevState: any) => ({ ...prevState, page_no: value }));\r\n  };\r\n\r\n  const closeAddEditDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({ ...prevState, isOpen: false, isDuplicate: false }));\r\n  };\r\n\r\n  const closeViewDialog = () => {\r\n    setViewDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const onSuccessAction = () => {\r\n    listMealPlan();\r\n    closeAddEditDialog();\r\n  };\r\n\r\n  useEffect(() => {\r\n    listMealPlan();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Page title='Meal Plan' />\r\n\r\n      <Grid alignItems='flex-end' container justify='space-between' spacing={3}>\r\n        <Grid item>\r\n          <Typography component='h1' variant='h3'>\r\n            Meal Plan\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant='contained'\r\n            onClick={() => openAddDialog()}\r\n            className={classes.themeButton}\r\n            startIcon={<AddIcon />}\r\n          >\r\n            Add\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* =============Search======== */}\r\n      {/* <Grid container spacing={3}>\r\n        <Grid item>\r\n          <Paper elevation={0}>\r\n            <TextField\r\n              fullWidth\r\n              size='small'\r\n              placeholder='Name'\r\n              variant='outlined'\r\n              name='state'\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid> */}\r\n\r\n      <Card className={classes.tabCard}>\r\n        <CardContent className={classes.content}>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align='center'>#</TableCell>\r\n                  <TableCell align='center'>Diet Type</TableCell>\r\n                  <TableCell align='center'>Calories</TableCell>\r\n                  <TableCell align='center'>Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {!loading &&\r\n                  mealPlanList.map((data: any, index: number) => (\r\n                    <TableRow hover key={index}>\r\n                      <TableCell align='center'>\r\n                        {stateData.page_limit * (stateData.page_no - 1) +\r\n                          index +\r\n                          1}\r\n                      </TableCell>\r\n                      <TableCell align='center'>{getDropValues(DietTypeDrop, data?.diet_type)}</TableCell>\r\n                      <TableCell align='center'>{data?.calories}</TableCell>\r\n                      <TableCell align='center'>\r\n                        <div className={classes.sEvenly}>\r\n                          <Tooltip title='View' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openViewDialog(data)}\r\n                            >\r\n                              <CenterFocusStrongIcon color='primary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Edit' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openEditDialog(data)}\r\n                            >\r\n                              <EditIcon color='action' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Duplicate' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openDuplicateDialog(data)}\r\n                            >\r\n                              <FileCopyIcon color='action' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Delete' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => onDelete(data)}\r\n                            >\r\n                              <DeleteIcon color='secondary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                {loading && <TableLoader />}\r\n                {!loading && mealPlanList.length == 0 && (\r\n                  <TableNoData>No Data Found</TableNoData>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </CardContent>\r\n\r\n        <CardActions className={classes.actions}>\r\n          <Pagination\r\n            count={pageCount}\r\n            page={stateData.page_no}\r\n            onChange={onPageChange}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n\r\n      {addEditDialog.isOpen && <AddEditModel {...addEditDialog} onClose={closeAddEditDialog} onSuccess={onSuccessAction} />}\r\n      {viewDialog.isOpen && <ViewModel {...viewDialog} onClose={closeViewDialog} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const AddEditModel = (props: any) => {\r\n  const {\r\n    isEdit,\r\n    isOpen,\r\n    isDuplicate,\r\n    okBtnText = 'OK',\r\n    onClose,\r\n    data,\r\n    title,\r\n    onSuccess,\r\n  } = props;\r\n  const formikRef = useRef<any>(null);\r\n  const getCaloriesData = useCalories()\r\n  const classes = useStyles();\r\n  const Snackbar = useSnackbar();\r\n  const { Post } = useService();\r\n  const [tabValue, setTabValue] = useState('0');\r\n  const [recipeList, setRecipeList] = useState([])\r\n\r\n\r\n  const [initialValue, setInitialValue] = useState({\r\n    ...initialFormValues,\r\n  });\r\n\r\n  const onSubmit = (value: any, helper: any) => {\r\n    helper.setSubmitting(true);\r\n    const postData = { ...value };\r\n    !isEdit && addData(postData, helper);\r\n    isDuplicate && addData(postData, helper);\r\n    isEdit && editData(postData, helper);\r\n  };\r\n\r\n  const addData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n    Post('app/addMealPlan', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const editData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n    Post('app/editMealPlan', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const handleChangeTab = (newValue: string) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  const listAllMealRecipe = () => {\r\n    Post('app/listAllMealRecipe', {})\r\n      .then((response: any) => {\r\n        if (!response.error) {\r\n          setRecipeList(response.data);\r\n        } else {\r\n          Snackbar.show(response.message, 'error');\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        Snackbar.show(error.message, 'error');\r\n      });\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (isEdit || isDuplicate) {\r\n      const { _id, ...rest } = data;\r\n      const editData = { ...rest, id: _id };\r\n\r\n      let mealDays = editData.meal_days.map((MealDays: any) => {\r\n        const { meals, ...rest } = MealDays\r\n        let NewMeals = meals.map((MealData: any) => {\r\n          const { recipe, ...rest } = MealData\r\n          const RecipeIds = recipeList.map(({ _id }: any) => _id)\r\n          const NewRecipe = recipe.filter(({ _id }: any) => RecipeIds.includes(_id)).map(({ _id }: any) => ({ id: _id }));\r\n          return { ...rest, isEdit: false, recipe: NewRecipe }\r\n        })\r\n        return { ...rest, meals: NewMeals }\r\n      })\r\n      editData.meal_days = mealDays\r\n      console.log('editData', editData)\r\n      setInitialValue(editData);\r\n    } else {\r\n      setInitialValue(initialFormValues);\r\n    }\r\n  }, [props, recipeList]);\r\n\r\n  useEffect(() => {\r\n    listAllMealRecipe();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={isOpen}\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        fullWidth\r\n        fullScreen\r\n        maxWidth='lg'\r\n        aria-labelledby='dialog-title'\r\n      >\r\n        <DialogTitle id='dialog-title' onClose={onClose}>\r\n          {title}\r\n        </DialogTitle>\r\n        <Formik\r\n          innerRef={formikRef}\r\n          enableReinitialize\r\n          initialValues={initialValue}\r\n          validationSchema={validation}\r\n          onSubmit={onSubmit}\r\n        >\r\n          {({ values, errors, touched, handleChange, handleBlur, setFieldValue, submitForm, isSubmitting }) => (\r\n            <>\r\n              <DialogContent dividers>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <Autocomplete\r\n                      options={DietTypeDrop}\r\n                      value={DietTypeDrop.find((data: any) => data.id == values.diet_type)}\r\n                      getOptionLabel={(option: any) => option.name}\r\n                      getOptionSelected={(option) => option.id == values.diet_type}\r\n                      onChange={(event: any, newValue: any) => {\r\n                        setFieldValue('diet_type', newValue?.id || '');\r\n                      }}\r\n                      onBlur={handleBlur}\r\n                      renderInput={(params: any) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label='Diet Types'\r\n                          variant='outlined'\r\n                          error={Boolean(touched.diet_type && errors.diet_type)}\r\n                          helperText={touched.diet_type && errors.diet_type}\r\n                          inputProps={{\r\n                            ...params.inputProps,\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Autocomplete\r\n                      options={getCaloriesData}\r\n                      value={getCaloriesData.find((data: any) => data.id == values.calories)}\r\n                      getOptionLabel={(option: any) => option.name}\r\n                      getOptionSelected={(option) => option.id == values.calories}\r\n                      onChange={(event: any, newValue: any) => {\r\n                        setFieldValue('calories', newValue?.id || '');\r\n                      }}\r\n                      onBlur={handleBlur}\r\n                      renderInput={(params: any) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label='Calories'\r\n                          variant='outlined'\r\n                          error={Boolean(touched.calories && errors.calories)}\r\n                          helperText={touched.calories && errors.calories}\r\n                          inputProps={{\r\n                            ...params.inputProps,\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Typography variant='h4' align='center'><strong>Add Meal Plan</strong></Typography>\r\n                  </Grid>\r\n\r\n                  {/* <Paper className={classes.paperRoot}> */}\r\n\r\n                  <TabContext value={tabValue || ''}>\r\n                    <Grid item xs={2}>\r\n                      <TabList\r\n                        classes={{\r\n                          indicator: classes.tabIndicator\r\n                        }}\r\n                        onChange={(e, value) => handleChangeTab(value)}\r\n                        orientation=\"vertical\"\r\n                        variant=\"standard\"\r\n                      >\r\n                        {values?.meal_days.map((mealDay: any, i: number) => {\r\n                          const { day } = mealDay\r\n                          return (\r\n                            <Tab\r\n                              classes={{ root: classes.tabRoot, textColorInherit: classes.tabTextColorInherit }}\r\n                              label={`Day - ${day}`}\r\n                              value={day.toString()} />\r\n                          )\r\n                        }\r\n                        )}\r\n\r\n                      </TabList>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={10}>\r\n                      {values?.meal_days.map((mealDay: any, i: number) => {\r\n                        const { day, meals } = mealDay\r\n                        return (\r\n                          <TabPanel key={i} className={classes.tabPanelRoot} value={day.toString()}>\r\n                            <MealTab key={i} index={i} meals={meals} recipeList={recipeList} />\r\n                          </TabPanel>\r\n                        )\r\n                      })}\r\n                    </Grid>\r\n\r\n                  </TabContext>\r\n                  {/* </Paper> */}\r\n\r\n                </Grid>\r\n              </DialogContent>\r\n\r\n              <DialogActions>\r\n                <Button onClick={onClose} variant='outlined' color='secondary'>\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  className={classes.themeButton}\r\n                  onClick={() => submitForm()}\r\n                  disabled={isSubmitting}\r\n                  variant='outlined'\r\n                >\r\n                  {isSubmitting ? (\r\n                    <CircularProgress size={24} style={{ color: 'white' }} />\r\n                  ) : (\r\n                    okBtnText\r\n                  )}\r\n                </Button>\r\n              </DialogActions>\r\n            </>\r\n          )}\r\n        </Formik>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ViewModel = (props: any) => {\r\n  const { isOpen, title, onClose, data } = props;\r\n  const classes = useStyles();\r\n  const [formValue, setFormValue] = useState(data);\r\n  const [tabValue, setTabValue] = useState<any>('1');\r\n\r\n  const handleTabChange = (event: React.ChangeEvent<{}>, newValue: string) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFormValue(data);\r\n  }, [props]);\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      fullWidth\r\n      maxWidth='md'\r\n      aria-labelledby='dialog-view-title'\r\n      open={isOpen}\r\n    >\r\n      <DialogTitle id='dialog-view-title' onClose={onClose}>\r\n        {title}\r\n      </DialogTitle>\r\n\r\n      <DialogContent dividers>\r\n\r\n        <Paper >\r\n          <Table>\r\n            <TableBody>\r\n              <TableRow >\r\n                <TableCell>Diet Type</TableCell>\r\n                <TableCell><strong>{getDropValues(DietTypeDrop, formValue?.diet_type)}</strong></TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Calories</TableCell>\r\n                <TableCell><strong>{formValue?.calories}</strong></TableCell>\r\n              </TableRow>\r\n\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n\r\n        <Paper>\r\n          <TabContext value={tabValue || ''}>\r\n            <Grid item container xs={12} spacing={2}>\r\n              <Grid item xs={2}>\r\n                <TabList\r\n                  classes={{\r\n                    indicator: classes.tabIndicator\r\n                  }}\r\n                  onChange={handleTabChange}\r\n                  orientation=\"vertical\"\r\n                  variant=\"standard\"\r\n                >\r\n                  {formValue?.meal_days.map((mealDay: any, i: number) => {\r\n                    const { day } = mealDay\r\n                    return (\r\n                      <Tab\r\n                        classes={{ root: classes.tabRoot, textColorInherit: classes.tabTextColorInherit }}\r\n                        label={`Day - ${day}`}\r\n                        value={day.toString()} />\r\n                    )\r\n                  }\r\n                  )}\r\n\r\n                </TabList>\r\n              </Grid>\r\n\r\n              <Grid item xs={10}>\r\n                {formValue?.meal_days.map((mealDay: any, i: number) => {\r\n                  const { day, meals = [] } = mealDay\r\n                  return (\r\n                    <TabPanel key={i} className={classes.tabPanelRoot} value={day.toString()}>\r\n                      {meals.map((mealData: any, i: number) => {\r\n                        const { meal_time, recipe = [] } = mealData\r\n                        return (\r\n                          <>\r\n                            <Grid item xs={12} className={classes.mealTimeText}>\r\n                              <Typography variant='h5' >\r\n                                <strong>{meal_time}</strong>\r\n                              </Typography>\r\n                            </Grid>\r\n\r\n                            <Grid item container xs={12} spacing={2}>\r\n                              {recipe.map((recData: any, i: number) => {\r\n                                return (\r\n                                  <Grid item xs={12} sm={12} md={6}>\r\n                                    <Card elevation={0} className={classes.cardRoot}>\r\n                                      {/* <CardActionArea> */}\r\n                                      <CardMedia\r\n                                        className={classes.cardMediaRoot}\r\n                                        image={recData.image?.url}\r\n                                        title={recData.name}\r\n                                      />\r\n\r\n                                      <div className={classes.nutritionTextDiv}>\r\n                                        <div className={classes.nutritionText}> {recData.nutrition}</div>\r\n                                      </div>\r\n\r\n                                      <CardContent className={classes.cardContentRoot}>\r\n                                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                          {recData.name}\r\n                                        </Typography>\r\n                                        <CardActions disableSpacing className={classes.cardActionsRoot}>\r\n                                          <div>\r\n                                            <Typography variant=\"body2\" >\r\n                                              <ul className={classes.ulRoot}>\r\n                                                <li className={clsx(classes.liRoot, classes.colorProtein)}>Protein</li>\r\n                                              </ul>\r\n                                            </Typography>\r\n                                            <Typography variant=\"body1\" >\r\n                                              {recData.protein}\r\n                                            </Typography>\r\n                                          </div>\r\n                                          <Divider className={classes.dividerRoot} orientation=\"vertical\" variant='middle' />\r\n                                          <div>\r\n                                            <Typography variant=\"body2\" >\r\n                                              <ul className={classes.ulRoot}>\r\n                                                <li className={clsx(classes.liRoot, classes.colorFat)}>Fat</li>\r\n                                              </ul>\r\n                                            </Typography>\r\n                                            <Typography variant=\"body1\" >\r\n                                              {recData.fat}\r\n                                            </Typography>\r\n                                          </div>\r\n                                          <Divider className={classes.dividerRoot} orientation=\"vertical\" variant='middle' />\r\n                                          <div>\r\n                                            <Typography variant=\"body2\" >\r\n                                              <ul className={classes.ulRoot}>\r\n                                                <li className={clsx(classes.liRoot, classes.colorCarbs)}>Carbs</li>\r\n                                              </ul>\r\n                                            </Typography>\r\n                                            <Typography variant=\"body1\" >\r\n                                              {recData.carbs}\r\n                                            </Typography>\r\n                                          </div>\r\n                                        </CardActions>\r\n                                      </CardContent>\r\n\r\n                                      {/* </CardActionArea> */}\r\n\r\n                                    </Card>\r\n                                  </Grid>\r\n                                )\r\n                              })}\r\n                            </Grid>\r\n                          </>\r\n                        )\r\n                      })}\r\n                    </TabPanel>\r\n                  )\r\n                })}\r\n              </Grid>\r\n            </Grid>\r\n          </TabContext>\r\n        </Paper>\r\n\r\n\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={onClose} variant='outlined' color='secondary'>\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog >\r\n  );\r\n};\r\n\r\nconst MealTab = ({ meals, recipeList, index }: any) => {\r\n  const { values, touched, errors, setFieldValue, handleChange, handleBlur } = useFormikContext()\r\n  const classes = useStyles()\r\n  const [tabValue, setTabValue] = useState('0');\r\n  const FieldName = `meal_days[${index}]`\r\n\r\n  const getArrayError = (error: any) => {\r\n    return typeof error == 'string' ? error : ''\r\n  }\r\n\r\n  const handleChangeTab = (newValue: string) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  const addNewTab = (values: any, setFieldValue: any, push: any) => {\r\n    // const { meals } = getIn(values, FieldName)\r\n    push(MealTime)\r\n    // setFieldValue(`${FieldName}.meals`, meals)\r\n  }\r\n\r\n  const submitMealTime = (i: number, values: any, setFieldValue: any) => {\r\n    const { meals } = getIn(values, FieldName)\r\n    const NewMeals = { ...meals[i] }\r\n    NewMeals.isEdit = false\r\n    meals[i] = NewMeals\r\n    setFieldValue(`${FieldName}.meals`, meals)\r\n    handleChangeTab(i.toString())\r\n  }\r\n\r\n  const editMealTime = (i: number, values: any, setFieldValue: any) => {\r\n    const { meals } = getIn(values, FieldName)\r\n    const NewMeals = { ...meals[i] }\r\n    NewMeals.isEdit = true\r\n    meals[i] = NewMeals\r\n    setFieldValue(`${FieldName}.meals`, meals)\r\n    handleChangeTab(i.toString())\r\n  }\r\n\r\n  const deleteMealTime = (i: number, values: any, setFieldValue: any) => {\r\n    const { meals } = getIn(values, FieldName)\r\n    const NewMeals = meals.filter((d: any, index: number) => index != i)\r\n    setFieldValue(`${FieldName}.meals`, NewMeals)\r\n  }\r\n\r\n  return (\r\n    <TabContext value={tabValue || ''}>\r\n      <FieldArray name={`${FieldName}.meals`} validateOnChange>\r\n        {({push, remove})=>(\r\n          <Grid item container xs={12} spacing={2}>\r\n            <Grid item xs={4}>\r\n              <TabList\r\n                classes={{\r\n                  indicator: classes.tabIndicator\r\n                }}\r\n                orientation=\"vertical\"\r\n                variant=\"standard\"\r\n              >\r\n                {meals.map((mealData: any, i: number) => {\r\n                  let FieldNameSub: any = `${FieldName}.meals[${i}]`\r\n                  let FieldTouched: any = getIn(touched, FieldNameSub)\r\n                  let FieldErrors: any = getIn(errors, FieldNameSub)\r\n                  let FieldValues: any = getIn(values, FieldNameSub)\r\n                  const TabSelected = i == Number(tabValue)\r\n                  const SelectedStyle = TabSelected ? { borderRight: '2px solid #41a58d' } : { borderRight: '2px solid white' }\r\n                  return (\r\n                    <div className={classes.divTab}>\r\n                      <Grid item container xs={12} spacing={1} style={{ margin: 'inherit', ...SelectedStyle }}>\r\n                        <Grid item xs={mealData.isEdit ? 10 : 6}>\r\n                          {mealData.isEdit &&\r\n                            <TextField\r\n                              fullWidth\r\n                              size='small'\r\n                              label='Name'\r\n                              name={`${FieldNameSub}.meal_time`}\r\n                              variant='outlined'\r\n                              error={Boolean(FieldTouched?.meal_time && FieldErrors?.meal_time)}\r\n                              helperText={FieldTouched?.meal_time && FieldErrors?.meal_time}\r\n                              value={mealData?.meal_time}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          }\r\n                          {!mealData.isEdit &&\r\n                            <Button\r\n                              fullWidth\r\n                              className={!Boolean(FieldTouched?.meal_time && FieldErrors?.meal_time) ? classes.themeButton : ''}\r\n                              classes={{\r\n                                fullWidth: classes.tabBtnIcon\r\n                              }}\r\n                              variant='contained'\r\n                              color='secondary'\r\n                            >\r\n                              {!Boolean(FieldTouched?.meal_time && FieldErrors?.meal_time) ? mealData?.meal_time : FieldErrors?.meal_time}\r\n                            </Button>}\r\n                        </Grid>\r\n                        {mealData.isEdit &&\r\n                          <Grid item xs={2}>\r\n                            <Button\r\n                              fullWidth\r\n                              className={classes.themeButton}\r\n                              classes={{\r\n                                fullWidth: classes.tabBtnIcon\r\n                              }}\r\n                              variant='contained'\r\n                              color='secondary'\r\n                              onClick={() => submitMealTime(i, values, setFieldValue)}\r\n                            >\r\n                              <CheckIcon />\r\n                            </Button>\r\n                          </Grid>\r\n                        }\r\n                        {!mealData.isEdit && <Grid item xs={2} >\r\n                          <Button\r\n                            fullWidth\r\n                            classes={{\r\n                              fullWidth: classes.tabBtnIcon\r\n                            }}\r\n                            variant='contained'\r\n                            color='primary'\r\n                            onClick={(e) => handleChangeTab(i.toString())}\r\n                          >\r\n                            {tabValue === i.toString() ? <ChevronRightIcon /> : <KeyboardArrowUpIcon />}\r\n                          </Button>\r\n                        </Grid>\r\n                        }\r\n                        {!mealData.isEdit && <Grid item xs={2} >\r\n                          <Button\r\n                            fullWidth\r\n                            classes={{\r\n                              fullWidth: classes.tabBtnIcon\r\n                            }}\r\n                            variant='contained'\r\n                            color='primary'\r\n                            onClick={() => editMealTime(i, values, setFieldValue)}\r\n                          >\r\n                            <EditIcon />\r\n                          </Button>\r\n                        </Grid>\r\n                        }\r\n                        {!mealData.isEdit &&\r\n                          <Grid item xs={2}>\r\n                            <Button\r\n                              fullWidth\r\n                              classes={{\r\n                                fullWidth: classes.tabBtnIcon\r\n                              }}\r\n                              variant='contained'\r\n                              color='secondary'\r\n                              onClick={() => remove(i)}\r\n                            >\r\n                              <DeleteIcon />\r\n                            </Button>\r\n                          </Grid>\r\n                        }\r\n                        <FormHelperText>\r\n                          <Typography variant='caption' color='error'>{getIn(touched, `${FieldName}.meals[${i}].recipe`) && getArrayError(getIn(errors, `${FieldName}.meals[${i}].recipe`))}</Typography>\r\n                        </FormHelperText>\r\n                      </Grid>\r\n                    </div>\r\n                  )\r\n                }\r\n                )}\r\n                <div className={classes.divTab}>\r\n                  <Grid container xs={12} spacing={1} style={{ margin: 'inherit' }}>\r\n                    <Grid item xs={12}>\r\n                      <FormControl fullWidth\r\n                        error={Boolean(getIn(touched, `${FieldName}.meals`) && getArrayError(getIn(errors, `${FieldName}.meals`)))}\r\n                      >\r\n                        <Button\r\n                          fullWidth\r\n                          className={classes.themeButton}\r\n                          variant='contained'\r\n                          color='secondary'\r\n                          onClick={() => addNewTab(values, setFieldValue, push)}\r\n                          endIcon={<AddIcon />}\r\n                        >\r\n                          Add Meal Time\r\n                        </Button>\r\n\r\n                        <FormHelperText>\r\n                          {getIn(touched, 'nutrition') && getArrayError(getIn(errors, 'nutrition'))}\r\n                        </FormHelperText>\r\n                      </FormControl>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n              </TabList>\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n              {meals.map((mealData: any, i: number) => {\r\n                let FieldNameSub: any = `${FieldName}.meals[${i}]`\r\n                let FieldTouched: any = getIn(touched, FieldNameSub)\r\n                let FieldErrors: any = getIn(errors, FieldNameSub)\r\n                return (\r\n                  <TabPanel key={i} className={classes.tabPanelRoot} value={i.toString()}>\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={12}>\r\n                        <Typography variant='h5' align='center'>\r\n                          <strong>{mealData?.meal_time}</strong>\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item md={12} xs={12}>\r\n                        <Autocomplete\r\n                          multiple\r\n                          options={recipeList}\r\n                          value={recipeList.filter((data: any) => mealData.recipe.map(({ id }: any) => id).includes(data._id))}\r\n                          getOptionLabel={(option: any) => option.name}\r\n                          onChange={(event: any, newValue: any) => {\r\n                            let RecIds = newValue.map(({ _id }: any) => ({ id: _id }))\r\n                            setFieldValue(`${FieldNameSub}.recipe`, RecIds || []);\r\n                          }}\r\n                          onBlur={handleBlur}\r\n                          renderInput={(params: any) => (\r\n                            <TextField\r\n                              {...params}\r\n                              label='Recipe'\r\n                              variant='outlined'\r\n                              error={Boolean(FieldTouched?.recipe && FieldErrors?.recipe)}\r\n                              helperText={FieldTouched?.recipe && FieldErrors?.recipe}\r\n                              inputProps={{\r\n                                ...params.inputProps,\r\n                              }}\r\n                            />\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                  </Grid>\r\n                </TabPanel>\r\n              )\r\n            }\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n        )}\r\n      </FieldArray>\r\n          \r\n    </TabContext >\r\n  )\r\n}\r\n\r\nexport default MealPlan;\r\n"]},"metadata":{},"sourceType":"module"}