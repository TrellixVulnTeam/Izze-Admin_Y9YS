{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pyramidion\\\\WebApp\\\\Izze-Admin\\\\src\\\\pages\\\\NutritionPlan\\\\AddEditTextField.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Grid, Typography, TextField } from '@material-ui/core';\nimport useService from '../../hook/useService';\nimport useSnackbar from '../../hook/useSnackbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddEditModelTextFields = props => {\n  _s();\n\n  var _touched$protein, _errors$protein, _touched$protein2, _errors$protein2, _values$protein, _touched$protein3, _errors$protein3, _touched$protein4, _errors$protein4, _values$protein2, _touched$protein5, _errors$protein5, _touched$protein6, _errors$protein6, _values$protein3, _touched$fat, _errors$fat, _touched$fat2, _errors$fat2, _values$fat, _touched$fat3, _errors$fat3, _touched$fat4, _errors$fat4, _values$fat2, _touched$fat5, _errors$fat5, _touched$fat6, _errors$fat6, _values$fat3, _touched$carbs, _errors$carbs, _touched$carbs2, _errors$carbs2, _values$carbs, _touched$carbs3, _errors$carbs3, _touched$carbs4, _errors$carbs4, _values$carbs2, _touched$carbs5, _errors$carbs5, _touched$carbs6, _errors$carbs6, _values$carbs3;\n\n  const {\n    values,\n    errors,\n    touched,\n    handleBlur,\n    handleChange,\n    formikRef\n  } = props;\n  const {\n    Post\n  } = useService();\n  const Snackbar = useSnackbar();\n  const [ingredientList, setIngredientList] = React.useState([]);\n\n  const handleEarlyMorningIngredient = (event, newValue) => {\n    const dummyArrayData = newValue === null || newValue === void 0 ? void 0 : newValue.map(getId => {\n      return {\n        id: getId._id\n      };\n    });\n    formikRef.current.setFieldValue('early_morning.ingredients', dummyArrayData);\n  };\n\n  const handleBreakFastIngredient = (event, newValue) => {\n    const dummyArrayData = newValue === null || newValue === void 0 ? void 0 : newValue.map(getId => {\n      return {\n        id: getId._id\n      };\n    });\n    formikRef.current.setFieldValue('breakfast.ingredients', dummyArrayData);\n  };\n\n  const handleLunchIngredient = (event, newValue) => {\n    const dummyArrayData = newValue === null || newValue === void 0 ? void 0 : newValue.map(getId => {\n      return {\n        id: getId._id\n      };\n    });\n    formikRef.current.setFieldValue('lunch.ingredients', dummyArrayData);\n  };\n\n  const handleEveningSnacksIngredient = (event, newValue) => {\n    const dummyArrayData = newValue === null || newValue === void 0 ? void 0 : newValue.map(getId => {\n      return {\n        id: getId._id\n      };\n    });\n    formikRef.current.setFieldValue('evening_snack.ingredients', dummyArrayData);\n  };\n\n  const handleDinnerIngredient = (event, newValue) => {\n    const dummyArrayData = newValue === null || newValue === void 0 ? void 0 : newValue.map(getId => {\n      return {\n        id: getId._id\n      };\n    });\n    formikRef.current.setFieldValue('dinner.ingredients', dummyArrayData);\n  };\n\n  const handleMidMorningIngredient = (event, newValue) => {\n    const dummyArrayData = newValue === null || newValue === void 0 ? void 0 : newValue.map(getId => {\n      return {\n        id: getId._id\n      };\n    });\n    formikRef.current.setFieldValue('mid_morning_snack.ingredients', dummyArrayData);\n  };\n\n  const listIngredients = async () => {\n    Post('app/listAllMealIngredient', {}).then(res => {\n      if (!res.error) {\n        let getequipmentList = res.data.map(data => {\n          data.id = data._id;\n          return data;\n        });\n        setIngredientList(getequipmentList);\n      } else {\n        Snackbar.show(res.message, 'error');\n      }\n    }).catch(err => {\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  React.useEffect(() => {\n    listIngredients();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Goal Plan\",\n        name: \"goal_plan\",\n        variant: \"outlined\",\n        error: Boolean(touched.goal_plan && errors.goal_plan),\n        helperText: touched.goal_plan && errors.goal_plan,\n        value: values.goal_plan,\n        onChange: handleChange,\n        onBlur: handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Activity Factor\",\n        name: \"actvity_factor\",\n        variant: \"outlined\",\n        error: Boolean(touched.actvity_factor && errors.actvity_factor),\n        helperText: touched.actvity_factor && errors.actvity_factor,\n        value: values.actvity_factor,\n        onChange: handleChange,\n        onBlur: handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Deal Type\",\n        name: \"diet_type\",\n        variant: \"outlined\",\n        error: Boolean(touched.diet_type && errors.diet_type),\n        helperText: touched.diet_type && errors.diet_type,\n        value: values.diet_type,\n        onChange: handleChange,\n        onBlur: handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Calories\",\n        name: \"calories\",\n        variant: \"outlined\",\n        error: Boolean(touched.calories && errors.calories),\n        helperText: touched.calories && errors.calories,\n        value: values.calories,\n        onChange: handleChange,\n        onBlur: handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Protein\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 4,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Macros\",\n        name: \"protein.macros\",\n        variant: \"outlined\",\n        error: Boolean((touched === null || touched === void 0 ? void 0 : (_touched$protein = touched.protein) === null || _touched$protein === void 0 ? void 0 : _touched$protein.macros) && (errors === null || errors === void 0 ? void 0 : (_errors$protein = errors.protein) === null || _errors$protein === void 0 ? void 0 : _errors$protein.macros)),\n        helperText: (touched === null || touched === void 0 ? void 0 : (_touched$protein2 = touched.protein) === null || _touched$protein2 === void 0 ? void 0 : _touched$protein2.macros) && (errors === null || errors === void 0 ? void 0 : (_errors$protein2 = errors.protein) === null || _errors$protein2 === void 0 ? void 0 : _errors$protein2.macros),\n        value: values === null || values === void 0 ? void 0 : (_values$protein = values.protein) === null || _values$protein === void 0 ? void 0 : _values$protein.macros,\n        onChange: handleChange,\n        onBlur: handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 4,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Gram\",\n        name: \"protein.gram\",\n        variant: \"outlined\",\n        error: Boolean((touched === null || touched === void 0 ? void 0 : (_touched$protein3 = touched.protein) === null || _touched$protein3 === void 0 ? void 0 : _touched$protein3.gram) && (errors === null || errors === void 0 ? void 0 : (_errors$protein3 = errors.protein) === null || _errors$protein3 === void 0 ? void 0 : _errors$protein3.gram)),\n        helperText: (touched === null || touched === void 0 ? void 0 : (_touched$protein4 = touched.protein) === null || _touched$protein4 === void 0 ? void 0 : _touched$protein4.gram) && (errors === null || errors === void 0 ? void 0 : (_errors$protein4 = errors.protein) === null || _errors$protein4 === void 0 ? void 0 : _errors$protein4.gram),\n        value: values === null || values === void 0 ? void 0 : (_values$protein2 = values.protein) === null || _values$protein2 === void 0 ? void 0 : _values$protein2.gram,\n        onChange: handleChange,\n        onBlur: handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 4,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Calories\",\n        name: \"protein.calories\",\n        variant: \"outlined\",\n        error: Boolean((touched === null || touched === void 0 ? void 0 : (_touched$protein5 = touched.protein) === null || _touched$protein5 === void 0 ? void 0 : _touched$protein5.calories) && (errors === null || errors === void 0 ? void 0 : (_errors$protein5 = errors.protein) === null || _errors$protein5 === void 0 ? void 0 : _errors$protein5.calories)),\n        helperText: (touched === null || touched === void 0 ? void 0 : (_touched$protein6 = touched.protein) === null || _touched$protein6 === void 0 ? void 0 : _touched$protein6.calories) && (errors === null || errors === void 0 ? void 0 : (_errors$protein6 = errors.protein) === null || _errors$protein6 === void 0 ? void 0 : _errors$protein6.calories),\n        value: values === null || values === void 0 ? void 0 : (_values$protein3 = values.protein) === null || _values$protein3 === void 0 ? void 0 : _values$protein3.calories,\n        onChange: handleChange,\n        onBlur: handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Fat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 4,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Macros\",\n        name: \"fat.macros\",\n        variant: \"outlined\",\n        error: Boolean((touched === null || touched === void 0 ? void 0 : (_touched$fat = touched.fat) === null || _touched$fat === void 0 ? void 0 : _touched$fat.macros) && (errors === null || errors === void 0 ? void 0 : (_errors$fat = errors.fat) === null || _errors$fat === void 0 ? void 0 : _errors$fat.macros)),\n        helperText: (touched === null || touched === void 0 ? void 0 : (_touched$fat2 = touched.fat) === null || _touched$fat2 === void 0 ? void 0 : _touched$fat2.macros) && (errors === null || errors === void 0 ? void 0 : (_errors$fat2 = errors.fat) === null || _errors$fat2 === void 0 ? void 0 : _errors$fat2.macros),\n        value: values === null || values === void 0 ? void 0 : (_values$fat = values.fat) === null || _values$fat === void 0 ? void 0 : _values$fat.macros,\n        onChange: handleChange,\n        onBlur: handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 4,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Gram\",\n        name: \"fat.gram\",\n        variant: \"outlined\",\n        error: Boolean((touched === null || touched === void 0 ? void 0 : (_touched$fat3 = touched.fat) === null || _touched$fat3 === void 0 ? void 0 : _touched$fat3.gram) && (errors === null || errors === void 0 ? void 0 : (_errors$fat3 = errors.fat) === null || _errors$fat3 === void 0 ? void 0 : _errors$fat3.gram)),\n        helperText: (touched === null || touched === void 0 ? void 0 : (_touched$fat4 = touched.fat) === null || _touched$fat4 === void 0 ? void 0 : _touched$fat4.gram) && (errors === null || errors === void 0 ? void 0 : (_errors$fat4 = errors.fat) === null || _errors$fat4 === void 0 ? void 0 : _errors$fat4.gram),\n        value: values === null || values === void 0 ? void 0 : (_values$fat2 = values.fat) === null || _values$fat2 === void 0 ? void 0 : _values$fat2.gram,\n        onChange: handleChange,\n        onBlur: handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 4,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Calories\",\n        name: \"fat.calories\",\n        variant: \"outlined\",\n        error: Boolean((touched === null || touched === void 0 ? void 0 : (_touched$fat5 = touched.fat) === null || _touched$fat5 === void 0 ? void 0 : _touched$fat5.calories) && (errors === null || errors === void 0 ? void 0 : (_errors$fat5 = errors.fat) === null || _errors$fat5 === void 0 ? void 0 : _errors$fat5.calories)),\n        helperText: (touched === null || touched === void 0 ? void 0 : (_touched$fat6 = touched.fat) === null || _touched$fat6 === void 0 ? void 0 : _touched$fat6.calories) && (errors === null || errors === void 0 ? void 0 : (_errors$fat6 = errors.fat) === null || _errors$fat6 === void 0 ? void 0 : _errors$fat6.calories),\n        value: values === null || values === void 0 ? void 0 : (_values$fat3 = values.fat) === null || _values$fat3 === void 0 ? void 0 : _values$fat3.calories,\n        onChange: handleChange,\n        onBlur: handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Carbs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 4,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Macros\",\n        name: \"carbs.macros\",\n        variant: \"outlined\",\n        error: Boolean((touched === null || touched === void 0 ? void 0 : (_touched$carbs = touched.carbs) === null || _touched$carbs === void 0 ? void 0 : _touched$carbs.macros) && (errors === null || errors === void 0 ? void 0 : (_errors$carbs = errors.carbs) === null || _errors$carbs === void 0 ? void 0 : _errors$carbs.macros)),\n        helperText: (touched === null || touched === void 0 ? void 0 : (_touched$carbs2 = touched.carbs) === null || _touched$carbs2 === void 0 ? void 0 : _touched$carbs2.macros) && (errors === null || errors === void 0 ? void 0 : (_errors$carbs2 = errors.carbs) === null || _errors$carbs2 === void 0 ? void 0 : _errors$carbs2.macros),\n        value: values === null || values === void 0 ? void 0 : (_values$carbs = values.carbs) === null || _values$carbs === void 0 ? void 0 : _values$carbs.macros,\n        onChange: handleChange,\n        onBlur: handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 4,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Gram\",\n        name: \"carbs.gram\",\n        variant: \"outlined\",\n        error: Boolean((touched === null || touched === void 0 ? void 0 : (_touched$carbs3 = touched.carbs) === null || _touched$carbs3 === void 0 ? void 0 : _touched$carbs3.gram) && (errors === null || errors === void 0 ? void 0 : (_errors$carbs3 = errors.carbs) === null || _errors$carbs3 === void 0 ? void 0 : _errors$carbs3.gram)),\n        helperText: (touched === null || touched === void 0 ? void 0 : (_touched$carbs4 = touched.carbs) === null || _touched$carbs4 === void 0 ? void 0 : _touched$carbs4.gram) && (errors === null || errors === void 0 ? void 0 : (_errors$carbs4 = errors.carbs) === null || _errors$carbs4 === void 0 ? void 0 : _errors$carbs4.gram),\n        value: values === null || values === void 0 ? void 0 : (_values$carbs2 = values.carbs) === null || _values$carbs2 === void 0 ? void 0 : _values$carbs2.gram,\n        onChange: handleChange,\n        onBlur: handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 4,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Calories\",\n        name: \"carbs.calories\",\n        variant: \"outlined\",\n        error: Boolean((touched === null || touched === void 0 ? void 0 : (_touched$carbs5 = touched.carbs) === null || _touched$carbs5 === void 0 ? void 0 : _touched$carbs5.calories) && (errors === null || errors === void 0 ? void 0 : (_errors$carbs5 = errors.carbs) === null || _errors$carbs5 === void 0 ? void 0 : _errors$carbs5.calories)),\n        helperText: (touched === null || touched === void 0 ? void 0 : (_touched$carbs6 = touched.carbs) === null || _touched$carbs6 === void 0 ? void 0 : _touched$carbs6.calories) && (errors === null || errors === void 0 ? void 0 : (_errors$carbs6 = errors.carbs) === null || _errors$carbs6 === void 0 ? void 0 : _errors$carbs6.calories),\n        value: values === null || values === void 0 ? void 0 : (_values$carbs3 = values.carbs) === null || _values$carbs3 === void 0 ? void 0 : _values$carbs3.calories,\n        onChange: handleChange,\n        onBlur: handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddEditModelTextFields, \"a2PB9NCar6o+RxPXtod/wgoG44A=\", false, function () {\n  return [useService, useSnackbar];\n});\n\n_c = AddEditModelTextFields;\nexport default AddEditModelTextFields;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditModelTextFields\");","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/pages/NutritionPlan/AddEditTextField.tsx"],"names":["React","Grid","Typography","TextField","useService","useSnackbar","AddEditModelTextFields","props","values","errors","touched","handleBlur","handleChange","formikRef","Post","Snackbar","ingredientList","setIngredientList","useState","handleEarlyMorningIngredient","event","newValue","dummyArrayData","map","getId","id","_id","current","setFieldValue","handleBreakFastIngredient","handleLunchIngredient","handleEveningSnacksIngredient","handleDinnerIngredient","handleMidMorningIngredient","listIngredients","then","res","error","getequipmentList","data","show","message","catch","err","useEffect","Boolean","goal_plan","actvity_factor","diet_type","calories","protein","macros","gram","fat","carbs"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Grid, Typography, TextField } from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport useService from '../../hook/useService';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport {TabContext, TabList, TabPanel } from '@material-ui/lab';\r\n\r\nconst AddEditModelTextFields = (props: any) => {\r\n  const { values, errors, touched, handleBlur, handleChange, formikRef } = props;\r\n  const { Post } = useService();\r\n  const Snackbar = useSnackbar();\r\n  const [ingredientList, setIngredientList] = React.useState([]);\r\n  const handleEarlyMorningIngredient = (event: any, newValue: any) => {\r\n    const dummyArrayData = newValue?.map((getId: any) => {\r\n      return {\r\n        id: getId._id,\r\n      };\r\n    });\r\n    formikRef.current.setFieldValue(\r\n      'early_morning.ingredients',\r\n      dummyArrayData\r\n    );\r\n  };\r\n\r\n  const handleBreakFastIngredient = (event: any, newValue: any) => {\r\n    const dummyArrayData = newValue?.map((getId: any) => {\r\n      return {\r\n        id: getId._id,\r\n      };\r\n    });\r\n    formikRef.current.setFieldValue(\r\n      'breakfast.ingredients',\r\n      dummyArrayData\r\n    );\r\n  };\r\n\r\n  const handleLunchIngredient = (event: any, newValue: any) => {\r\n    const dummyArrayData = newValue?.map((getId: any) => {\r\n      return {\r\n        id: getId._id,\r\n      };\r\n    });\r\n    formikRef.current.setFieldValue(\r\n      'lunch.ingredients',\r\n      dummyArrayData\r\n    );\r\n  };\r\n\r\n  const handleEveningSnacksIngredient = (event: any, newValue: any) => {\r\n    const dummyArrayData = newValue?.map((getId: any) => {\r\n      return {\r\n        id: getId._id,\r\n      };\r\n    });\r\n    formikRef.current.setFieldValue(\r\n      'evening_snack.ingredients',\r\n      dummyArrayData\r\n    );\r\n  };\r\n\r\n  const handleDinnerIngredient = (event: any, newValue: any) => {\r\n    const dummyArrayData = newValue?.map((getId: any) => {\r\n      return {\r\n        id: getId._id,\r\n      };\r\n    });\r\n    formikRef.current.setFieldValue(\r\n      'dinner.ingredients',\r\n      dummyArrayData\r\n    );\r\n  };\r\n\r\n  const handleMidMorningIngredient = (event: any, newValue: any) => {\r\n    const dummyArrayData = newValue?.map((getId: any) => {\r\n      return {\r\n        id: getId._id,\r\n      };\r\n    });\r\n    formikRef.current.setFieldValue(\r\n      'mid_morning_snack.ingredients',\r\n      dummyArrayData\r\n    );\r\n  };\r\n\r\n  const listIngredients = async () => {\r\n    Post('app/listAllMealIngredient', {})\r\n      .then((res: any) => {\r\n        if (!res.error) {\r\n          let getequipmentList = res.data.map((data: any) => {\r\n            data.id = data._id;\r\n            return data;\r\n          });\r\n          setIngredientList(getequipmentList);\r\n        } else {\r\n          Snackbar.show(res.message, 'error');\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    listIngredients();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          fullWidth\r\n          label='Goal Plan'\r\n          name='goal_plan'\r\n          variant='outlined'\r\n          error={Boolean(touched.goal_plan && errors.goal_plan)}\r\n          helperText={touched.goal_plan && errors.goal_plan}\r\n          value={values.goal_plan}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          fullWidth\r\n          label='Activity Factor'\r\n          name='actvity_factor'\r\n          variant='outlined'\r\n          error={Boolean(touched.actvity_factor && errors.actvity_factor)}\r\n          helperText={touched.actvity_factor && errors.actvity_factor}\r\n          value={values.actvity_factor}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          fullWidth\r\n          label='Deal Type'\r\n          name='diet_type'\r\n          variant='outlined'\r\n          error={Boolean(touched.diet_type && errors.diet_type)}\r\n          helperText={touched.diet_type && errors.diet_type}\r\n          value={values.diet_type}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          fullWidth\r\n          label='Calories'\r\n          name='calories'\r\n          variant='outlined'\r\n          error={Boolean(touched.calories && errors.calories)}\r\n          helperText={touched.calories && errors.calories}\r\n          value={values.calories}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <Typography variant='h5' align='center'>\r\n          <strong>Protein</strong>\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          fullWidth\r\n          label='Macros'\r\n          name='protein.macros'\r\n          variant='outlined'\r\n          error={Boolean(touched?.protein?.macros && errors?.protein?.macros)}\r\n          helperText={touched?.protein?.macros && errors?.protein?.macros}\r\n          value={values?.protein?.macros}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          fullWidth\r\n          label='Gram'\r\n          name='protein.gram'\r\n          variant='outlined'\r\n          error={Boolean(touched?.protein?.gram && errors?.protein?.gram)}\r\n          helperText={touched?.protein?.gram && errors?.protein?.gram}\r\n          value={values?.protein?.gram}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          fullWidth\r\n          label='Calories'\r\n          name='protein.calories'\r\n          variant='outlined'\r\n          error={Boolean(\r\n            touched?.protein?.calories && errors?.protein?.calories\r\n          )}\r\n          helperText={touched?.protein?.calories && errors?.protein?.calories}\r\n          value={values?.protein?.calories}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <Typography variant='h5' align='center'>\r\n          <strong>Fat</strong>\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          fullWidth\r\n          label='Macros'\r\n          name='fat.macros'\r\n          variant='outlined'\r\n          error={Boolean(touched?.fat?.macros && errors?.fat?.macros)}\r\n          helperText={touched?.fat?.macros && errors?.fat?.macros}\r\n          value={values?.fat?.macros}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          fullWidth\r\n          label='Gram'\r\n          name='fat.gram'\r\n          variant='outlined'\r\n          error={Boolean(touched?.fat?.gram && errors?.fat?.gram)}\r\n          helperText={touched?.fat?.gram && errors?.fat?.gram}\r\n          value={values?.fat?.gram}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          fullWidth\r\n          label='Calories'\r\n          name='fat.calories'\r\n          variant='outlined'\r\n          error={Boolean(touched?.fat?.calories && errors?.fat?.calories)}\r\n          helperText={touched?.fat?.calories && errors?.fat?.calories}\r\n          value={values?.fat?.calories}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n{/* .................................................................................................................................... */}\r\n      <Grid item xs={12}>\r\n        <Typography variant='h5' align='center'>\r\n          <strong>Carbs</strong>\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          fullWidth\r\n          label='Macros'\r\n          name='carbs.macros'\r\n          variant='outlined'\r\n          error={Boolean(touched?.carbs?.macros && errors?.carbs?.macros)}\r\n          helperText={touched?.carbs?.macros && errors?.carbs?.macros}\r\n          value={values?.carbs?.macros}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          fullWidth\r\n          label='Gram'\r\n          name='carbs.gram'\r\n          variant='outlined'\r\n          error={Boolean(touched?.carbs?.gram && errors?.carbs?.gram)}\r\n          helperText={touched?.carbs?.gram && errors?.carbs?.gram}\r\n          value={values?.carbs?.gram}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          fullWidth\r\n          label='Calories'\r\n          name='carbs.calories'\r\n          variant='outlined'\r\n          error={Boolean(touched?.carbs?.calories && errors?.carbs?.calories)}\r\n          helperText={touched?.carbs?.calories && errors?.carbs?.calories}\r\n          value={values?.carbs?.calories}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n{/*.................................................................................................................................  */}\r\n      <Grid item xs={2}>\r\n\r\n      </Grid>\r\n{/* ................................................................................................................................. */}\r\n      {/* <Grid item xs={12}>\r\n        <Typography variant='h5' align='center'>\r\n          <strong>Early Morning</strong>\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Autocomplete\r\n          multiple\r\n          id='tags-outlined1'\r\n          options={ingredientList}\r\n          getOptionLabel={(option: any) => option.name}\r\n          onChange={handleEarlyMorningIngredient}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              variant='outlined'\r\n              label='Select Ingredients'\r\n              name = 'early_morning.ingredients'\r\n              error={Boolean(\r\n                touched?.early_morning?.ingredients &&\r\n                  touched?.early_morning?.ingredients[0]?.id &&\r\n                  errors?.early_morning?.ingredients &&\r\n                  (errors?.early_morning?.ingredients[0] as any)?.id\r\n              )}\r\n              helperText={\r\n                touched?.early_morning?.ingredients &&\r\n                touched?.early_morning?.ingredients[0]?.id &&\r\n                errors?.early_morning?.ingredients &&\r\n                (errors?.early_morning?.ingredients[0] as any)?.id\r\n              }\r\n              inputProps={{\r\n                ...params.inputProps,\r\n              }}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          fullWidth\r\n          label='Quantity'\r\n          name='early_morning.quantity'\r\n          variant='outlined'\r\n          error={Boolean(touched?.early_morning?.quantity && errors?.early_morning?.quantity)}\r\n          helperText={touched?.early_morning?.quantity && errors?.early_morning?.quantity}\r\n          value={values?.early_morning?.quantity}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          fullWidth\r\n          label='Protein'\r\n          name='early_morning.protein'\r\n          variant='outlined'\r\n          error={Boolean(touched?.early_morning?.protein && errors?.early_morning?.protein)}\r\n          helperText={touched?.early_morning?.protein && errors?.early_morning?.protein}\r\n          value={values?.early_morning?.protein}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          fullWidth\r\n          label='Fat'\r\n          name='early_morning.fat'\r\n          variant='outlined'\r\n          error={Boolean(touched?.early_morning?.fat && errors?.early_morning?.fat)}\r\n          helperText={touched?.early_morning?.fat && errors?.early_morning?.fat}\r\n          value={values?.early_morning?.fat}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          fullWidth\r\n          label='Carbs'\r\n          name='early_morning.carbs'\r\n          variant='outlined'\r\n          error={Boolean(touched?.early_morning?.carbs && errors?.early_morning?.carbs)}\r\n          helperText={touched?.early_morning?.carbs && errors?.early_morning?.carbs}\r\n          value={values?.early_morning?.carbs}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          fullWidth\r\n          label='Calories'\r\n          name='early_morning.calories'\r\n          variant='outlined'\r\n          error={Boolean(touched?.early_morning?.calories && errors?.early_morning?.calories)}\r\n          helperText={touched?.early_morning?.calories && errors?.early_morning?.calories}\r\n          value={values?.early_morning?.calories}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid> */}\r\n\r\n{/* ................................................................................................................................. */}\r\n      {/* <Grid item xs={12}>\r\n        <Typography variant='h5' align='center'>\r\n          <strong>Break Fast</strong>\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Autocomplete\r\n          multiple\r\n          id='tags-outlined2'\r\n          options={ingredientList}\r\n          getOptionLabel={(option: any) => option.name}\r\n          onChange={handleBreakFastIngredient}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              variant='outlined'\r\n              label='Select Ingredients'\r\n              name = 'breakfast.ingredients'\r\n              error={Boolean(\r\n                touched?.breakfast?.ingredients &&\r\n                  touched?.breakfast?.ingredients[0]?.id &&\r\n                  errors?.breakfast?.ingredients &&\r\n                  (errors?.breakfast?.ingredients[0] as any)?.id\r\n              )}\r\n              helperText={\r\n                touched?.breakfast?.ingredients &&\r\n                touched?.breakfast?.ingredients[0]?.id &&\r\n                errors?.breakfast?.ingredients &&\r\n                (errors?.breakfast?.ingredients[0] as any)?.id\r\n              }\r\n              inputProps={{\r\n                ...params.inputProps,\r\n              }}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          fullWidth\r\n          label='Quantity'\r\n          name='breakfast.quantity'\r\n          variant='outlined'\r\n          error={Boolean(touched?.breakfast?.quantity && errors?.breakfast?.quantity)}\r\n          helperText={touched?.breakfast?.quantity && errors?.breakfast?.quantity}\r\n          value={values?.breakfast?.quantity}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          fullWidth\r\n          label='Protein'\r\n          name='breakfast.protein'\r\n          variant='outlined'\r\n          error={Boolean(touched?.breakfast?.protein && errors?.breakfast?.protein)}\r\n          helperText={touched?.breakfast?.protein && errors?.breakfast?.protein}\r\n          value={values?.breakfast?.protein}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          fullWidth\r\n          label='Fat'\r\n          name='breakfast.fat'\r\n          variant='outlined'\r\n          error={Boolean(touched?.breakfast?.fat && errors?.breakfast?.fat)}\r\n          helperText={touched?.breakfast?.fat && errors?.breakfast?.fat}\r\n          value={values?.breakfast?.fat}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          fullWidth\r\n          label='Carbs'\r\n          name='breakfast.carbs'\r\n          variant='outlined'\r\n          error={Boolean(touched?.breakfast?.carbs && errors?.breakfast?.carbs)}\r\n          helperText={touched?.breakfast?.carbs && errors?.breakfast?.carbs}\r\n          value={values?.breakfast?.carbs}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          fullWidth\r\n          label='Calories'\r\n          name='breakfast.calories'\r\n          variant='outlined'\r\n          error={Boolean(touched?.breakfast?.calories && errors?.breakfast?.calories)}\r\n          helperText={touched?.breakfast?.calories && errors?.breakfast?.calories}\r\n          value={values?.breakfast?.calories}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid> */}\r\n{/* ................................................................................................................................. */}\r\n      {/* <Grid item xs={12}>\r\n        <Typography variant='h5' align='center'>\r\n          <strong>Mid Morning Snacks</strong>\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Autocomplete\r\n          multiple\r\n          id='tags-outlined6'\r\n          options={ingredientList}\r\n          getOptionLabel={(option: any) => option.name}\r\n          onChange={handleMidMorningIngredient}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              variant='outlined'\r\n              label='Select Ingredients'\r\n              name = 'mid_morning_snack.ingredients'\r\n              error={Boolean(\r\n                touched?.mid_morning_snack?.ingredients &&\r\n                  touched?.mid_morning_snack?.ingredients[0]?.id &&\r\n                  errors?.mid_morning_snack?.ingredients &&\r\n                  (errors?.mid_morning_snack?.ingredients[0] as any)?.id\r\n              )}\r\n              helperText={\r\n                touched?.mid_morning_snack?.ingredients &&\r\n                touched?.mid_morning_snack?.ingredients[0]?.id &&\r\n                errors?.mid_morning_snack?.ingredients &&\r\n                (errors?.mid_morning_snack?.ingredients[0] as any)?.id\r\n              }\r\n              inputProps={{\r\n                ...params.inputProps,\r\n              }}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          fullWidth\r\n          label='Quantity'\r\n          name='mid_morning_snack.quantity'\r\n          variant='outlined'\r\n          error={Boolean(touched?.mid_morning_snack?.quantity && errors?.mid_morning_snack?.quantity)}\r\n          helperText={touched?.mid_morning_snack?.quantity && errors?.mid_morning_snack?.quantity}\r\n          value={values?.mid_morning_snack?.quantity}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          fullWidth\r\n          label='Protein'\r\n          name='mid_morning_snack.protein'\r\n          variant='outlined'\r\n          error={Boolean(touched?.mid_morning_snack?.protein && errors?.mid_morning_snack?.protein)}\r\n          helperText={touched?.mid_morning_snack?.protein && errors?.mid_morning_snack?.protein}\r\n          value={values?.mid_morning_snack?.protein}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          fullWidth\r\n          label='Fat'\r\n          name='mid_morning_snack.fat'\r\n          variant='outlined'\r\n          error={Boolean(touched?.mid_morning_snack?.fat && errors?.mid_morning_snack?.fat)}\r\n          helperText={touched?.mid_morning_snack?.fat && errors?.mid_morning_snack?.fat}\r\n          value={values?.mid_morning_snack?.fat}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          fullWidth\r\n          label='Carbs'\r\n          name='mid_morning_snack.carbs'\r\n          variant='outlined'\r\n          error={Boolean(touched?.mid_morning_snack?.carbs && errors?.mid_morning_snack?.carbs)}\r\n          helperText={touched?.mid_morning_snack?.carbs && errors?.mid_morning_snack?.carbs}\r\n          value={values?.mid_morning_snack?.carbs}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          fullWidth\r\n          label='Calories'\r\n          name='mid_morning_snack.calories'\r\n          variant='outlined'\r\n          error={Boolean(touched?.mid_morning_snack?.calories && errors?.mid_morning_snack?.calories)}\r\n          helperText={touched?.mid_morning_snack?.calories && errors?.mid_morning_snack?.calories}\r\n          value={values?.mid_morning_snack?.calories}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid> */}\r\n\r\n{/* ................................................................................................................................. */}\r\n      {/* <Grid item xs={12}>\r\n        <Typography variant='h5' align='center'>\r\n          <strong>Lunch</strong>\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Autocomplete\r\n          multiple\r\n          id='tags-outlined3'\r\n          options={ingredientList}\r\n          getOptionLabel={(option: any) => option.name}\r\n          onChange={handleLunchIngredient}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              variant='outlined'\r\n              label='Select Ingredients'\r\n              name = 'lunch.ingredients'\r\n              error={Boolean(\r\n                touched?.lunch?.ingredients &&\r\n                  touched?.lunch?.ingredients[0]?.id &&\r\n                  errors?.lunch?.ingredients &&\r\n                  (errors?.lunch?.ingredients[0] as any)?.id\r\n              )}\r\n              helperText={\r\n                touched?.lunch?.ingredients &&\r\n                touched?.lunch?.ingredients[0]?.id &&\r\n                errors?.lunch?.ingredients &&\r\n                (errors?.lunch?.ingredients[0] as any)?.id\r\n              }\r\n              inputProps={{\r\n                ...params.inputProps,\r\n              }}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          fullWidth\r\n          label='Quantity'\r\n          name='lunch.quantity'\r\n          variant='outlined'\r\n          error={Boolean(touched?.lunch?.quantity && errors?.lunch?.quantity)}\r\n          helperText={touched?.lunch?.quantity && errors?.lunch?.quantity}\r\n          value={values?.lunch?.quantity}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          fullWidth\r\n          label='Protein'\r\n          name='lunch.protein'\r\n          variant='outlined'\r\n          error={Boolean(touched?.lunch?.protein && errors?.lunch?.protein)}\r\n          helperText={touched?.lunch?.protein && errors?.lunch?.protein}\r\n          value={values?.lunch?.protein}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          fullWidth\r\n          label='Fat'\r\n          name='lunch.fat'\r\n          variant='outlined'\r\n          error={Boolean(touched?.lunch?.fat && errors?.lunch?.fat)}\r\n          helperText={touched?.lunch?.fat && errors?.lunch?.fat}\r\n          value={values?.lunch?.fat}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          fullWidth\r\n          label='Carbs'\r\n          name='lunch.carbs'\r\n          variant='outlined'\r\n          error={Boolean(touched?.lunch?.carbs && errors?.lunch?.carbs)}\r\n          helperText={touched?.lunch?.carbs && errors?.lunch?.carbs}\r\n          value={values?.lunch?.carbs}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          fullWidth\r\n          label='Calories'\r\n          name='lunch.calories'\r\n          variant='outlined'\r\n          error={Boolean(touched?.lunch?.calories && errors?.lunch?.calories)}\r\n          helperText={touched?.lunch?.calories && errors?.lunch?.calories}\r\n          value={values?.lunch?.calories}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid> */}\r\n\r\n{/* ................................................................................................................................. */}\r\n      {/* <Grid item xs={12}>\r\n        <Typography variant='h5' align='center'>\r\n          <strong>Evening Snacks</strong>\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Autocomplete\r\n          multiple\r\n          id='tags-outlined4'\r\n          options={ingredientList}\r\n          getOptionLabel={(option: any) => option.name}\r\n          onChange={handleEveningSnacksIngredient}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              variant='outlined'\r\n              label='Select Ingredients'\r\n              name = 'evening_snack.ingredients'\r\n              error={Boolean(\r\n                touched?.evening_snack?.ingredients &&\r\n                  touched?.evening_snack?.ingredients[0]?.id &&\r\n                  errors?.evening_snack?.ingredients &&\r\n                  (errors?.evening_snack?.ingredients[0] as any)?.id\r\n              )}\r\n              helperText={\r\n                touched?.evening_snack?.ingredients &&\r\n                touched?.evening_snack?.ingredients[0]?.id &&\r\n                errors?.evening_snack?.ingredients &&\r\n                (errors?.evening_snack?.ingredients[0] as any)?.id\r\n              }\r\n              inputProps={{\r\n                ...params.inputProps,\r\n              }}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          fullWidth\r\n          label='Quantity'\r\n          name='evening_snack.quantity'\r\n          variant='outlined'\r\n          error={Boolean(touched?.evening_snack?.quantity && errors?.evening_snack?.quantity)}\r\n          helperText={touched?.evening_snack?.quantity && errors?.evening_snack?.quantity}\r\n          value={values?.evening_snack?.quantity}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          fullWidth\r\n          label='Protein'\r\n          name='evening_snack.protein'\r\n          variant='outlined'\r\n          error={Boolean(touched?.evening_snack?.protein && errors?.evening_snack?.protein)}\r\n          helperText={touched?.evening_snack?.protein && errors?.evening_snack?.protein}\r\n          value={values?.evening_snack?.protein}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          fullWidth\r\n          label='Fat'\r\n          name='evening_snack.fat'\r\n          variant='outlined'\r\n          error={Boolean(touched?.evening_snack?.fat && errors?.evening_snack?.fat)}\r\n          helperText={touched?.evening_snack?.fat && errors?.evening_snack?.fat}\r\n          value={values?.evening_snack?.fat}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          fullWidth\r\n          label='Carbs'\r\n          name='evening_snack.carbs'\r\n          variant='outlined'\r\n          error={Boolean(touched?.evening_snack?.carbs && errors?.evening_snack?.carbs)}\r\n          helperText={touched?.evening_snack?.carbs && errors?.evening_snack?.carbs}\r\n          value={values?.evening_snack?.carbs}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          fullWidth\r\n          label='Calories'\r\n          name='evening_snack.calories'\r\n          variant='outlined'\r\n          error={Boolean(touched?.evening_snack?.calories && errors?.evening_snack?.calories)}\r\n          helperText={touched?.evening_snack?.calories && errors?.evening_snack?.calories}\r\n          value={values?.evening_snack?.calories}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid> */}\r\n\r\n{/* ................................................................................................................................. */}\r\n      {/* <Grid item xs={12}>\r\n        <Typography variant='h5' align='center'>\r\n          <strong>Dinner</strong>\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Autocomplete\r\n          multiple\r\n          id='tags-outlined5'\r\n          options={ingredientList}\r\n          getOptionLabel={(option: any) => option.name}\r\n          onChange={handleDinnerIngredient}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              variant='outlined'\r\n              label='Select Ingredients'\r\n              name = 'dinner.ingredients'\r\n              error={Boolean(\r\n                touched?.dinner?.ingredients &&\r\n                  touched?.dinner?.ingredients[0]?.id &&\r\n                  errors?.dinner?.ingredients &&\r\n                  (errors?.dinner?.ingredients[0] as any)?.id\r\n              )}\r\n              helperText={\r\n                touched?.dinner?.ingredients &&\r\n                touched?.dinner?.ingredients[0]?.id &&\r\n                errors?.dinner?.ingredients &&\r\n                (errors?.dinner?.ingredients[0] as any)?.id\r\n              }\r\n              inputProps={{\r\n                ...params.inputProps,\r\n              }}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          fullWidth\r\n          label='Quantity'\r\n          name='dinner.quantity'\r\n          variant='outlined'\r\n          error={Boolean(touched?.dinner?.quantity && errors?.dinner?.quantity)}\r\n          helperText={touched?.dinner?.quantity && errors?.dinner?.quantity}\r\n          value={values?.dinner?.quantity}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          fullWidth\r\n          label='Protein'\r\n          name='dinner.protein'\r\n          variant='outlined'\r\n          error={Boolean(touched?.dinner?.protein && errors?.dinner?.protein)}\r\n          helperText={touched?.dinner?.protein && errors?.dinner?.protein}\r\n          value={values?.dinner?.protein}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          fullWidth\r\n          label='Fat'\r\n          name='dinner.fat'\r\n          variant='outlined'\r\n          error={Boolean(touched?.dinner?.fat && errors?.dinner?.fat)}\r\n          helperText={touched?.dinner?.fat && errors?.dinner?.fat}\r\n          value={values?.dinner?.fat}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          fullWidth\r\n          label='Carbs'\r\n          name='dinner.carbs'\r\n          variant='outlined'\r\n          error={Boolean(touched?.dinner?.carbs && errors?.dinner?.carbs)}\r\n          helperText={touched?.dinner?.carbs && errors?.dinner?.carbs}\r\n          value={values?.dinner?.carbs}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          fullWidth\r\n          label='Calories'\r\n          name='dinner.calories'\r\n          variant='outlined'\r\n          error={Boolean(touched?.dinner?.calories && errors?.dinner?.calories)}\r\n          helperText={touched?.dinner?.calories && errors?.dinner?.calories}\r\n          value={values?.dinner?.calories}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        />\r\n      </Grid> */}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default AddEditModelTextFields;\r\n"]},"metadata":{},"sourceType":"module"}