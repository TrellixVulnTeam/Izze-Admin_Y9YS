{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pyramidion\\\\WebApp\\\\Izze-Admin\\\\src\\\\pages\\\\MealRecipe\\\\MealRecipe.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React from 'react';\nimport { Avatar, Button, Card, CardActions, CardContent, CircularProgress, Dialog, DialogActions, DialogContent, Grid, IconButton, makeStyles, Paper, Table, TableBody, FormControl, FormHelperText, TableCell, TableContainer, TableHead, TableRow, TextField, Tooltip, Typography } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { Pagination } from '@material-ui/lab';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { imageUpload } from '../../utils/FirebaseUtils';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\nimport useConfModel from '../../hook/useConfModel';\nimport useService from '../../hook/useService';\nimport useSnackbar from '../../hook/useSnackbar';\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport TimerIcon from '@material-ui/icons/Timer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: theme.breakpoints.values.lg,\n    maxWidth: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(3)\n  },\n  themeButton: {\n    color: theme.palette.white,\n    backgroundColor: theme.palette.green.main,\n    '&:hover': {\n      backgroundColor: theme.palette.green.dark\n    }\n  },\n  workouttermsavatar: {\n    width: '100%',\n    height: '100%'\n  },\n  deleteButton: {\n    width: '100%',\n    height: '50px'\n  },\n  timeText: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 700\n  },\n  actions: {\n    padding: theme.spacing(1),\n    justifyContent: 'center'\n  },\n  tabCard: {\n    marginTop: theme.spacing(3)\n  },\n  sEvenly: {\n    display: 'flex',\n    justifyContent: 'space-evenly'\n  },\n  iconPadd: {\n    padding: 5\n  },\n  jCenter: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  imageView: {\n    width: '100%',\n    height: '100%'\n  },\n  avatarRoot: {\n    borderRadius: 10,\n    marginRight: 15,\n    width: theme.spacing(10),\n    height: theme.spacing(10)\n  },\n  textPrimary: {\n    marginTop: 10,\n    fontWeight: 'bold'\n  },\n  textSecondary: {\n    marginTop: 10,\n    color: '#f0c100'\n  },\n  ingrdientsGridMain: {\n    marginTop: 10\n  },\n  ingredientsAvatarRoot: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n    margin: 'auto'\n  },\n  htmlContentGrid: {\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingTop: theme.spacing(1)\n  },\n  noIngredientsText: {\n    marginBottom: theme.spacing(3),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  htmlContent: {\n    '& ul': {\n      paddingLeft: '1.2rem'\n    },\n    '& p': {\n      textAlign: 'justify'\n    }\n  }\n}));\n\nfunction MealRecipe() {\n  _s();\n\n  const classes = useStyles();\n  const ConfModel = useConfModel();\n  const [loading, setLoading] = React.useState(false);\n  const [mealRecipeTableData, setMealRecipeTableData] = React.useState([]);\n  const [stateData, setStateData] = React.useState({\n    page_no: 1,\n    page_limit: 10\n  });\n  const [pageCount, setPageCount] = React.useState(0);\n  const {\n    Post\n  } = useService();\n  const Snackbar = useSnackbar();\n  const [addEditDialog, setAddEditDialog] = React.useState({\n    isOpen: false,\n    title: '',\n    okBtnText: '',\n    isEdit: false,\n    data: {}\n  });\n  const [viewDialog, setViewDialog] = React.useState({\n    isOpen: false,\n    title: '',\n    data: {}\n  });\n\n  const openAddDialog = () => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      title: 'Add Meal Recipe',\n      isEdit: false,\n      okBtnText: 'Save'\n    }));\n  };\n\n  const openEditDialog = data => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      isEdit: true,\n      data,\n      title: 'Edit Meal Recipe',\n      okBtnText: 'Edit'\n    }));\n  };\n\n  const openViewDialog = data => {\n    setViewDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      data,\n      title: 'View Meal Recipe'\n    }));\n  };\n\n  const listMealRecipies = async () => {\n    setLoading(true);\n    Post('app/listMealRecipe', stateData).then(res => {\n      setLoading(false);\n\n      if (!res.error) {\n        setMealRecipeTableData(res.data);\n        setPageCount(res.page_count);\n      } else {\n        Snackbar.show(res.message, 'error');\n      }\n    }).catch(err => {\n      setLoading(false);\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  const onDelete = data => {\n    const {\n      openModel,\n      setLoading,\n      closeModel\n    } = ConfModel;\n\n    const submitFunction = () => {\n      setLoading(true);\n      Post('app/deleteMealRecipe', {\n        id: data._id\n      }).then(async res => {\n        setLoading(false);\n        closeModel();\n        onSuccessAction();\n        Snackbar.show(res.message, 'success');\n      }).catch(err => {\n        setLoading(false);\n        Snackbar.show('Internal Server Error', 'error');\n      });\n    };\n\n    openModel(submitFunction);\n  };\n\n  const closeAddEditDialog = () => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: false\n    }));\n  };\n\n  const closeViewDialog = () => {\n    setViewDialog(prevState => ({ ...prevState,\n      isOpen: false\n    }));\n  };\n\n  const onSuccessAction = () => {\n    listMealRecipies();\n    closeAddEditDialog();\n  };\n\n  const setElipsis = text => {\n    return (text === null || text === void 0 ? void 0 : text.length) >= 25 ? `${text.substring(0, 40)}...` : text;\n  };\n\n  React.useEffect(() => {\n    listMealRecipies();\n  }, [stateData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      alignItems: \"flex-end\",\n      container: true,\n      justify: \"space-between\",\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h3\",\n          children: \"Meal Recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => openAddDialog(),\n          className: classes.themeButton,\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 24\n          }, this),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 0,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            size: \"small\",\n            placeholder: \"Name\",\n            variant: \"outlined\",\n            name: \"state\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.tabCard,\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        className: classes.content,\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"#\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Meal Recipe Image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Meal Recipe Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Meal Recipe Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: [!loading && mealRecipeTableData.map((data, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: stateData.page_limit * (stateData.page_no - 1) + index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: classes.jCenter,\n                    children: /*#__PURE__*/_jsxDEV(Avatar, {\n                      variant: \"square\",\n                      src: data === null || data === void 0 ? void 0 : data.image\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 292,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: data === null || data === void 0 ? void 0 : data.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: data === null || data === void 0 ? void 0 : data.preparation_description,\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: setElipsis(data === null || data === void 0 ? void 0 : data.preparation_description)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 298,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: classes.sEvenly,\n                    children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                      title: \"View\",\n                      arrow: true,\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        className: classes.iconPadd,\n                        onClick: () => openViewDialog(data),\n                        children: /*#__PURE__*/_jsxDEV(CenterFocusStrongIcon, {\n                          color: \"primary\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 308,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 304,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 303,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                      title: \"Edit\",\n                      arrow: true,\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        className: classes.iconPadd,\n                        onClick: () => openEditDialog(data),\n                        children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                          color: \"action\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 316,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 312,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 311,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                      title: \"Delete\",\n                      arrow: true,\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        className: classes.iconPadd,\n                        onClick: () => onDelete(data),\n                        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                          color: \"secondary\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 324,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 320,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 319,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 21\n              }, this)), loading && /*#__PURE__*/_jsxDEV(TableLoader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 29\n              }, this), !loading && mealRecipeTableData.length == 0 && /*#__PURE__*/_jsxDEV(TableNoData, {\n                children: \"No Data Found\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Pagination, {\n          count: pageCount,\n          page: stateData.page_no // onChange={onPageChange}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddEditModel, { ...addEditDialog,\n      onClose: closeAddEditDialog,\n      onSuccess: onSuccessAction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ViewModel, { ...viewDialog,\n      onClose: closeViewDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MealRecipe, \"XfnaDB4sT1zZ07Xu63DtxeOgblM=\", false, function () {\n  return [useStyles, useConfModel, useService, useSnackbar];\n});\n\n_c = MealRecipe;\nconst mealTerms = {\n  name: '',\n  image: {\n    file: null,\n    prevImage: '',\n    isNew: null\n  },\n  term: ''\n};\nconst ingredientsSelect = {\n  id: '',\n  quantity: ''\n};\nconst initialFormValues = {\n  name: '',\n  image: {\n    file: null,\n    prevImage: '',\n    isNew: null\n  },\n  nutrition: '',\n  description: '',\n  protein: '',\n  fat: '',\n  carbs: '',\n  terms: [mealTerms],\n  ingredients: [ingredientsSelect],\n  preparation_time: '',\n  preparation_description: ''\n};\nexport const AddEditModel = props => {\n  _s2();\n\n  const {\n    isEdit,\n    isOpen,\n    okBtnText = 'OK',\n    onClose,\n    data,\n    title,\n    onSuccess\n  } = props;\n  const classes = useStyles();\n  const [initialValues, setInitialValues] = React.useState({ ...initialFormValues\n  });\n  const formikRef = React.useRef(null);\n  const imageRef = React.useRef(null);\n  const avatharimgRef = React.useRef(null);\n  const [allIngredients, setAllIngredients] = React.useState([]);\n  const {\n    Post\n  } = useService();\n  const Snackbar = useSnackbar();\n\n  const onAvatarImageChange = (event, index) => {\n    event.persist();\n    const files = event.target.files;\n\n    if (files && files.length != 0) {\n      const reader = new FileReader();\n      const file = files[0];\n\n      reader.onloadend = () => {\n        formikRef.current.setFieldValue(`terms[${index}].image`, {\n          file,\n          prevImage: reader.result,\n          isNew: true\n        });\n      };\n\n      reader.readAsDataURL(file);\n    } else {\n      formikRef.current.setFieldValue('terms', {\n        workoutTermsName: '',\n        image: {\n          file: null,\n          prevImage: '',\n          isNew: null\n        },\n        description: ''\n      });\n    }\n  };\n\n  const onImageChange = event => {\n    event.persist();\n    const files = event.target.files;\n\n    if (files && files.length != 0) {\n      const reader = new FileReader();\n      const file = files[0];\n\n      reader.onloadend = () => {\n        formikRef.current.setFieldValue('image', {\n          file,\n          prevImage: reader.result,\n          isNew: true\n        });\n      };\n\n      reader.readAsDataURL(file);\n    } else {\n      formikRef.current.setFieldValue('image', {\n        workoutTermsName: '',\n        image: {\n          file: null,\n          prevImage: '',\n          isNew: null\n        },\n        description: ''\n      });\n    }\n  };\n\n  const onSubmit = (value, helper) => {\n    try {\n      helper.setSubmitting(true);\n\n      const renderSubmit = async () => {\n        const {\n          terms,\n          ...rest\n        } = value;\n        const postData = rest;\n        const TermPromiseArray = terms.map(async termData => {\n          let {\n            image,\n            ...rest\n          } = termData;\n          let {\n            isNew,\n            file\n          } = image;\n\n          if (isNew) {\n            return imageUpload(file).then(image => {\n              return {\n                image,\n                ...rest\n              };\n            });\n          } else {\n            return Promise.resolve({ ...rest,\n              image: file\n            });\n          }\n        });\n        Promise.all(TermPromiseArray).then(termData => {\n          postData.terms = termData;\n          let {\n            isNew,\n            file\n          } = postData.image;\n\n          if (isNew) {\n            return imageUpload(file);\n          } else {\n            return file;\n          }\n        }).then(imageUrl => {\n          postData.image = imageUrl;\n          !isEdit && addData(postData, helper);\n          isEdit && editData(postData, helper);\n        }).catch(err => {\n          console.log(err);\n          Snackbar.show('Internal Server Error', 'error');\n        });\n      };\n\n      renderSubmit();\n    } catch {\n      Snackbar.show('Image Upload Failed', 'error');\n    }\n  };\n\n  const addData = async (value, {\n    setSubmitting,\n    resetForm\n  }) => {\n    await console.log(value); //  await Post('app/addMealRecipe', value)\n    //     .then((res: any) => {\n    //       Snackbar.show(res.message, 'success');\n    //       setSubmitting(false);\n    //       resetForm();\n    //       onSuccess();\n    //     })\n    //     .catch((err: any) => {\n    //       Snackbar.show(err.message, 'error');\n    //     });\n  };\n\n  const editData = async (data, {\n    setSubmitting,\n    resetForm\n  }) => {\n    // setSubmitting(true);\n    console.log(data); //  await Post('app/editMealRecipe', data)\n    //     .then((res: any) => {\n    //       Snackbar.show(res.message, 'success');\n    //       setSubmitting(false);\n    //       resetForm();\n    //       onSuccess();\n    //     })\n    //     .catch((err: any) => {\n    //       Snackbar.show(err.message, 'error');\n    //     });\n  };\n\n  const listAllMealRecipe = () => {\n    Post('app/listAllMealIngredient', {}).then(res => {\n      if (!res.error) {\n        let getequipmentList = res.data.map(data => {\n          data.id = data._id;\n          return data;\n        });\n        setAllIngredients(getequipmentList);\n      } else {\n        Snackbar.show(res.message, 'error');\n      }\n    }).catch(err => {\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  React.useEffect(() => {\n    listAllMealRecipe();\n  }, []);\n  React.useEffect(() => {\n    if (isEdit) {\n      const {\n        terms,\n        image,\n        _id,\n        ingredients,\n        ...rest\n      } = data;\n      const editData = { ...rest,\n        id: _id\n      };\n      editData.image = {\n        file: image,\n        prevImage: image,\n        isNew: false\n      };\n      editData.ingredients = ingredients.map(data => {\n        return {\n          id: data._id,\n          quantity: data.quantity\n        };\n      });\n      editData.terms = terms.map(items => {\n        return {\n          name: items.name,\n          image: {\n            file: items.image,\n            prevImage: items.image,\n            isNew: false\n          },\n          term: items.term\n        };\n      });\n      setInitialValues(editData);\n    } else {\n      setInitialValues(initialFormValues);\n    }\n  }, [props]);\n\n  const addMealRecipeTerms = (values, setFieldValue) => {\n    const {\n      terms\n    } = values;\n    terms.push(mealTerms);\n    setFieldValue('terms', terms);\n  };\n\n  const removeMealRecipeTerms = (values, index, items) => {\n    const {\n      terms\n    } = values;\n    const sampleDummyArray = [...terms];\n    sampleDummyArray.splice(sampleDummyArray.indexOf(items), 1);\n    formikRef.current.setFieldValue('terms', sampleDummyArray);\n  };\n\n  const addIngredients = (values, setFieldValue) => {\n    const {\n      ingredients\n    } = values;\n    ingredients.push(ingredientsSelect);\n    setFieldValue('ingredients', ingredients);\n  };\n\n  const handleOptionChange = (event, value, index) => {\n    formikRef.current.setFieldValue(`ingredients[${index}].id`, value === null || value === void 0 ? void 0 : value.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isOpen,\n      disableBackdropClick: true,\n      disableEscapeKeyDown: true,\n      fullWidth: true,\n      maxWidth: \"md\",\n      \"aria-labelledby\": \"dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"dialog-title\",\n        onClose: onClose,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        innerRef: formikRef,\n        enableReinitialize: true,\n        initialValues: initialValues,\n        onSubmit: onSubmit,\n        validationSchema: Yup.object().shape({\n          name: Yup.string().trim().required('Name is required'),\n          nutrition: Yup.string().trim().required('Nutrition is required'),\n          description: Yup.string().trim().required('Description is required'),\n          protein: Yup.string().trim().required('Protein is required'),\n          fat: Yup.string().trim().required('Fat is required'),\n          carbs: Yup.string().trim().required('Carbs is required'),\n          terms: Yup.array().of(Yup.object().shape({\n            name: Yup.string().trim().required('Meal recipe name is Required'),\n            image: Yup.object({\n              file: Yup.mixed().required('required')\n            }),\n            term: Yup.string().trim().required('Meal Recipe terms is Required')\n          })),\n          ingredients: Yup.array().of(Yup.object().shape({\n            id: Yup.string().trim().required('Ingredients is Required'),\n            quantity: Yup.string().trim().required('Quantity is Required')\n          })),\n          preparation_time: Yup.string().trim().required('Preparation time is required'),\n          preparation_description: Yup.string().trim().required('Preparation description is required'),\n          image: Yup.object({\n            file: Yup.mixed().required('A file is required')\n          })\n        }),\n        children: ({\n          values,\n          errors,\n          touched,\n          handleBlur,\n          handleChange,\n          setFieldValue,\n          submitForm,\n          isSubmitting\n        }) => {\n          var _values$terms, _values$ingredients, _touched$image, _errors$image, _touched$image2, _errors$image2, _values$image, _values$image2;\n\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n              dividers: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Name\",\n                    name: \"name\",\n                    variant: \"outlined\",\n                    value: values.name,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.name && errors.name),\n                    helperText: touched.name && errors.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 671,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 670,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Nutrition\",\n                    name: \"nutrition\",\n                    variant: \"outlined\",\n                    value: values.nutrition,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.nutrition && errors.nutrition),\n                    helperText: touched.nutrition && errors.nutrition\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 688,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 687,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    multiline: true,\n                    label: \"Description\",\n                    name: \"description\",\n                    variant: \"outlined\",\n                    value: values.description,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.description && errors.description),\n                    helperText: touched.description && errors.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 705,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 704,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Protein\",\n                    name: \"protein\",\n                    variant: \"outlined\",\n                    value: values.protein,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.protein && errors.protein),\n                    helperText: touched.protein && errors.protein\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 723,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 722,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Fat\",\n                    name: \"fat\",\n                    variant: \"outlined\",\n                    value: values.fat,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.fat && errors.fat),\n                    helperText: touched.fat && errors.fat\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 740,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 739,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Carbs\",\n                    name: \"carbs\",\n                    variant: \"outlined\",\n                    value: values.carbs,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.carbs && errors.carbs),\n                    helperText: touched.carbs && errors.carbs\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 757,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 756,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 12,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    fullWidth: true,\n                    className: classes.themeButton,\n                    variant: \"contained\",\n                    color: \"default\",\n                    onClick: () => addMealRecipeTerms(values, setFieldValue),\n                    endIcon: /*#__PURE__*/_jsxDEV(ControlPointIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 780,\n                      columnNumber: 32\n                    }, this),\n                    children: \"Add Terms\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 774,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 773,\n                  columnNumber: 19\n                }, this), values === null || values === void 0 ? void 0 : (_values$terms = values.terms) === null || _values$terms === void 0 ? void 0 : _values$terms.map((items, index) => {\n                  var _items$image, _touched$terms$index, _touched$terms$index$, _errors$terms$index, _errors$terms$index$i, _touched$terms$index2, _touched$terms$index3, _errors$terms$index2, _errors$terms$index2$, _touched$terms$index4, _errors$terms$index3, _touched$terms$index5, _errors$terms$index4, _touched$terms$index6, _errors$terms$index5, _touched$terms$index7, _errors$terms$index6;\n\n                  return /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    container: true,\n                    md: 12,\n                    xs: 12,\n                    direction: \"row\",\n                    spacing: 2,\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      md: 1,\n                      xs: 12,\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        ref: avatharimgRef,\n                        type: \"file\",\n                        accept: \".jpg,.png,jpeg\",\n                        onChange: e => onAvatarImageChange(e, index),\n                        onBlur: handleBlur,\n                        hidden: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 797,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n                        className: classes.workouttermsavatar,\n                        variant: \"square\",\n                        onClick: () => avatharimgRef.current.click(),\n                        src: items === null || items === void 0 ? void 0 : (_items$image = items.image) === null || _items$image === void 0 ? void 0 : _items$image.prevImage\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 805,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                        error: Boolean((touched === null || touched === void 0 ? void 0 : touched.terms) && (touched === null || touched === void 0 ? void 0 : (_touched$terms$index = touched.terms[index]) === null || _touched$terms$index === void 0 ? void 0 : (_touched$terms$index$ = _touched$terms$index.image) === null || _touched$terms$index$ === void 0 ? void 0 : _touched$terms$index$.file) && (errors === null || errors === void 0 ? void 0 : errors.terms) && (errors === null || errors === void 0 ? void 0 : (_errors$terms$index = errors.terms[index]) === null || _errors$terms$index === void 0 ? void 0 : (_errors$terms$index$i = _errors$terms$index.image) === null || _errors$terms$index$i === void 0 ? void 0 : _errors$terms$index$i.file)),\n                        children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n                          children: (touched === null || touched === void 0 ? void 0 : touched.terms) && (touched === null || touched === void 0 ? void 0 : (_touched$terms$index2 = touched.terms[index]) === null || _touched$terms$index2 === void 0 ? void 0 : (_touched$terms$index3 = _touched$terms$index2.image) === null || _touched$terms$index3 === void 0 ? void 0 : _touched$terms$index3.file) && (errors === null || errors === void 0 ? void 0 : errors.terms) && (errors === null || errors === void 0 ? void 0 : (_errors$terms$index2 = errors.terms[index]) === null || _errors$terms$index2 === void 0 ? void 0 : (_errors$terms$index2$ = _errors$terms$index2.image) === null || _errors$terms$index2$ === void 0 ? void 0 : _errors$terms$index2$.file)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 819,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 811,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 796,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      md: 5,\n                      xs: 12,\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        fullWidth: true,\n                        multiline: true,\n                        label: \"Terms name\",\n                        name: `terms[${index}].name`,\n                        variant: \"outlined\",\n                        error: Boolean((touched === null || touched === void 0 ? void 0 : touched.terms) && (touched === null || touched === void 0 ? void 0 : (_touched$terms$index4 = touched.terms[index]) === null || _touched$terms$index4 === void 0 ? void 0 : _touched$terms$index4.name) && (errors === null || errors === void 0 ? void 0 : errors.terms) && (errors === null || errors === void 0 ? void 0 : (_errors$terms$index3 = errors.terms[index]) === null || _errors$terms$index3 === void 0 ? void 0 : _errors$terms$index3.name)),\n                        helperText: (touched === null || touched === void 0 ? void 0 : touched.terms) && (touched === null || touched === void 0 ? void 0 : (_touched$terms$index5 = touched.terms[index]) === null || _touched$terms$index5 === void 0 ? void 0 : _touched$terms$index5.name) && (errors === null || errors === void 0 ? void 0 : errors.terms) && (errors === null || errors === void 0 ? void 0 : (_errors$terms$index4 = errors.terms[index]) === null || _errors$terms$index4 === void 0 ? void 0 : _errors$terms$index4.name),\n                        value: items.name,\n                        onChange: handleChange,\n                        onBlur: handleBlur\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 829,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 828,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      md: 5,\n                      xs: 8,\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        fullWidth: true,\n                        multiline: true,\n                        label: \"Terms description\",\n                        name: `terms[${index}].term`,\n                        variant: \"outlined\",\n                        error: Boolean((touched === null || touched === void 0 ? void 0 : touched.terms) && (touched === null || touched === void 0 ? void 0 : (_touched$terms$index6 = touched.terms[index]) === null || _touched$terms$index6 === void 0 ? void 0 : _touched$terms$index6.term) && (errors === null || errors === void 0 ? void 0 : errors.terms) && (errors === null || errors === void 0 ? void 0 : (_errors$terms$index5 = errors.terms[index]) === null || _errors$terms$index5 === void 0 ? void 0 : _errors$terms$index5.term)),\n                        helperText: (touched === null || touched === void 0 ? void 0 : touched.terms) && (touched === null || touched === void 0 ? void 0 : (_touched$terms$index7 = touched.terms[index]) === null || _touched$terms$index7 === void 0 ? void 0 : _touched$terms$index7.term) && (errors === null || errors === void 0 ? void 0 : errors.terms) && (errors === null || errors === void 0 ? void 0 : (_errors$terms$index6 = errors.terms[index]) === null || _errors$terms$index6 === void 0 ? void 0 : _errors$terms$index6.term),\n                        value: items.term,\n                        onChange: handleChange,\n                        onBlur: handleBlur\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 853,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 852,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      md: 1,\n                      xs: 4,\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        fullWidth: true,\n                        className: classes.deleteButton,\n                        variant: \"contained\",\n                        color: \"secondary\",\n                        onClick: () => removeMealRecipeTerms(values, index, items),\n                        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 885,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 878,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 877,\n                      columnNumber: 23\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 787,\n                    columnNumber: 21\n                  }, this);\n                }), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 12,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    fullWidth: true,\n                    className: classes.themeButton,\n                    variant: \"contained\",\n                    color: \"default\",\n                    onClick: () => addIngredients(values, setFieldValue),\n                    endIcon: /*#__PURE__*/_jsxDEV(ControlPointIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 898,\n                      columnNumber: 32\n                    }, this),\n                    children: \"Add Ingredients\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 892,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 891,\n                  columnNumber: 19\n                }, this), values === null || values === void 0 ? void 0 : (_values$ingredients = values.ingredients) === null || _values$ingredients === void 0 ? void 0 : _values$ingredients.map((items, index) => {\n                  var _touched$ingredients$3, _errors$ingredients$i3, _touched$ingredients$4, _errors$ingredients$i4;\n\n                  return /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    container: true,\n                    md: 12,\n                    xs: 12,\n                    direction: \"row\",\n                    spacing: 2,\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      md: 5,\n                      xs: 12,\n                      children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                        fullWidth: true,\n                        options: allIngredients,\n                        value: allIngredients.find(data => data._id == items.id),\n                        getOptionLabel: option => option.name,\n                        getOptionSelected: option => option.id == items.id,\n                        onChange: (event, newValue) => handleOptionChange(event, newValue, index),\n                        onBlur: handleBlur,\n                        renderInput: params => {\n                          var _touched$ingredients$, _errors$ingredients$i, _touched$ingredients$2, _errors$ingredients$i2;\n\n                          return /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                            label: \"Ingredients\",\n                            variant: \"outlined\",\n                            error: Boolean((touched === null || touched === void 0 ? void 0 : touched.ingredients) && (touched === null || touched === void 0 ? void 0 : (_touched$ingredients$ = touched.ingredients[index]) === null || _touched$ingredients$ === void 0 ? void 0 : _touched$ingredients$.id) && (errors === null || errors === void 0 ? void 0 : errors.ingredients) && (errors === null || errors === void 0 ? void 0 : (_errors$ingredients$i = errors.ingredients[index]) === null || _errors$ingredients$i === void 0 ? void 0 : _errors$ingredients$i.id)),\n                            helperText: (touched === null || touched === void 0 ? void 0 : touched.ingredients) && (touched === null || touched === void 0 ? void 0 : (_touched$ingredients$2 = touched.ingredients[index]) === null || _touched$ingredients$2 === void 0 ? void 0 : _touched$ingredients$2.id) && (errors === null || errors === void 0 ? void 0 : errors.ingredients) && (errors === null || errors === void 0 ? void 0 : (_errors$ingredients$i2 = errors.ingredients[index]) === null || _errors$ingredients$i2 === void 0 ? void 0 : _errors$ingredients$i2.id),\n                            inputProps: { ...params.inputProps\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 928,\n                            columnNumber: 29\n                          }, this);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 915,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 914,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      md: 6,\n                      xs: 8,\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        fullWidth: true,\n                        multiline: true,\n                        label: \"Quantity\",\n                        name: `ingredients[${index}].quantity`,\n                        variant: \"outlined\",\n                        error: Boolean((touched === null || touched === void 0 ? void 0 : touched.ingredients) && (touched === null || touched === void 0 ? void 0 : (_touched$ingredients$3 = touched.ingredients[index]) === null || _touched$ingredients$3 === void 0 ? void 0 : _touched$ingredients$3.quantity) && (errors === null || errors === void 0 ? void 0 : errors.ingredients) && (errors === null || errors === void 0 ? void 0 : (_errors$ingredients$i3 = errors.ingredients[index]) === null || _errors$ingredients$i3 === void 0 ? void 0 : _errors$ingredients$i3.quantity)),\n                        helperText: (touched === null || touched === void 0 ? void 0 : touched.ingredients) && (touched === null || touched === void 0 ? void 0 : (_touched$ingredients$4 = touched.ingredients[index]) === null || _touched$ingredients$4 === void 0 ? void 0 : _touched$ingredients$4.quantity) && (errors === null || errors === void 0 ? void 0 : errors.ingredients) && (errors === null || errors === void 0 ? void 0 : (_errors$ingredients$i4 = errors.ingredients[index]) === null || _errors$ingredients$i4 === void 0 ? void 0 : _errors$ingredients$i4.quantity),\n                        value: items.quantity,\n                        onChange: handleChange,\n                        onBlur: handleBlur\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 952,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 951,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      md: 1,\n                      xs: 4,\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        fullWidth: true,\n                        className: classes.deleteButton,\n                        variant: \"contained\",\n                        color: \"secondary\" // onClick={() =>\n                        //   removeIngredients(values, index, setFieldValue)\n                        // }\n                        ,\n                        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 986,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 977,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 976,\n                      columnNumber: 23\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 905,\n                    columnNumber: 21\n                  }, this);\n                }), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Preparation Time\",\n                    name: \"preparation_time\",\n                    variant: \"outlined\",\n                    value: values.preparation_time,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.preparation_time && errors.preparation_time),\n                    helperText: touched.preparation_time && errors.preparation_time\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 993,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 992,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    multiline: true,\n                    label: \"Preparation Description\",\n                    name: \"preparation_description\",\n                    variant: \"outlined\",\n                    value: values.preparation_description,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    error: Boolean(touched.preparation_description && errors.preparation_description),\n                    helperText: touched.preparation_description && errors.preparation_description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1010,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1009,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 12,\n                  xs: 12,\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    name: \"image\",\n                    ref: imageRef,\n                    type: \"file\",\n                    accept: \".jpg,.png,jpeg\",\n                    onChange: onImageChange,\n                    onBlur: handleBlur,\n                    hidden: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1028,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    fullWidth: true,\n                    className: classes.themeButton,\n                    variant: \"contained\",\n                    color: \"default\",\n                    onClick: () => imageRef.current.click(),\n                    startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1043,\n                      columnNumber: 34\n                    }, this),\n                    children: \"Upload Image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1037,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                    error: Boolean((touched === null || touched === void 0 ? void 0 : (_touched$image = touched.image) === null || _touched$image === void 0 ? void 0 : _touched$image.file) && (errors === null || errors === void 0 ? void 0 : (_errors$image = errors.image) === null || _errors$image === void 0 ? void 0 : _errors$image.file)),\n                    children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n                      children: (touched === null || touched === void 0 ? void 0 : (_touched$image2 = touched.image) === null || _touched$image2 === void 0 ? void 0 : _touched$image2.file) && (errors === null || errors === void 0 ? void 0 : (_errors$image2 = errors.image) === null || _errors$image2 === void 0 ? void 0 : _errors$image2.file)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1052,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1047,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1027,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 12,\n                  xs: 12,\n                  children: ((_values$image = values.image) === null || _values$image === void 0 ? void 0 : _values$image.prevImage) && /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: classes.imageView,\n                    src: (_values$image2 = values.image) === null || _values$image2 === void 0 ? void 0 : _values$image2.prevImage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1060,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1058,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 669,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: onClose,\n                variant: \"outlined\",\n                color: \"secondary\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1069,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: classes.themeButton,\n                onClick: () => submitForm(),\n                disabled: isSubmitting,\n                variant: \"outlined\",\n                children: isSubmitting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  size: 24,\n                  style: {\n                    color: 'white'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1080,\n                  columnNumber: 21\n                }, this) : okBtnText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1073,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1068,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s2(AddEditModel, \"HQW/i8C9cubPBhfh+dqUp2xOtGM=\", false, function () {\n  return [useStyles, useService, useSnackbar];\n});\n\n_c2 = AddEditModel;\nexport const ViewModel = props => {\n  _s3();\n\n  var _formValue$ingredient, _formValue$workout_te, _formValue$terms, _formValue$required_e;\n\n  const {\n    isOpen,\n    title,\n    onClose,\n    data\n  } = props;\n  const classes = useStyles();\n  const [formValue, setFormValue] = React.useState(data);\n  React.useEffect(() => {\n    setFormValue(data);\n  }, [props]);\n  console.log(formValue);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    disableBackdropClick: true,\n    disableEscapeKeyDown: true,\n    fullWidth: true,\n    maxWidth: \"md\",\n    \"aria-labelledby\": \"dialog-view-title\",\n    open: isOpen,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"dialog-view-title\",\n      onClose: onClose,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: formValue === null || formValue === void 0 ? void 0 : formValue.image,\n          alt: 'Workout image',\n          className: classes.imageView\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        style: {\n          marginTop: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: /*#__PURE__*/_jsxDEV(TableBody, {\n            children: [/*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1127,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: formValue === null || formValue === void 0 ? void 0 : formValue.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1129,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1128,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1133,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: formValue === null || formValue === void 0 ? void 0 : formValue.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1135,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1134,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Nutrition\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1139,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: formValue === null || formValue === void 0 ? void 0 : formValue.nutrition\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1141,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1140,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Proteins\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1145,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: formValue === null || formValue === void 0 ? void 0 : formValue.protein\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1147,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1146,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Fat\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1151,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: formValue === null || formValue === void 0 ? void 0 : formValue.fat\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1153,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1152,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Carbs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1157,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: formValue === null || formValue === void 0 ? void 0 : formValue.carbs\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1159,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1158,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1156,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1125,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        align: \"left\",\n        style: {\n          color: '#41A58D'\n        },\n        className: classes.textPrimary,\n        children: \"INGREDIENTS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        className: classes.ingrdientsGridMain,\n        justify: \"center\",\n        children: [formValue === null || formValue === void 0 ? void 0 : (_formValue$ingredient = formValue.ingredients) === null || _formValue$ingredient === void 0 ? void 0 : _formValue$ingredient.map((value, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          md: 3,\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            className: classes.ingredientsAvatarRoot,\n            src: value === null || value === void 0 ? void 0 : value.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1178,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            align: \"center\",\n            children: value === null || value === void 0 ? void 0 : value.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1182,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            align: \"center\",\n            children: value.description.length >= 25 ? `${value.description.substring(0, 30)}...` : value.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1185,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1177,\n          columnNumber: 13\n        }, this)), (formValue === null || formValue === void 0 ? void 0 : (_formValue$workout_te = formValue.workout_terms) === null || _formValue$workout_te === void 0 ? void 0 : _formValue$workout_te.length) == 0 && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 12,\n          className: classes.noIngredientsText,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"No Ingredients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1194,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1193,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        align: \"left\",\n        className: classes.textSecondary,\n        children: formValue === null || formValue === void 0 ? void 0 : formValue.workout_description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        align: \"left\",\n        style: {\n          color: '#41A58D'\n        },\n        className: classes.textPrimary,\n        children: \"MEAL RECIPE TERMS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        className: classes.ingrdientsGridMain,\n        justify: \"center\",\n        children: [formValue === null || formValue === void 0 ? void 0 : (_formValue$terms = formValue.terms) === null || _formValue$terms === void 0 ? void 0 : _formValue$terms.map((value, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          md: 3,\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            className: classes.ingredientsAvatarRoot,\n            src: value === null || value === void 0 ? void 0 : value.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1214,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            align: \"center\",\n            children: value === null || value === void 0 ? void 0 : value.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1218,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            align: \"center\",\n            children: value.term.length >= 25 ? `${value.term.substring(0, 30)}...` : value.term\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1221,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1213,\n          columnNumber: 13\n        }, this)), (formValue === null || formValue === void 0 ? void 0 : (_formValue$required_e = formValue.required_equipments) === null || _formValue$required_e === void 0 ? void 0 : _formValue$required_e.length) == 0 && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 12,\n          className: classes.noIngredientsText,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"No Ingredients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1230,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1229,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            align: \"left\",\n            style: {\n              color: '#41A58D'\n            },\n            className: classes.textPrimary,\n            children: \"PREPARATION TIME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            align: \"center\",\n            className: classes.timeText,\n            children: [/*#__PURE__*/_jsxDEV(TimerIcon, {\n              fontSize: \"inherit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1241,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: formValue === null || formValue === void 0 ? void 0 : formValue.preparation_time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1242,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1240,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 12,\n          className: classes.htmlContentGrid,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.htmlContent,\n            children: formValue === null || formValue === void 0 ? void 0 : formValue.preparation_description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1246,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        variant: \"outlined\",\n        color: \"secondary\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1252,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1251,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1103,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(ViewModel, \"9fAd9pqRjf29KhbDlYBUKf2/COQ=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = ViewModel;\nexport default MealRecipe;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MealRecipe\");\n$RefreshReg$(_c2, \"AddEditModel\");\n$RefreshReg$(_c3, \"ViewModel\");","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/pages/MealRecipe/MealRecipe.tsx"],"names":["React","Avatar","Button","Card","CardActions","CardContent","CircularProgress","Dialog","DialogActions","DialogContent","Grid","IconButton","makeStyles","Paper","Table","TableBody","FormControl","FormHelperText","TableCell","TableContainer","TableHead","TableRow","TextField","Tooltip","Typography","AddIcon","CenterFocusStrongIcon","DeleteIcon","EditIcon","Pagination","Autocomplete","imageUpload","Formik","Yup","DialogTitle","TableLoader","TableNoData","useConfModel","useService","useSnackbar","ControlPointIcon","CloudUploadIcon","TimerIcon","useStyles","theme","root","width","breakpoints","values","lg","maxWidth","margin","padding","spacing","themeButton","color","palette","white","backgroundColor","green","main","dark","workouttermsavatar","height","deleteButton","timeText","display","alignItems","content","inner","minWidth","actions","justifyContent","tabCard","marginTop","sEvenly","iconPadd","jCenter","imageView","avatarRoot","borderRadius","marginRight","textPrimary","fontWeight","textSecondary","ingrdientsGridMain","ingredientsAvatarRoot","htmlContentGrid","paddingLeft","paddingRight","paddingTop","noIngredientsText","marginBottom","htmlContent","textAlign","MealRecipe","classes","ConfModel","loading","setLoading","useState","mealRecipeTableData","setMealRecipeTableData","stateData","setStateData","page_no","page_limit","pageCount","setPageCount","Post","Snackbar","addEditDialog","setAddEditDialog","isOpen","title","okBtnText","isEdit","data","viewDialog","setViewDialog","openAddDialog","prevState","openEditDialog","openViewDialog","listMealRecipies","then","res","error","page_count","show","message","catch","err","onDelete","openModel","closeModel","submitFunction","id","_id","onSuccessAction","closeAddEditDialog","closeViewDialog","setElipsis","text","length","substring","useEffect","map","index","image","name","preparation_description","mealTerms","file","prevImage","isNew","term","ingredientsSelect","quantity","initialFormValues","nutrition","description","protein","fat","carbs","terms","ingredients","preparation_time","AddEditModel","props","onClose","onSuccess","initialValues","setInitialValues","formikRef","useRef","imageRef","avatharimgRef","allIngredients","setAllIngredients","onAvatarImageChange","event","persist","files","target","reader","FileReader","onloadend","current","setFieldValue","result","readAsDataURL","workoutTermsName","onImageChange","onSubmit","value","helper","setSubmitting","renderSubmit","rest","postData","TermPromiseArray","termData","Promise","resolve","all","imageUrl","addData","editData","console","log","resetForm","listAllMealRecipe","getequipmentList","items","addMealRecipeTerms","push","removeMealRecipeTerms","sampleDummyArray","splice","indexOf","addIngredients","handleOptionChange","object","shape","string","trim","required","array","of","mixed","errors","touched","handleBlur","handleChange","submitForm","isSubmitting","Boolean","e","click","find","option","newValue","params","inputProps","ViewModel","formValue","setFormValue","workout_terms","workout_description","required_equipments"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Avatar, Button, Card, CardActions, CardContent, CircularProgress, Dialog, DialogActions, DialogContent, Grid, IconButton, makeStyles, Paper, Tab, Table, TableBody, FormControl, FormHelperText, TableCell, TableContainer, TableHead, TableRow, TextField, Tooltip, Divider, Typography, Tabs } from '@material-ui/core';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Pagination, TabContext, TabList, TabPanel } from '@material-ui/lab';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { imageUpload } from '../../utils/FirebaseUtils';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\r\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\r\nimport Page from '../../components/Page/Page';\r\nimport useConfModel from '../../hook/useConfModel';\r\nimport useService from '../../hook/useService';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\n\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  root: {\r\n    width: theme.breakpoints.values.lg,\r\n    maxWidth: '100%',\r\n    margin: '0 auto',\r\n    padding: theme.spacing(3),\r\n  },\r\n  themeButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n  },\r\n  workouttermsavatar: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  deleteButton: {\r\n    width: '100%',\r\n    height: '50px',\r\n  },\r\n  timeText: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  inner: {\r\n    minWidth: 700,\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(1),\r\n    justifyContent: 'center',\r\n  },\r\n  tabCard: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  sEvenly: {\r\n    display: 'flex',\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  iconPadd: {\r\n    padding: 5,\r\n  },\r\n  jCenter: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  imageView: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  avatarRoot: {\r\n    borderRadius: 10,\r\n    marginRight: 15,\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10),\r\n  },\r\n  textPrimary: {\r\n    marginTop: 10,\r\n    fontWeight: 'bold',\r\n  },\r\n  textSecondary: {\r\n    marginTop: 10,\r\n    color: '#f0c100',\r\n  },\r\n  ingrdientsGridMain: {\r\n    marginTop: 10,\r\n  },\r\n  ingredientsAvatarRoot: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n    margin: 'auto',\r\n  },\r\n  htmlContentGrid: {\r\n    paddingLeft: theme.spacing(3),\r\n    paddingRight: theme.spacing(3),\r\n    paddingTop: theme.spacing(1),\r\n  },\r\n  noIngredientsText: {\r\n    marginBottom: theme.spacing(3),\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  htmlContent: {\r\n    '& ul': {\r\n      paddingLeft: '1.2rem',\r\n    },\r\n    '& p': {\r\n      textAlign: 'justify',\r\n    },\r\n  },\r\n}))\r\n\r\nfunction MealRecipe() {\r\n  const classes = useStyles();\r\n  const ConfModel = useConfModel();\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [mealRecipeTableData, setMealRecipeTableData] = React.useState([]);\r\n  const [stateData, setStateData] = React.useState({ page_no: 1, page_limit: 10 });\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const { Post } = useService();\r\n  const Snackbar = useSnackbar();\r\n  const [addEditDialog, setAddEditDialog] = React.useState({\r\n    isOpen: false,\r\n    title: '',\r\n    okBtnText: '',\r\n    isEdit: false,\r\n    data: {},\r\n  });\r\n  const [viewDialog, setViewDialog] = React.useState({\r\n    isOpen: false,\r\n    title: '',\r\n    data: {},\r\n  });\r\n\r\n  const openAddDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      title: 'Add Meal Recipe',\r\n      isEdit: false,\r\n      okBtnText: 'Save',\r\n    }));\r\n  };\r\n\r\n  const openEditDialog = (data: any) => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      isEdit: true,\r\n      data,\r\n      title: 'Edit Meal Recipe',\r\n      okBtnText: 'Edit',\r\n    }));\r\n  };\r\n\r\n  const openViewDialog = (data: any) => {\r\n    setViewDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      data,\r\n      title: 'View Meal Recipe',\r\n    }));\r\n  };\r\n\r\n  const listMealRecipies = async () => {\r\n    setLoading(true);\r\n    Post('app/listMealRecipe', stateData)\r\n      .then((res: any) => {\r\n        setLoading(false);\r\n        if (!res.error) {\r\n          setMealRecipeTableData(res.data);\r\n          setPageCount(res.page_count);\r\n        } else {\r\n          Snackbar.show(res.message, 'error');\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        setLoading(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const onDelete = (data: any) => {\r\n    const { openModel, setLoading, closeModel } = ConfModel;\r\n    const submitFunction = () => {\r\n      setLoading(true);\r\n      Post('app/deleteMealRecipe', { id: data._id })\r\n        .then(async (res: any) => {\r\n          setLoading(false);\r\n          closeModel();\r\n          onSuccessAction();\r\n          Snackbar.show(res.message, 'success');\r\n        })\r\n        .catch((err: any) => {\r\n          setLoading(false);\r\n          Snackbar.show('Internal Server Error', 'error');\r\n        });\r\n    };\r\n    openModel(submitFunction);\r\n  };\r\n\r\n  const closeAddEditDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const closeViewDialog = () => {\r\n    setViewDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const onSuccessAction = () => {\r\n    listMealRecipies();\r\n    closeAddEditDialog();\r\n  };\r\n\r\n\r\n  const setElipsis = (text: any) => {\r\n    return text?.length >= 25 ? `${text.substring(0, 40)}...` : text;\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    listMealRecipies();\r\n  }, [stateData]);\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid alignItems='flex-end' container justify='space-between' spacing={3}>\r\n        <Grid item>\r\n          <Typography component='h1' variant='h3'>\r\n            Meal Recipe\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant='contained'\r\n            onClick={() => openAddDialog()}\r\n            className={classes.themeButton}\r\n            startIcon={<AddIcon />}\r\n          >\r\n            Add\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* =============Search======== */}\r\n      <Grid container spacing={3}>\r\n        <Grid item>\r\n          <Paper elevation={0}>\r\n            <TextField\r\n              fullWidth\r\n              size='small'\r\n              placeholder='Name'\r\n              variant='outlined'\r\n              name='state'\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Card className={classes.tabCard}>\r\n        <CardContent className={classes.content}>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align='center'>#</TableCell>\r\n                  <TableCell align='center'>Meal Recipe Image</TableCell>\r\n                  <TableCell align='center'>Meal Recipe Name</TableCell>\r\n                  <TableCell align='center'>Meal Recipe Description</TableCell>\r\n                  <TableCell align='center'>Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {!loading &&\r\n                  mealRecipeTableData.map((data: any, index: number) => (\r\n                    <TableRow hover key={index}>\r\n                      <TableCell align='center'>\r\n                        {stateData.page_limit * (stateData.page_no - 1) +\r\n                          index +\r\n                          1}\r\n                      </TableCell>\r\n                      <TableCell align='center'>\r\n                        <div className={classes.jCenter}>\r\n                          <Avatar variant='square' src={data?.image} />\r\n                        </div>\r\n                      </TableCell>\r\n                      <TableCell align='center'>{data?.name}</TableCell>\r\n                      <TableCell align='center'>\r\n                        <Tooltip title={data?.preparation_description}>\r\n                          <span>{setElipsis(data?.preparation_description)}</span>\r\n                        </Tooltip>\r\n                      </TableCell>\r\n                      <TableCell align='center'>\r\n                        <div className={classes.sEvenly}>\r\n                          <Tooltip title='View' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openViewDialog(data)}\r\n                            >\r\n                              <CenterFocusStrongIcon color='primary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Edit' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openEditDialog(data)}\r\n                            >\r\n                              <EditIcon color='action' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Delete' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => onDelete(data)}\r\n                            >\r\n                              <DeleteIcon color='secondary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                {loading && <TableLoader />}\r\n                {!loading && mealRecipeTableData.length == 0 && (\r\n                  <TableNoData>No Data Found</TableNoData>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </CardContent>\r\n\r\n        <CardActions className={classes.actions}>\r\n          <Pagination\r\n            count={pageCount}\r\n            page={stateData.page_no}\r\n          // onChange={onPageChange}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n\r\n      <AddEditModel\r\n        {...addEditDialog}\r\n        onClose={closeAddEditDialog}\r\n        onSuccess={onSuccessAction}\r\n      />\r\n\r\n      <ViewModel {...viewDialog} onClose={closeViewDialog} />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\ninterface MealTerms {\r\n  name: string,\r\n  image: { file: string | null, prevImage: string, isNew: boolean | null },\r\n  term: string\r\n}\r\n\r\ninterface Ingredients {\r\n  id: string,\r\n  quantity: string\r\n}\r\n\r\ninterface MealPlan {\r\n  name: string,\r\n  image: { file: string | null, prevImage: string, isNew: boolean | null },\r\n  nutrition: string,\r\n  description: string,\r\n  protein: string,\r\n  fat: string,\r\n  carbs: string,\r\n  terms: MealTerms[],\r\n  ingredients: Ingredients[],\r\n  preparation_time: string,\r\n  preparation_description: string\r\n\r\n}\r\n\r\nconst mealTerms: MealTerms = {\r\n  name: '',\r\n  image: { file: null, prevImage: '', isNew: null },\r\n  term: ''\r\n}\r\n\r\nconst ingredientsSelect: Ingredients = {\r\n  id: '',\r\n  quantity: ''\r\n}\r\n\r\nconst initialFormValues: MealPlan = {\r\n  name: '',\r\n  image: { file: null, prevImage: '', isNew: null },\r\n  nutrition: '',\r\n  description: '',\r\n  protein: '',\r\n  fat: '',\r\n  carbs: '',\r\n  terms: [mealTerms],\r\n  ingredients: [ingredientsSelect],\r\n  preparation_time: '',\r\n  preparation_description: ''\r\n}\r\n\r\nexport const AddEditModel = (props: any) => {\r\n  const { isEdit, isOpen, okBtnText = 'OK', onClose, data, title, onSuccess } = props;\r\n  const classes = useStyles()\r\n  const [initialValues, setInitialValues] = React.useState({ ...initialFormValues });\r\n  const formikRef = React.useRef<any>(null);\r\n  const imageRef = React.useRef<any>(null);\r\n  const avatharimgRef = React.useRef<any>(null);\r\n  const [allIngredients, setAllIngredients] = React.useState([])\r\n  const { Post } = useService();\r\n  const Snackbar = useSnackbar();\r\n\r\n  const onAvatarImageChange = (event: React.ChangeEvent<HTMLInputElement>, index: any) => {\r\n    event.persist();\r\n    const files = event.target.files;\r\n    if (files && files.length != 0) {\r\n      const reader = new FileReader();\r\n      const file = files[0];\r\n      reader.onloadend = () => {\r\n        formikRef.current.setFieldValue(`terms[${index}].image`, {\r\n          file,\r\n          prevImage: reader.result,\r\n          isNew: true,\r\n        });\r\n      };\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      formikRef.current.setFieldValue('terms', {\r\n        workoutTermsName: '',\r\n        image: { file: null, prevImage: '', isNew: null },\r\n        description: '',\r\n      });\r\n    }\r\n  }\r\n\r\n  const onImageChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    event.persist();\r\n    const files = event.target.files;\r\n    if (files && files.length != 0) {\r\n      const reader = new FileReader();\r\n      const file = files[0];\r\n      reader.onloadend = () => {\r\n        formikRef.current.setFieldValue('image', {\r\n          file,\r\n          prevImage: reader.result,\r\n          isNew: true,\r\n        });\r\n      };\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      formikRef.current.setFieldValue('image', {\r\n        workoutTermsName: '',\r\n        image: { file: null, prevImage: '', isNew: null },\r\n        description: '',\r\n      });\r\n    }\r\n  }\r\n\r\n  const onSubmit = (value: any, helper: any) => {\r\n    try {\r\n      helper.setSubmitting(true)\r\n\r\n      const renderSubmit = async () => {\r\n        const { terms, ...rest } = value;\r\n        const postData = rest;\r\n\r\n        const TermPromiseArray = terms.map(async (termData: any) => {\r\n          let { image, ...rest } = termData\r\n          let { isNew, file } = image\r\n          if (isNew) {\r\n            return imageUpload(file).then((image) => {\r\n              return { image, ...rest }\r\n            })\r\n          }\r\n          else {\r\n            return Promise.resolve({ ...rest, image: file })\r\n          }\r\n        })\r\n\r\n        Promise.all(TermPromiseArray).then((termData: any) => {\r\n          postData.terms = termData;\r\n\r\n          let { isNew, file } = postData.image;\r\n          if (isNew) {\r\n            return imageUpload(file)\r\n          }\r\n          else {\r\n            return file;\r\n          }\r\n        }).then((imageUrl: any) => {\r\n          postData.image = imageUrl\r\n          !isEdit && addData(postData, helper);\r\n          isEdit && editData(postData, helper);\r\n        }).catch((err: any) => {\r\n          console.log(err)\r\n          Snackbar.show('Internal Server Error', 'error');\r\n        });\r\n      }\r\n      renderSubmit()\r\n    }\r\n    catch {\r\n      Snackbar.show('Image Upload Failed', 'error');\r\n    }\r\n  }\r\n\r\n  const addData = async (value: any, { setSubmitting, resetForm }: any) => {\r\n    await console.log(value)\r\n    //  await Post('app/addMealRecipe', value)\r\n    //     .then((res: any) => {\r\n    //       Snackbar.show(res.message, 'success');\r\n    //       setSubmitting(false);\r\n    //       resetForm();\r\n    //       onSuccess();\r\n    //     })\r\n    //     .catch((err: any) => {\r\n    //       Snackbar.show(err.message, 'error');\r\n    //     });\r\n  };\r\n\r\n  const editData = async (data: any, { setSubmitting, resetForm }: any) => {\r\n    // setSubmitting(true);\r\n    console.log(data)\r\n    //  await Post('app/editMealRecipe', data)\r\n    //     .then((res: any) => {\r\n    //       Snackbar.show(res.message, 'success');\r\n    //       setSubmitting(false);\r\n    //       resetForm();\r\n    //       onSuccess();\r\n    //     })\r\n    //     .catch((err: any) => {\r\n    //       Snackbar.show(err.message, 'error');\r\n    //     });\r\n  };\r\n\r\n  const listAllMealRecipe = () => {\r\n    Post('app/listAllMealIngredient', {})\r\n      .then((res: any) => {\r\n        if (!res.error) {\r\n          let getequipmentList = res.data.map((data: any) => {\r\n            data.id = data._id;\r\n            return data;\r\n          });\r\n          setAllIngredients(getequipmentList);\r\n        } else {\r\n          Snackbar.show(res.message, 'error');\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    listAllMealRecipe();\r\n  }, [])\r\n\r\n  React.useEffect(() => {\r\n    if (isEdit) {\r\n      const { terms, image, _id, ingredients, ...rest } = data;\r\n      const editData = { ...rest, id: _id };\r\n      editData.image = { file: image, prevImage: image, isNew: false };\r\n      editData.ingredients = ingredients.map((data: any) => {\r\n        return {\r\n          id: data._id,\r\n          quantity: data.quantity\r\n        }\r\n      })\r\n\r\n      editData.terms = terms.map((items: any) => {\r\n        return {\r\n          name: items.name,\r\n          image: { file: items.image, prevImage: items.image, isNew: false },\r\n          term: items.term\r\n        }\r\n      })\r\n      setInitialValues(editData)\r\n    }\r\n    else {\r\n      setInitialValues(initialFormValues)\r\n    }\r\n  }, [props])\r\n\r\n  const addMealRecipeTerms = (values: MealPlan, setFieldValue: any) => {\r\n    const { terms } = values\r\n    terms.push(mealTerms);\r\n    setFieldValue('terms', terms)\r\n  }\r\n\r\n  const removeMealRecipeTerms = (values: MealPlan, index: any, items: any) => {\r\n    const { terms } = values;\r\n    const sampleDummyArray = [...terms];\r\n    sampleDummyArray.splice(sampleDummyArray.indexOf(items), 1)\r\n    formikRef.current.setFieldValue('terms', sampleDummyArray);\r\n  }\r\n\r\n  const addIngredients = (values: MealPlan, setFieldValue: any) => {\r\n    const { ingredients } = values;\r\n    ingredients.push(ingredientsSelect)\r\n    setFieldValue('ingredients', ingredients)\r\n  }\r\n\r\n  const handleOptionChange = (event: React.ChangeEvent<HTMLInputElement>, value: any, index: any) => {\r\n    formikRef.current.setFieldValue(`ingredients[${index}].id`, value?.id);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={isOpen}\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        fullWidth\r\n        maxWidth='md'\r\n        aria-labelledby='dialog-title'\r\n      >\r\n        <DialogTitle id='dialog-title' onClose={onClose}>\r\n          {title}\r\n        </DialogTitle>\r\n        <Formik\r\n          innerRef={formikRef}\r\n          enableReinitialize\r\n          initialValues={initialValues}\r\n          onSubmit={onSubmit}\r\n          validationSchema={Yup.object().shape({\r\n            name: Yup.string().trim().required('Name is required'),\r\n            nutrition: Yup.string().trim().required('Nutrition is required'),\r\n            description: Yup.string().trim().required('Description is required'),\r\n            protein: Yup.string().trim().required('Protein is required'),\r\n            fat: Yup.string().trim().required('Fat is required'),\r\n            carbs: Yup.string().trim().required('Carbs is required'),\r\n            terms: Yup.array().of(\r\n              Yup.object().shape({\r\n                name: Yup.string()\r\n                  .trim()\r\n                  .required('Meal recipe name is Required'),\r\n                image: Yup.object({\r\n                  file: Yup.mixed().required('required'),\r\n                }),\r\n                term: Yup.string()\r\n                  .trim()\r\n                  .required('Meal Recipe terms is Required'),\r\n              })\r\n            ),\r\n            ingredients: Yup.array().of(\r\n              Yup.object().shape({\r\n                id: Yup.string().trim().required('Ingredients is Required'),\r\n                quantity: Yup.string().trim().required('Quantity is Required')\r\n              })),\r\n            preparation_time: Yup.string().trim().required('Preparation time is required'),\r\n            preparation_description: Yup.string().trim().required('Preparation description is required'),\r\n            image: Yup.object({\r\n              file: Yup.mixed().required('A file is required'),\r\n            }),\r\n          })}\r\n        >\r\n          {({ values, errors, touched, handleBlur, handleChange, setFieldValue, submitForm, isSubmitting, }) => (\r\n            <>\r\n              <DialogContent dividers>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label='Name'\r\n                      name='name'\r\n                      variant='outlined'\r\n                      value={values.name}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      error={Boolean(\r\n                        touched.name && errors.name\r\n                      )}\r\n                      helperText={\r\n                        touched.name && errors.name\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label='Nutrition'\r\n                      name='nutrition'\r\n                      variant='outlined'\r\n                      value={values.nutrition}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      error={Boolean(\r\n                        touched.nutrition && errors.nutrition\r\n                      )}\r\n                      helperText={\r\n                        touched.nutrition && errors.nutrition\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      multiline\r\n                      label='Description'\r\n                      name='description'\r\n                      variant='outlined'\r\n                      value={values.description}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      error={Boolean(\r\n                        touched.description && errors.description\r\n                      )}\r\n                      helperText={\r\n                        touched.description && errors.description\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label='Protein'\r\n                      name='protein'\r\n                      variant='outlined'\r\n                      value={values.protein}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      error={Boolean(\r\n                        touched.protein && errors.protein\r\n                      )}\r\n                      helperText={\r\n                        touched.protein && errors.protein\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label='Fat'\r\n                      name='fat'\r\n                      variant='outlined'\r\n                      value={values.fat}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      error={Boolean(\r\n                        touched.fat && errors.fat\r\n                      )}\r\n                      helperText={\r\n                        touched.fat && errors.fat\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label='Carbs'\r\n                      name='carbs'\r\n                      variant='outlined'\r\n                      value={values.carbs}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      error={Boolean(\r\n                        touched.carbs && errors.carbs\r\n                      )}\r\n                      helperText={\r\n                        touched.carbs && errors.carbs\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                  <Grid item md={12} xs={12}>\r\n                    <Button\r\n                      fullWidth\r\n                      className={classes.themeButton}\r\n                      variant='contained'\r\n                      color='default'\r\n                      onClick={() => addMealRecipeTerms(values, setFieldValue)}\r\n                      endIcon={<ControlPointIcon />}\r\n                    >\r\n                      Add Terms\r\n                    </Button>\r\n                  </Grid>\r\n\r\n                  {values?.terms?.map((items: any, index: any) => (\r\n                    <Grid\r\n                      key={index}\r\n                      item\r\n                      container\r\n                      md={12}\r\n                      xs={12}\r\n                      direction='row'\r\n                      spacing={2}\r\n                    >\r\n                      <Grid item md={1} xs={12}>\r\n                        <input\r\n                          ref={avatharimgRef}\r\n                          type='file'\r\n                          accept='.jpg,.png,jpeg'\r\n                          onChange={(e) => onAvatarImageChange(e, index)}\r\n                          onBlur={handleBlur}\r\n                          hidden\r\n                        />\r\n                        <Avatar\r\n                          className={classes.workouttermsavatar}\r\n                          variant='square'\r\n                          onClick={() => avatharimgRef.current.click()}\r\n                          src={items?.image?.prevImage}\r\n                        />\r\n                        <FormControl\r\n                          error={Boolean(\r\n                            touched?.terms &&\r\n                            touched?.terms[index]?.image?.file &&\r\n                            errors?.terms &&\r\n                            (errors?.terms[index] as any)?.image?.file\r\n                          )}\r\n                        >\r\n                          <FormHelperText>\r\n                            {touched?.terms &&\r\n                              touched?.terms[index]?.image?.file &&\r\n                              errors?.terms &&\r\n                              (errors?.terms[index] as any)?.image?.file}\r\n                          </FormHelperText>\r\n                        </FormControl>\r\n                      </Grid>\r\n\r\n                      <Grid item md={5} xs={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          multiline\r\n                          label='Terms name'\r\n                          name={`terms[${index}].name`}\r\n                          variant='outlined'\r\n                          error={Boolean(\r\n                            touched?.terms &&\r\n                            touched?.terms[index]?.name &&\r\n                            errors?.terms &&\r\n                            (errors?.terms[index] as any)?.name\r\n                          )}\r\n                          helperText={\r\n                            touched?.terms &&\r\n                            touched?.terms[index]?.name &&\r\n                            errors?.terms &&\r\n                            (errors?.terms[index] as any)?.name\r\n                          }\r\n                          value={items.name}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item md={5} xs={8}>\r\n                        <TextField\r\n                          fullWidth\r\n                          multiline\r\n                          label='Terms description'\r\n                          name={`terms[${index}].term`}\r\n                          variant='outlined'\r\n                          error={Boolean(\r\n                            touched?.terms &&\r\n                            touched?.terms[index]?.term &&\r\n                            errors?.terms &&\r\n                            (errors?.terms[index] as any)?.term\r\n                          )}\r\n                          helperText={\r\n                            touched?.terms &&\r\n                            touched?.terms[index]?.term &&\r\n                            errors?.terms &&\r\n                            (errors?.terms[index] as any)?.term\r\n                          }\r\n                          value={items.term}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item md={1} xs={4}>\r\n                        <Button\r\n                          fullWidth\r\n                          className={classes.deleteButton}\r\n                          variant='contained'\r\n                          color='secondary'\r\n                          onClick={() => removeMealRecipeTerms(values, index, items)}\r\n                        >\r\n                          <DeleteIcon />\r\n                        </Button>\r\n                      </Grid>\r\n                    </Grid>\r\n                  ))}\r\n\r\n                  <Grid item md={12} xs={12}>\r\n                    <Button\r\n                      fullWidth\r\n                      className={classes.themeButton}\r\n                      variant='contained'\r\n                      color='default'\r\n                      onClick={() => addIngredients(values, setFieldValue)}\r\n                      endIcon={<ControlPointIcon />}\r\n                    >\r\n                      Add Ingredients\r\n                    </Button>\r\n                  </Grid>\r\n\r\n                  {values?.ingredients?.map((items: any, index: any) => (\r\n                    <Grid\r\n                      key={index}\r\n                      item\r\n                      container\r\n                      md={12}\r\n                      xs={12}\r\n                      direction='row'\r\n                      spacing={2}\r\n                    >\r\n                      <Grid item md={5} xs={12}>\r\n                        <Autocomplete\r\n                          fullWidth\r\n                          options={allIngredients}\r\n                          value={allIngredients.find(\r\n                            (data: any) => data._id == items.id\r\n                          )}\r\n                          getOptionLabel={(option: any) => option.name}\r\n                          getOptionSelected={(option) =>\r\n                            option.id == items.id\r\n                          }\r\n                          onChange={(event: any, newValue) => handleOptionChange(event, newValue, index)}\r\n                          onBlur={handleBlur}\r\n                          renderInput={(params) => (\r\n                            <TextField\r\n                              {...params}\r\n                              label='Ingredients'\r\n                              variant='outlined'\r\n                              error={Boolean(\r\n                                touched?.ingredients &&\r\n                                touched?.ingredients[index]?.id &&\r\n                                errors?.ingredients &&\r\n                                (errors?.ingredients[index] as any)?.id\r\n                              )}\r\n                              helperText={\r\n                                touched?.ingredients &&\r\n                                touched?.ingredients[index]?.id &&\r\n                                errors?.ingredients &&\r\n                                (errors?.ingredients[index] as any)?.id\r\n                              }\r\n                              inputProps={{\r\n                                ...params.inputProps,\r\n                              }}\r\n                            />\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item md={6} xs={8}>\r\n                        <TextField\r\n                          fullWidth\r\n                          multiline\r\n                          label='Quantity'\r\n                          name={`ingredients[${index}].quantity`}\r\n                          variant='outlined'\r\n                          error={Boolean(\r\n                            touched?.ingredients &&\r\n                            touched?.ingredients[index]?.quantity &&\r\n                            errors?.ingredients &&\r\n                            (errors?.ingredients[index] as any)?.quantity\r\n                          )}\r\n                          helperText={\r\n                            touched?.ingredients &&\r\n                            touched?.ingredients[index]?.quantity &&\r\n                            errors?.ingredients &&\r\n                            (errors?.ingredients[index] as any)?.quantity\r\n                          }\r\n                          value={items.quantity}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item md={1} xs={4}>\r\n                        <Button\r\n                          fullWidth\r\n                          className={classes.deleteButton}\r\n                          variant='contained'\r\n                          color='secondary'\r\n                        // onClick={() =>\r\n                        //   removeIngredients(values, index, setFieldValue)\r\n                        // }\r\n                        >\r\n                          <DeleteIcon />\r\n                        </Button>\r\n                      </Grid>\r\n                    </Grid>\r\n                  ))}\r\n\r\n                  <Grid item xs={12} md={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label='Preparation Time'\r\n                      name='preparation_time'\r\n                      variant='outlined'\r\n                      value={values.preparation_time}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      error={Boolean(\r\n                        touched.preparation_time && errors.preparation_time\r\n                      )}\r\n                      helperText={\r\n                        touched.preparation_time && errors.preparation_time\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} md={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      multiline\r\n                      label='Preparation Description'\r\n                      name='preparation_description'\r\n                      variant='outlined'\r\n                      value={values.preparation_description}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      error={Boolean(\r\n                        touched.preparation_description && errors.preparation_description\r\n                      )}\r\n                      helperText={\r\n                        touched.preparation_description && errors.preparation_description\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                  <Grid item md={12} xs={12}>\r\n                    <input\r\n                      name='image'\r\n                      ref={imageRef}\r\n                      type='file'\r\n                      accept='.jpg,.png,jpeg'\r\n                      onChange={onImageChange}\r\n                      onBlur={handleBlur}\r\n                      hidden\r\n                    />\r\n                    <Button\r\n                      fullWidth\r\n                      className={classes.themeButton}\r\n                      variant='contained'\r\n                      color='default'\r\n                      onClick={() => imageRef.current.click()}\r\n                      startIcon={<CloudUploadIcon />}\r\n                    >\r\n                      Upload Image\r\n                    </Button>\r\n                    <FormControl\r\n                      error={Boolean(\r\n                        touched?.image?.file && errors?.image?.file\r\n                      )}\r\n                    >\r\n                      <FormHelperText>\r\n                        {touched?.image?.file &&\r\n                          errors?.image?.file}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item md={12} xs={12}>\r\n                    {values.image?.prevImage && (\r\n                      <img\r\n                        className={classes.imageView}\r\n                        src={values.image?.prevImage}\r\n                      />\r\n                    )}\r\n                  </Grid>\r\n                </Grid>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={onClose} variant='outlined' color='secondary'>\r\n                  Cancel\r\n                </Button>\r\n\r\n                <Button\r\n                  className={classes.themeButton}\r\n                  onClick={() => submitForm()}\r\n                  disabled={isSubmitting}\r\n                  variant='outlined'\r\n                >\r\n                  {isSubmitting ? (\r\n                    <CircularProgress size={24} style={{ color: 'white' }} />\r\n                  ) : (\r\n                    okBtnText\r\n                  )}\r\n                </Button>\r\n              </DialogActions>\r\n            </>\r\n          )}\r\n        </Formik>\r\n      </Dialog>\r\n    </>\r\n  )\r\n}\r\n\r\nexport const ViewModel = (props: any) => {\r\n  const { isOpen, title, onClose, data } = props;\r\n  const classes = useStyles();\r\n  const [formValue, setFormValue] = React.useState(data);\r\n  React.useEffect(() => {\r\n    setFormValue(data);\r\n  }, [props]);\r\n  console.log(formValue)\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      fullWidth\r\n      maxWidth='md'\r\n      aria-labelledby='dialog-view-title'\r\n      open={isOpen}\r\n    >\r\n      <DialogTitle id='dialog-view-title' onClose={onClose}>\r\n        {title}\r\n      </DialogTitle>\r\n\r\n      <DialogContent dividers>\r\n        <div>\r\n          <img\r\n            src={formValue?.image}\r\n            alt={'Workout image'}\r\n            className={classes.imageView}\r\n          />\r\n        </div>\r\n        <Paper style={{ marginTop: '20px' }}>\r\n          <Table>\r\n            <TableBody>\r\n              <TableRow>\r\n                <TableCell>Name</TableCell>\r\n                <TableCell>\r\n                  <strong>{formValue?.name}</strong>\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Description</TableCell>\r\n                <TableCell>\r\n                  <strong>{formValue?.description}</strong>\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Nutrition</TableCell>\r\n                <TableCell>\r\n                  <strong>{formValue?.nutrition}</strong>\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Proteins</TableCell>\r\n                <TableCell>\r\n                  <strong>{formValue?.protein}</strong>\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Fat</TableCell>\r\n                <TableCell>\r\n                  <strong>{formValue?.fat}</strong>\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Carbs</TableCell>\r\n                <TableCell>\r\n                  <strong>{formValue?.carbs}</strong>\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n\r\n        <Typography variant='h5' align='left' style={{ color: '#41A58D' }} className={classes.textPrimary}>\r\n          INGREDIENTS\r\n        </Typography>\r\n\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          className={classes.ingrdientsGridMain}\r\n          justify='center'\r\n        >\r\n          {formValue?.ingredients?.map((value: any, index: any) => (\r\n            <Grid key={index} item xs={4} md={3}>\r\n              <Avatar\r\n                className={classes.ingredientsAvatarRoot}\r\n                src={value?.image}\r\n              />\r\n              <Typography variant='h6' align='center'>\r\n                {value?.name}\r\n              </Typography>\r\n              <Typography variant='subtitle2' align='center'>\r\n                {value.description.length >= 25\r\n                  ? `${value.description.substring(0, 30)}...`\r\n                  : value.description}\r\n              </Typography>\r\n            </Grid>\r\n          ))}\r\n          {formValue?.workout_terms?.length == 0 && (\r\n            <Grid item xs={12} md={12} className={classes.noIngredientsText}>\r\n              <div>No Ingredients</div>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n        <Typography variant='h6' align='left' className={classes.textSecondary}>{formValue?.workout_description}</Typography>\r\n\r\n\r\n\r\n        <Typography variant='h5' align='left' style={{ color: '#41A58D' }} className={classes.textPrimary}>\r\n          MEAL RECIPE TERMS\r\n        </Typography>\r\n\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          className={classes.ingrdientsGridMain}\r\n          justify='center'\r\n        >\r\n          {formValue?.terms?.map((value: any, index: any) => (\r\n            <Grid key={index} item xs={4} md={3}>\r\n              <Avatar\r\n                className={classes.ingredientsAvatarRoot}\r\n                src={value?.image}\r\n              />\r\n              <Typography variant='h6' align='center'>\r\n                {value?.name}\r\n              </Typography>\r\n              <Typography variant='subtitle2' align='center'>\r\n                {value.term.length >= 25\r\n                  ? `${value.term.substring(0, 30)}...`\r\n                  : value.term}\r\n              </Typography>\r\n            </Grid>\r\n          ))}\r\n          {formValue?.required_equipments?.length == 0 && (\r\n            <Grid item xs={12} md={12} className={classes.noIngredientsText}>\r\n              <div>No Ingredients</div>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n\r\n        <Grid container>\r\n          <Grid xs={12}>\r\n            <Typography variant='h5' align='left' style={{ color: '#41A58D' }} className={classes.textPrimary}>\r\n              PREPARATION TIME\r\n            </Typography>\r\n            <Typography variant='body2' align='center' className={classes.timeText}>\r\n              <TimerIcon fontSize='inherit' />\r\n              <span>{formValue?.preparation_time}</span>\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} md={12} className={classes.htmlContentGrid}>\r\n            <div className={classes.htmlContent}>{formValue?.preparation_description}</div>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={onClose} variant='outlined' color='secondary'>\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default MealRecipe\r\n"]},"metadata":{},"sourceType":"module"}