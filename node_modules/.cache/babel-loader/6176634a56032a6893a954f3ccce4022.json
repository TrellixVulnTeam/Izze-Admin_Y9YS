{"ast":null,"code":"import _objectSpread from\"D:/Pyramidion/WebApp/Izze-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:/Pyramidion/WebApp/Izze-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{Avatar,Button,Card,CardActions,CardContent,CircularProgress,Dialog,DialogActions,DialogContent,Grid,IconButton,makeStyles,Paper,Table,TableBody,FormControl,FormHelperText,TableCell,TableContainer,TableHead,TableRow,TextField,Tooltip,Typography}from'@material-ui/core';import AddIcon from'@material-ui/icons/Add';import CenterFocusStrongIcon from'@material-ui/icons/CenterFocusStrong';import DeleteIcon from'@material-ui/icons/Delete';import EditIcon from'@material-ui/icons/Edit';import{Pagination}from'@material-ui/lab';import Autocomplete from'@material-ui/lab/Autocomplete';import{Formik}from'formik';import*as Yup from'yup';import DialogTitle from'../../components/DialogTitlle/DialogTitle';import{TableLoader,TableNoData}from'../../components/Loader/Loader';import ControlPointIcon from'@material-ui/icons/ControlPoint';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{root:{width:theme.breakpoints.values.lg,maxWidth:'100%',margin:'0 auto',padding:theme.spacing(3)},themeButton:{color:theme.palette.white,backgroundColor:theme.palette.green.main,'&:hover':{backgroundColor:theme.palette.green.dark}},workouttermsavatar:{width:'100%',height:'100%'},deleteButton:{width:'100%',height:'50px'},content:{padding:0},inner:{minWidth:700},actions:{padding:theme.spacing(1),justifyContent:'center'},tabCard:{marginTop:theme.spacing(3)},sEvenly:{display:'flex',justifyContent:'space-evenly'},iconPadd:{padding:5},jCenter:{display:'flex',justifyContent:'center'}};});function MealRecipe(){var classes=useStyles();var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),loading=_React$useState2[0],setLoading=_React$useState2[1];var _React$useState3=React.useState([]),_React$useState4=_slicedToArray(_React$useState3,2),mealRecipeTableData=_React$useState4[0],setMealRecipeTableData=_React$useState4[1];var _React$useState5=React.useState({page_no:1,page_limit:10}),_React$useState6=_slicedToArray(_React$useState5,2),stateData=_React$useState6[0],setStateData=_React$useState6[1];var _React$useState7=React.useState(0),_React$useState8=_slicedToArray(_React$useState7,2),pageCount=_React$useState8[0],setPageCount=_React$useState8[1];var _React$useState9=React.useState({isOpen:false,title:'',okBtnText:'',isEdit:false,data:{}}),_React$useState10=_slicedToArray(_React$useState9,2),addEditDialog=_React$useState10[0],setAddEditDialog=_React$useState10[1];var openAddDialog=function openAddDialog(){setAddEditDialog(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{isOpen:true,title:'Add Meal Recipe',isEdit:false,okBtnText:'Save'});});};var closeAddEditDialog=function closeAddEditDialog(){setAddEditDialog(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{isOpen:false});});};var setElipsis=function setElipsis(text){return(text===null||text===void 0?void 0:text.length)>=25?\"\".concat(text.substring(0,40),\"...\"):text;};return/*#__PURE__*/_jsxs(\"div\",{className:classes.root,children:[/*#__PURE__*/_jsxs(Grid,{alignItems:\"flex-end\",container:true,justify:\"space-between\",spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Typography,{component:\"h1\",variant:\"h3\",children:\"Meal Recipe\"})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:function onClick(){return openAddDialog();},className:classes.themeButton,startIcon:/*#__PURE__*/_jsx(AddIcon,{}),children:\"Add\"})})]}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:3,children:/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Paper,{elevation:0,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,size:\"small\",placeholder:\"Name\",variant:\"outlined\",name:\"state\"})})})}),/*#__PURE__*/_jsxs(Card,{className:classes.tabCard,children:[/*#__PURE__*/_jsx(CardContent,{className:classes.content,children:/*#__PURE__*/_jsx(TableContainer,{children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:\"#\"}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:\"Workout Image\"}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:\"Workout Name\"}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:\"Workout Description\"}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:\"Actions\"})]})}),/*#__PURE__*/_jsxs(TableBody,{children:[!loading&&mealRecipeTableData.map(function(data,index){return/*#__PURE__*/_jsxs(TableRow,{hover:true,children:[/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:stateData.page_limit*(stateData.page_no-1)+index+1}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:/*#__PURE__*/_jsx(\"div\",{className:classes.jCenter,children:/*#__PURE__*/_jsx(Avatar,{variant:\"square\",src:data===null||data===void 0?void 0:data.workout_image})})}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:data===null||data===void 0?void 0:data.workout_name}),/*#__PURE__*/_jsx(TableCell,{align:\"center\"}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:/*#__PURE__*/_jsxs(\"div\",{className:classes.sEvenly,children:[/*#__PURE__*/_jsx(Tooltip,{title:\"View\",arrow:true,children:/*#__PURE__*/_jsx(IconButton,{className:classes.iconPadd// onClick={() => openViewDialog(data)}\n,children:/*#__PURE__*/_jsx(CenterFocusStrongIcon,{color:\"primary\"})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Edit\",arrow:true,children:/*#__PURE__*/_jsx(IconButton,{className:classes.iconPadd// onClick={() => openEditDialog(data)}\n,children:/*#__PURE__*/_jsx(EditIcon,{color:\"action\"})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Delete\",arrow:true,children:/*#__PURE__*/_jsx(IconButton,{className:classes.iconPadd// onClick={() => onDelete(data)}\n,children:/*#__PURE__*/_jsx(DeleteIcon,{color:\"secondary\"})})})]})})]},index);}),loading&&/*#__PURE__*/_jsx(TableLoader,{}),!loading&&mealRecipeTableData.length==0&&/*#__PURE__*/_jsx(TableNoData,{children:\"No Data Found\"})]})]})})}),/*#__PURE__*/_jsx(CardActions,{className:classes.actions,children:/*#__PURE__*/_jsx(Pagination,{count:pageCount,page:stateData.page_no// onChange={onPageChange}\n})})]}),/*#__PURE__*/_jsx(AddEditModel,_objectSpread(_objectSpread({},addEditDialog),{},{onClose:closeAddEditDialog// onSuccess={onSuccessAction}\n}))]});}var mealTerms={name:'',image:{file:null,prevImage:'',isNew:null},term:''};var ingredientsSelect={id:'',quantity:''};var initialFormValues={name:'',image:{file:null,prevImage:'',isNew:null},nutrition:'',description:'',protein:'',fat:'',carbs:'',terms:[mealTerms],ingredients:[ingredientsSelect],preparation_time:'',preparation_description:''};export var AddEditModel=function AddEditModel(props){var isEdit=props.isEdit,isOpen=props.isOpen,_props$okBtnText=props.okBtnText,okBtnText=_props$okBtnText===void 0?'OK':_props$okBtnText,onClose=props.onClose,data=props.data,title=props.title,onSuccess=props.onSuccess;var classes=useStyles();var _React$useState11=React.useState(_objectSpread({},initialFormValues)),_React$useState12=_slicedToArray(_React$useState11,2),initialValues=_React$useState12[0],setInitialValues=_React$useState12[1];var formikRef=React.useRef(null);var imageRef=React.useRef(null);var avatharimgRef=React.useRef(null);var onAvatarImageChange=function onAvatarImageChange(event,index){event.persist();var files=event.target.files;if(files&&files.length!=0){var reader=new FileReader();var file=files[0];reader.onloadend=function(){formikRef.current.setFieldValue(\"terms[\".concat(index,\"].image\"),{file:file,prevImage:reader.result,isNew:true});};reader.readAsDataURL(file);}else{formikRef.current.setFieldValue('terms',{workoutTermsName:'',image:{file:null,prevImage:'',isNew:null},description:''});}};var onSubmit=function onSubmit(values,helper){console.log(values);};var addMealRecipeTerms=function addMealRecipeTerms(values,setFieldValue){var terms=values.terms;terms.push(mealTerms);setFieldValue('terms',terms);};var addIngredients=function addIngredients(values,setFieldValue){var ingredients=values.ingredients;ingredients.push(ingredientsSelect);setFieldValue('ingredients',ingredients);};var handleOptionChange=function handleOptionChange(event,value,index){formikRef.current.setFieldValue(\"ingredients[\".concat(index,\"].id\"),value===null||value===void 0?void 0:value.id);};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Dialog,{open:isOpen,disableBackdropClick:true,disableEscapeKeyDown:true,fullWidth:true,maxWidth:\"md\",\"aria-labelledby\":\"dialog-title\",children:[/*#__PURE__*/_jsx(DialogTitle,{id:\"dialog-title\",onClose:onClose,children:title}),/*#__PURE__*/_jsx(Formik,{innerRef:formikRef,enableReinitialize:true,initialValues:initialFormValues,onSubmit:onSubmit,validationSchema:Yup.object().shape({name:Yup.string().trim().required('Name is required'),nutrition:Yup.string().trim().required('Nutrition is required'),description:Yup.string().trim().required('Description is required'),protein:Yup.string().trim().required('Protein is required'),fat:Yup.string().trim().required('Fat is required'),carbs:Yup.string().trim().required('Carbs is required'),terms:Yup.array().of(Yup.object().shape({name:Yup.string().trim().required('Meal recipe name is Required'),image:Yup.object({file:Yup.mixed().required('required')}),term:Yup.string().trim().required('Meal Recipe terms is Required')})),ingredients:Yup.array().of(Yup.object().shape({id:Yup.string().trim().required('Ingredients is Required'),quantity:Yup.string().trim().required('Quantity is Required')})),preparation_time:Yup.string().trim().required('Preparation time is required'),preparation_description:Yup.string().trim().required('Preparation description is required')}),children:function children(_ref){var _values$terms,_values$ingredients;var values=_ref.values,errors=_ref.errors,touched=_ref.touched,handleBlur=_ref.handleBlur,handleChange=_ref.handleChange,setFieldValue=_ref.setFieldValue,submitForm=_ref.submitForm,isSubmitting=_ref.isSubmitting;return/*#__PURE__*/_jsxs(_Fragment,{children:[console.log(values),/*#__PURE__*/_jsx(DialogContent,{dividers:true,children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Name\",name:\"name\",variant:\"outlined\",value:values.name,onChange:handleChange,onBlur:handleBlur,error:Boolean(touched.name&&errors.name),helperText:touched.name&&errors.name})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Nutrition\",name:\"nutrition\",variant:\"outlined\",value:values.nutrition,onChange:handleChange,onBlur:handleBlur,error:Boolean(touched.nutrition&&errors.nutrition),helperText:touched.nutrition&&errors.nutrition})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,multiline:true,label:\"Description\",name:\"description\",variant:\"outlined\",value:values.description,onChange:handleChange,onBlur:handleBlur,error:Boolean(touched.description&&errors.description),helperText:touched.description&&errors.description})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Protein\",name:\"protein\",variant:\"outlined\",value:values.protein,onChange:handleChange,onBlur:handleBlur,error:Boolean(touched.protein&&errors.protein),helperText:touched.protein&&errors.protein})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Fat\",name:\"fat\",variant:\"outlined\",value:values.fat,onChange:handleChange,onBlur:handleBlur,error:Boolean(touched.fat&&errors.fat),helperText:touched.fat&&errors.fat})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Carbs\",name:\"carbs\",variant:\"outlined\",value:values.carbs,onChange:handleChange,onBlur:handleBlur,error:Boolean(touched.carbs&&errors.carbs),helperText:touched.carbs&&errors.carbs})}),/*#__PURE__*/_jsx(Grid,{item:true,md:12,xs:12,children:/*#__PURE__*/_jsx(Button,{fullWidth:true,className:classes.themeButton,variant:\"contained\",color:\"default\",onClick:function onClick(){return addMealRecipeTerms(values,setFieldValue);},endIcon:/*#__PURE__*/_jsx(ControlPointIcon,{}),children:\"Add Terms\"})}),values===null||values===void 0?void 0:(_values$terms=values.terms)===null||_values$terms===void 0?void 0:_values$terms.map(function(items,index){var _items$image,_touched$terms$index,_touched$terms$index$,_errors$terms$index,_errors$terms$index$i,_touched$terms$index2,_touched$terms$index3,_errors$terms$index2,_errors$terms$index2$,_touched$terms$index4,_errors$terms$index3,_touched$terms$index5,_errors$terms$index4,_touched$terms$index6,_errors$terms$index5,_touched$terms$index7,_errors$terms$index6;return/*#__PURE__*/_jsxs(Grid,{item:true,container:true,md:12,xs:12,direction:\"row\",spacing:2,children:[/*#__PURE__*/_jsxs(Grid,{item:true,md:1,xs:12,children:[/*#__PURE__*/_jsx(\"input\",{ref:avatharimgRef,type:\"file\",accept:\".jpg,.png,jpeg\",onChange:function onChange(e){return onAvatarImageChange(e,index);},onBlur:handleBlur,hidden:true}),/*#__PURE__*/_jsx(Avatar,{className:classes.workouttermsavatar,variant:\"square\",onClick:function onClick(){return avatharimgRef.current.click();},src:items===null||items===void 0?void 0:(_items$image=items.image)===null||_items$image===void 0?void 0:_items$image.prevImage}),/*#__PURE__*/_jsx(FormControl,{error:Boolean((touched===null||touched===void 0?void 0:touched.terms)&&(touched===null||touched===void 0?void 0:(_touched$terms$index=touched.terms[index])===null||_touched$terms$index===void 0?void 0:(_touched$terms$index$=_touched$terms$index.image)===null||_touched$terms$index$===void 0?void 0:_touched$terms$index$.file)&&(errors===null||errors===void 0?void 0:errors.terms)&&(errors===null||errors===void 0?void 0:(_errors$terms$index=errors.terms[index])===null||_errors$terms$index===void 0?void 0:(_errors$terms$index$i=_errors$terms$index.image)===null||_errors$terms$index$i===void 0?void 0:_errors$terms$index$i.file)),children:/*#__PURE__*/_jsx(FormHelperText,{children:(touched===null||touched===void 0?void 0:touched.terms)&&(touched===null||touched===void 0?void 0:(_touched$terms$index2=touched.terms[index])===null||_touched$terms$index2===void 0?void 0:(_touched$terms$index3=_touched$terms$index2.image)===null||_touched$terms$index3===void 0?void 0:_touched$terms$index3.file)&&(errors===null||errors===void 0?void 0:errors.terms)&&(errors===null||errors===void 0?void 0:(_errors$terms$index2=errors.terms[index])===null||_errors$terms$index2===void 0?void 0:(_errors$terms$index2$=_errors$terms$index2.image)===null||_errors$terms$index2$===void 0?void 0:_errors$terms$index2$.file)})})]}),/*#__PURE__*/_jsx(Grid,{item:true,md:5,xs:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,multiline:true,label:\"Workout terms name\",name:\"terms[\".concat(index,\"].name\"),variant:\"outlined\",error:Boolean((touched===null||touched===void 0?void 0:touched.terms)&&(touched===null||touched===void 0?void 0:(_touched$terms$index4=touched.terms[index])===null||_touched$terms$index4===void 0?void 0:_touched$terms$index4.name)&&(errors===null||errors===void 0?void 0:errors.terms)&&(errors===null||errors===void 0?void 0:(_errors$terms$index3=errors.terms[index])===null||_errors$terms$index3===void 0?void 0:_errors$terms$index3.name)),helperText:(touched===null||touched===void 0?void 0:touched.terms)&&(touched===null||touched===void 0?void 0:(_touched$terms$index5=touched.terms[index])===null||_touched$terms$index5===void 0?void 0:_touched$terms$index5.name)&&(errors===null||errors===void 0?void 0:errors.terms)&&(errors===null||errors===void 0?void 0:(_errors$terms$index4=errors.terms[index])===null||_errors$terms$index4===void 0?void 0:_errors$terms$index4.name),value:items.name,onChange:handleChange,onBlur:handleBlur})}),/*#__PURE__*/_jsx(Grid,{item:true,md:5,xs:8,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,multiline:true,label:\"Meal Recipe terms\",name:\"terms[\".concat(index,\"].term\"),variant:\"outlined\",error:Boolean((touched===null||touched===void 0?void 0:touched.terms)&&(touched===null||touched===void 0?void 0:(_touched$terms$index6=touched.terms[index])===null||_touched$terms$index6===void 0?void 0:_touched$terms$index6.term)&&(errors===null||errors===void 0?void 0:errors.terms)&&(errors===null||errors===void 0?void 0:(_errors$terms$index5=errors.terms[index])===null||_errors$terms$index5===void 0?void 0:_errors$terms$index5.term)),helperText:(touched===null||touched===void 0?void 0:touched.terms)&&(touched===null||touched===void 0?void 0:(_touched$terms$index7=touched.terms[index])===null||_touched$terms$index7===void 0?void 0:_touched$terms$index7.term)&&(errors===null||errors===void 0?void 0:errors.terms)&&(errors===null||errors===void 0?void 0:(_errors$terms$index6=errors.terms[index])===null||_errors$terms$index6===void 0?void 0:_errors$terms$index6.term),value:items.term,onChange:handleChange,onBlur:handleBlur})}),/*#__PURE__*/_jsx(Grid,{item:true,md:1,xs:4,children:/*#__PURE__*/_jsx(Button,{fullWidth:true,className:classes.deleteButton,variant:\"contained\",color:\"secondary\"// onClick={() =>\n//   removeIngredients(values, index, setFieldValue)\n// }\n,children:/*#__PURE__*/_jsx(DeleteIcon,{})})})]},index);}),/*#__PURE__*/_jsx(Grid,{item:true,md:12,xs:12,children:/*#__PURE__*/_jsx(Button,{fullWidth:true,className:classes.themeButton,variant:\"contained\",color:\"default\",onClick:function onClick(){return addIngredients(values,setFieldValue);},endIcon:/*#__PURE__*/_jsx(ControlPointIcon,{}),children:\"Add Ingredients\"})}),values===null||values===void 0?void 0:(_values$ingredients=values.ingredients)===null||_values$ingredients===void 0?void 0:_values$ingredients.map(function(items,index){var _touched$ingredients$3,_errors$ingredients$i3,_touched$ingredients$4,_errors$ingredients$i4;return/*#__PURE__*/_jsxs(Grid,{item:true,container:true,md:12,xs:12,direction:\"row\",spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,md:5,xs:12,children:/*#__PURE__*/_jsx(Autocomplete,{fullWidth:true,options:[{name:'ingredients1',id:1},{name:'ingredients2',id:2},{name:'ingredients3',id:3}],getOptionLabel:function getOptionLabel(option){return option.name;},getOptionSelected:function getOptionSelected(option){return option.id==items.id;}// onChange={(event: any, newValue: any) => {\n//   setFieldValue(\n//     `ingredients[${index}].id`,\n//     newValue?._id || ''\n//   );\n// }}\n,onChange:function onChange(event,newValue){return handleOptionChange(event,newValue,index);},onBlur:handleBlur,renderInput:function renderInput(params){var _touched$ingredients$,_errors$ingredients$i,_touched$ingredients$2,_errors$ingredients$i2;return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{label:\"Ingredients\",variant:\"outlined\",error:Boolean((touched===null||touched===void 0?void 0:touched.ingredients)&&(touched===null||touched===void 0?void 0:(_touched$ingredients$=touched.ingredients[index])===null||_touched$ingredients$===void 0?void 0:_touched$ingredients$.id)&&(errors===null||errors===void 0?void 0:errors.ingredients)&&(errors===null||errors===void 0?void 0:(_errors$ingredients$i=errors.ingredients[index])===null||_errors$ingredients$i===void 0?void 0:_errors$ingredients$i.id)),helperText:(touched===null||touched===void 0?void 0:touched.ingredients)&&(touched===null||touched===void 0?void 0:(_touched$ingredients$2=touched.ingredients[index])===null||_touched$ingredients$2===void 0?void 0:_touched$ingredients$2.id)&&(errors===null||errors===void 0?void 0:errors.ingredients)&&(errors===null||errors===void 0?void 0:(_errors$ingredients$i2=errors.ingredients[index])===null||_errors$ingredients$i2===void 0?void 0:_errors$ingredients$i2.id),inputProps:_objectSpread({},params.inputProps)}));}})}),/*#__PURE__*/_jsx(Grid,{item:true,md:6,xs:8,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,multiline:true,label:\"Quantity\",name:\"ingredients[\".concat(index,\"].quantity\"),variant:\"outlined\",error:Boolean((touched===null||touched===void 0?void 0:touched.ingredients)&&(touched===null||touched===void 0?void 0:(_touched$ingredients$3=touched.ingredients[index])===null||_touched$ingredients$3===void 0?void 0:_touched$ingredients$3.quantity)&&(errors===null||errors===void 0?void 0:errors.ingredients)&&(errors===null||errors===void 0?void 0:(_errors$ingredients$i3=errors.ingredients[index])===null||_errors$ingredients$i3===void 0?void 0:_errors$ingredients$i3.quantity)),helperText:(touched===null||touched===void 0?void 0:touched.ingredients)&&(touched===null||touched===void 0?void 0:(_touched$ingredients$4=touched.ingredients[index])===null||_touched$ingredients$4===void 0?void 0:_touched$ingredients$4.quantity)&&(errors===null||errors===void 0?void 0:errors.ingredients)&&(errors===null||errors===void 0?void 0:(_errors$ingredients$i4=errors.ingredients[index])===null||_errors$ingredients$i4===void 0?void 0:_errors$ingredients$i4.quantity),value:items.term,onChange:handleChange,onBlur:handleBlur})}),/*#__PURE__*/_jsx(Grid,{item:true,md:1,xs:4,children:/*#__PURE__*/_jsx(Button,{fullWidth:true,className:classes.deleteButton,variant:\"contained\",color:\"secondary\"// onClick={() =>\n//   removeIngredients(values, index, setFieldValue)\n// }\n,children:/*#__PURE__*/_jsx(DeleteIcon,{})})})]},index);}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Preparation Time\",name:\"preparation_time\",variant:\"outlined\",value:values.preparation_time,onChange:handleChange,onBlur:handleBlur,error:Boolean(touched.preparation_time&&errors.preparation_time),helperText:touched.preparation_time&&errors.preparation_time})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,multiline:true,label:\"Preparation Description\",name:\"preparation_description\",variant:\"outlined\",value:values.preparation_description,onChange:handleChange,onBlur:handleBlur,error:Boolean(touched.preparation_description&&errors.preparation_description),helperText:touched.preparation_description&&errors.preparation_description})})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:onClose,variant:\"outlined\",color:\"secondary\",children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{className:classes.themeButton,onClick:function onClick(){return submitForm();},disabled:isSubmitting,variant:\"outlined\",children:isSubmitting?/*#__PURE__*/_jsx(CircularProgress,{size:24,style:{color:'white'}}):okBtnText})]})]});}})]})});};export default MealRecipe;","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/pages/MealRecipe/MealRecipe.tsx"],"names":["React","Avatar","Button","Card","CardActions","CardContent","CircularProgress","Dialog","DialogActions","DialogContent","Grid","IconButton","makeStyles","Paper","Table","TableBody","FormControl","FormHelperText","TableCell","TableContainer","TableHead","TableRow","TextField","Tooltip","Typography","AddIcon","CenterFocusStrongIcon","DeleteIcon","EditIcon","Pagination","Autocomplete","Formik","Yup","DialogTitle","TableLoader","TableNoData","ControlPointIcon","useStyles","theme","root","width","breakpoints","values","lg","maxWidth","margin","padding","spacing","themeButton","color","palette","white","backgroundColor","green","main","dark","workouttermsavatar","height","deleteButton","content","inner","minWidth","actions","justifyContent","tabCard","marginTop","sEvenly","display","iconPadd","jCenter","MealRecipe","classes","useState","loading","setLoading","mealRecipeTableData","setMealRecipeTableData","page_no","page_limit","stateData","setStateData","pageCount","setPageCount","isOpen","title","okBtnText","isEdit","data","addEditDialog","setAddEditDialog","openAddDialog","prevState","closeAddEditDialog","setElipsis","text","length","substring","map","index","workout_image","workout_name","mealTerms","name","image","file","prevImage","isNew","term","ingredientsSelect","id","quantity","initialFormValues","nutrition","description","protein","fat","carbs","terms","ingredients","preparation_time","preparation_description","AddEditModel","props","onClose","onSuccess","initialValues","setInitialValues","formikRef","useRef","imageRef","avatharimgRef","onAvatarImageChange","event","persist","files","target","reader","FileReader","onloadend","current","setFieldValue","result","readAsDataURL","workoutTermsName","onSubmit","helper","console","log","addMealRecipeTerms","push","addIngredients","handleOptionChange","value","object","shape","string","trim","required","array","of","mixed","errors","touched","handleBlur","handleChange","submitForm","isSubmitting","Boolean","items","e","click","option","newValue","params","inputProps"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Avatar, Button, Card, CardActions, CardContent, CircularProgress, Dialog, DialogActions, DialogContent, Grid, IconButton, makeStyles, Paper, Tab,  Table, TableBody, FormControl, FormHelperText, TableCell, TableContainer, TableHead, TableRow, TextField, Tooltip,  Divider, Typography, Tabs} from '@material-ui/core';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Pagination, TabContext, TabList, TabPanel } from '@material-ui/lab';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { imageUpload } from '../../utils/FirebaseUtils';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\r\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\r\nimport Page from '../../components/Page/Page';\r\nimport useConfModel from '../../hook/useConfModel';\r\nimport useService from '../../hook/useService';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\n\r\n\r\nconst useStyles = makeStyles((theme: any)=>({\r\n    root: {\r\n        width: theme.breakpoints.values.lg,\r\n        maxWidth: '100%',\r\n        margin: '0 auto',\r\n        padding: theme.spacing(3),\r\n    },\r\n    themeButton: {\r\n        color: theme.palette.white,\r\n        backgroundColor: theme.palette.green.main,\r\n        '&:hover': {\r\n          backgroundColor: theme.palette.green.dark,\r\n        },\r\n    },\r\n    workouttermsavatar: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    deleteButton: {\r\n        width: '100%',\r\n        height: '50px',\r\n    },\r\n    content: {\r\n      padding: 0,\r\n    },\r\n    inner: {\r\n      minWidth: 700,\r\n    },\r\n    actions: {\r\n      padding: theme.spacing(1),\r\n      justifyContent: 'center',\r\n    },\r\n    tabCard: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    sEvenly: {\r\n      display: 'flex',\r\n      justifyContent: 'space-evenly',\r\n    },\r\n    iconPadd: {\r\n      padding: 5,\r\n    },\r\n    jCenter: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n    },\r\n}))\r\nfunction MealRecipe() {\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [mealRecipeTableData, setMealRecipeTableData] = React.useState([]);\r\n  const [stateData, setStateData] =React.useState({ page_no: 1, page_limit: 10 });\r\n  const [pageCount, setPageCount] =React.useState(0);\r\n  const [addEditDialog, setAddEditDialog] = React.useState({\r\n    isOpen: false,\r\n    title: '',\r\n    okBtnText: '',\r\n    isEdit: false,\r\n    data: {},\r\n  });\r\n\r\n  const openAddDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      title: 'Add Meal Recipe',\r\n      isEdit: false,\r\n      okBtnText: 'Save',\r\n    }));\r\n  };\r\n\r\n  const closeAddEditDialog = () =>{\r\n    setAddEditDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  }\r\n\r\n  const setElipsis = (text: any) => {\r\n    return text?.length >= 25 ? `${text.substring(0, 40)}...` : text;\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <Grid alignItems='flex-end' container justify='space-between' spacing={3}>\r\n            <Grid item>\r\n            <Typography component='h1' variant='h3'>\r\n                Meal Recipe\r\n            </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n            <Button\r\n                variant='contained'\r\n                onClick={() => openAddDialog()}\r\n                className={classes.themeButton}\r\n                startIcon={<AddIcon />}\r\n            >\r\n                Add\r\n            </Button>\r\n            </Grid>\r\n        </Grid>\r\n\r\n      {/* =============Search======== */}\r\n        <Grid container spacing={3}>\r\n            <Grid item>\r\n                <Paper elevation={0}>\r\n                    <TextField\r\n                    fullWidth\r\n                    size='small'\r\n                    placeholder='Name'\r\n                    variant='outlined'\r\n                    name='state'\r\n                    />\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n\r\n        <Card className={classes.tabCard}>\r\n        <CardContent className={classes.content}>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align='center'>#</TableCell>\r\n                  <TableCell align='center'>Workout Image</TableCell>\r\n                  <TableCell align='center'>Workout Name</TableCell>\r\n                  <TableCell align='center'>Workout Description</TableCell>\r\n                  <TableCell align='center'>Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {!loading &&\r\n                  mealRecipeTableData.map((data: any, index: number) => (\r\n                    <TableRow hover key={index}>\r\n                      <TableCell align='center'>\r\n                        {stateData.page_limit * (stateData.page_no - 1) +\r\n                          index +\r\n                          1}\r\n                      </TableCell>\r\n                      <TableCell align='center'>\r\n                        <div className={classes.jCenter}>\r\n                          <Avatar variant='square' src={data?.workout_image} />\r\n                        </div>\r\n                      </TableCell>\r\n                      <TableCell align='center'>{data?.workout_name}</TableCell>\r\n                      <TableCell align='center'>\r\n                        {/* <Tooltip title={data?.workout_description}>\r\n                          <span>{setElipsis(data?.workout_description)}</span>\r\n                        </Tooltip> */}\r\n                      </TableCell>\r\n                      <TableCell align='center'>\r\n                        <div className={classes.sEvenly}>\r\n                          <Tooltip title='View' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              // onClick={() => openViewDialog(data)}\r\n                            >\r\n                              <CenterFocusStrongIcon color='primary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Edit' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              // onClick={() => openEditDialog(data)}\r\n                            >\r\n                              <EditIcon color='action' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Delete' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              // onClick={() => onDelete(data)}\r\n                            >\r\n                              <DeleteIcon color='secondary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                {loading && <TableLoader />}\r\n                {!loading && mealRecipeTableData.length == 0 && (\r\n                  <TableNoData>No Data Found</TableNoData>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </CardContent>\r\n\r\n        <CardActions className={classes.actions}>\r\n          <Pagination\r\n            count={pageCount}\r\n            page={stateData.page_no}\r\n            // onChange={onPageChange}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n\r\n        <AddEditModel\r\n            {...addEditDialog}\r\n            onClose={closeAddEditDialog}\r\n            // onSuccess={onSuccessAction}\r\n         />\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\ninterface MealTerms {\r\n    name : string,\r\n    image : {file:string | null, prevImage : string, isNew: boolean | null},\r\n    term : string\r\n}\r\n\r\ninterface Ingredients {\r\n    id : string,\r\n    quantity : string\r\n}\r\n\r\ninterface MealPlan {\r\n    name : string,\r\n    image : {file:string | null, prevImage : string, isNew: boolean | null},\r\n    nutrition : string,\r\n    description : string,\r\n    protein : string,\r\n    fat : string,\r\n    carbs : string,\r\n    terms : MealTerms[],\r\n    ingredients : Ingredients[],\r\n    preparation_time : string,\r\n    preparation_description : string\r\n\r\n}\r\n\r\nconst mealTerms: MealTerms = {\r\n    name : '',\r\n    image : { file:null , prevImage : '', isNew: null},\r\n    term : ''\r\n}\r\n\r\nconst ingredientsSelect: Ingredients = {\r\n    id : '',\r\n    quantity:''\r\n}\r\n\r\nconst initialFormValues: MealPlan = {\r\n    name : '',\r\n    image : { file:null, prevImage : '', isNew : null },\r\n    nutrition : '',\r\n    description : '',\r\n    protein : '',\r\n    fat : '',\r\n    carbs : '',\r\n    terms : [mealTerms],\r\n    ingredients : [ingredientsSelect],\r\n    preparation_time : '',\r\n    preparation_description : ''\r\n}\r\n\r\nexport const AddEditModel = (props: any) =>{\r\n    const { isEdit, isOpen, okBtnText = 'OK', onClose, data, title, onSuccess } = props;\r\n    const classes = useStyles()\r\n    const [initialValues, setInitialValues] = React.useState({...initialFormValues});\r\n    const formikRef = React.useRef<any>(null);\r\n    const imageRef = React.useRef<any>(null);\r\n    const avatharimgRef = React.useRef<any>(null);\r\n\r\n    const onAvatarImageChange = (event: React.ChangeEvent<HTMLInputElement>, index: any) =>{\r\n      event.persist();\r\n      const files = event.target.files;\r\n      if (files && files.length != 0) {\r\n        const reader = new FileReader();\r\n        const file = files[0];\r\n        reader.onloadend = () => {\r\n          formikRef.current.setFieldValue(`terms[${index}].image`, {\r\n            file,\r\n            prevImage: reader.result,\r\n            isNew: true,\r\n          });\r\n        };\r\n        reader.readAsDataURL(file);\r\n      } else {\r\n        formikRef.current.setFieldValue('terms', {\r\n          workoutTermsName: '',\r\n          image: { file: null, prevImage: '', isNew: null },\r\n          description: '',\r\n        });\r\n      }\r\n    }\r\n\r\n    const onSubmit = (values: any, helper: any) =>{\r\n        console.log(values)\r\n    }\r\n\r\n    const addMealRecipeTerms = (values:MealPlan, setFieldValue: any) =>{\r\n      const { terms } = values\r\n      terms.push(mealTerms);\r\n      setFieldValue('terms',terms)\r\n    }\r\n\r\n    const addIngredients = (values:MealPlan, setFieldValue: any) =>{\r\n      const { ingredients } = values;\r\n      ingredients.push(ingredientsSelect)\r\n      setFieldValue('ingredients',ingredients)\r\n    }\r\n\r\n    const handleOptionChange = (event: React.ChangeEvent<HTMLInputElement>, value : any, index: any) =>{\r\n        formikRef.current.setFieldValue(`ingredients[${index}].id`,value?.id);\r\n    }\r\n    return (\r\n        <>\r\n        <Dialog\r\n            open={isOpen}\r\n            disableBackdropClick\r\n            disableEscapeKeyDown\r\n            fullWidth\r\n            maxWidth='md'\r\n            aria-labelledby='dialog-title'\r\n        >\r\n            <DialogTitle id='dialog-title' onClose={onClose}>\r\n             {title}\r\n            </DialogTitle>\r\n            <Formik\r\n                innerRef={formikRef}\r\n                enableReinitialize\r\n                initialValues={initialFormValues}\r\n                onSubmit={onSubmit}\r\n                validationSchema={Yup.object().shape({\r\n                    name: Yup.string().trim().required('Name is required'),\r\n                    nutrition: Yup.string().trim().required('Nutrition is required'),\r\n                    description: Yup.string().trim().required('Description is required'),\r\n                    protein: Yup.string().trim().required('Protein is required'),\r\n                    fat: Yup.string().trim().required('Fat is required'),\r\n                    carbs: Yup.string().trim().required('Carbs is required'),\r\n                    terms : Yup.array().of(\r\n                        Yup.object().shape({\r\n                            name: Yup.string()\r\n                              .trim()\r\n                              .required('Meal recipe name is Required'),\r\n                            image: Yup.object({\r\n                              file: Yup.mixed().required('required'),\r\n                            }),\r\n                            term: Yup.string()\r\n                              .trim()\r\n                              .required('Meal Recipe terms is Required'),\r\n                        })\r\n                      ),\r\n                    ingredients : Yup.array().of(\r\n                      Yup.object().shape({\r\n                        id: Yup.string().trim().required('Ingredients is Required'),\r\n                        quantity : Yup.string().trim().required('Quantity is Required')\r\n                      })),\r\n                    preparation_time : Yup.string().trim().required('Preparation time is required'),\r\n                    preparation_description :  Yup.string().trim().required('Preparation description is required')\r\n                  })}\r\n            >\r\n                {({values, errors, touched, handleBlur,handleChange,setFieldValue, submitForm, isSubmitting,})=>(\r\n                <>\r\n                {console.log(values)}\r\n                <DialogContent dividers>\r\n                    <Grid container spacing = {2}>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label='Name'\r\n                                name='name'\r\n                                variant='outlined'\r\n                                value={values.name}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                error={Boolean(\r\n                                  touched.name && errors.name\r\n                                )}\r\n                                helperText={\r\n                                  touched.name && errors.name\r\n                                }\r\n                            />\r\n                        </Grid>                        \r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label='Nutrition'\r\n                                name='nutrition'\r\n                                variant='outlined'\r\n                                value={values.nutrition}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                error={Boolean(\r\n                                  touched.nutrition && errors.nutrition\r\n                                )}\r\n                                helperText={\r\n                                  touched.nutrition && errors.nutrition\r\n                                }\r\n                            />\r\n                        </Grid>                        \r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                multiline\r\n                                label='Description'\r\n                                name='description'\r\n                                variant='outlined'\r\n                                value={values.description}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                error={Boolean(\r\n                                  touched.description && errors.description\r\n                                )}\r\n                                helperText={\r\n                                  touched.description && errors.description\r\n                                }\r\n                            />\r\n                        </Grid>                        \r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label='Protein'\r\n                                name='protein'\r\n                                variant='outlined'\r\n                                value={values.protein}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                error={Boolean(\r\n                                  touched.protein && errors.protein\r\n                                )}\r\n                                helperText={\r\n                                  touched.protein && errors.protein\r\n                                }\r\n                            />\r\n                        </Grid>                        \r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label='Fat'\r\n                                name='fat'\r\n                                variant='outlined'\r\n                                value={values.fat}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                error={Boolean(\r\n                                  touched.fat && errors.fat\r\n                                )}\r\n                                helperText={\r\n                                  touched.fat && errors.fat\r\n                                }\r\n                            />\r\n                        </Grid>                        \r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label='Carbs'\r\n                                name='carbs'\r\n                                variant='outlined'\r\n                                value={values.carbs}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                error={Boolean(\r\n                                  touched.carbs && errors.carbs\r\n                                )}\r\n                                helperText={\r\n                                  touched.carbs && errors.carbs\r\n                                }\r\n                            />\r\n                        </Grid>  \r\n                        <Grid item md={12} xs={12}>\r\n                            <Button\r\n                                fullWidth\r\n                                className={classes.themeButton}\r\n                                variant='contained'\r\n                                color='default'\r\n                                onClick={() => addMealRecipeTerms(values, setFieldValue)}\r\n                                endIcon={<ControlPointIcon />}\r\n                            >\r\n                                Add Terms\r\n                            </Button>\r\n                        </Grid>\r\n\r\n                        {values?.terms?.map((items: any, index: any)=>(\r\n                                <Grid\r\n                                key={index}\r\n                                item\r\n                                container\r\n                                md={12}\r\n                                xs={12}\r\n                                direction='row'\r\n                                spacing={2}\r\n                              >\r\n                                <Grid item md={1} xs={12}>\r\n                                  <input\r\n                                    ref={avatharimgRef}\r\n                                    type='file'\r\n                                    accept='.jpg,.png,jpeg'\r\n                                    onChange={(e) => onAvatarImageChange(e, index)}\r\n                                    onBlur={handleBlur}\r\n                                    hidden\r\n                                  />\r\n                                  <Avatar\r\n                                    className={classes.workouttermsavatar}\r\n                                    variant='square'\r\n                                    onClick={() => avatharimgRef.current.click()}\r\n                                    src={items?.image?.prevImage}\r\n                                  />\r\n                                  <FormControl\r\n                                    error={Boolean(\r\n                                      touched?.terms &&\r\n                                        touched?.terms[index]?.image?.file &&\r\n                                        errors?.terms &&\r\n                                        (errors?.terms[index] as any)?.image?.file\r\n                                    )}\r\n                                  >\r\n                                    <FormHelperText>\r\n                                      {touched?.terms &&\r\n                                        touched?.terms[index]?.image?.file &&\r\n                                        errors?.terms &&\r\n                                        (errors?.terms[index] as any)?.image?.file}\r\n                                    </FormHelperText>\r\n                                  </FormControl>\r\n                                </Grid>\r\n          \r\n                                <Grid item md={5} xs={12}>\r\n                                  <TextField\r\n                                    fullWidth\r\n                                    multiline\r\n                                    label='Workout terms name'\r\n                                    name={`terms[${index}].name`}\r\n                                    variant='outlined'\r\n                                    error={Boolean(\r\n                                      touched?.terms &&\r\n                                        touched?.terms[index]?.name &&\r\n                                        errors?.terms &&\r\n                                        (errors?.terms[index] as any)?.name\r\n                                    )}\r\n                                    helperText={\r\n                                      touched?.terms &&\r\n                                      touched?.terms[index]?.name &&\r\n                                      errors?.terms &&\r\n                                      (errors?.terms[index] as any)?.name\r\n                                    }\r\n                                    value={items.name}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                  />\r\n                                </Grid>\r\n                                <Grid item md={5} xs={8}>\r\n                                  <TextField\r\n                                    fullWidth\r\n                                    multiline\r\n                                    label='Meal Recipe terms'\r\n                                    name={`terms[${index}].term`}\r\n                                    variant='outlined'\r\n                                    error={Boolean(\r\n                                      touched?.terms &&\r\n                                        touched?.terms[index]?.term &&\r\n                                        errors?.terms &&\r\n                                        (errors?.terms[index] as any)?.term\r\n                                    )}\r\n                                    helperText={\r\n                                      touched?.terms &&\r\n                                      touched?.terms[index]?.term &&\r\n                                      errors?.terms &&\r\n                                      (errors?.terms[index] as any)?.term\r\n                                    }\r\n                                    value={items.term}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                  />\r\n                                </Grid>\r\n          \r\n                                <Grid item md={1} xs={4}>\r\n                                  <Button\r\n                                    fullWidth\r\n                                    className={classes.deleteButton}\r\n                                    variant='contained'\r\n                                    color='secondary'\r\n                                    // onClick={() =>\r\n                                    //   removeIngredients(values, index, setFieldValue)\r\n                                    // }\r\n                                  >\r\n                                    <DeleteIcon />\r\n                                  </Button>\r\n                                </Grid>\r\n                              </Grid>\r\n                            ))}\r\n\r\n                        <Grid item md={12} xs={12}>\r\n                            <Button\r\n                                fullWidth\r\n                                className={classes.themeButton}\r\n                                variant='contained'\r\n                                color='default'\r\n                                onClick={() => addIngredients(values, setFieldValue)}\r\n                                endIcon={<ControlPointIcon />}\r\n                            >\r\n                                Add Ingredients\r\n                            </Button>\r\n                        </Grid>\r\n\r\n                        {values?.ingredients?.map((items: any, index: any)=>(\r\n                                <Grid\r\n                                key={index}\r\n                                item\r\n                                container\r\n                                md={12}\r\n                                xs={12}\r\n                                direction='row'\r\n                                spacing={2}\r\n                              >          \r\n                                <Grid item md={5} xs={12}>\r\n                                <Autocomplete\r\n                                  fullWidth\r\n                                  options={[{name :'ingredients1',id:1},{name :'ingredients2',id:2},{name :'ingredients3',id:3}]}\r\n                                  getOptionLabel={(option: any) => option.name}\r\n                                  getOptionSelected={(option) =>\r\n                                    option.id == items.id\r\n                                  }\r\n                                  // onChange={(event: any, newValue: any) => {\r\n                                  //   setFieldValue(\r\n                                  //     `ingredients[${index}].id`,\r\n                                  //     newValue?._id || ''\r\n                                  //   );\r\n                                  // }}\r\n                                  onChange={(event: any,  newValue)=>handleOptionChange(event, newValue, index)}\r\n                                  onBlur={handleBlur}\r\n                                  renderInput={(params) => (\r\n                                    <TextField\r\n                                      {...params}\r\n                                      label='Ingredients'\r\n                                      variant='outlined'\r\n                                      error={Boolean(\r\n                                        touched?.ingredients &&\r\n                                        touched?.ingredients[index]?.id &&\r\n                                        errors?.ingredients &&\r\n                                        (errors?.ingredients[index] as any)?.id\r\n                                      )}\r\n                                      helperText={\r\n                                        touched?.ingredients &&\r\n                                        touched?.ingredients[index]?.id &&\r\n                                        errors?.ingredients &&\r\n                                        (errors?.ingredients[index] as any)?.id\r\n                                      }\r\n                                      inputProps={{\r\n                                        ...params.inputProps,\r\n                                      }}\r\n                                    />\r\n                                  )}\r\n                                />\r\n                                </Grid>\r\n                                <Grid item md={6} xs={8}>\r\n                                  <TextField\r\n                                    fullWidth\r\n                                    multiline\r\n                                    label='Quantity'\r\n                                    name={`ingredients[${index}].quantity`}\r\n                                    variant='outlined'\r\n                                    error={Boolean(\r\n                                      touched?.ingredients &&\r\n                                        touched?.ingredients[index]?.quantity &&\r\n                                        errors?.ingredients &&\r\n                                        (errors?.ingredients[index] as any)?.quantity\r\n                                    )}\r\n                                    helperText={\r\n                                      touched?.ingredients &&\r\n                                      touched?.ingredients[index]?.quantity &&\r\n                                      errors?.ingredients &&\r\n                                      (errors?.ingredients[index] as any)?.quantity\r\n                                    }\r\n                                    value={items.term}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                  />\r\n                                </Grid>\r\n          \r\n                                <Grid item md={1} xs={4}>\r\n                                  <Button\r\n                                    fullWidth\r\n                                    className={classes.deleteButton}\r\n                                    variant='contained'\r\n                                    color='secondary'\r\n                                    // onClick={() =>\r\n                                    //   removeIngredients(values, index, setFieldValue)\r\n                                    // }\r\n                                  >\r\n                                    <DeleteIcon />\r\n                                  </Button>\r\n                                </Grid>\r\n                              </Grid>\r\n                        ))}\r\n\r\n                        <Grid item xs={12} md={12}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label='Preparation Time'\r\n                                name='preparation_time'\r\n                                variant='outlined'\r\n                                value={values.preparation_time}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                error={Boolean(\r\n                                  touched.preparation_time && errors.preparation_time\r\n                                )}\r\n                                helperText={\r\n                                  touched.preparation_time && errors.preparation_time\r\n                                }\r\n                            />\r\n                        </Grid>                        \r\n                        <Grid item xs={12} md={12}>\r\n                            <TextField\r\n                                fullWidth\r\n                                multiline\r\n                                label='Preparation Description'\r\n                                name='preparation_description'\r\n                                variant='outlined'\r\n                                value={values.preparation_description}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                error={Boolean(\r\n                                  touched.preparation_description && errors.preparation_description\r\n                                )}\r\n                                helperText={\r\n                                  touched.preparation_description && errors.preparation_description\r\n                                }\r\n                            />\r\n                        </Grid>            \r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onClose} variant='outlined' color='secondary'>\r\n                      Cancel\r\n                    </Button>\r\n\r\n                    <Button\r\n                      className={classes.themeButton}\r\n                      onClick={() => submitForm()}\r\n                      disabled={isSubmitting}\r\n                      variant='outlined'\r\n                    >\r\n                      {isSubmitting ? (\r\n                        <CircularProgress size={24} style={{color : 'white'}} />\r\n                      ) : (\r\n                        okBtnText\r\n                      )}\r\n                    </Button>\r\n                  </DialogActions>\r\n                </>\r\n            )}\r\n            </Formik>\r\n         </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MealRecipe\r\n"]},"metadata":{},"sourceType":"module"}