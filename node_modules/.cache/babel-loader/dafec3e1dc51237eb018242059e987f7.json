{"ast":null,"code":"import{useContext}from'react';import{SnackbarContext}from'./SnackbarProvider';var useSnackbar=function useSnackbar(){var snackBar=useContext(SnackbarContext);return snackBar;};export default useSnackbar;","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/hook/useSnackbar.ts"],"names":["useContext","SnackbarContext","useSnackbar","snackBar"],"mappings":"AAAA,OAASA,UAAT,KAA2B,OAA3B,CAGA,OAAmBC,eAAnB,KAA0C,oBAA1C,CAuBA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAiB,CACnC,GAAMC,CAAAA,QAAQ,CAAGH,UAAU,CAACC,eAAD,CAA3B,CAEA,MAAQE,CAAAA,QAAR,CACD,CAJD,CAMA,cAAeD,CAAAA,WAAf","sourcesContent":["import { useContext } from 'react';\r\nimport { SnackbarOrigin } from '@material-ui/core';\r\n\r\nimport { Severity, SnackbarContext } from './SnackbarProvider';\r\n\r\ninterface ISnackBar {\r\n  /**\r\n   * Shows a Snackbar with Alerts like 'error', 'success', 'warning', 'info'\r\n   * By default it shows without Alerts\r\n   * @Example\r\n   * show('Info message', 'info', { vertical: 'top', horizontal: 'center' }, true, 3000)\r\n   */\r\n  show: (\r\n    message: string,\r\n    severity?: Severity,\r\n    /**\r\n     * Position the Snackbar vertically and horizontally\r\n     *\r\n     * Example  { vertical: 'top', horizontal: 'center' }\r\n     */\r\n    position?: SnackbarOrigin,\r\n    autoHide?: boolean,\r\n    autoHideDuration?: number\r\n  ) => any;\r\n}\r\n\r\nconst useSnackbar = (): ISnackBar => {\r\n  const snackBar = useContext(SnackbarContext);\r\n\r\n  return (snackBar as unknown) as ISnackBar;\r\n};\r\n\r\nexport default useSnackbar;\r\n"]},"metadata":{},"sourceType":"module"}