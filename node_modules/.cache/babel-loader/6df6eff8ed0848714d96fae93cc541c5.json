{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pyramidion\\\\WebApp\\\\Izze-Admin\\\\src\\\\pages\\\\SkinCarePlan\\\\SkinCarePlan.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { makeStyles, Avatar, Card, CardActions, CardContent, Dialog, DialogActions, DialogContent, Grid, IconButton, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Tooltip, Typography, TextField, Button, CircularProgress } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport AddIcon from '@material-ui/icons/Add';\nimport Page from '../../components/Page/Page';\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { Pagination } from '@material-ui/lab';\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\nimport useSnackbar from '../../hook/useSnackbar';\nimport useService from '../../hook/useService';\nimport useConfModel from '../../hook/useConfModel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: theme.breakpoints.values.lg,\n    maxWidth: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(3)\n  },\n  themeButton: {\n    color: theme.palette.white,\n    backgroundColor: theme.palette.green.main,\n    '&:hover': {\n      backgroundColor: theme.palette.green.dark\n    }\n  },\n  widthAndHeight: {\n    width: '100%',\n    height: '100%'\n  },\n  addIngredients: {\n    width: '100%',\n    height: '100%',\n    backgroundColor: theme.palette.green.main,\n    color: 'white',\n    padding: theme.spacing(2)\n  },\n  lColor: {\n    color: 'white'\n  },\n  tabCard: {\n    marginTop: theme.spacing(3)\n  },\n  content: {\n    padding: 0\n  },\n  mTop: {\n    marginTop: theme.spacing(1.5)\n  },\n  jCenter: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  sEvenly: {\n    display: 'flex',\n    justifyContent: 'space-evenly'\n  },\n  sBetween: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  iconPadd: {\n    padding: 5\n  },\n  actions: {\n    padding: theme.spacing(1),\n    justifyContent: 'center'\n  },\n  ingredientsAvatarStyle: {\n    width: theme.spacing(10),\n    height: theme.spacing(10),\n    margin: 'auto',\n    marginTop: '20px'\n  }\n}));\n\nfunction SkinCarePlan() {\n  _s();\n\n  const classes = useStyles();\n  const {\n    Post\n  } = useService();\n  const Snackbar = useSnackbar();\n  const ConfModel = useConfModel();\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [stateData, setStateData] = React.useState({\n    page_no: 1,\n    page_limit: 10\n  });\n  const [pageCount, setPageCount] = React.useState(0);\n  const [tableData, setTableData] = React.useState([]);\n  const [addEditDialog, setAddEditDialog] = React.useState({\n    isOpen: false,\n    title: '',\n    okBtnText: '',\n    isEdit: false,\n    data: {}\n  });\n  const [viewDialog, setViewDialog] = useState({\n    isOpen: false,\n    title: '',\n    data: {}\n  });\n\n  const getListofSkinCareplan = () => {\n    Post('app/listSkinCarePlan', stateData).then(res => {\n      setIsLoading(false);\n\n      if (!res.error) {\n        setPageCount(res.page_count);\n        setTableData(res.data);\n      } else {\n        Snackbar.show(res.message, 'error');\n      }\n    }).catch(error => {\n      setIsLoading(false);\n      Snackbar.show(error.message, 'error');\n    });\n  };\n\n  const openAddDialog = () => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      title: 'Add Skin Care Plan',\n      isEdit: false,\n      okBtnText: 'Save'\n    }));\n  };\n\n  const openEditDialog = data => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      isEdit: true,\n      data,\n      title: 'Edit Skin care Plan',\n      okBtnText: 'Edit'\n    }));\n  };\n\n  const openViewDialog = data => {\n    setViewDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      data,\n      title: 'View Skincare Plan'\n    }));\n  };\n\n  const onDelete = data => {\n    const {\n      openModel,\n      setLoading,\n      closeModel\n    } = ConfModel;\n\n    const submitFunction = () => {\n      setLoading(true);\n      Post('app/deleteSkinCarePlan', {\n        id: data._id\n      }).then(async res => {\n        setLoading(false);\n        closeModel();\n        onSuccessAction();\n        Snackbar.show(res.message, 'success');\n      }).catch(err => {\n        setLoading(false);\n        Snackbar.show('Internal Server Error', 'error');\n      });\n    };\n\n    openModel(submitFunction);\n  };\n\n  const onSuccessAction = () => {\n    getListofSkinCareplan();\n    closeAddEditDialog();\n  };\n\n  const closeAddEditDialog = () => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: false\n    }));\n  };\n\n  const closeViewDialog = () => {\n    setViewDialog(prevState => ({ ...prevState,\n      isOpen: false\n    }));\n  };\n\n  const onPageChange = (event, value) => {\n    setStateData(prevState => ({ ...prevState,\n      page_no: value\n    }));\n  };\n\n  useEffect(() => {\n    getListofSkinCareplan();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Page, {\n      title: \"Skin Care Plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      alignItems: \"flex-end\",\n      container: true,\n      justify: \"space-between\",\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h3\",\n          children: \"Skin Care Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => openAddDialog(),\n          className: classes.themeButton,\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 24\n          }, this),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 0,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            size: \"small\",\n            placeholder: \"Name\",\n            variant: \"outlined\",\n            name: \"state\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.tabCard,\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        className: classes.content,\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"#\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Skin Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Skin Issues\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Recipes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: [!isLoading && tableData.map((data, index) => {\n                return /*#__PURE__*/_jsxDEV(TableRow, {\n                  hover: true,\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: \"1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: data === null || data === void 0 ? void 0 : data.skin_type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: [' ', data === null || data === void 0 ? void 0 : data.skin_issues, ' ']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: data === null || data === void 0 ? void 0 : data.recipes[0].recipe.recipe_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: classes.sEvenly,\n                      children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                        title: \"View\",\n                        arrow: true,\n                        children: /*#__PURE__*/_jsxDEV(IconButton, {\n                          className: classes.iconPadd,\n                          onClick: () => openViewDialog(data),\n                          children: /*#__PURE__*/_jsxDEV(CenterFocusStrongIcon, {\n                            color: \"primary\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 294,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 290,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 289,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                        title: \"Edit\",\n                        arrow: true,\n                        children: /*#__PURE__*/_jsxDEV(IconButton, {\n                          className: classes.iconPadd,\n                          onClick: () => openEditDialog(data),\n                          children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                            color: \"action\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 302,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 298,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 297,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                        title: \"Delete\",\n                        arrow: true,\n                        children: /*#__PURE__*/_jsxDEV(IconButton, {\n                          className: classes.iconPadd,\n                          onClick: () => onDelete(data),\n                          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                            color: \"secondary\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 310,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 306,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 305,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 288,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 23\n                }, this);\n              }), isLoading && /*#__PURE__*/_jsxDEV(TableLoader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 31\n              }, this), !isLoading && tableData.length == 0 && /*#__PURE__*/_jsxDEV(TableNoData, {\n                children: \"No Data Found\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Pagination, {\n          count: pageCount,\n          page: stateData.page_no,\n          onChange: onPageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddEditDialog, { ...addEditDialog,\n      onClose: closeAddEditDialog,\n      onSuccess: onSuccessAction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ViewSkincarePlan, { ...viewDialog,\n      onClose: closeViewDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SkinCarePlan, \"aBSSO2HcRTNYwajZ5vqkuMHONew=\", false, function () {\n  return [useStyles, useService, useSnackbar, useConfModel];\n});\n\n_c = SkinCarePlan;\nconst skinTypes = [{\n  title: 'Dry',\n  id: 1\n}, {\n  title: 'Oily',\n  id: 2\n}, {\n  title: 'Mixed',\n  id: 3\n}];\nconst skinIssues = [{\n  title: 'Acne',\n  id: 1\n}, {\n  title: 'Dry Skin',\n  id: 2\n}];\n\nconst AddEditDialog = props => {\n  _s2();\n\n  const {\n    isEdit,\n    isOpen,\n    okBtnText = 'OK',\n    onClose,\n    data,\n    title,\n    onSuccess\n  } = props;\n  const classes = useStyles();\n  const {\n    Post\n  } = useService();\n  const Snackbar = useSnackbar();\n  const formikRef = useRef(null);\n  const [skinCareRecipeList, setSkinCareRecipeList] = React.useState([]);\n  const [storedRecipe, seStoredRecipe] = React.useState([]);\n  const days = [1, 2, 3, 4, 5, 6, 7];\n  const initialFormValues = {\n    skinType: '',\n    skinIssues: '' // recipe: '',\n\n  };\n  const [initialValue, setInitialValue] = React.useState({ ...initialFormValues\n  });\n\n  const listSKinCareList = () => {\n    Post('app/listAllSkinCareRecipe', {}).then(response => {\n      if (!response.error) {\n        let ingredients = response.data.map(data => {\n          data.id = data._id;\n          return data;\n        });\n        setSkinCareRecipeList(ingredients);\n      } else {\n        Snackbar.show(response.message, 'error');\n      }\n    }).catch(error => {\n      Snackbar.show(error.message, 'error');\n    });\n  };\n\n  const onSubmit = (value, helper) => {\n    helper.setSubmitting(false);\n    let postData = {\n      skin_type: value.skinType,\n      skin_issues: value.skinIssues,\n      recipes: storedRecipe\n    };\n    addData(postData, helper);\n  };\n\n  const addData = (data, {\n    setSubmitting,\n    resetForm\n  }) => {\n    setSubmitting(true);\n    Post('app/addSkinCarePlan', data).then(res => {\n      Snackbar.show(res.message, 'success');\n      setSubmitting(false);\n      resetForm();\n      onSuccess();\n      seStoredRecipe([]);\n    }).catch(err => {\n      setSubmitting(false);\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  const handleOnchange = (event, newValue, date) => {\n    let sampleData = [...storedRecipe];\n    let recipeData = {\n      id: newValue.id,\n      day: date\n    };\n    sampleData.push(recipeData);\n    seStoredRecipe(sampleData);\n  };\n\n  const handleSkinType = (event, newValue) => {\n    formikRef.current.setFieldValue('skinType', newValue.title);\n  };\n\n  const handleSkinIssues = (event, newValue) => {\n    formikRef.current.setFieldValue('skinIssues', newValue.title);\n  };\n\n  useEffect(() => {\n    if (isEdit) {\n      console.log(data);\n      const {\n        recipes,\n        _id,\n        ...rest\n      } = data;\n      const editData = { ...rest,\n        id: _id\n      };\n      editData.recipes = recipes.map(data => {\n        data.id = data._id;\n        return data;\n      });\n      setInitialValue(editData);\n    } else {\n      setInitialValue(initialFormValues);\n    }\n  }, [props]);\n  useEffect(() => {\n    listSKinCareList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isOpen,\n      disableBackdropClick: true,\n      disableEscapeKeyDown: true,\n      fullWidth: true,\n      maxWidth: \"md\",\n      \"aria-labelledby\": \"dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"dialog-title\",\n        onClose: onClose,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        innerRef: formikRef,\n        enableReinitialize: true,\n        initialValues: initialValue,\n        onSubmit: onSubmit,\n        validationSchema: Yup.object().shape({\n          skinType: Yup.string().trim().required('Recipe name is required'),\n          skinIssues: Yup.string().trim().required('Recipe Issues is required') // recipe: Yup.string().trim().required('Recipe name is required'),\n\n        }),\n        children: ({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          setFieldValue,\n          submitForm,\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n            dividers: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  options: skinTypes,\n                  value: skinTypes.find(item => item.title === data.skin_type),\n                  getOptionLabel: option => option.title,\n                  getOptionSelected: option => option.id,\n                  onChange: handleSkinType,\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    label: \"Skin Types\",\n                    variant: \"outlined\",\n                    error: Boolean(touched.skinType && errors.skinType),\n                    helperText: touched.skinType && errors.skinType,\n                    inputProps: { ...params.inputProps\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 516,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 507,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  options: skinIssues,\n                  value: skinIssues.find(item => item.title === data.skin_issues),\n                  getOptionLabel: option => option.title,\n                  onChange: handleSkinIssues,\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    label: \"Skin Issues\",\n                    variant: \"outlined\",\n                    error: Boolean(touched.skinIssues && errors.skinIssues),\n                    helperText: touched.skinIssues && errors.skinIssues,\n                    inputProps: { ...params.inputProps\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 538,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 530,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 19\n              }, this), days.map((data, index) => {\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    md: 1,\n                    item: true,\n                    xs: 2,\n                    children: /*#__PURE__*/_jsxDEV(Paper, {\n                      elevation: 0,\n                      component: \"div\",\n                      className: classes.addIngredients,\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        className: classes.lColor,\n                        align: 'center',\n                        variant: 'h6',\n                        children: data\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 562,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 557,\n                      columnNumber: 27\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 556,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    md: 11,\n                    xs: 10,\n                    children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                      id: \"combo-box-demo\",\n                      options: skinCareRecipeList // value={skinCareRecipeList.find(())}\n                      ,\n                      getOptionLabel: option => option.recipe_name,\n                      getOptionSelected: option => option._id,\n                      onChange: (event, newValue) => handleOnchange(event, newValue, data),\n                      onBlur: handleBlur,\n                      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                        label: \"Recipes\",\n                        name: \"Recipes1\",\n                        variant: \"outlined\",\n                        inputProps: { ...params.inputProps\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 583,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 572,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 571,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: onClose,\n              variant: \"outlined\",\n              color: \"secondary\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: classes.themeButton,\n              onClick: () => submitForm(),\n              disabled: isSubmitting,\n              variant: \"outlined\",\n              children: isSubmitting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 24,\n                className: classes.lColor\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 613,\n                columnNumber: 21\n              }, this) : okBtnText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 468,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(AddEditDialog, \"WCbJZQrbHk79Pe6Ot3V4+XACJi4=\", false, function () {\n  return [useStyles, useService, useSnackbar];\n});\n\n_c2 = AddEditDialog;\n\nconst ViewSkincarePlan = props => {\n  _s3();\n\n  var _formDatas$recipes;\n\n  const {\n    isOpen,\n    title,\n    onClose,\n    data\n  } = props;\n  const classes = useStyles();\n  const [formDatas, setFormDatas] = React.useState(data);\n  React.useEffect(() => {\n    setFormDatas(data);\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    disableBackdropClick: true,\n    disableEscapeKeyDown: true,\n    fullWidth: true,\n    maxWidth: \"md\",\n    \"aria-labelledby\": \"dialog-view-title\",\n    open: isOpen,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"dialog-view-title\",\n      onClose: onClose,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 5,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.sBetween,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: \"Skin Types\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 653,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.sBetween,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: \":\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 5,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.sBetween,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: formDatas === null || formDatas === void 0 ? void 0 : formDatas.skin_type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 663,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 662,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 5,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.sBetween,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: \"Skin Issues\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 670,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.sBetween,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: \":\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 675,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 5,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.sBetween,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: formDatas === null || formDatas === void 0 ? void 0 : formDatas.skin_issues\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 680,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 679,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          xs: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 11\n        }, this), formDatas === null || formDatas === void 0 ? void 0 : (_formDatas$recipes = formDatas.recipes) === null || _formDatas$recipes === void 0 ? void 0 : _formDatas$recipes.map((datas, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            style: {\n              color: '#41A58D'\n            },\n            children: datas.recipe.recipe_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: datas.recipe.ingredients.length === 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                style: {\n                  marginTop: '20px'\n                },\n                align: \"center\",\n                children: \"No Ingredients\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 694,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 693,\n              columnNumber: 19\n            }, this) : datas.recipe.ingredients.map((value, index) => /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                className: classes.ingredientsAvatarStyle,\n                variant: \"circular\",\n                src: value.image\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 705,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.mTop,\n                variant: \"h5\",\n                align: \"center\",\n                children: value.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 710,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                align: \"center\",\n                children: value.description.length >= 25 ? `${value.description.substring(0, 30)}...` : value.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 717,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 691,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        variant: \"outlined\",\n        color: \"secondary\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 637,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(ViewSkincarePlan, \"VgBe2AKzYByxWyrQJz/C5URb/80=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = ViewSkincarePlan;\nexport default SkinCarePlan;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SkinCarePlan\");\n$RefreshReg$(_c2, \"AddEditDialog\");\n$RefreshReg$(_c3, \"ViewSkincarePlan\");","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/pages/SkinCarePlan/SkinCarePlan.tsx"],"names":["React","useEffect","useRef","useState","makeStyles","Avatar","Card","CardActions","CardContent","Dialog","DialogActions","DialogContent","Grid","IconButton","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Tooltip","Typography","TextField","Button","CircularProgress","Autocomplete","AddIcon","Page","DialogTitle","Formik","Yup","DeleteIcon","EditIcon","Pagination","CenterFocusStrongIcon","TableLoader","TableNoData","useSnackbar","useService","useConfModel","useStyles","theme","root","width","breakpoints","values","lg","maxWidth","margin","padding","spacing","themeButton","color","palette","white","backgroundColor","green","main","dark","widthAndHeight","height","addIngredients","lColor","tabCard","marginTop","content","mTop","jCenter","display","justifyContent","sEvenly","sBetween","iconPadd","actions","ingredientsAvatarStyle","SkinCarePlan","classes","Post","Snackbar","ConfModel","isLoading","setIsLoading","stateData","setStateData","page_no","page_limit","pageCount","setPageCount","tableData","setTableData","addEditDialog","setAddEditDialog","isOpen","title","okBtnText","isEdit","data","viewDialog","setViewDialog","getListofSkinCareplan","then","res","error","page_count","show","message","catch","openAddDialog","prevState","openEditDialog","openViewDialog","onDelete","openModel","setLoading","closeModel","submitFunction","id","_id","onSuccessAction","err","closeAddEditDialog","closeViewDialog","onPageChange","event","value","map","index","skin_type","skin_issues","recipes","recipe","recipe_name","length","skinTypes","skinIssues","AddEditDialog","props","onClose","onSuccess","formikRef","skinCareRecipeList","setSkinCareRecipeList","storedRecipe","seStoredRecipe","days","initialFormValues","skinType","initialValue","setInitialValue","listSKinCareList","response","ingredients","onSubmit","helper","setSubmitting","postData","addData","resetForm","handleOnchange","newValue","date","sampleData","recipeData","day","push","handleSkinType","current","setFieldValue","handleSkinIssues","console","log","rest","editData","object","shape","string","trim","required","errors","touched","handleChange","handleBlur","submitForm","isSubmitting","find","item","option","params","Boolean","inputProps","ViewSkincarePlan","formDatas","setFormDatas","datas","image","name","description","substring"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport {\r\n  makeStyles,\r\n  Avatar,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  InputLabel,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  FormControl,\r\n  FormHelperText,\r\n  Grid,\r\n  IconButton,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Tooltip,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  CircularProgress,\r\n  Select,\r\n} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Page from '../../components/Page/Page';\r\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\r\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport useService from '../../hook/useService';\r\nimport useConfModel from '../../hook/useConfModel';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  root: {\r\n    width: theme.breakpoints.values.lg,\r\n    maxWidth: '100%',\r\n    margin: '0 auto',\r\n    padding: theme.spacing(3),\r\n  },\r\n  themeButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n  },\r\n  widthAndHeight: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  addIngredients: {\r\n    width: '100%',\r\n    height: '100%',\r\n    backgroundColor: theme.palette.green.main,\r\n    color: 'white',\r\n    padding: theme.spacing(2),\r\n  },\r\n  lColor: {\r\n    color: 'white',\r\n  },\r\n  tabCard: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  mTop: {\r\n    marginTop: theme.spacing(1.5),\r\n  },\r\n  jCenter: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  sEvenly: {\r\n    display: 'flex',\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  sBetween: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  iconPadd: {\r\n    padding: 5,\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(1),\r\n    justifyContent: 'center',\r\n  },\r\n  ingredientsAvatarStyle: {\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10),\r\n    margin: 'auto',\r\n    marginTop: '20px',\r\n  },\r\n}));\r\n\r\nfunction SkinCarePlan() {\r\n  const classes = useStyles();\r\n  const { Post } = useService();\r\n  const Snackbar = useSnackbar();\r\n  const ConfModel = useConfModel();\r\n  const [isLoading, setIsLoading] = React.useState(true);\r\n  const [stateData, setStateData] = React.useState({\r\n    page_no: 1,\r\n    page_limit: 10,\r\n  });\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [tableData, setTableData] = React.useState([]);\r\n  const [addEditDialog, setAddEditDialog] = React.useState({\r\n    isOpen: false,\r\n    title: '',\r\n    okBtnText: '',\r\n    isEdit: false,\r\n    data: {},\r\n  });\r\n  const [viewDialog, setViewDialog] = useState({\r\n    isOpen: false,\r\n    title: '',\r\n    data: {},\r\n  });\r\n\r\n  const getListofSkinCareplan = () => {\r\n    Post('app/listSkinCarePlan', stateData)\r\n      .then((res: any) => {\r\n        setIsLoading(false);\r\n        if (!res.error) {\r\n          setPageCount(res.page_count);\r\n          setTableData(res.data);\r\n        } else {\r\n          Snackbar.show(res.message, 'error');\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        setIsLoading(false);\r\n        Snackbar.show(error.message, 'error');\r\n      });\r\n  };\r\n\r\n  const openAddDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      title: 'Add Skin Care Plan',\r\n      isEdit: false,\r\n      okBtnText: 'Save',\r\n    }));\r\n  };\r\n\r\n  const openEditDialog = (data: any) => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      isEdit: true,\r\n      data,\r\n      title: 'Edit Skin care Plan',\r\n      okBtnText: 'Edit',\r\n    }));\r\n  };\r\n\r\n  const openViewDialog = (data: any) => {\r\n    setViewDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      data,\r\n      title: 'View Skincare Plan',\r\n    }));\r\n  };\r\n\r\n  const onDelete = (data: any) => {\r\n    const { openModel, setLoading, closeModel } = ConfModel;\r\n    const submitFunction = () => {\r\n      setLoading(true);\r\n      Post('app/deleteSkinCarePlan', { id: data._id })\r\n        .then(async (res: any) => {\r\n          setLoading(false);\r\n          closeModel();\r\n          onSuccessAction();\r\n          Snackbar.show(res.message, 'success');\r\n        })\r\n        .catch((err: any) => {\r\n          setLoading(false);\r\n          Snackbar.show('Internal Server Error', 'error');\r\n        });\r\n    };\r\n    openModel(submitFunction);\r\n  };\r\n\r\n  const onSuccessAction = () => {\r\n    getListofSkinCareplan();\r\n    closeAddEditDialog();\r\n  };\r\n\r\n  const closeAddEditDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const closeViewDialog = () => {\r\n    setViewDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const onPageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    setStateData((prevState: any) => ({ ...prevState, page_no: value }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getListofSkinCareplan();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Page title='Skin Care Plan' />\r\n\r\n      {/* =======Header====== */}\r\n      <Grid alignItems='flex-end' container justify='space-between' spacing={3}>\r\n        <Grid item>\r\n          <Typography component='h1' variant='h3'>\r\n            Skin Care Plan\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant='contained'\r\n            onClick={() => openAddDialog()}\r\n            className={classes.themeButton}\r\n            startIcon={<AddIcon />}\r\n          >\r\n            Add\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* =============Search======== */}\r\n      <Grid container spacing={3}>\r\n        <Grid item>\r\n          <Paper elevation={0}>\r\n            <TextField\r\n              fullWidth\r\n              size='small'\r\n              placeholder='Name'\r\n              variant='outlined'\r\n              name='state'\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* ========Table With Pagination========= */}\r\n      <Card className={classes.tabCard}>\r\n        <CardContent className={classes.content}>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align='center'>#</TableCell>\r\n                  <TableCell align='center'>Skin Type</TableCell>\r\n                  <TableCell align='center'>Skin Issues</TableCell>\r\n                  <TableCell align='center'>Recipes</TableCell>\r\n                  <TableCell align='center'>Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {!isLoading &&\r\n                  tableData.map((data: any, index: any) => {\r\n                    return (\r\n                      <TableRow hover>\r\n                        <TableCell align='center'>1</TableCell>\r\n                        <TableCell align='center'>{data?.skin_type}</TableCell>\r\n                        <TableCell align='center'>\r\n                          {' '}\r\n                          {data?.skin_issues}{' '}\r\n                        </TableCell>\r\n                        <TableCell align='center'>\r\n                          {data?.recipes[0].recipe.recipe_name}\r\n                        </TableCell>\r\n                        <TableCell align='center'>\r\n                          <div className={classes.sEvenly}>\r\n                            <Tooltip title='View' arrow>\r\n                              <IconButton\r\n                                className={classes.iconPadd}\r\n                                onClick={() => openViewDialog(data)}\r\n                              >\r\n                                <CenterFocusStrongIcon color='primary' />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip title='Edit' arrow>\r\n                              <IconButton\r\n                                className={classes.iconPadd}\r\n                                onClick={() => openEditDialog(data)}\r\n                              >\r\n                                <EditIcon color='action' />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip title='Delete' arrow>\r\n                              <IconButton\r\n                                className={classes.iconPadd}\r\n                                onClick={() => onDelete(data)}\r\n                              >\r\n                                <DeleteIcon color='secondary' />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                          </div>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                {isLoading && <TableLoader />}\r\n                {!isLoading && tableData.length == 0 && (\r\n                  <TableNoData>No Data Found</TableNoData>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </CardContent>\r\n\r\n        <CardActions className={classes.actions}>\r\n          <Pagination\r\n            count={pageCount}\r\n            page={stateData.page_no}\r\n            onChange={onPageChange}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n\r\n      {/* ==========Add & Edit Dialoge======== */}\r\n\r\n      <AddEditDialog\r\n        {...addEditDialog}\r\n        onClose={closeAddEditDialog}\r\n        onSuccess={onSuccessAction}\r\n      />\r\n      <ViewSkincarePlan {...viewDialog} onClose={closeViewDialog} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst skinTypes = [\r\n  { title: 'Dry', id: 1 },\r\n  { title: 'Oily', id: 2 },\r\n  { title: 'Mixed', id: 3 },\r\n];\r\n\r\nconst skinIssues = [\r\n  { title: 'Acne', id: 1 },\r\n  { title: 'Dry Skin', id: 2 },\r\n];\r\n\r\nconst AddEditDialog = (props: any) => {\r\n  const {\r\n    isEdit,\r\n    isOpen,\r\n    okBtnText = 'OK',\r\n    onClose,\r\n    data,\r\n    title,\r\n    onSuccess,\r\n  } = props;\r\n  const classes = useStyles();\r\n  const { Post } = useService();\r\n  const Snackbar = useSnackbar();\r\n  const formikRef = useRef<any>(null);\r\n  const [skinCareRecipeList, setSkinCareRecipeList] = React.useState<any>([]);\r\n  const [storedRecipe, seStoredRecipe] = React.useState<any>([]);\r\n  const days = [1, 2, 3, 4, 5, 6, 7];\r\n\r\n  const initialFormValues = {\r\n    skinType: '',\r\n    skinIssues: '',\r\n    // recipe: '',\r\n  };\r\n  const [initialValue, setInitialValue] = React.useState({\r\n    ...initialFormValues,\r\n  });\r\n\r\n  const listSKinCareList = () => {\r\n    Post('app/listAllSkinCareRecipe', {})\r\n      .then((response: any) => {\r\n        if (!response.error) {\r\n          let ingredients = response.data.map((data: any) => {\r\n            data.id = data._id;\r\n            return data;\r\n          });\r\n          setSkinCareRecipeList(ingredients);\r\n        } else {\r\n          Snackbar.show(response.message, 'error');\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        Snackbar.show(error.message, 'error');\r\n      });\r\n  };\r\n\r\n  const onSubmit = (value: any, helper: any) => {\r\n    helper.setSubmitting(false);\r\n    let postData = {\r\n      skin_type: value.skinType,\r\n      skin_issues: value.skinIssues,\r\n      recipes: storedRecipe,\r\n    };\r\n    addData(postData, helper);\r\n  };\r\n\r\n  const addData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n    Post('app/addSkinCarePlan', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n        seStoredRecipe([]);\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const handleOnchange = (event: any, newValue: any, date: any) => {\r\n    let sampleData = [...storedRecipe];\r\n    let recipeData = {\r\n      id: newValue.id as number,\r\n      day: date as number,\r\n    };\r\n    sampleData.push(recipeData);\r\n    seStoredRecipe(sampleData);\r\n  };\r\n\r\n  const handleSkinType = (event: any, newValue: any) => {\r\n    formikRef.current.setFieldValue('skinType', newValue.title);\r\n  };\r\n\r\n  const handleSkinIssues = (event: any, newValue: any) => {\r\n    formikRef.current.setFieldValue('skinIssues', newValue.title);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isEdit) {\r\n      console.log(data);\r\n      const { recipes, _id, ...rest } = data;\r\n      const editData = { ...rest, id: _id };\r\n      editData.recipes = recipes.map((data: any) => {\r\n        data.id = data._id;\r\n        return data;\r\n      });\r\n      setInitialValue(editData);\r\n    } else {\r\n      setInitialValue(initialFormValues);\r\n    }\r\n  }, [props]);\r\n\r\n  useEffect(() => {\r\n    listSKinCareList();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={isOpen}\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        fullWidth\r\n        maxWidth='md'\r\n        aria-labelledby='dialog-title'\r\n      >\r\n        <DialogTitle id='dialog-title' onClose={onClose}>\r\n          {title}\r\n        </DialogTitle>\r\n        <Formik\r\n          innerRef={formikRef}\r\n          enableReinitialize\r\n          initialValues={initialValue}\r\n          onSubmit={onSubmit}\r\n          validationSchema={Yup.object().shape({\r\n            skinType: Yup.string().trim().required('Recipe name is required'),\r\n            skinIssues: Yup.string()\r\n              .trim()\r\n              .required('Recipe Issues is required'),\r\n            // recipe: Yup.string().trim().required('Recipe name is required'),\r\n          })}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            setFieldValue,\r\n            submitForm,\r\n            isSubmitting,\r\n          }) => (\r\n            <>\r\n              <DialogContent dividers>\r\n                <Grid container spacing={3}>\r\n                  <Grid item xs={6}>\r\n                    <Autocomplete\r\n                      options={skinTypes}\r\n                      value={skinTypes.find(\r\n                        (item: any) => item.title === data.skin_type\r\n                      )}\r\n                      getOptionLabel={(option: any) => option.title}\r\n                      getOptionSelected={(option: any) => option.id}\r\n                      onChange={handleSkinType}\r\n                      renderInput={(params: any) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label='Skin Types'\r\n                          variant='outlined'\r\n                          error={Boolean(touched.skinType && errors.skinType)}\r\n                          helperText={touched.skinType && errors.skinType}\r\n                          inputProps={{\r\n                            ...params.inputProps,\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Autocomplete\r\n                      options={skinIssues}\r\n                      value={skinIssues.find(\r\n                        (item: any) => item.title === data.skin_issues\r\n                      )}\r\n                      getOptionLabel={(option: any) => option.title}\r\n                      onChange={handleSkinIssues}\r\n                      renderInput={(params: any) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label='Skin Issues'\r\n                          variant='outlined'\r\n                          error={Boolean(\r\n                            touched.skinIssues && errors.skinIssues\r\n                          )}\r\n                          helperText={touched.skinIssues && errors.skinIssues}\r\n                          inputProps={{\r\n                            ...params.inputProps,\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                  {days.map((data: any, index: any) => {\r\n                    return (\r\n                      <>\r\n                        <Grid key={index} md={1} item xs={2}>\r\n                          <Paper\r\n                            elevation={0}\r\n                            component='div'\r\n                            className={classes.addIngredients}\r\n                          >\r\n                            <Typography\r\n                              className={classes.lColor}\r\n                              align={'center'}\r\n                              variant={'h6'}\r\n                            >\r\n                              {data}\r\n                            </Typography>\r\n                          </Paper>\r\n                        </Grid>\r\n                        <Grid item md={11} xs={10}>\r\n                          <Autocomplete\r\n                            id='combo-box-demo'\r\n                            options={skinCareRecipeList}\r\n                            // value={skinCareRecipeList.find(())}\r\n                            getOptionLabel={(option: any) => option.recipe_name}\r\n                            getOptionSelected={(option) => option._id}\r\n                            onChange={(event: any, newValue: any) =>\r\n                              handleOnchange(event, newValue, data)\r\n                            }\r\n                            onBlur={handleBlur}\r\n                            renderInput={(params: any) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label='Recipes'\r\n                                name='Recipes1'\r\n                                variant='outlined'\r\n                                inputProps={{\r\n                                  ...params.inputProps,\r\n                                }}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                      </>\r\n                    );\r\n                  })}\r\n                </Grid>\r\n              </DialogContent>\r\n\r\n              <DialogActions>\r\n                <Button onClick={onClose} variant='outlined' color='secondary'>\r\n                  Cancel\r\n                </Button>\r\n\r\n                <Button\r\n                  className={classes.themeButton}\r\n                  onClick={() => submitForm()}\r\n                  disabled={isSubmitting}\r\n                  variant='outlined'\r\n                >\r\n                  {isSubmitting ? (\r\n                    <CircularProgress size={24} className={classes.lColor} />\r\n                  ) : (\r\n                    okBtnText\r\n                  )}\r\n                </Button>\r\n              </DialogActions>\r\n            </>\r\n          )}\r\n        </Formik>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ViewSkincarePlan = (props: any) => {\r\n  const { isOpen, title, onClose, data } = props;\r\n  const classes = useStyles();\r\n  const [formDatas, setFormDatas] = React.useState(data);\r\n\r\n  React.useEffect(() => {\r\n    setFormDatas(data);\r\n  }, [props]);\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      fullWidth\r\n      maxWidth='md'\r\n      aria-labelledby='dialog-view-title'\r\n      open={isOpen}\r\n    >\r\n      <DialogTitle id='dialog-view-title' onClose={onClose}>\r\n        {title}\r\n      </DialogTitle>\r\n\r\n      <DialogContent dividers>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={5}>\r\n            <div className={classes.sBetween}>\r\n              <Typography variant='h5'>Skin Types</Typography>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={1}>\r\n            <div className={classes.sBetween}>\r\n              <Typography variant='h5'>:</Typography>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <div className={classes.sBetween}>\r\n              <Typography variant='h5'>{formDatas?.skin_type}</Typography>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={1}></Grid>\r\n\r\n          <Grid item xs={5}>\r\n            <div className={classes.sBetween}>\r\n              <Typography variant='h5'>Skin Issues</Typography>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={1}>\r\n            <div className={classes.sBetween}>\r\n              <Typography variant='h5'>:</Typography>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <div className={classes.sBetween}>\r\n              <Typography variant='h5'>{formDatas?.skin_issues}</Typography>\r\n            </div>\r\n          </Grid>\r\n          <Grid xs={1}></Grid>\r\n\r\n          {/* recipe With ingredients */}\r\n          {formDatas?.recipes?.map((datas: any, index: number) => (\r\n            <Grid key={index} item xs={12}>\r\n              <Typography variant='h5' style={{ color: '#41A58D' }}>\r\n                {datas.recipe.recipe_name}\r\n              </Typography>\r\n              <Grid container>\r\n                {datas.recipe.ingredients.length === 0 ? (\r\n                  <Grid item xs={12}>\r\n                    <Typography\r\n                      variant='h5'\r\n                      style={{ marginTop: '20px' }}\r\n                      align='center'\r\n                    >\r\n                      No Ingredients\r\n                    </Typography>\r\n                  </Grid>\r\n                ) : (\r\n                  datas.recipe.ingredients.map((value: any, index: any) => (\r\n                    <Grid item xs={4}>\r\n                      <Avatar\r\n                        className={classes.ingredientsAvatarStyle}\r\n                        variant='circular'\r\n                        src={value.image}\r\n                      />\r\n                      <Typography\r\n                        className={classes.mTop}\r\n                        variant='h5'\r\n                        align='center'\r\n                      >\r\n                        {value.name}\r\n                      </Typography>\r\n                      <Typography variant='subtitle2' align='center'>\r\n                        {value.description.length >= 25\r\n                          ? `${value.description.substring(0, 30)}...`\r\n                          : value.description}\r\n                      </Typography>\r\n                    </Grid>\r\n                  ))\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={onClose} variant='outlined' color='secondary'>\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SkinCarePlan;\r\n"]},"metadata":{},"sourceType":"module"}