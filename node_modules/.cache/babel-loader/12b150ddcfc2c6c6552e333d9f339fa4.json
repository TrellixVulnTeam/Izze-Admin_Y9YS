{"ast":null,"code":"import { Node, mergeAttributes } from '@tiptap/core';\nimport { wrappingInputRule } from 'prosemirror-inputrules';\nvar inputRegex = /^\\s*>\\s$/gm;\nvar Blockquote = Node.create({\n  name: 'blockquote',\n  defaultOptions: {\n    HTMLAttributes: {}\n  },\n  content: 'block*',\n  group: 'block',\n  defining: true,\n  parseHTML: function parseHTML() {\n    return [{\n      tag: 'blockquote'\n    }];\n  },\n  renderHTML: function renderHTML(_ref) {\n    var HTMLAttributes = _ref.HTMLAttributes;\n    return ['blockquote', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n  },\n  addCommands: function addCommands() {\n    return {\n      setBlockquote: function setBlockquote() {\n        return function (_ref2) {\n          var commands = _ref2.commands;\n          return commands.wrapIn('blockquote');\n        };\n      },\n      toggleBlockquote: function toggleBlockquote() {\n        return function (_ref3) {\n          var commands = _ref3.commands;\n          return commands.toggleWrap('blockquote');\n        };\n      },\n      unsetBlockquote: function unsetBlockquote() {\n        return function (_ref4) {\n          var commands = _ref4.commands;\n          return commands.lift('blockquote');\n        };\n      }\n    };\n  },\n  addKeyboardShortcuts: function addKeyboardShortcuts() {\n    var _this = this;\n\n    return {\n      'Mod-Shift-b': function ModShiftB() {\n        return _this.editor.commands.toggleBlockquote();\n      }\n    };\n  },\n  addInputRules: function addInputRules() {\n    return [wrappingInputRule(inputRegex, this.type)];\n  }\n});\nexport default Blockquote;\nexport { Blockquote, inputRegex };","map":null,"metadata":{},"sourceType":"module"}