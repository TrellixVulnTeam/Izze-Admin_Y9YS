{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pyramidion\\\\WebApp\\\\Izze-Admin\\\\src\\\\pages\\\\MealRecipe\\\\MealRecipe.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, CircularProgress, Dialog, DialogActions, DialogContent, Grid, makeStyles, Paper, TextField, Typography } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: theme.breakpoints.values.lg,\n    maxWidth: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(3)\n  },\n  themeButton: {\n    color: theme.palette.white,\n    backgroundColor: theme.palette.green.main,\n    '&:hover': {\n      backgroundColor: theme.palette.green.dark\n    }\n  }\n}));\n\nfunction MealRecipe() {\n  _s();\n\n  const classes = useStyles();\n  const [addEditDialog, setAddEditDialog] = React.useState({\n    isOpen: false,\n    title: '',\n    okBtnText: '',\n    isEdit: false,\n    data: {}\n  });\n\n  const openAddDialog = () => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      title: 'Add Meal Recipe',\n      isEdit: false,\n      okBtnText: 'Save'\n    }));\n  };\n\n  const closeAddEditDialog = () => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: false\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      alignItems: \"flex-end\",\n      container: true,\n      justify: \"space-between\",\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h3\",\n          children: \"Meal Recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => openAddDialog(),\n          className: classes.themeButton,\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 28\n          }, this),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 0,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            size: \"small\",\n            placeholder: \"Name\",\n            variant: \"outlined\",\n            name: \"state\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AddEditModel, { ...addEditDialog,\n      onClose: closeAddEditDialog // onSuccess={onSuccessAction}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MealRecipe, \"s5o9kyFm5KAS0TTYVhpPTPgOC/g=\", false, function () {\n  return [useStyles];\n});\n\n_c = MealRecipe;\nconst initialFormValues = {\n  name: '',\n  image: {\n    file: null,\n    prevImage: '',\n    isNew: null\n  },\n  nutrition: '',\n  description: '',\n  protein: '',\n  fat: '',\n  carbs: '',\n  terms: [{\n    name: '',\n    image: {\n      file: null,\n      prevImage: '',\n      isNew: null\n    },\n    term: ''\n  }],\n  ingredients: [{\n    id: ''\n  }],\n  preparation_time: '',\n  preparation_description: ''\n};\nexport const AddEditModel = props => {\n  _s2();\n\n  const {\n    isEdit,\n    isOpen,\n    okBtnText = 'OK',\n    onClose,\n    data,\n    title,\n    onSuccess\n  } = props;\n  const classes = useStyles();\n  const [initialValues, setInitialValues] = React.useState({ ...initialFormValues\n  });\n  const formikRef = React.useRef(null);\n  const imageRef = React.useRef(null);\n\n  const onSubmit = () => {\n    alert('done');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isOpen,\n      disableBackdropClick: true,\n      disableEscapeKeyDown: true,\n      fullWidth: true,\n      maxWidth: \"md\",\n      \"aria-labelledby\": \"dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"dialog-title\",\n        onClose: onClose,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        innerRef: formikRef,\n        enableReinitialize: true,\n        initialValues: initialFormValues,\n        onSubmit: onSubmit,\n        validationSchema: Yup.object().shape({\n          name: Yup.string().trim().required('Name is required'),\n          nutrition: Yup.string().trim().required('Nutrition is required'),\n          description: Yup.string().trim().required('Description is required'),\n          protein: Yup.string().trim().required('Protein is required'),\n          fat: Yup.string().trim().required('Fat is required'),\n          carbs: Yup.string().trim().required('Carbs is required')\n        }),\n        children: ({\n          values,\n          errors,\n          touched,\n          handleBlur,\n          handleChange,\n          submitForm,\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n            dividers: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Name\",\n                  name: \"name\",\n                  variant: \"outlined\",\n                  value: values.name,\n                  onChange: handleChange,\n                  onBlur: handleBlur\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Nutrition\",\n                  name: \"nutrition\",\n                  variant: \"outlined\",\n                  value: values.nutrition,\n                  onChange: handleChange,\n                  onBlur: handleBlur\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  multiline: true,\n                  label: \"Description\",\n                  name: \"description\",\n                  variant: \"outlined\",\n                  value: values.description,\n                  onChange: handleChange,\n                  onBlur: handleBlur\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Protein\",\n                  name: \"protein\",\n                  variant: \"outlined\",\n                  value: values.protein,\n                  onChange: handleChange,\n                  onBlur: handleBlur\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Fat\",\n                  name: \"fat\",\n                  variant: \"outlined\",\n                  value: values.fat,\n                  onChange: handleChange,\n                  onBlur: handleBlur\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Carbs\",\n                  name: \"carbs\",\n                  variant: \"outlined\",\n                  value: values.carbs,\n                  onChange: handleChange,\n                  onBlur: handleBlur\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 12,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  fullWidth: true,\n                  className: classes.themeButton,\n                  variant: \"contained\",\n                  color: \"default\" // onClick={() => addIngredients(values, setFieldValue)}\n                  ,\n                  endIcon: /*#__PURE__*/_jsxDEV(ControlPointIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 42\n                  }, this),\n                  children: \"Add workout terms\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: onClose,\n              variant: \"outlined\",\n              color: \"secondary\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: classes.themeButton,\n              onClick: () => submitForm(),\n              disabled: isSubmitting,\n              variant: \"outlined\",\n              children: isSubmitting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 24,\n                style: {\n                  color: 'white'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 25\n              }, this) : okBtnText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s2(AddEditModel, \"IB6p2fAPMTk4SzO/1uijgctAj94=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = AddEditModel;\nexport default MealRecipe;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MealRecipe\");\n$RefreshReg$(_c2, \"AddEditModel\");","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/pages/MealRecipe/MealRecipe.tsx"],"names":["React","Button","CircularProgress","Dialog","DialogActions","DialogContent","Grid","makeStyles","Paper","TextField","Typography","AddIcon","Formik","Yup","DialogTitle","ControlPointIcon","useStyles","theme","root","width","breakpoints","values","lg","maxWidth","margin","padding","spacing","themeButton","color","palette","white","backgroundColor","green","main","dark","MealRecipe","classes","addEditDialog","setAddEditDialog","useState","isOpen","title","okBtnText","isEdit","data","openAddDialog","prevState","closeAddEditDialog","initialFormValues","name","image","file","prevImage","isNew","nutrition","description","protein","fat","carbs","terms","term","ingredients","id","preparation_time","preparation_description","AddEditModel","props","onClose","onSuccess","initialValues","setInitialValues","formikRef","useRef","imageRef","onSubmit","alert","object","shape","string","trim","required","errors","touched","handleBlur","handleChange","submitForm","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Avatar, Button, Card, CardActions, CardContent, CircularProgress, Dialog, DialogActions, DialogContent, Grid, IconButton, makeStyles, Paper, Tab,  Table, TableBody, FormControl, FormHelperText, TableCell, TableContainer, TableHead, TableRow, TextField, Tooltip,  Divider, Typography, Tabs} from '@material-ui/core';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Pagination, TabContext, TabList, TabPanel } from '@material-ui/lab';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { imageUpload } from '../../utils/FirebaseUtils';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\r\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\r\nimport Page from '../../components/Page/Page';\r\nimport useConfModel from '../../hook/useConfModel';\r\nimport useService from '../../hook/useService';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\n\r\n\r\nconst useStyles = makeStyles((theme: any)=>({\r\n    root: {\r\n        width: theme.breakpoints.values.lg,\r\n        maxWidth: '100%',\r\n        margin: '0 auto',\r\n        padding: theme.spacing(3),\r\n    },\r\n    themeButton: {\r\n        color: theme.palette.white,\r\n        backgroundColor: theme.palette.green.main,\r\n        '&:hover': {\r\n          backgroundColor: theme.palette.green.dark,\r\n        },\r\n    },\r\n}))\r\nfunction MealRecipe() {\r\n  const classes = useStyles();\r\n  const [addEditDialog, setAddEditDialog] = React.useState({\r\n    isOpen: false,\r\n    title: '',\r\n    okBtnText: '',\r\n    isEdit: false,\r\n    data: {},\r\n  });\r\n\r\n  const openAddDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      title: 'Add Meal Recipe',\r\n      isEdit: false,\r\n      okBtnText: 'Save',\r\n    }));\r\n  };\r\n\r\n  const closeAddEditDialog = () =>{\r\n    setAddEditDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <Grid alignItems='flex-end' container justify='space-between' spacing={3}>\r\n            <Grid item>\r\n            <Typography component='h1' variant='h3'>\r\n                Meal Recipe\r\n            </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n            <Button\r\n                variant='contained'\r\n                onClick={() => openAddDialog()}\r\n                className={classes.themeButton}\r\n                startIcon={<AddIcon />}\r\n            >\r\n                Add\r\n            </Button>\r\n            </Grid>\r\n        </Grid>\r\n\r\n      {/* =============Search======== */}\r\n        <Grid container spacing={3}>\r\n            <Grid item>\r\n                <Paper elevation={0}>\r\n                    <TextField\r\n                    fullWidth\r\n                    size='small'\r\n                    placeholder='Name'\r\n                    variant='outlined'\r\n                    name='state'\r\n                    />\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n\r\n        <AddEditModel\r\n            {...addEditDialog}\r\n            onClose={closeAddEditDialog}\r\n            // onSuccess={onSuccessAction}\r\n         />\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\ninterface MealTerms {\r\n    name : string,\r\n    image : {file:string | null, prevImage : string, isNew: boolean | null},\r\n    term : string\r\n}\r\n\r\ninterface Ingredients {\r\n    id : string\r\n}\r\n\r\ninterface MealPlan {\r\n    name : string,\r\n    image : {file:string | null, prevImage : string, isNew: boolean | null},\r\n    nutrition : string,\r\n    description : string,\r\n    protein : string,\r\n    fat : string,\r\n    carbs : string,\r\n    terms : MealTerms[],\r\n    ingredients : Ingredients[],\r\n    preparation_time : string,\r\n    preparation_description : string\r\n\r\n}\r\n\r\nconst initialFormValues: MealPlan = {\r\n    name : '',\r\n    image : { file:null, prevImage : '', isNew : null },\r\n    nutrition : '',\r\n    description : '',\r\n    protein : '',\r\n    fat : '',\r\n    carbs : '',\r\n    terms : [\r\n        {\r\n            name : '',\r\n            image : { file:null , prevImage : '', isNew: null},\r\n            term : ''\r\n        }\r\n    ],\r\n    ingredients : [{ id: '' }],\r\n    preparation_time : '',\r\n    preparation_description : ''\r\n}\r\n\r\nexport const AddEditModel = (props: any) =>{\r\n    const { isEdit, isOpen, okBtnText = 'OK', onClose, data, title, onSuccess } = props;\r\n    const classes = useStyles()\r\n    const [initialValues, setInitialValues] = React.useState({...initialFormValues});\r\n    const formikRef = React.useRef<any>(null);\r\n    const imageRef = React.useRef<any>(null);\r\n\r\n    const onSubmit = () =>{\r\n        alert('done')\r\n    }\r\n    return (\r\n        <>\r\n        <Dialog\r\n            open={isOpen}\r\n            disableBackdropClick\r\n            disableEscapeKeyDown\r\n            fullWidth\r\n            maxWidth='md'\r\n            aria-labelledby='dialog-title'\r\n        >\r\n            <DialogTitle id='dialog-title' onClose={onClose}>\r\n             {title}\r\n            </DialogTitle>\r\n            <Formik\r\n                innerRef={formikRef}\r\n                enableReinitialize\r\n                initialValues={initialFormValues}\r\n                onSubmit={onSubmit}\r\n                validationSchema={Yup.object().shape({\r\n                    name: Yup.string().trim().required('Name is required'),\r\n                    nutrition: Yup.string().trim().required('Nutrition is required'),\r\n                    description: Yup.string().trim().required('Description is required'),\r\n                    protein: Yup.string().trim().required('Protein is required'),\r\n                    fat: Yup.string().trim().required('Fat is required'),\r\n                    carbs: Yup.string().trim().required('Carbs is required'),\r\n\r\n                })}\r\n            >\r\n                {({values, errors, touched, handleBlur,handleChange, submitForm, isSubmitting,})=>(\r\n                <>\r\n                <DialogContent dividers>\r\n                    <Grid container spacing = {2}>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label='Name'\r\n                                name='name'\r\n                                variant='outlined'\r\n                                value={values.name}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                            />\r\n                        </Grid>                        \r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label='Nutrition'\r\n                                name='nutrition'\r\n                                variant='outlined'\r\n                                value={values.nutrition}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                            />\r\n                        </Grid>                        \r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                multiline\r\n                                label='Description'\r\n                                name='description'\r\n                                variant='outlined'\r\n                                value={values.description}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                            />\r\n                        </Grid>                        \r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label='Protein'\r\n                                name='protein'\r\n                                variant='outlined'\r\n                                value={values.protein}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                            />\r\n                        </Grid>                        \r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label='Fat'\r\n                                name='fat'\r\n                                variant='outlined'\r\n                                value={values.fat}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                            />\r\n                        </Grid>                        \r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label='Carbs'\r\n                                name='carbs'\r\n                                variant='outlined'\r\n                                value={values.carbs}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                            />\r\n                        </Grid>  \r\n                        <Grid item md={12} xs={12}>\r\n                            <Button\r\n                                fullWidth\r\n                                className={classes.themeButton}\r\n                                variant='contained'\r\n                                color='default'\r\n                                // onClick={() => addIngredients(values, setFieldValue)}\r\n                                endIcon={<ControlPointIcon />}\r\n                            >\r\n                                Add workout terms\r\n                            </Button>\r\n                        </Grid>                     \r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onClose} variant='outlined' color='secondary'>\r\n                      Cancel\r\n                    </Button>\r\n\r\n                    <Button\r\n                      className={classes.themeButton}\r\n                      onClick={() => submitForm()}\r\n                      disabled={isSubmitting}\r\n                      variant='outlined'\r\n                    >\r\n                      {isSubmitting ? (\r\n                        <CircularProgress size={24} style={{color : 'white'}} />\r\n                      ) : (\r\n                        okBtnText\r\n                      )}\r\n                    </Button>\r\n                  </DialogActions>\r\n                </>\r\n            )}\r\n            </Formik>\r\n         </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MealRecipe\r\n"]},"metadata":{},"sourceType":"module"}