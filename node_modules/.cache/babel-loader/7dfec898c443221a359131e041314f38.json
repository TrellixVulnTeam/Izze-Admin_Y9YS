{"ast":null,"code":"import * as Yup from 'yup';\nexport const NutQuantity = {\n  macros: 0,\n  gram: 0,\n  calories: 0\n};\nexport const NutMealTime = {\n  isEdit: true,\n  meal_time: '',\n  order: 0,\n  meals: []\n};\nexport const NutMeal = {\n  ingredients: [],\n  quantity: 0,\n  protein: 0,\n  fat: 0,\n  carbs: 0,\n  calories: 0\n};\nexport const initialFormValues = {\n  diet_type: '',\n  calories: '',\n  quantity_unit: '',\n  protein: NutQuantity,\n  fat: NutQuantity,\n  carbs: NutQuantity,\n  nutrition: []\n};\nconst ValNut = Yup.object({\n  macros: Yup.number().typeError('Macros must be in number').required('Macros is required'),\n  gram: Yup.number().typeError('Gram must be in number').required('Gram is required'),\n  calories: Yup.number().typeError('Calories must be in number').required('Calories is required')\n});\nexport const validation = Yup.object().shape({\n  diet_type: Yup.string().trim().required('Diet type is required'),\n  calories: Yup.number().required('Calories is required'),\n  protein: ValNut,\n  fat: ValNut,\n  carbs: ValNut,\n  nutrition: Yup.array().of(Yup.object().shape({\n    meal_time: Yup.string().trim().required('Name is required'),\n    meals: Yup.array().of(Yup.object().shape({\n      ingredients: Yup.array().of(Yup.object().shape({\n        id: Yup.string().trim().required('Before Workout is Required')\n      })).min(1, 'Ingredients is Required'),\n      quantity: Yup.number().typeError('Quantity must be in number').required('Quantity is required'),\n      quantity_unit: Yup.string().trim().required('Quantity unit is required'),\n      protein: Yup.number().typeError('Protein must be in number').required('Protein is required'),\n      fat: Yup.number().typeError('Fat must be in number').required('Fat is required'),\n      carbs: Yup.number().typeError('Carbs must be in number').required('Carbs is required'),\n      calories: Yup.number().typeError('Calories must be in number').required('Calories is required')\n    })).min(1, 'Meal is Required')\n  })).min(1, 'Field is Required')\n});","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/pages/NutritionPlan/FormikValues.tsx"],"names":["Yup","NutQuantity","macros","gram","calories","NutMealTime","isEdit","meal_time","order","meals","NutMeal","ingredients","quantity","protein","fat","carbs","initialFormValues","diet_type","quantity_unit","nutrition","ValNut","object","number","typeError","required","validation","shape","string","trim","array","of","id","min"],"mappings":"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","sourcesContent":["import * as Yup from 'yup';\r\n\r\ninterface NutritionQuantity {\r\n  macros: number,\r\n  gram: number,\r\n  calories: number,\r\n}\r\n\r\ninterface IntMealTime {\r\n  isEdit: Boolean,\r\n  meal_time: string,\r\n  order: number,\r\n  meals: IntMeal[],\r\n}\r\n\r\ninterface IntIngredients {\r\n  id: string\r\n}\r\n\r\ninterface IntMeal {\r\n  ingredients: IntIngredients[],\r\n  quantity: number,\r\n  protein: number,\r\n  fat: number,\r\n  carbs: number,\r\n  calories: number,\r\n}\r\n\r\ninterface NutritionPlan {\r\n  diet_type: string,\r\n  calories: string,\r\n  quantity_unit: string,\r\n  protein: NutritionQuantity,\r\n  fat: NutritionQuantity,\r\n  carbs: NutritionQuantity\r\n  nutrition: IntMealTime[]\r\n}\r\n\r\nexport const NutQuantity: NutritionQuantity = {\r\n  macros: 0,\r\n  gram: 0,\r\n  calories: 0,\r\n}\r\n\r\nexport const NutMealTime: IntMealTime = {\r\n  isEdit: true,\r\n  meal_time: '',\r\n  order: 0,\r\n  meals: []\r\n}\r\n\r\nexport const NutMeal: IntMeal = {\r\n  ingredients: [],\r\n  quantity: 0,\r\n  protein: 0,\r\n  fat: 0,\r\n  carbs: 0,\r\n  calories: 0,\r\n}\r\n\r\n\r\nexport const initialFormValues: NutritionPlan = {\r\n  diet_type: '',\r\n  calories: '',\r\n  quantity_unit: '',\r\n  protein: NutQuantity,\r\n  fat: NutQuantity,\r\n  carbs: NutQuantity,\r\n  nutrition: []\r\n};\r\n\r\nconst ValNut = Yup.object({\r\n  macros: Yup.number().typeError('Macros must be in number').required('Macros is required'),\r\n  gram: Yup.number().typeError('Gram must be in number').required('Gram is required'),\r\n  calories: Yup.number().typeError('Calories must be in number').required('Calories is required'),\r\n})\r\n\r\nexport const validation = Yup.object().shape({\r\n  diet_type: Yup.string().trim().required('Diet type is required'),\r\n  calories: Yup.number().required('Calories is required'),\r\n  protein: ValNut,\r\n  fat: ValNut,\r\n  carbs: ValNut,\r\n  nutrition: Yup.array().of(\r\n    Yup.object().shape({\r\n      meal_time: Yup.string().trim().required('Name is required'),\r\n      meals: Yup.array().of(\r\n        Yup.object().shape({\r\n          ingredients: Yup.array().of(\r\n            Yup.object().shape({\r\n              id: Yup.string().trim().required('Before Workout is Required'),\r\n            })).min(1, 'Ingredients is Required'),\r\n          quantity: Yup.number().typeError('Quantity must be in number').required('Quantity is required'),\r\n          quantity_unit: Yup.string().trim().required('Quantity unit is required'),\r\n          protein: Yup.number().typeError('Protein must be in number').required('Protein is required'),\r\n          fat: Yup.number().typeError('Fat must be in number').required('Fat is required'),\r\n          carbs: Yup.number().typeError('Carbs must be in number').required('Carbs is required'),\r\n          calories: Yup.number().typeError('Calories must be in number').required('Calories is required'),\r\n        })\r\n      ).min(1, 'Meal is Required')\r\n    })).min(1, 'Field is Required')\r\n})\r\n"]},"metadata":{},"sourceType":"module"}