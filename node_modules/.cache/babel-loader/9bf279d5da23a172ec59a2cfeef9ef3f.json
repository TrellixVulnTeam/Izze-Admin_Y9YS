{"ast":null,"code":"import _objectWithoutProperties from \"D:/Pyramidion/WebApp/Izze-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { Node, mergeAttributes } from '@tiptap/core';\nimport { wrappingInputRule } from 'prosemirror-inputrules';\nvar inputRegex = /^(\\d+)\\.\\s$/;\nvar OrderedList = Node.create({\n  name: 'orderedList',\n  defaultOptions: {\n    HTMLAttributes: {}\n  },\n  group: 'block list',\n  content: 'listItem+',\n  addAttributes: function addAttributes() {\n    return {\n      start: {\n        default: 1,\n        parseHTML: function parseHTML(element) {\n          return {\n            start: element.hasAttribute('start') ? parseInt(element.getAttribute('start') || '', 10) : 1\n          };\n        }\n      }\n    };\n  },\n  parseHTML: function parseHTML() {\n    return [{\n      tag: 'ol'\n    }];\n  },\n  renderHTML: function renderHTML(_ref) {\n    var HTMLAttributes = _ref.HTMLAttributes;\n\n    var start = HTMLAttributes.start,\n        attributesWithoutStart = _objectWithoutProperties(HTMLAttributes, [\"start\"]);\n\n    return start === 1 ? ['ol', mergeAttributes(this.options.HTMLAttributes, attributesWithoutStart), 0] : ['ol', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n  },\n  addCommands: function addCommands() {\n    return {\n      toggleOrderedList: function toggleOrderedList() {\n        return function (_ref2) {\n          var commands = _ref2.commands;\n          return commands.toggleList('orderedList', 'listItem');\n        };\n      }\n    };\n  },\n  addKeyboardShortcuts: function addKeyboardShortcuts() {\n    var _this = this;\n\n    return {\n      'Mod-Shift-7': function ModShift7() {\n        return _this.editor.commands.toggleOrderedList();\n      }\n    };\n  },\n  addInputRules: function addInputRules() {\n    return [wrappingInputRule(inputRegex, this.type, function (match) {\n      return {\n        order: +match[1]\n      };\n    }, function (match, node) {\n      return node.childCount + node.attrs.order === +match[1];\n    })];\n  }\n});\nexport default OrderedList;\nexport { OrderedList, inputRegex };","map":null,"metadata":{},"sourceType":"module"}