{"ast":null,"code":"import React,{useContext}from'react';import MobxObserver from'../Mobx/Helpers/MobxObserver';import{useStore}from'../Mobx/Helpers/UseStore';import{PostApi}from'../utils/ApiService';import{LogoutUser}from'../utils/FirebaseUtils';import useSnackbar from'./useSnackbar';import{jsx as _jsx}from\"react/jsx-runtime\";export var ServiceContext=/*#__PURE__*/React.createContext(null);export var ServiceProvider=MobxObserver(function(props){var children=props.children;var _useStore=useStore(),UserStore=_useStore.UserStore;var Snackbar=useSnackbar();var PostService=function PostService(url){var data=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return new Promise(function(resolve,reject){PostApi(url,data,UserStore.IdToken).then(resolve).catch(function(err){var statusCode=err.statusCode;if(statusCode==401){Snackbar.show(err.message,'error');return LogoutUser();}return reject(err);});});};var ProviderValue={Post:PostService,Logout:LogoutUser};return/*#__PURE__*/_jsx(ServiceContext.Provider,{value:ProviderValue,children:children});});var useService=function useService(){return useContext(ServiceContext);};export default useService;","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/hook/useService.tsx"],"names":["React","useContext","MobxObserver","useStore","PostApi","LogoutUser","useSnackbar","ServiceContext","createContext","ServiceProvider","props","children","UserStore","Snackbar","PostService","url","data","Promise","resolve","reject","IdToken","then","catch","err","statusCode","show","message","ProviderValue","Post","Logout","useService"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAA2D,OAA3D,CACA,MAAOC,CAAAA,YAAP,KAAyB,8BAAzB,CACA,OAASC,QAAT,KAAyB,0BAAzB,CACA,OAASC,OAAT,KAAwB,qBAAxB,CACA,OAASC,UAAT,KAA2B,wBAA3B,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,C,2CAEA,MAAO,IAAMC,CAAAA,cAAc,cAAGP,KAAK,CAACQ,aAAN,CAAyB,IAAzB,CAAvB,CAEP,MAAO,IAAMC,CAAAA,eAAe,CAAGP,YAAY,CAAC,SAACQ,KAAD,CAAgB,CAC1D,GAAQC,CAAAA,QAAR,CAAqBD,KAArB,CAAQC,QAAR,CACA,cAAsBR,QAAQ,EAA9B,CAAQS,SAAR,WAAQA,SAAR,CACA,GAAMC,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CAEA,GAAMQ,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,GAAD,CAAiC,IAAnBC,CAAAA,IAAmB,2DAAP,EAAO,CACnD,MAAO,IAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtCf,OAAO,CAACW,GAAD,CAAMC,IAAN,CAAYJ,SAAS,CAACQ,OAAtB,CAAP,CACGC,IADH,CACQH,OADR,EAEGI,KAFH,CAES,SAACC,GAAD,CAAc,CACnB,GAAQC,CAAAA,UAAR,CAAuBD,GAAvB,CAAQC,UAAR,CACA,GAAIA,UAAU,EAAI,GAAlB,CAAuB,CACrBX,QAAQ,CAACY,IAAT,CAAcF,GAAG,CAACG,OAAlB,CAA2B,OAA3B,EACA,MAAOrB,CAAAA,UAAU,EAAjB,CACD,CACD,MAAOc,CAAAA,MAAM,CAACI,GAAD,CAAb,CACD,CATH,EAUD,CAXM,CAAP,CAYD,CAbD,CAeA,GAAMI,CAAAA,aAAa,CAAG,CACpBC,IAAI,CAAEd,WADc,CAEpBe,MAAM,CAAExB,UAFY,CAAtB,CAIA,mBACE,KAAC,cAAD,CAAgB,QAAhB,EAAyB,KAAK,CAAEsB,aAAhC,UACGhB,QADH,EADF,CAKD,CA7B0C,CAApC,CA+BP,GAAMmB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,MAAO7B,CAAAA,UAAU,CAACM,cAAD,CAAjB,CACD,CAFD,CAIA,cAAeuB,CAAAA,UAAf","sourcesContent":["import React, { useContext, createContext, useState } from 'react';\r\nimport MobxObserver from '../Mobx/Helpers/MobxObserver';\r\nimport { useStore } from '../Mobx/Helpers/UseStore';\r\nimport { PostApi } from '../utils/ApiService';\r\nimport { LogoutUser } from '../utils/FirebaseUtils';\r\nimport useSnackbar from './useSnackbar';\r\n\r\nexport const ServiceContext = React.createContext<any>(null);\r\n\r\nexport const ServiceProvider = MobxObserver((props: any) => {\r\n  const { children } = props;\r\n  const { UserStore } = useStore();\r\n  const Snackbar = useSnackbar();\r\n\r\n  const PostService = (url: string, data: any = {}) => {\r\n    return new Promise((resolve, reject) => {\r\n      PostApi(url, data, UserStore.IdToken)\r\n        .then(resolve)\r\n        .catch((err: any) => {\r\n          const { statusCode } = err\r\n          if (statusCode == 401) {\r\n            Snackbar.show(err.message, 'error');\r\n            return LogoutUser()\r\n          }\r\n          return reject(err)\r\n        })\r\n    })\r\n  };\r\n\r\n  const ProviderValue = {\r\n    Post: PostService,\r\n    Logout: LogoutUser,\r\n  };\r\n  return (\r\n    <ServiceContext.Provider value={ProviderValue}>\r\n      {children}\r\n    </ServiceContext.Provider>\r\n  );\r\n});\r\n\r\nconst useService = () => {\r\n  return useContext(ServiceContext);\r\n};\r\n\r\nexport default useService;\r\n"]},"metadata":{},"sourceType":"module"}