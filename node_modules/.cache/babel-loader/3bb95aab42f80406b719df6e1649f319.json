{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pyramidion\\\\WebApp\\\\Izze-Admin\\\\src\\\\pages\\\\NutritionIngredients\\\\NutritionIngredients.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { Button, CircularProgress, Dialog, DialogActions, DialogContent, Grid, makeStyles, FormControl, FormHelperText, TextField, Typography } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { imageUpload } from '../../utils/FirebaseUtils';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\nimport Page from '../../components/Page/Page';\nimport useService from '../../hook/useService';\nimport useSnackbar from '../../hook/useSnackbar';\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: theme.breakpoints.values.lg,\n    maxWidth: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(3)\n  },\n  themeButton: {\n    color: theme.palette.white,\n    backgroundColor: theme.palette.green.main,\n    '&:hover': {\n      backgroundColor: theme.palette.green.dark\n    }\n  },\n  deleteButton: {\n    width: '100%',\n    height: '50px'\n  },\n  imageView: {\n    width: '100%',\n    height: '100%'\n  }\n}));\n\nfunction NutritionIngredients() {\n  _s();\n\n  const classes = useStyles();\n  const [addEditDialog, setAddEditDialog] = React.useState({\n    isOpen: false,\n    title: '',\n    okBtnText: '',\n    isEdit: false,\n    data: {}\n  });\n\n  const openAddDialog = () => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      title: 'Add Nutrition Ingredients',\n      isEdit: false,\n      okBtnText: 'Save'\n    }));\n  };\n\n  const closeAddEditDialog = () => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: false\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Page, {\n      title: \"Nutrition Ingredients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      alignItems: \"flex-end\",\n      container: true,\n      justify: \"space-between\",\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h3\",\n          children: \"Nutrition Ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => openAddDialog(),\n          className: classes.themeButton,\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 24\n          }, this),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ViewandEditDialogue, { ...addEditDialog,\n      onClose: closeAddEditDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NutritionIngredients, \"s5o9kyFm5KAS0TTYVhpPTPgOC/g=\", false, function () {\n  return [useStyles];\n});\n\n_c = NutritionIngredients;\n\nconst ViewandEditDialogue = props => {\n  _s2();\n\n  const {\n    isEdit,\n    isOpen,\n    okBtnText = 'OK',\n    onClose,\n    data,\n    title,\n    onSuccess\n  } = props;\n  const classes = useStyles();\n  const formikRef = useRef(null);\n  const imageRef = useRef(null);\n  const Snackbar = useSnackbar();\n  const {\n    Post\n  } = useService();\n  const initialValues = {\n    nutrientName: '',\n    image: {\n      file: null,\n      prevImage: '',\n      isNew: null\n    },\n    quantity: '',\n    protein: '',\n    fat: '',\n    carbs: '',\n    calories: '',\n    benfits: [],\n    description: ''\n  };\n  const [initialFormValues, setInitialFormValues] = React.useState({ ...initialValues\n  });\n  const [addBenifits, setAddBenifits] = React.useState([]);\n\n  const handleAddBenifits = event => {\n    event.preventDefault();\n    const dummyData = [...addBenifits, ''];\n    setAddBenifits(dummyData);\n    formikRef.current.setFieldValue('benifits', dummyData);\n  };\n\n  const handleBenifitChange = (event, index) => {\n    addBenifits[index] = event.target.value;\n    formikRef.current.setFieldValue('benifits', [...addBenifits]);\n  };\n\n  const onSubmit = (value, helper) => {\n    try {\n      helper.setSubmitting(true);\n\n      const renderSubmit = async () => {\n        const {\n          image,\n          nutrientName,\n          ...rest\n        } = value;\n        const {\n          isNew,\n          file\n        } = image;\n        const postData = rest;\n        postData.name = nutrientName;\n\n        if (isNew) {\n          postData.image = await imageUpload(file);\n        } else {\n          postData.recipe_image = file;\n        }\n\n        !isEdit && addData(postData, helper); // isEdit && editData(postData, helper);\n      };\n\n      renderSubmit();\n    } catch {\n      Snackbar.show('Image Upload Failed', 'error');\n    }\n  };\n\n  const addData = (data, {\n    setSubmitting,\n    resetForm\n  }) => {\n    setSubmitting(true);\n    Post('app/addMealIngredient', data).then(res => {\n      Snackbar.show(res.message, 'success');\n      setSubmitting(false);\n      resetForm();\n      onSuccess();\n    }).catch(err => {\n      setSubmitting(false);\n      Snackbar.show(err.message, 'error');\n    });\n  };\n\n  const onImageChange = e => {\n    e.persist();\n    const files = e.target.files;\n\n    if (files && files.length != 0) {\n      const reader = new FileReader();\n      const file = files[0];\n\n      reader.onloadend = () => {\n        formikRef.current.setFieldValue('image', {\n          file,\n          prevImage: reader.result,\n          isNew: true\n        });\n      };\n\n      reader.readAsDataURL(file);\n    } else {\n      formikRef.current.setFieldValue('image', {\n        file: null,\n        prevImage: '',\n        isNew: null\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isOpen,\n      disableBackdropClick: true,\n      disableEscapeKeyDown: true,\n      fullWidth: true,\n      maxWidth: \"md\",\n      \"aria-labelledby\": \"dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"dialog-title\",\n        onClose: onClose,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        innerRef: formikRef,\n        enableReinitialize: true,\n        initialValues: initialFormValues,\n        onSubmit: onSubmit,\n        validationSchema: Yup.object().shape({\n          nutrientName: Yup.string().trim().required('Name is required'),\n          quantity: Yup.string().trim().required('Quality is required'),\n          protein: Yup.string().trim().required('Protein is required'),\n          fat: Yup.string().trim().required('Fat is required'),\n          carbs: Yup.string().trim().required('Carbs is required'),\n          calories: Yup.string().trim().required('Calories is required'),\n          description: Yup.string().trim().required('Description is required'),\n          image: Yup.object({\n            file: Yup.mixed().required('A file is required')\n          }),\n          benfits: Yup.array()\n        }),\n        children: ({\n          values,\n          errors,\n          touched,\n          handleBlur,\n          handleChange,\n          submitForm,\n          isSubmitting\n        }) => {\n          var _values$benfits, _touched$image, _errors$image, _touched$image2, _errors$image2, _values$image, _values$image2;\n\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n              dividers: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Name\",\n                    name: \"nutrientName\",\n                    variant: \"outlined\",\n                    error: Boolean(touched.nutrientName && errors.nutrientName),\n                    helperText: touched.nutrientName && errors.nutrientName,\n                    value: values.nutrientName,\n                    onChange: handleChange,\n                    onBlur: handleBlur\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Quantity\",\n                    name: \"quantity\",\n                    variant: \"outlined\",\n                    error: Boolean(touched.quantity && errors.quantity),\n                    helperText: touched.quantity && errors.quantity,\n                    value: values.quantity,\n                    onChange: handleChange,\n                    onBlur: handleBlur\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Protein\",\n                    name: \"protein\",\n                    variant: \"outlined\",\n                    error: Boolean(touched.protein && errors.protein),\n                    helperText: touched.protein && errors.protein,\n                    value: values.protein,\n                    onChange: handleChange,\n                    onBlur: handleBlur\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Fat\",\n                    name: \"fat\",\n                    variant: \"outlined\",\n                    error: Boolean(touched.fat && errors.fat),\n                    helperText: touched.fat && errors.fat,\n                    value: values.fat,\n                    onChange: handleChange,\n                    onBlur: handleBlur\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Carbs\",\n                    name: \"carbs\",\n                    variant: \"outlined\",\n                    error: Boolean(touched.carbs && errors.carbs),\n                    helperText: touched.carbs && errors.carbs,\n                    value: values.carbs,\n                    onChange: handleChange,\n                    onBlur: handleBlur\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Calories\",\n                    name: \"calories\",\n                    variant: \"outlined\",\n                    error: Boolean(touched.calories && errors.calories),\n                    helperText: touched.calories && errors.calories,\n                    value: values.calories,\n                    onChange: handleChange,\n                    onBlur: handleBlur\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 316,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    fullWidth: true,\n                    className: classes.themeButton,\n                    variant: \"contained\",\n                    color: \"default\",\n                    onClick: e => handleAddBenifits(e),\n                    endIcon: /*#__PURE__*/_jsxDEV(ControlPointIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 336,\n                      columnNumber: 40\n                    }, this),\n                    children: \"Add Benifits\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 30\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 25\n                }, this), values === null || values === void 0 ? void 0 : (_values$benfits = values.benfits) === null || _values$benfits === void 0 ? void 0 : _values$benfits.map((data, index) => {\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 11,\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        fullWidth: true,\n                        label: \"Benifits\",\n                        name: `benfits[${index}]`,\n                        variant: \"outlined\" // error={Boolean(touched.calories && errors.calories)}\n                        // helperText={touched.calories && errors.calories}\n                        ,\n                        value: data,\n                        onChange: e => handleBenifitChange(e, index),\n                        onBlur: handleBlur\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 346,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 345,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 1,\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        fullWidth: true,\n                        className: classes.deleteButton,\n                        variant: \"contained\",\n                        color: \"secondary\" // onClick={() =>\n                        //   removeIngredients(values, i, setFieldValue)\n                        // }\n                        ,\n                        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 368,\n                          columnNumber: 35\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 359,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 358,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true);\n                }), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    multiline: true,\n                    label: \"Description\",\n                    name: \"description\",\n                    variant: \"outlined\",\n                    error: Boolean(touched.description && errors.description),\n                    helperText: touched.description && errors.description,\n                    value: values.description,\n                    onChange: handleChange,\n                    onBlur: handleBlur\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 376,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 12,\n                  xs: 12,\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    name: \"image\",\n                    ref: imageRef,\n                    type: \"file\",\n                    accept: \".jpg,.png,jpeg\",\n                    onChange: onImageChange,\n                    onBlur: handleBlur,\n                    hidden: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 391,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    fullWidth: true,\n                    className: classes.themeButton,\n                    variant: \"contained\",\n                    color: \"default\",\n                    onClick: () => imageRef.current.click(),\n                    startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 406,\n                      columnNumber: 40\n                    }, this),\n                    children: \"Upload Image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 400,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                    error: Boolean((touched === null || touched === void 0 ? void 0 : (_touched$image = touched.image) === null || _touched$image === void 0 ? void 0 : _touched$image.file) && (errors === null || errors === void 0 ? void 0 : (_errors$image = errors.image) === null || _errors$image === void 0 ? void 0 : _errors$image.file)),\n                    children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n                      children: (touched === null || touched === void 0 ? void 0 : (_touched$image2 = touched.image) === null || _touched$image2 === void 0 ? void 0 : _touched$image2.file) && (errors === null || errors === void 0 ? void 0 : (_errors$image2 = errors.image) === null || _errors$image2 === void 0 ? void 0 : _errors$image2.file)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 415,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 410,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 12,\n                  xs: 12,\n                  children: ((_values$image = values.image) === null || _values$image === void 0 ? void 0 : _values$image.prevImage) && /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: classes.imageView,\n                    src: (_values$image2 = values.image) === null || _values$image2 === void 0 ? void 0 : _values$image2.prevImage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 424,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: onClose,\n                variant: \"outlined\",\n                color: \"secondary\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: classes.themeButton,\n                onClick: () => submitForm(),\n                disabled: isSubmitting,\n                variant: \"outlined\",\n                children: isSubmitting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  size: 24,\n                  style: {\n                    color: 'white'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 25\n                }, this) : okBtnText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(ViewandEditDialogue, \"PywNchNrn/pavXLO/R5PEJOf8XQ=\", false, function () {\n  return [useStyles, useSnackbar, useService];\n});\n\n_c2 = ViewandEditDialogue;\nexport default NutritionIngredients;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NutritionIngredients\");\n$RefreshReg$(_c2, \"ViewandEditDialogue\");","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/pages/NutritionIngredients/NutritionIngredients.tsx"],"names":["React","useRef","Button","CircularProgress","Dialog","DialogActions","DialogContent","Grid","makeStyles","FormControl","FormHelperText","TextField","Typography","AddIcon","DeleteIcon","imageUpload","Formik","Yup","DialogTitle","Page","useService","useSnackbar","ControlPointIcon","CloudUploadIcon","useStyles","theme","root","width","breakpoints","values","lg","maxWidth","margin","padding","spacing","themeButton","color","palette","white","backgroundColor","green","main","dark","deleteButton","height","imageView","NutritionIngredients","classes","addEditDialog","setAddEditDialog","useState","isOpen","title","okBtnText","isEdit","data","openAddDialog","prevState","closeAddEditDialog","ViewandEditDialogue","props","onClose","onSuccess","formikRef","imageRef","Snackbar","Post","initialValues","nutrientName","image","file","prevImage","isNew","quantity","protein","fat","carbs","calories","benfits","description","initialFormValues","setInitialFormValues","addBenifits","setAddBenifits","handleAddBenifits","event","preventDefault","dummyData","current","setFieldValue","handleBenifitChange","index","target","value","onSubmit","helper","setSubmitting","renderSubmit","rest","postData","name","recipe_image","addData","show","resetForm","then","res","message","catch","err","onImageChange","e","persist","files","length","reader","FileReader","onloadend","result","readAsDataURL","object","shape","string","trim","required","mixed","array","errors","touched","handleBlur","handleChange","submitForm","isSubmitting","Boolean","map","click"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { Avatar, Button, Card, CardActions, CardContent, CircularProgress, Dialog, DialogActions, DialogContent, Grid, IconButton, makeStyles, Paper, Tab, Table, TableBody, FormControl, FormHelperText, TableCell, TableContainer, TableHead, TableRow, TextField, Tooltip, Typography } from '@material-ui/core';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Pagination, TabContext, TabList, TabPanel } from '@material-ui/lab';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { imageUpload } from '../../utils/FirebaseUtils';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\r\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\r\nimport Page from '../../components/Page/Page';\r\nimport useConfModel from '../../hook/useConfModel';\r\nimport useService from '../../hook/useService';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n    root: {\r\n      width: theme.breakpoints.values.lg,\r\n      maxWidth: '100%',\r\n      margin: '0 auto',\r\n      padding: theme.spacing(3),\r\n    },\r\n    themeButton: {\r\n        color: theme.palette.white,\r\n        backgroundColor: theme.palette.green.main,\r\n        '&:hover': {\r\n          backgroundColor: theme.palette.green.dark,\r\n        },\r\n    },\r\n    deleteButton: {\r\n      width: '100%',\r\n      height: '50px',\r\n    },\r\n    imageView : {\r\n      width : '100%',\r\n      height : '100%',\r\n    }\r\n  }));\r\n\r\nfunction NutritionIngredients() {\r\n  const classes = useStyles()\r\n  const [addEditDialog, setAddEditDialog] = React.useState({\r\n    isOpen: false,\r\n    title: '',\r\n    okBtnText: '',\r\n    isEdit: false,\r\n    data: {},\r\n  });\r\n\r\n  const openAddDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      title: 'Add Nutrition Ingredients',\r\n      isEdit: false,\r\n      okBtnText: 'Save',\r\n    }));\r\n  };\r\n\r\n  const closeAddEditDialog = () =>{\r\n    setAddEditDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Page title='Nutrition Ingredients' />\r\n      <Grid alignItems='flex-end' container justify='space-between' spacing={3}>\r\n        <Grid item>\r\n          <Typography component='h1' variant='h3'>\r\n            Nutrition Ingredients\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant='contained'\r\n            onClick={() => openAddDialog()}\r\n            className={classes.themeButton}\r\n            startIcon={<AddIcon />}\r\n          >\r\n            Add\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <ViewandEditDialogue {...addEditDialog}  onClose={closeAddEditDialog}/>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\ninterface NutritionValues {\r\n  nutrientName : string,\r\n  image : {file : null | any ,prevImage : string , isNew : null | boolean},\r\n  quantity : string,\r\n  protein : string,\r\n  fat : string,\r\n  carbs : string,\r\n  calories : string,\r\n  benfits : Array<any>,\r\n  description : string\r\n}\r\n\r\nconst ViewandEditDialogue = (props: any) =>{\r\n    const { isEdit, isOpen, okBtnText = 'OK', onClose,data, title, onSuccess} = props;\r\n    const classes = useStyles()\r\n    const formikRef = useRef<any>(null)\r\n    const imageRef = useRef<any>(null)\r\n    const Snackbar = useSnackbar();\r\n    const { Post } = useService();\r\n    const initialValues: NutritionValues = {\r\n        nutrientName : '',\r\n        image : {file : null,prevImage : '' , isNew : null},\r\n        quantity : '',\r\n        protein : '',\r\n        fat : '',\r\n        carbs : '',\r\n        calories : '',\r\n        benfits : [],\r\n        description : '',\r\n    };\r\n    const [initialFormValues,setInitialFormValues] = React.useState({...initialValues});\r\n    const [addBenifits,setAddBenifits] = React.useState<any>([])\r\n\r\n    const handleAddBenifits = (event: any) =>{\r\n      event.preventDefault()\r\n      const dummyData = [...addBenifits,''];\r\n      setAddBenifits(dummyData)\r\n      formikRef.current.setFieldValue('benifits',dummyData)\r\n    }\r\n\r\n    const handleBenifitChange = (event:any,index:any) =>{\r\n      addBenifits[index] = event.target.value;\r\n      formikRef.current.setFieldValue('benifits',[...addBenifits])\r\n    }\r\n\r\n    const onSubmit = (value: any,helper: any) =>{\r\n      try{\r\n        helper.setSubmitting(true)\r\n        const renderSubmit = async () =>{\r\n          const { image, nutrientName, ...rest} = value;\r\n          const { isNew, file} = image;\r\n          const postData = rest;\r\n          postData.name = nutrientName\r\n          if (isNew) {\r\n            postData.image = await imageUpload(file);\r\n          } else {\r\n            postData.recipe_image = file;\r\n          }\r\n          !isEdit && addData(postData, helper);\r\n          // isEdit && editData(postData, helper);\r\n        }\r\n        renderSubmit()\r\n      }\r\n      catch{\r\n        Snackbar.show('Image Upload Failed', 'error');\r\n      }\r\n    }\r\n\r\n    const addData = (data: any, { setSubmitting, resetForm }: any) => {\r\n      setSubmitting(true);\r\n      Post('app/addMealIngredient', data)\r\n        .then((res: any) => {\r\n          Snackbar.show(res.message, 'success');\r\n          setSubmitting(false);\r\n          resetForm();\r\n          onSuccess();\r\n        })\r\n        .catch((err: any) => {\r\n          setSubmitting(false);\r\n          Snackbar.show(err.message, 'error');\r\n        });\r\n    };\r\n\r\n\r\n    const onImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      e.persist();\r\n      const files = e.target.files;\r\n      if (files && files.length != 0) {\r\n        const reader = new FileReader();\r\n        const file = files[0];\r\n        reader.onloadend = () => {\r\n          formikRef.current.setFieldValue('image', {\r\n            file,\r\n            prevImage: reader.result,\r\n            isNew: true,\r\n          });\r\n        };\r\n        reader.readAsDataURL(file);\r\n      } else {\r\n        formikRef.current.setFieldValue('image', {\r\n          file: null,\r\n          prevImage: '',\r\n          isNew: null,\r\n        });\r\n      }\r\n    };\r\n\r\n    return (\r\n    <div>\r\n       <Dialog \r\n        open={isOpen}\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        fullWidth\r\n        maxWidth='md'\r\n        aria-labelledby='dialog-title' >\r\n\r\n        <DialogTitle id='dialog-title' onClose={onClose}>\r\n          {title}\r\n        </DialogTitle>\r\n        <Formik\r\n        innerRef={formikRef}\r\n        enableReinitialize\r\n        initialValues={initialFormValues}\r\n        onSubmit={onSubmit}\r\n        validationSchema={Yup.object().shape({\r\n            nutrientName: Yup.string().trim().required('Name is required'),\r\n            quantity : Yup.string().trim().required('Quality is required'),\r\n            protein : Yup.string().trim().required('Protein is required'),\r\n            fat : Yup.string().trim().required('Fat is required'),\r\n            carbs : Yup.string().trim().required('Carbs is required'),\r\n            calories : Yup.string().trim().required('Calories is required'),\r\n            description : Yup.string().trim().required('Description is required'),\r\n            image: Yup.object({\r\n              file: Yup.mixed().required('A file is required'),\r\n            }),\r\n            benfits : Yup.array()\r\n        })}\r\n        >\r\n            {({values, errors, touched, handleBlur,handleChange, submitForm, isSubmitting,})=>(\r\n                <>\r\n                <DialogContent dividers>\r\n                    <Grid container spacing = {2}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label='Name'\r\n                                name='nutrientName'\r\n                                variant='outlined'\r\n                                error={Boolean(touched.nutrientName && errors.nutrientName)}\r\n                                helperText={touched.nutrientName && errors.nutrientName}\r\n                                value={values.nutrientName}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label='Quantity'\r\n                                name='quantity'\r\n                                variant='outlined'\r\n                                error={Boolean(touched.quantity && errors.quantity)}\r\n                                helperText={touched.quantity && errors.quantity}\r\n                                value={values.quantity}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label='Protein'\r\n                                name='protein'\r\n                                variant='outlined'\r\n                                error={Boolean(touched.protein && errors.protein)}\r\n                                helperText={touched.protein && errors.protein}\r\n                                value={values.protein}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label='Fat'\r\n                                name='fat'\r\n                                variant='outlined'\r\n                                error={Boolean(touched.fat && errors.fat)}\r\n                                helperText={touched.fat && errors.fat}\r\n                                value={values.fat}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label='Carbs'\r\n                                name='carbs'\r\n                                variant='outlined'\r\n                                error={Boolean(touched.carbs && errors.carbs)}\r\n                                helperText={touched.carbs && errors.carbs}\r\n                                value={values.carbs}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label='Calories'\r\n                                name='calories'\r\n                                variant='outlined'\r\n                                error={Boolean(touched.calories && errors.calories)}\r\n                                helperText={touched.calories && errors.calories}\r\n                                value={values.calories}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                             <Button\r\n                             fullWidth\r\n                              className={classes.themeButton}\r\n                              variant='contained'\r\n                              color='default'\r\n                              onClick={(e)=>handleAddBenifits(e)}\r\n                              endIcon={<ControlPointIcon />}\r\n                            >\r\n                              Add Benifits\r\n                            </Button>\r\n                        </Grid>\r\n\r\n                        {values?.benfits?.map((data: any,index: any)=>{\r\n                          return (\r\n                            <>\r\n                              <Grid item xs={11}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label='Benifits'\r\n                                    name={`benfits[${index}]`}\r\n                                    variant='outlined'\r\n                                    // error={Boolean(touched.calories && errors.calories)}\r\n                                    // helperText={touched.calories && errors.calories}\r\n                                    value={data}\r\n                                    onChange={(e)=>handleBenifitChange(e,index)}\r\n                                    onBlur={handleBlur}\r\n                                />\r\n                              </Grid>\r\n                              <Grid item xs={1}>\r\n                                <Button\r\n                                  fullWidth\r\n                                  className={classes.deleteButton}\r\n                                  variant='contained'\r\n                                  color='secondary'\r\n                                  // onClick={() =>\r\n                                  //   removeIngredients(values, i, setFieldValue)\r\n                                  // }\r\n                                >\r\n                                  <DeleteIcon />\r\n                                </Button>\r\n                              </Grid>\r\n                            </>\r\n                          )\r\n                        })}\r\n\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                fullWidth\r\n                                multiline\r\n                                label='Description'\r\n                                name='description'\r\n                                variant='outlined'\r\n                                error={Boolean(touched.description && errors.description)}\r\n                                helperText={touched.description && errors.description}\r\n                                value={values.description}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item md={12} xs={12}>\r\n                          <input\r\n                            name='image'\r\n                            ref={imageRef}\r\n                            type='file'\r\n                            accept='.jpg,.png,jpeg'\r\n                            onChange={onImageChange}\r\n                            onBlur={handleBlur}\r\n                            hidden\r\n                          />\r\n                          <Button\r\n                            fullWidth\r\n                            className={classes.themeButton}\r\n                            variant='contained'\r\n                            color='default'\r\n                            onClick={() => imageRef.current.click()}\r\n                            startIcon={<CloudUploadIcon />}\r\n                          >\r\n                            Upload Image\r\n                          </Button>\r\n                          <FormControl\r\n                            error={Boolean(\r\n                              touched?.image?.file && errors?.image?.file\r\n                            )}\r\n                          >\r\n                            <FormHelperText>\r\n                              {touched?.image?.file &&\r\n                                errors?.image?.file}\r\n                            </FormHelperText>\r\n                          </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item md={12} xs={12}>\r\n                          {values.image?.prevImage && (\r\n                            <img\r\n                              className={classes.imageView}\r\n                              src={values.image?.prevImage}\r\n                            />\r\n                          )}\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onClose} variant='outlined' color='secondary'>\r\n                      Cancel\r\n                    </Button>\r\n\r\n                    <Button\r\n                      className={classes.themeButton}\r\n                      onClick={() => submitForm()}\r\n                      disabled={isSubmitting}\r\n                      variant='outlined'\r\n                    >\r\n                      {isSubmitting ? (\r\n                        <CircularProgress size={24} style={{color : 'white'}} />\r\n                      ) : (\r\n                        okBtnText\r\n                      )}\r\n                    </Button>\r\n                  </DialogActions>\r\n                </>\r\n            )}\r\n        </Formik>\r\n\r\n       </Dialog>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default NutritionIngredients;\r\n"]},"metadata":{},"sourceType":"module"}