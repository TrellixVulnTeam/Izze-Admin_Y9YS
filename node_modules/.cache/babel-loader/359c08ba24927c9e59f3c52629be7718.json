{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pyramidion\\\\WebApp\\\\Izze-Admin\\\\src\\\\pages\\\\SkinCarePlan\\\\SkinCarePlan.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { makeStyles, Avatar, Card, CardActions, CardContent, Dialog, DialogActions, DialogContent, Grid, IconButton, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Tooltip, Typography, TextField, Button, CircularProgress } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport AddIcon from '@material-ui/icons/Add';\nimport Page from '../../components/Page/Page';\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { Pagination } from '@material-ui/lab';\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\nimport useSnackbar from '../../hook/useSnackbar';\nimport useService from '../../hook/useService';\nimport useConfModel from '../../hook/useConfModel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: theme.breakpoints.values.lg,\n    maxWidth: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(3)\n  },\n  themeButton: {\n    color: theme.palette.white,\n    backgroundColor: theme.palette.green.main,\n    '&:hover': {\n      backgroundColor: theme.palette.green.dark\n    }\n  },\n  dayPaper: {\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: theme.palette.green.main,\n    color: 'white'\n  },\n  lColor: {\n    color: 'white'\n  },\n  tabCard: {\n    marginTop: theme.spacing(3)\n  },\n  content: {\n    padding: 0\n  },\n  mTop: {\n    marginTop: theme.spacing(1.5)\n  },\n  jCenter: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  sEvenly: {\n    display: 'flex',\n    justifyContent: 'space-evenly'\n  },\n  sBetween: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  iconPadd: {\n    padding: 5\n  },\n  actions: {\n    padding: theme.spacing(1),\n    justifyContent: 'center'\n  },\n  ingredientsAvatarStyle: {\n    width: theme.spacing(10),\n    height: theme.spacing(10),\n    margin: 'auto',\n    marginTop: '20px'\n  }\n}));\nconst SkinTypeDrop = [{\n  id: 'DRY',\n  name: 'Dry'\n}, {\n  id: 'OILY',\n  name: 'Oily'\n}, {\n  id: 'MIXED',\n  name: 'Mixed'\n}];\nconst SkinIssueDrop = [{\n  id: 'ACNE',\n  name: 'Acne'\n}, {\n  id: 'DRYSKIN',\n  name: 'Dry Skin'\n}];\n\nconst SkinCarePlan = () => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    Post\n  } = useService();\n  const Snackbar = useSnackbar();\n  const ConfModel = useConfModel();\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [stateData, setStateData] = React.useState({\n    page_no: 1,\n    page_limit: 10\n  });\n  const [pageCount, setPageCount] = React.useState(0);\n  const [tableData, setTableData] = React.useState([]);\n  const [addEditDialog, setAddEditDialog] = React.useState({\n    isOpen: false,\n    title: '',\n    okBtnText: '',\n    isEdit: false,\n    data: {}\n  });\n  const [viewDialog, setViewDialog] = useState({\n    isOpen: false,\n    title: '',\n    data: {}\n  });\n\n  const listSkinCarePlan = () => {\n    setIsLoading(true);\n    Post('app/listSkinCarePlan', stateData).then(res => {\n      setIsLoading(false);\n\n      if (!res.error) {\n        setPageCount(res.page_count);\n        setTableData(res.data);\n      } else {\n        Snackbar.show(res.message, 'error');\n      }\n    }).catch(error => {\n      setIsLoading(false);\n      Snackbar.show(error.message, 'error');\n    });\n  };\n\n  const openAddDialog = () => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      title: 'Add Skin Care Plan',\n      isEdit: false,\n      okBtnText: 'Save'\n    }));\n  };\n\n  const openEditDialog = data => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      isEdit: true,\n      data,\n      title: 'Edit Skin care Plan',\n      okBtnText: 'Edit'\n    }));\n  };\n\n  const openViewDialog = data => {\n    setViewDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      data,\n      title: 'View Skincare Plan'\n    }));\n  };\n\n  const onDelete = data => {\n    const {\n      openModel,\n      setLoading,\n      closeModel\n    } = ConfModel;\n\n    const submitFunction = () => {\n      setLoading(true);\n      Post('app/deleteSkinCarePlan', {\n        id: data._id\n      }).then(async res => {\n        setLoading(false);\n        closeModel();\n        onSuccessAction();\n        Snackbar.show(res.message, 'success');\n      }).catch(err => {\n        setLoading(false);\n        Snackbar.show('Internal Server Error', 'error');\n      });\n    };\n\n    openModel(submitFunction);\n  };\n\n  const onSuccessAction = () => {\n    listSkinCarePlan();\n    closeAddEditDialog();\n  };\n\n  const closeAddEditDialog = () => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: false\n    }));\n  };\n\n  const closeViewDialog = () => {\n    setViewDialog(prevState => ({ ...prevState,\n      isOpen: false\n    }));\n  };\n\n  const onPageChange = (event, value) => {\n    setStateData(prevState => ({ ...prevState,\n      page_no: value\n    }));\n  };\n\n  const getDropValues = (dropValues, value) => {\n    var _dropValues$find;\n\n    return ((_dropValues$find = dropValues.find(({\n      id\n    }) => id == value)) === null || _dropValues$find === void 0 ? void 0 : _dropValues$find.name) || '';\n  };\n\n  useEffect(() => {\n    listSkinCarePlan();\n  }, [stateData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Page, {\n      title: \"Skin Care Plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      alignItems: \"flex-end\",\n      container: true,\n      justify: \"space-between\",\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h3\",\n          children: \"Skin Care Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => openAddDialog(),\n          className: classes.themeButton,\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 24\n          }, this),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 0,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            size: \"small\",\n            placeholder: \"Name\",\n            variant: \"outlined\",\n            name: \"state\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.tabCard,\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        className: classes.content,\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"#\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Skin Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Skin Issues\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: [!isLoading && tableData.map((data, index) => {\n                return /*#__PURE__*/_jsxDEV(TableRow, {\n                  hover: true,\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: stateData.page_limit * (stateData.page_no - 1) + index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: getDropValues(SkinTypeDrop, data === null || data === void 0 ? void 0 : data.skin_type)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: getDropValues(SkinIssueDrop, data === null || data === void 0 ? void 0 : data.skin_issues)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: classes.sEvenly,\n                      children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                        title: \"View\",\n                        arrow: true,\n                        children: /*#__PURE__*/_jsxDEV(IconButton, {\n                          className: classes.iconPadd,\n                          onClick: () => openViewDialog(data),\n                          children: /*#__PURE__*/_jsxDEV(CenterFocusStrongIcon, {\n                            color: \"primary\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 304,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 300,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 299,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                        title: \"Edit\",\n                        arrow: true,\n                        children: /*#__PURE__*/_jsxDEV(IconButton, {\n                          className: classes.iconPadd,\n                          onClick: () => openEditDialog(data),\n                          children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                            color: \"action\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 312,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 308,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 307,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                        title: \"Delete\",\n                        arrow: true,\n                        children: /*#__PURE__*/_jsxDEV(IconButton, {\n                          className: classes.iconPadd,\n                          onClick: () => onDelete(data),\n                          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                            color: \"secondary\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 320,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 316,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 315,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 298,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 23\n                }, this);\n              }), isLoading && /*#__PURE__*/_jsxDEV(TableLoader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 31\n              }, this), !isLoading && tableData.length == 0 && /*#__PURE__*/_jsxDEV(TableNoData, {\n                children: \"No Data Found\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Pagination, {\n          count: pageCount,\n          page: stateData.page_no,\n          onChange: onPageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddEditDialog, { ...addEditDialog,\n      onClose: closeAddEditDialog,\n      onSuccess: onSuccessAction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ViewSkincarePlan, { ...viewDialog,\n      onClose: closeViewDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SkinCarePlan, \"aBSSO2HcRTNYwajZ5vqkuMHONew=\", false, function () {\n  return [useStyles, useService, useSnackbar, useConfModel];\n});\n\n_c = SkinCarePlan;\n\nconst AddEditDialog = props => {\n  _s2();\n\n  const {\n    isEdit,\n    isOpen,\n    okBtnText = 'OK',\n    onClose,\n    data,\n    title,\n    onSuccess\n  } = props;\n  const classes = useStyles();\n  const {\n    Post\n  } = useService();\n  const Snackbar = useSnackbar();\n  const formikRef = useRef(null);\n  const [skinCareRecipeList, setSkinCareRecipeList] = React.useState([]);\n  const initialFormValues = {\n    skin_type: '',\n    skin_issues: '',\n    recipes: Array(10).fill(null).map((d, i) => ({\n      day: i + 1,\n      id: ''\n    }))\n  };\n  const [initialValue, setInitialValue] = React.useState({ ...initialFormValues\n  });\n\n  const listSkinCareRecipeList = () => {\n    Post('app/listAllSkinCareRecipe', {}).then(response => {\n      if (!response.error) {\n        setSkinCareRecipeList(response.data);\n      } else {\n        Snackbar.show(response.message, 'error');\n      }\n    }).catch(error => {\n      Snackbar.show(error.message, 'error');\n    });\n  };\n\n  const onSubmit = (value, helper) => {\n    helper.setSubmitting(false);\n    !isEdit && addData(value, helper);\n    isEdit && editData(value, helper);\n  };\n\n  const addData = (data, {\n    setSubmitting,\n    resetForm\n  }) => {\n    setSubmitting(true);\n    Post('app/addSkinCarePlan', data).then(res => {\n      Snackbar.show(res.message, 'success');\n      setSubmitting(false);\n      resetForm();\n      onSuccess();\n    }).catch(err => {\n      const {\n        message = \"Internal Server Error\"\n      } = err.response.data;\n      setSubmitting(false);\n      Snackbar.show(message, 'error');\n    });\n  };\n\n  const editData = (data, {\n    setSubmitting,\n    resetForm\n  }) => {\n    setSubmitting(true);\n    Post('app/editSkinCarePlan', data).then(res => {\n      Snackbar.show(res.message, 'success');\n      setSubmitting(false);\n      resetForm();\n      onSuccess();\n    }).catch(err => {\n      const {\n        message = \"Internal Server Error\"\n      } = err.response.data;\n      setSubmitting(false);\n      Snackbar.show(message, 'error');\n    });\n  };\n\n  useEffect(() => {\n    if (isEdit) {\n      const {\n        recipes,\n        _id,\n        ...rest\n      } = data;\n      const editData = { ...rest,\n        id: _id\n      };\n      editData.recipes = recipes.map(data => {\n        data.id = data.recipe._id;\n        return data;\n      });\n      setInitialValue(editData);\n    } else {\n      setInitialValue(initialFormValues);\n    }\n  }, [props]);\n  useEffect(() => {\n    listSkinCareRecipeList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isOpen,\n      disableBackdropClick: true,\n      disableEscapeKeyDown: true,\n      fullWidth: true,\n      maxWidth: \"md\",\n      \"aria-labelledby\": \"dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"dialog-title\",\n        onClose: onClose,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        innerRef: formikRef,\n        enableReinitialize: true,\n        initialValues: initialValue,\n        onSubmit: onSubmit,\n        validationSchema: Yup.object().shape({\n          skin_type: Yup.string().trim().required('Skin Type is required'),\n          skin_issues: Yup.string().trim().required('Skin Issues is required'),\n          recipes: Yup.array().of(Yup.object().shape({\n            id: Yup.string().trim().required('Recipe is Required'),\n            day: Yup.string().trim().required('Day is Required')\n          }))\n        }),\n        children: ({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          setFieldValue,\n          submitForm,\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n            dividers: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  options: SkinTypeDrop,\n                  value: SkinTypeDrop.find(data => data.id == values.skin_type),\n                  getOptionLabel: option => option.name,\n                  getOptionSelected: option => option.id == values.skin_type,\n                  onChange: (event, newValue) => {\n                    setFieldValue('skin_type', (newValue === null || newValue === void 0 ? void 0 : newValue.id) || '');\n                  },\n                  onBlur: handleBlur,\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    label: \"Skin Types\",\n                    variant: \"outlined\",\n                    error: Boolean(touched.skin_type && errors.skin_type),\n                    helperText: touched.skin_type && errors.skin_type,\n                    inputProps: { ...params.inputProps\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 516,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 506,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  options: SkinIssueDrop,\n                  value: SkinIssueDrop.find(data => data.id == values.skin_issues),\n                  getOptionLabel: option => option.name,\n                  getOptionSelected: option => option.id == values.skin_issues,\n                  onChange: (event, newValue) => {\n                    setFieldValue('skin_issues', (newValue === null || newValue === void 0 ? void 0 : newValue.id) || '');\n                  },\n                  onBlur: handleBlur,\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    label: \"Skin Issues\",\n                    variant: \"outlined\",\n                    error: Boolean(touched.skin_issues && errors.skin_issues),\n                    helperText: touched.skin_issues && errors.skin_issues,\n                    inputProps: { ...params.inputProps\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 540,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 530,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 19\n              }, this), values.recipes.map((recData, i) => {\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    md: 1,\n                    item: true,\n                    xs: 2,\n                    children: /*#__PURE__*/_jsxDEV(Paper, {\n                      elevation: 0,\n                      component: \"div\",\n                      className: classes.dayPaper,\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        color: \"inherit\",\n                        align: 'center',\n                        children: recData.day\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 562,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 557,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 556,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    md: 11,\n                    xs: 10,\n                    children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                      options: skinCareRecipeList,\n                      value: skinCareRecipeList.find(data => data._id == recData.id),\n                      getOptionLabel: option => option.recipe_name,\n                      getOptionSelected: option => option._id == recData.id,\n                      onChange: (event, newValue) => {\n                        setFieldValue(`recipes[${i}].id`, (newValue === null || newValue === void 0 ? void 0 : newValue._id) || '');\n                      },\n                      onBlur: handleBlur,\n                      renderInput: params => {\n                        var _touched$recipes$i, _errors$recipes$i, _touched$recipes$i2, _errors$recipes$i2;\n\n                        return /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                          label: \"Recipe\",\n                          variant: \"outlined\",\n                          error: Boolean((touched === null || touched === void 0 ? void 0 : touched.recipes) && (touched === null || touched === void 0 ? void 0 : (_touched$recipes$i = touched.recipes[i]) === null || _touched$recipes$i === void 0 ? void 0 : _touched$recipes$i.id) && (errors === null || errors === void 0 ? void 0 : errors.recipes) && (errors === null || errors === void 0 ? void 0 : (_errors$recipes$i = errors.recipes[i]) === null || _errors$recipes$i === void 0 ? void 0 : _errors$recipes$i.id)),\n                          helperText: (touched === null || touched === void 0 ? void 0 : touched.recipes) && (touched === null || touched === void 0 ? void 0 : (_touched$recipes$i2 = touched.recipes[i]) === null || _touched$recipes$i2 === void 0 ? void 0 : _touched$recipes$i2.id) && (errors === null || errors === void 0 ? void 0 : errors.recipes) && (errors === null || errors === void 0 ? void 0 : (_errors$recipes$i2 = errors.recipes[i]) === null || _errors$recipes$i2 === void 0 ? void 0 : _errors$recipes$i2.id),\n                          inputProps: { ...params.inputProps\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 585,\n                          columnNumber: 31\n                        }, this);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 571,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 570,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: onClose,\n              variant: \"outlined\",\n              color: \"secondary\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: classes.themeButton,\n              onClick: () => submitForm(),\n              disabled: isSubmitting,\n              variant: \"outlined\",\n              children: isSubmitting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 24,\n                className: classes.lColor\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 626,\n                columnNumber: 21\n              }, this) : okBtnText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 619,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 464,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(AddEditDialog, \"6KxSZRecf2XbVPN76uOq/o1+NU4=\", false, function () {\n  return [useStyles, useService, useSnackbar];\n});\n\n_c2 = AddEditDialog;\n\nconst ViewSkincarePlan = props => {\n  _s3();\n\n  var _formDatas$recipes;\n\n  const {\n    isOpen,\n    title,\n    onClose,\n    data\n  } = props;\n  const classes = useStyles();\n  const [formDatas, setFormDatas] = React.useState(data);\n  React.useEffect(() => {\n    setFormDatas(data);\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    disableBackdropClick: true,\n    disableEscapeKeyDown: true,\n    fullWidth: true,\n    maxWidth: \"md\",\n    \"aria-labelledby\": \"dialog-view-title\",\n    open: isOpen,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"dialog-view-title\",\n      onClose: onClose,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 5,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.sBetween,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: \"Skin Types\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.sBetween,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: \":\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 671,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 5,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.sBetween,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: formDatas === null || formDatas === void 0 ? void 0 : formDatas.skin_type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 676,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 5,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.sBetween,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: \"Skin Issues\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.sBetween,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: \":\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 688,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 687,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 5,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.sBetween,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: formDatas === null || formDatas === void 0 ? void 0 : formDatas.skin_issues\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 693,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          xs: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 11\n        }, this), formDatas === null || formDatas === void 0 ? void 0 : (_formDatas$recipes = formDatas.recipes) === null || _formDatas$recipes === void 0 ? void 0 : _formDatas$recipes.map((datas, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            style: {\n              color: '#41A58D'\n            },\n            children: datas.recipe.recipe_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 701,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: datas.recipe.ingredients.length === 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                style: {\n                  marginTop: '20px'\n                },\n                align: \"center\",\n                children: \"No Ingredients\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 707,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 706,\n              columnNumber: 19\n            }, this) : datas.recipe.ingredients.map((value, index) => /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                className: classes.ingredientsAvatarStyle,\n                variant: \"circular\",\n                src: value.image\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 718,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.mTop,\n                variant: \"h5\",\n                align: \"center\",\n                children: value.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 723,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                align: \"center\",\n                children: value.description.length >= 25 ? `${value.description.substring(0, 30)}...` : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 730,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 717,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 704,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 662,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        variant: \"outlined\",\n        color: \"secondary\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 650,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(ViewSkincarePlan, \"VgBe2AKzYByxWyrQJz/C5URb/80=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = ViewSkincarePlan;\nexport default SkinCarePlan;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SkinCarePlan\");\n$RefreshReg$(_c2, \"AddEditDialog\");\n$RefreshReg$(_c3, \"ViewSkincarePlan\");","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/pages/SkinCarePlan/SkinCarePlan.tsx"],"names":["React","useEffect","useRef","useState","makeStyles","Avatar","Card","CardActions","CardContent","Dialog","DialogActions","DialogContent","Grid","IconButton","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Tooltip","Typography","TextField","Button","CircularProgress","Autocomplete","AddIcon","Page","DialogTitle","Formik","Yup","DeleteIcon","EditIcon","Pagination","CenterFocusStrongIcon","TableLoader","TableNoData","useSnackbar","useService","useConfModel","useStyles","theme","root","width","breakpoints","values","lg","maxWidth","margin","padding","spacing","themeButton","color","palette","white","backgroundColor","green","main","dark","dayPaper","height","display","alignItems","justifyContent","lColor","tabCard","marginTop","content","mTop","jCenter","sEvenly","sBetween","iconPadd","actions","ingredientsAvatarStyle","SkinTypeDrop","id","name","SkinIssueDrop","SkinCarePlan","classes","Post","Snackbar","ConfModel","isLoading","setIsLoading","stateData","setStateData","page_no","page_limit","pageCount","setPageCount","tableData","setTableData","addEditDialog","setAddEditDialog","isOpen","title","okBtnText","isEdit","data","viewDialog","setViewDialog","listSkinCarePlan","then","res","error","page_count","show","message","catch","openAddDialog","prevState","openEditDialog","openViewDialog","onDelete","openModel","setLoading","closeModel","submitFunction","_id","onSuccessAction","err","closeAddEditDialog","closeViewDialog","onPageChange","event","value","getDropValues","dropValues","find","map","index","skin_type","skin_issues","length","AddEditDialog","props","onClose","onSuccess","formikRef","skinCareRecipeList","setSkinCareRecipeList","initialFormValues","recipes","Array","fill","d","i","day","initialValue","setInitialValue","listSkinCareRecipeList","response","onSubmit","helper","setSubmitting","addData","editData","resetForm","rest","recipe","object","shape","string","trim","required","array","of","errors","touched","handleChange","handleBlur","setFieldValue","submitForm","isSubmitting","option","newValue","params","Boolean","inputProps","recData","recipe_name","ViewSkincarePlan","formDatas","setFormDatas","datas","ingredients","image","description","substring"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport {\r\n  makeStyles,\r\n  Avatar,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  InputLabel,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  FormControl,\r\n  FormHelperText,\r\n  Grid,\r\n  IconButton,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Tooltip,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  CircularProgress,\r\n  Select,\r\n} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Page from '../../components/Page/Page';\r\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\r\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport useService from '../../hook/useService';\r\nimport useConfModel from '../../hook/useConfModel';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  root: {\r\n    width: theme.breakpoints.values.lg,\r\n    maxWidth: '100%',\r\n    margin: '0 auto',\r\n    padding: theme.spacing(3),\r\n  },\r\n  themeButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n  },\r\n  dayPaper: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: theme.palette.green.main,\r\n    color: 'white',\r\n  },\r\n  lColor: {\r\n    color: 'white',\r\n  },\r\n  tabCard: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  mTop: {\r\n    marginTop: theme.spacing(1.5),\r\n  },\r\n  jCenter: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  sEvenly: {\r\n    display: 'flex',\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  sBetween: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  iconPadd: {\r\n    padding: 5,\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(1),\r\n    justifyContent: 'center',\r\n  },\r\n  ingredientsAvatarStyle: {\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10),\r\n    margin: 'auto',\r\n    marginTop: '20px',\r\n  },\r\n}));\r\n\r\nconst SkinTypeDrop = [\r\n  { id: 'DRY', name: 'Dry' },\r\n  { id: 'OILY', name: 'Oily' },\r\n  { id: 'MIXED', name: 'Mixed' },\r\n];\r\n\r\nconst SkinIssueDrop = [\r\n  { id: 'ACNE', name: 'Acne', },\r\n  { id: 'DRYSKIN', name: 'Dry Skin' },\r\n];\r\n\r\nconst SkinCarePlan = () => {\r\n  const classes = useStyles();\r\n  const { Post } = useService();\r\n  const Snackbar = useSnackbar();\r\n  const ConfModel = useConfModel();\r\n  const [isLoading, setIsLoading] = React.useState(true);\r\n  const [stateData, setStateData] = React.useState({\r\n    page_no: 1,\r\n    page_limit: 10,\r\n  });\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [tableData, setTableData] = React.useState([]);\r\n  const [addEditDialog, setAddEditDialog] = React.useState({\r\n    isOpen: false,\r\n    title: '',\r\n    okBtnText: '',\r\n    isEdit: false,\r\n    data: {},\r\n  });\r\n  const [viewDialog, setViewDialog] = useState({\r\n    isOpen: false,\r\n    title: '',\r\n    data: {},\r\n  });\r\n\r\n  const listSkinCarePlan = () => {\r\n    setIsLoading(true);\r\n    Post('app/listSkinCarePlan', stateData)\r\n      .then((res: any) => {\r\n        setIsLoading(false);\r\n        if (!res.error) {\r\n          setPageCount(res.page_count);\r\n          setTableData(res.data);\r\n        } else {\r\n          Snackbar.show(res.message, 'error');\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        setIsLoading(false);\r\n        Snackbar.show(error.message, 'error');\r\n      });\r\n  };\r\n\r\n  const openAddDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      title: 'Add Skin Care Plan',\r\n      isEdit: false,\r\n      okBtnText: 'Save',\r\n    }));\r\n  };\r\n\r\n  const openEditDialog = (data: any) => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      isEdit: true,\r\n      data,\r\n      title: 'Edit Skin care Plan',\r\n      okBtnText: 'Edit',\r\n    }));\r\n  };\r\n\r\n  const openViewDialog = (data: any) => {\r\n    setViewDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      data,\r\n      title: 'View Skincare Plan',\r\n    }));\r\n  };\r\n\r\n  const onDelete = (data: any) => {\r\n    const { openModel, setLoading, closeModel } = ConfModel;\r\n    const submitFunction = () => {\r\n      setLoading(true);\r\n      Post('app/deleteSkinCarePlan', { id: data._id })\r\n        .then(async (res: any) => {\r\n          setLoading(false);\r\n          closeModel();\r\n          onSuccessAction();\r\n          Snackbar.show(res.message, 'success');\r\n        })\r\n        .catch((err: any) => {\r\n          setLoading(false);\r\n          Snackbar.show('Internal Server Error', 'error');\r\n        });\r\n    };\r\n    openModel(submitFunction);\r\n  };\r\n\r\n  const onSuccessAction = () => {\r\n    listSkinCarePlan();\r\n    closeAddEditDialog();\r\n  };\r\n\r\n  const closeAddEditDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const closeViewDialog = () => {\r\n    setViewDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const onPageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    setStateData((prevState: any) => ({ ...prevState, page_no: value }));\r\n  };\r\n\r\n  const getDropValues = (dropValues: any, value: string) => {\r\n    return dropValues.find(({ id }: any) => id == value)?.name || ''\r\n  };\r\n\r\n  useEffect(() => {\r\n    listSkinCarePlan();\r\n  }, [stateData]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Page title='Skin Care Plan' />\r\n\r\n      {/* =======Header====== */}\r\n      <Grid alignItems='flex-end' container justify='space-between' spacing={3}>\r\n        <Grid item>\r\n          <Typography component='h1' variant='h3'>\r\n            Skin Care Plan\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant='contained'\r\n            onClick={() => openAddDialog()}\r\n            className={classes.themeButton}\r\n            startIcon={<AddIcon />}\r\n          >\r\n            Add\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* =============Search======== */}\r\n      <Grid container spacing={3}>\r\n        <Grid item>\r\n          <Paper elevation={0}>\r\n            <TextField\r\n              fullWidth\r\n              size='small'\r\n              placeholder='Name'\r\n              variant='outlined'\r\n              name='state'\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* ========Table With Pagination========= */}\r\n      <Card className={classes.tabCard}>\r\n        <CardContent className={classes.content}>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align='center'>#</TableCell>\r\n                  <TableCell align='center'>Skin Type</TableCell>\r\n                  <TableCell align='center'>Skin Issues</TableCell>\r\n                  {/* <TableCell align='center'>Recipes</TableCell> */}\r\n                  <TableCell align='center'>Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {!isLoading &&\r\n                  tableData.map((data: any, index: any) => {\r\n                    return (\r\n                      <TableRow hover>\r\n                        <TableCell align='center'>{stateData.page_limit * (stateData.page_no - 1) + index + 1}</TableCell>\r\n                        <TableCell align='center'>{getDropValues(SkinTypeDrop, data?.skin_type)}</TableCell>\r\n                        <TableCell align='center'>{getDropValues(SkinIssueDrop, data?.skin_issues)}</TableCell>\r\n                        {/* <TableCell align='center'>\r\n                          {data?.recipes[0].recipe.recipe_name}\r\n                        </TableCell> */}\r\n                        <TableCell align='center'>\r\n                          <div className={classes.sEvenly}>\r\n                            <Tooltip title='View' arrow>\r\n                              <IconButton\r\n                                className={classes.iconPadd}\r\n                                onClick={() => openViewDialog(data)}\r\n                              >\r\n                                <CenterFocusStrongIcon color='primary' />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip title='Edit' arrow>\r\n                              <IconButton\r\n                                className={classes.iconPadd}\r\n                                onClick={() => openEditDialog(data)}\r\n                              >\r\n                                <EditIcon color='action' />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip title='Delete' arrow>\r\n                              <IconButton\r\n                                className={classes.iconPadd}\r\n                                onClick={() => onDelete(data)}\r\n                              >\r\n                                <DeleteIcon color='secondary' />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                          </div>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                {isLoading && <TableLoader />}\r\n                {!isLoading && tableData.length == 0 && (\r\n                  <TableNoData>No Data Found</TableNoData>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </CardContent>\r\n\r\n        <CardActions className={classes.actions}>\r\n          <Pagination\r\n            count={pageCount}\r\n            page={stateData.page_no}\r\n            onChange={onPageChange}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n\r\n      {/* ==========Add & Edit Dialoge======== */}\r\n\r\n      <AddEditDialog\r\n        {...addEditDialog}\r\n        onClose={closeAddEditDialog}\r\n        onSuccess={onSuccessAction}\r\n      />\r\n      <ViewSkincarePlan {...viewDialog} onClose={closeViewDialog} />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface Recipe {\r\n  id: string;\r\n  day: number;\r\n}\r\n\r\ninterface RecipePlan {\r\n  skin_type: string;\r\n  skin_issues: string;\r\n  recipes: Recipe[];\r\n}\r\n\r\nconst AddEditDialog = (props: any) => {\r\n  const {\r\n    isEdit,\r\n    isOpen,\r\n    okBtnText = 'OK',\r\n    onClose,\r\n    data,\r\n    title,\r\n    onSuccess,\r\n  } = props;\r\n  const classes = useStyles();\r\n  const { Post } = useService();\r\n  const Snackbar = useSnackbar();\r\n  const formikRef = useRef<any>(null);\r\n  const [skinCareRecipeList, setSkinCareRecipeList] = React.useState<any>([]);\r\n  const initialFormValues: RecipePlan = {\r\n    skin_type: '',\r\n    skin_issues: '',\r\n    recipes: Array(10).fill(null).map((d, i) => ({ day: i + 1, id: '' })),\r\n  };\r\n  const [initialValue, setInitialValue] = React.useState({\r\n    ...initialFormValues,\r\n  });\r\n\r\n  const listSkinCareRecipeList = () => {\r\n    Post('app/listAllSkinCareRecipe', {})\r\n      .then((response: any) => {\r\n        if (!response.error) {\r\n          setSkinCareRecipeList(response.data);\r\n        } else {\r\n          Snackbar.show(response.message, 'error');\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        Snackbar.show(error.message, 'error');\r\n      });\r\n  };\r\n\r\n  const onSubmit = (value: any, helper: any) => {\r\n    helper.setSubmitting(false);\r\n    !isEdit && addData(value, helper);\r\n    isEdit && editData(value, helper);\r\n  };\r\n\r\n  const addData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n    Post('app/addSkinCarePlan', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        const { message = \"Internal Server Error\" } = err.response.data\r\n        setSubmitting(false);\r\n        Snackbar.show(message, 'error');\r\n      });\r\n  };\r\n\r\n  const editData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n    Post('app/editSkinCarePlan', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        const { message = \"Internal Server Error\" } = err.response.data\r\n        setSubmitting(false);\r\n        Snackbar.show(message, 'error');\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isEdit) {\r\n      const { recipes, _id, ...rest } = data;\r\n      const editData = { ...rest, id: _id };\r\n      editData.recipes = recipes.map((data: any) => {\r\n        data.id = data.recipe._id;\r\n        return data;\r\n      });\r\n      setInitialValue(editData);\r\n    } else {\r\n      setInitialValue(initialFormValues);\r\n    }\r\n  }, [props]);\r\n\r\n  useEffect(() => {\r\n    listSkinCareRecipeList();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={isOpen}\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        fullWidth\r\n        maxWidth='md'\r\n        aria-labelledby='dialog-title'\r\n      >\r\n        <DialogTitle id='dialog-title' onClose={onClose}>\r\n          {title}\r\n        </DialogTitle>\r\n        <Formik\r\n          innerRef={formikRef}\r\n          enableReinitialize\r\n          initialValues={initialValue}\r\n          onSubmit={onSubmit}\r\n          validationSchema={Yup.object().shape({\r\n            skin_type: Yup.string().trim().required('Skin Type is required'),\r\n            skin_issues: Yup.string().trim().required('Skin Issues is required'),\r\n            recipes: Yup.array().of(\r\n              Yup.object().shape({\r\n                id: Yup.string().trim().required('Recipe is Required'),\r\n                day: Yup.string().trim().required('Day is Required'),\r\n              })\r\n            ),\r\n          })}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            setFieldValue,\r\n            submitForm,\r\n            isSubmitting,\r\n          }) => (\r\n            <>\r\n              <DialogContent dividers>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <Autocomplete\r\n                      options={SkinTypeDrop}\r\n                      value={SkinTypeDrop.find((data: any) => data.id == values.skin_type)}\r\n                      getOptionLabel={(option: any) => option.name}\r\n                      getOptionSelected={(option) => option.id == values.skin_type}\r\n                      onChange={(event: any, newValue: any) => {\r\n                        setFieldValue('skin_type', newValue?.id || '');\r\n                      }}\r\n                      onBlur={handleBlur}\r\n                      renderInput={(params: any) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label='Skin Types'\r\n                          variant='outlined'\r\n                          error={Boolean(touched.skin_type && errors.skin_type)}\r\n                          helperText={touched.skin_type && errors.skin_type}\r\n                          inputProps={{\r\n                            ...params.inputProps,\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Autocomplete\r\n                      options={SkinIssueDrop}\r\n                      value={SkinIssueDrop.find((data: any) => data.id == values.skin_issues)}\r\n                      getOptionLabel={(option: any) => option.name}\r\n                      getOptionSelected={(option) => option.id == values.skin_issues}\r\n                      onChange={(event: any, newValue: any) => {\r\n                        setFieldValue('skin_issues', newValue?.id || '');\r\n                      }}\r\n                      onBlur={handleBlur}\r\n                      renderInput={(params: any) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label='Skin Issues'\r\n                          variant='outlined'\r\n                          error={Boolean(touched.skin_issues && errors.skin_issues)}\r\n                          helperText={touched.skin_issues && errors.skin_issues}\r\n                          inputProps={{\r\n                            ...params.inputProps,\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                  {values.recipes.map((recData: any, i: any) => {\r\n                    return (\r\n                      <>\r\n                        <Grid md={1} item xs={2}>\r\n                          <Paper\r\n                            elevation={0}\r\n                            component='div'\r\n                            className={classes.dayPaper}\r\n                          >\r\n                            <Typography\r\n                              color='inherit'\r\n                              align={'center'}\r\n                            >\r\n                              {recData.day}\r\n                            </Typography>\r\n                          </Paper>\r\n                        </Grid>\r\n                        <Grid item md={11} xs={10}>\r\n                          <Autocomplete\r\n                            options={skinCareRecipeList}\r\n                            value={skinCareRecipeList.find(\r\n                              (data: any) => data._id == recData.id\r\n                            )}\r\n                            getOptionLabel={(option: any) => option.recipe_name}\r\n                            getOptionSelected={(option) =>\r\n                              option._id == recData.id\r\n                            }\r\n                            onChange={(event: any, newValue: any) => {\r\n                              setFieldValue(`recipes[${i}].id`, newValue?._id || '');\r\n                            }}\r\n                            onBlur={handleBlur}\r\n                            renderInput={(params: any) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label='Recipe'\r\n                                variant='outlined'\r\n                                error={Boolean(\r\n                                  touched?.recipes &&\r\n                                  touched?.recipes[i]?.id &&\r\n                                  errors?.recipes &&\r\n                                  (errors?.recipes[i] as any)?.id\r\n                                )}\r\n                                helperText={\r\n                                  touched?.recipes &&\r\n                                  touched?.recipes[i]?.id &&\r\n                                  errors?.recipes &&\r\n                                  (errors?.recipes[i] as any)?.id\r\n                                }\r\n                                inputProps={{\r\n                                  ...params.inputProps,\r\n                                }}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                      </>\r\n                    );\r\n                  })}\r\n                </Grid>\r\n              </DialogContent>\r\n\r\n              <DialogActions>\r\n                <Button onClick={onClose} variant='outlined' color='secondary'>\r\n                  Cancel\r\n                </Button>\r\n\r\n                <Button\r\n                  className={classes.themeButton}\r\n                  onClick={() => submitForm()}\r\n                  disabled={isSubmitting}\r\n                  variant='outlined'\r\n                >\r\n                  {isSubmitting ? (\r\n                    <CircularProgress size={24} className={classes.lColor} />\r\n                  ) : (\r\n                    okBtnText\r\n                  )}\r\n                </Button>\r\n              </DialogActions>\r\n            </>\r\n          )}\r\n        </Formik>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ViewSkincarePlan = (props: any) => {\r\n  const { isOpen, title, onClose, data } = props;\r\n  const classes = useStyles();\r\n  const [formDatas, setFormDatas] = React.useState(data);\r\n\r\n  React.useEffect(() => {\r\n    setFormDatas(data);\r\n  }, [props]);\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      fullWidth\r\n      maxWidth='md'\r\n      aria-labelledby='dialog-view-title'\r\n      open={isOpen}\r\n    >\r\n      <DialogTitle id='dialog-view-title' onClose={onClose}>\r\n        {title}\r\n      </DialogTitle>\r\n\r\n      <DialogContent dividers>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={5}>\r\n            <div className={classes.sBetween}>\r\n              <Typography variant='h5'>Skin Types</Typography>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={1}>\r\n            <div className={classes.sBetween}>\r\n              <Typography variant='h5'>:</Typography>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <div className={classes.sBetween}>\r\n              <Typography variant='h5'>{formDatas?.skin_type}</Typography>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={1}></Grid>\r\n\r\n          <Grid item xs={5}>\r\n            <div className={classes.sBetween}>\r\n              <Typography variant='h5'>Skin Issues</Typography>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={1}>\r\n            <div className={classes.sBetween}>\r\n              <Typography variant='h5'>:</Typography>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <div className={classes.sBetween}>\r\n              <Typography variant='h5'>{formDatas?.skin_issues}</Typography>\r\n            </div>\r\n          </Grid>\r\n          <Grid xs={1}></Grid>\r\n\r\n          {/* recipe With ingredients */}\r\n          {formDatas?.recipes?.map((datas: any, index: number) => (\r\n            <Grid key={index} item xs={12}>\r\n              <Typography variant='h5' style={{ color: '#41A58D' }}>\r\n                {datas.recipe.recipe_name}\r\n              </Typography>\r\n              <Grid container>\r\n                {datas.recipe.ingredients.length === 0 ? (\r\n                  <Grid item xs={12}>\r\n                    <Typography\r\n                      variant='h5'\r\n                      style={{ marginTop: '20px' }}\r\n                      align='center'\r\n                    >\r\n                      No Ingredients\r\n                    </Typography>\r\n                  </Grid>\r\n                ) : (\r\n                  datas.recipe.ingredients.map((value: any, index: any) => (\r\n                    <Grid item xs={4}>\r\n                      <Avatar\r\n                        className={classes.ingredientsAvatarStyle}\r\n                        variant='circular'\r\n                        src={value.image}\r\n                      />\r\n                      <Typography\r\n                        className={classes.mTop}\r\n                        variant='h5'\r\n                        align='center'\r\n                      >\r\n                        {value.name}\r\n                      </Typography>\r\n                      <Typography variant='subtitle2' align='center'>\r\n                        {value.description.length >= 25\r\n                          ? `${value.description.substring(0, 30)}...`\r\n                          : ''}\r\n                      </Typography>\r\n                    </Grid>\r\n                  ))\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={onClose} variant='outlined' color='secondary'>\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SkinCarePlan;\r\n"]},"metadata":{},"sourceType":"module"}