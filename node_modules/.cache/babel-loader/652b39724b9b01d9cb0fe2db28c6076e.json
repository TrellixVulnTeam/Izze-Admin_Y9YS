{"ast":null,"code":"import { Node, mergeAttributes } from '@tiptap/core';\nimport { wrappingInputRule } from 'prosemirror-inputrules';\nconst inputRegex = /^\\s*>\\s$/gm;\nconst Blockquote = Node.create({\n  name: 'blockquote',\n  defaultOptions: {\n    HTMLAttributes: {}\n  },\n  content: 'block*',\n  group: 'block',\n  defining: true,\n\n  parseHTML() {\n    return [{\n      tag: 'blockquote'\n    }];\n  },\n\n  renderHTML({\n    HTMLAttributes\n  }) {\n    return ['blockquote', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n  },\n\n  addCommands() {\n    return {\n      setBlockquote: () => ({\n        commands\n      }) => {\n        return commands.wrapIn('blockquote');\n      },\n      toggleBlockquote: () => ({\n        commands\n      }) => {\n        return commands.toggleWrap('blockquote');\n      },\n      unsetBlockquote: () => ({\n        commands\n      }) => {\n        return commands.lift('blockquote');\n      }\n    };\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Shift-b': () => this.editor.commands.toggleBlockquote()\n    };\n  },\n\n  addInputRules() {\n    return [wrappingInputRule(inputRegex, this.type)];\n  }\n\n});\nexport default Blockquote;\nexport { Blockquote, inputRegex };","map":null,"metadata":{},"sourceType":"module"}