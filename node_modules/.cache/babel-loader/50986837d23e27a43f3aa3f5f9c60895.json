{"ast":null,"code":"import _objectWithoutProperties from\"D:/Pyramidion/WebApp/Izze-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _regeneratorRuntime from\"D:/Pyramidion/WebApp/Izze-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/Pyramidion/WebApp/Izze-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"D:/Pyramidion/WebApp/Izze-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:/Pyramidion/WebApp/Izze-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Avatar,Box,Button,Card,CardActions,CardContent,CardHeader,CircularProgress,Dialog,DialogActions,DialogContent,Divider,FormControl,FormHelperText,Grid,IconButton,ListItem,ListItemAvatar,makeStyles,Paper,Tab,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,TextField,Tooltip,Typography}from'@material-ui/core';import List from'@material-ui/core/List';import ListItemText from'@material-ui/core/ListItemText';import AddIcon from'@material-ui/icons/Add';import CenterFocusStrongIcon from'@material-ui/icons/CenterFocusStrong';import CheckIcon from'@material-ui/icons/Check';import ControlPointIcon from'@material-ui/icons/ControlPoint';import DeleteIcon from'@material-ui/icons/Delete';import EditIcon from'@material-ui/icons/Edit';import{Pagination,TabContext,TabList,TabPanel}from'@material-ui/lab';import Autocomplete from'@material-ui/lab/Autocomplete';import{Formik,getIn,FieldArray}from'formik';import React,{useEffect,useRef,useState}from'react';import DialogTitle from'../../components/DialogTitlle/DialogTitle';import{TableLoader,TableNoData}from'../../components/Loader/Loader';import Page from'../../components/Page/Page';import useConfModel from'../../hook/useConfModel';import useService from'../../hook/useService';import useSnackbar from'../../hook/useSnackbar';import UnitSelect from'../../components/UnitSelect/UnitSelect';import UnitDropdown from'../../utils/MetricUnits';import{initialFormValues,NutMeal,NutMealTime,validation}from'./FormikValues';import ChevronRightIcon from'@material-ui/icons/ChevronRight';import KeyboardArrowUpIcon from'@material-ui/icons/KeyboardArrowUp';import clsx from'clsx';import useCalories from'../../hook/useCalories';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{root:{width:theme.breakpoints.values.lg,maxWidth:'100%',margin:'0 auto',padding:theme.spacing(3)},content:{padding:0},tabCard:{marginTop:theme.spacing(3)},themeButton:{color:theme.palette.white,backgroundColor:theme.palette.green.main,'&:hover':{backgroundColor:theme.palette.green.dark}},sEvenly:{display:'flex',justifyContent:'space-evenly'},sBetween:{display:'flex',justifyContent:'space-between'},iconPadd:{padding:5},jCenter:{display:'flex',justifyContent:'center'},actions:{padding:theme.spacing(1),justifyContent:'center'},tabRoot:{minWidth:0,textTransform:'none'// margin: '10px 0px',\n},tabIndicator:{backgroundColor:theme.palette.green.main},tabTextColorInherit:{backgroundColor:theme.palette.green.main,color:'white',border:'1px solid white'},tabPanelRoot:{paddingTop:0,paddingBottom:0,width:'100%'},listItemRoot:{backgroundColor:'#7ac0af2b',margin:'10px 0px'},flexDisplay:{display:'flex'},paperRoot:{display:'flex',marginTop:'20px'},paperRoot1:{display:'flex',marginTop:'20px'},tablePanelRoot:{padding:'0px'},largeAvatar:{width:theme.spacing(10),height:theme.spacing(10)},justPadding:{padding:10,borderRadius:10},tabBtnIcon:{height:'100%',minWidth:0,textTransform:'none'},divTab:{flexDirection:'column',display:'flex'},//=========\navatarRoot:{borderRadius:10,marginRight:15// width: theme.spacing(10),\n// height: theme.spacing(10),\n},textPrimary:{fontWeight:'bold'},textSecondary:{color:'#A0A6B2'},noPadding:{padding:0},benefitsList:{fontSize:'0.7rem','&::before':{content:\"'•  '\",color:'black'}},cardRoot:{borderRadius:theme.spacing(3),position:'relative'},cardMediaRoot:{height:theme.spacing(25)},cardContentRoot:{backgroundColor:'#EFF1F3',padding:theme.spacing(2),paddingBottom:\"\".concat(theme.spacing(2),\"px !important\")},cardActionsRoot:{padding:0,paddingTop:theme.spacing(1),justifyContent:'space-between'},cardActionsBenifitsRoot:{padding:0,paddingTop:theme.spacing(1),display:'block'},ulRoot:{listStyle:'none',display:'flex',padding:0,margin:0},liRoot:{paddingLeft:'1em',textIndent:'-.7em'},ulTypo:{marginLeft:theme.spacing(0.5)},colorProtein:{'&::before':{content:\"'•  '\",color:'#9A88FF'}},colorFat:{'&::before':{content:\"'•  '\",color:'#E57B91'}},colorCarbs:{'&::before':{content:\"'•  '\",color:''}},dividerRoot:{background:'white',margin:theme.spacing(1,-2)},mealTimeText:{margin:theme.spacing(2,0)},benefitsText:{color:'#41A58D'},nutritionTextDiv:{border:'1px solid #EFF1F3',color:'#EFF1F3',borderRadius:20,padding:theme.spacing(0.5,1),width:'fit-content',position:'absolute',top:theme.spacing(2),left:theme.spacing(2)},nutritionText:{fontSize:'0.5rem'},nutCard:{borderRadius:theme.spacing(3),margin:theme.spacing(2,0)},nutCardRoot:{backgroundColor:'#41A58D',color:'white'},nutCardTitle:{textAlign:'center',color:'inherit'},nutCardAction:{backgroundColor:'#276955',color:'white',justifyContent:'space-evenly'},circleBottom:{color:'#eeeeee42'},circleTop:{position:'absolute',left:0},textareaAdornedEnd:{paddingRight:0}};});var DietTypeDrop=[{id:'VEG',name:'Vegetarian'},{id:'NONVEG',name:'Non-Vegetarian'},{id:'EGG',name:'Eggetarian'}];var CaloriesDrop=[{id:'2000',name:'2000'},{id:'2100',name:'2100'},{id:'2200',name:'2200'},{id:'2300',name:'2300'}];var NutritionPlan=function NutritionPlan(){var classes=useStyles();var Snackbar=useSnackbar();var _useService=useService(),Post=_useService.Post;var ConfModel=useConfModel();var _useState=useState(true),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState({page_no:1,page_limit:10}),_useState4=_slicedToArray(_useState3,2),stateData=_useState4[0],setStateData=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),pageCount=_useState6[0],setPageCount=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),nutritionPlanList=_useState8[0],setNutritionPlanList=_useState8[1];var _useState9=useState({isOpen:false,title:'',okBtnText:'',isEdit:false,data:{}}),_useState10=_slicedToArray(_useState9,2),addEditDialog=_useState10[0],setAddEditDialog=_useState10[1];var _useState11=useState({isOpen:false,title:'',data:{}}),_useState12=_slicedToArray(_useState11,2),viewDialog=_useState12[0],setViewDialog=_useState12[1];var openAddDialog=function openAddDialog(){setAddEditDialog(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{isOpen:true,title:'Add Nutrition Plan',isEdit:false,okBtnText:'Save'});});};var openEditDialog=function openEditDialog(data){setAddEditDialog(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{isOpen:true,isEdit:true,data:data,title:'Edit Nutrition Plan',okBtnText:'Edit'});});};var onDelete=function onDelete(data){var openModel=ConfModel.openModel,setLoading=ConfModel.setLoading,closeModel=ConfModel.closeModel;var submitFunction=function submitFunction(){setLoading(true);Post('app/deleteNutritionPlan',{id:data._id}).then(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(res){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setLoading(false);closeModel();onSuccessAction();Snackbar.show(res.message,'success');case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}()).catch(function(err){setLoading(false);Snackbar.show('Internal Server Error','error');});};openModel(submitFunction);};var openViewDialog=function openViewDialog(data){setViewDialog(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{isOpen:true,data:data,title:'View Nutrition Plan'});});};var listNutritionPlan=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setLoading(true);Post('app/listNutritionPlan',stateData).then(function(res){setLoading(false);if(!res.error){setNutritionPlanList(res.data);setPageCount(res.page_count);}else{Snackbar.show(res.message,'error');}}).catch(function(err){console.log('err',err);setLoading(false);Snackbar.show(err.message,'error');});case 2:case\"end\":return _context2.stop();}}},_callee2);}));return function listNutritionPlan(){return _ref2.apply(this,arguments);};}();var onPageChange=function onPageChange(event,value){setStateData(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{page_no:value});});};var closeAddEditDialog=function closeAddEditDialog(){setAddEditDialog(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{isOpen:false});});};var closeViewDialog=function closeViewDialog(){setViewDialog(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{isOpen:false});});};var onSuccessAction=function onSuccessAction(){listNutritionPlan();closeAddEditDialog();};var getDropValues=function getDropValues(dropValues,value){var _dropValues$find;return((_dropValues$find=dropValues.find(function(_ref3){var id=_ref3.id;return id==value;}))===null||_dropValues$find===void 0?void 0:_dropValues$find.name)||'';};React.useEffect(function(){listNutritionPlan();},[]);return/*#__PURE__*/_jsxs(\"div\",{className:classes.root,children:[/*#__PURE__*/_jsx(Page,{title:\"Nutrition Plan\"}),/*#__PURE__*/_jsxs(Grid,{alignItems:\"flex-end\",container:true,justify:\"space-between\",spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Typography,{component:\"h1\",variant:\"h3\",children:\"Nutrition Plan\"})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:function onClick(){return openAddDialog();},className:classes.themeButton,startIcon:/*#__PURE__*/_jsx(AddIcon,{}),children:\"Add\"})})]}),/*#__PURE__*/_jsxs(Card,{className:classes.tabCard,children:[/*#__PURE__*/_jsx(CardContent,{className:classes.content,children:/*#__PURE__*/_jsx(TableContainer,{children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:\"#\"}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:\"Diet Type\"}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:\"Calories\"}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:\"Actions\"})]})}),/*#__PURE__*/_jsxs(TableBody,{children:[!loading&&nutritionPlanList.map(function(data,index){return/*#__PURE__*/_jsxs(TableRow,{hover:true,children:[/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:stateData.page_limit*(stateData.page_no-1)+index+1}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:getDropValues(DietTypeDrop,data===null||data===void 0?void 0:data.diet_type)}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:data===null||data===void 0?void 0:data.calories}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:/*#__PURE__*/_jsxs(\"div\",{className:classes.sEvenly,children:[/*#__PURE__*/_jsx(Tooltip,{title:\"View\",arrow:true,children:/*#__PURE__*/_jsx(IconButton,{className:classes.iconPadd,onClick:function onClick(){return openViewDialog(data);},children:/*#__PURE__*/_jsx(CenterFocusStrongIcon,{color:\"primary\"})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Edit\",arrow:true,children:/*#__PURE__*/_jsx(IconButton,{className:classes.iconPadd,onClick:function onClick(){return openEditDialog(data);},children:/*#__PURE__*/_jsx(EditIcon,{color:\"action\"})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Delete\",arrow:true,children:/*#__PURE__*/_jsx(IconButton,{className:classes.iconPadd,onClick:function onClick(){return onDelete(data);},children:/*#__PURE__*/_jsx(DeleteIcon,{color:\"secondary\"})})})]})})]},index);}),loading&&/*#__PURE__*/_jsx(TableLoader,{}),!loading&&nutritionPlanList.length==0&&/*#__PURE__*/_jsx(TableNoData,{children:\"No Data Found\"})]})]})})}),/*#__PURE__*/_jsx(CardActions,{className:classes.actions,children:/*#__PURE__*/_jsx(Pagination,{count:pageCount,page:stateData.page_no,onChange:onPageChange})})]}),/*#__PURE__*/_jsx(AddEditModel,_objectSpread(_objectSpread({},addEditDialog),{},{onClose:closeAddEditDialog,onSuccess:onSuccessAction})),viewDialog.isOpen&&/*#__PURE__*/_jsx(ViewNutritionModel,_objectSpread(_objectSpread({},viewDialog),{},{onClose:closeViewDialog}))]});};export var AddEditModel=function AddEditModel(props){var isEdit=props.isEdit,isOpen=props.isOpen,_props$okBtnText=props.okBtnText,okBtnText=_props$okBtnText===void 0?'OK':_props$okBtnText,onClose=props.onClose,data=props.data,title=props.title,onSuccess=props.onSuccess;var formikRef=useRef(null);var classes=useStyles();var Snackbar=useSnackbar();var _useService2=useService(),Post=_useService2.Post;var getCaloriesData=useCalories();var _React$useState=React.useState('none'),_React$useState2=_slicedToArray(_React$useState,2),tabValue=_React$useState2[0],setTabValue=_React$useState2[1];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),ingredientList=_useState14[0],setIngredientList=_useState14[1];var _React$useState3=React.useState(_objectSpread({},initialFormValues)),_React$useState4=_slicedToArray(_React$useState3,2),initialValue=_React$useState4[0],setInitialValue=_React$useState4[1];var onSubmit=function onSubmit(value,helper){helper.setSubmitting(true);var postData=_objectSpread({},value);!isEdit&&addData(postData,helper);isEdit&&editData(postData,helper);};var addData=function addData(data,_ref4){var setSubmitting=_ref4.setSubmitting,resetForm=_ref4.resetForm;setSubmitting(true);Post('app/addNutritionPlan',data).then(function(res){Snackbar.show(res.message,'success');setSubmitting(false);resetForm();onSuccess();}).catch(function(err){setSubmitting(false);Snackbar.show(err.message,'error');});};var editData=function editData(data,_ref5){var setSubmitting=_ref5.setSubmitting,resetForm=_ref5.resetForm;setSubmitting(true);Post('app/editNutritionPlan',data).then(function(res){Snackbar.show(res.message,'success');setSubmitting(false);resetForm();onSuccess();}).catch(function(err){setSubmitting(false);Snackbar.show(err.message,'error');});};var handleChangeTab=function handleChangeTab(newValue){setTabValue(newValue);};var addNewTab=function addNewTab(values,setFieldValue,push){push(NutMealTime);};var submitMealTime=function submitMealTime(i,values,setFieldValue){var nutrition=values.nutrition;var NewNutrition=_objectSpread({},nutrition[i]);NewNutrition.isEdit=false;nutrition[i]=NewNutrition;setFieldValue('nutrition',nutrition);handleChangeTab(i.toString());};var editMealTime=function editMealTime(i,values,setFieldValue){var nutrition=values.nutrition;var NewNutrition=_objectSpread({},nutrition[i]);NewNutrition.isEdit=true;nutrition[i]=NewNutrition;setFieldValue('nutrition',nutrition);handleChangeTab(i.toString());};var deleteMealTime=function deleteMealTime(i,values,setFieldValue){var nutrition=values.nutrition;var NewNutrition=nutrition.filter(function(d,index){return index!=i;});setFieldValue('nutrition',NewNutrition);};var addMeals=function addMeals(values,i,setFieldValue,pushvalue){// const FormKey = `nutrition[${i}].meals`\n// const { nutrition } = values\n// const meals = [...nutrition[i].meals]\npushvalue(NutMeal);// setFieldValue(FormKey, meals)\n};var listAllMealIngredient=function listAllMealIngredient(){Post('app/listAllMealIngredient',{}).then(function(response){if(!response.error){setIngredientList(response.data);}else{Snackbar.show(response.message,'error');}}).catch(function(error){Snackbar.show(error.message,'error');});};var getArrayError=function getArrayError(error){return typeof error=='string'?error:'';};var removeMeals=function removeMeals(i,FieldName,values,setFieldValue,remove){// const MealValue = getIn(values, `${FieldName}.meals`)\n// const FinelMealValue = MealValue.filter((d: any, index: number) => i != index)\n// setFieldValue(`${FieldName}.meals`, FinelMealValue)\nremove(i);};useEffect(function(){if(isEdit){var _id=data._id,rest=_objectWithoutProperties(data,[\"_id\"]);var _editData=_objectSpread(_objectSpread({},rest),{},{id:_id});var nutrition=_editData.nutrition.map(function(NutData){var meals=NutData.meals,rest=_objectWithoutProperties(NutData,[\"meals\"]);var NewMeals=meals.map(function(MealData){var ingredients=MealData.ingredients,rest=_objectWithoutProperties(MealData,[\"ingredients\"]);var IngredientIds=ingredientList.map(function(_ref6){var _id=_ref6._id;return _id;});var NewInc=ingredients.filter(function(_ref7){var _id=_ref7._id;return IngredientIds.includes(_id);}).map(function(_ref8){var _id=_ref8._id;return{id:_id};});return _objectSpread(_objectSpread({},rest),{},{ingredients:NewInc});});return _objectSpread(_objectSpread({},rest),{},{isEdit:false,meals:NewMeals});});_editData.nutrition=nutrition;console.log('editData',_editData);setInitialValue(_editData);}else{setInitialValue(initialFormValues);}},[props,ingredientList]);useEffect(function(){listAllMealIngredient();},[]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Dialog,{open:isOpen,disableBackdropClick:true,disableEscapeKeyDown:true,fullWidth:true,fullScreen:true,maxWidth:\"lg\",\"aria-labelledby\":\"dialog-title\",children:[/*#__PURE__*/_jsx(DialogTitle,{id:\"dialog-title\",onClose:onClose,children:title}),/*#__PURE__*/_jsx(Formik,{innerRef:formikRef,enableReinitialize:true,initialValues:initialValue,validationSchema:validation,onSubmit:onSubmit,children:function children(_ref9){var values=_ref9.values,errors=_ref9.errors,touched=_ref9.touched,handleChange=_ref9.handleChange,handleBlur=_ref9.handleBlur,setFieldValue=_ref9.setFieldValue,submitForm=_ref9.submitForm,isSubmitting=_ref9.isSubmitting;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(DialogContent,{dividers:true,children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(Autocomplete,{options:DietTypeDrop,value:DietTypeDrop.find(function(data){return data.id==values.diet_type;}),getOptionLabel:function getOptionLabel(option){return option.name;},getOptionSelected:function getOptionSelected(option){return option.id==values.diet_type;},onChange:function onChange(event,newValue){setFieldValue('diet_type',(newValue===null||newValue===void 0?void 0:newValue.id)||'');},onBlur:handleBlur,renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{label:\"Diet Types\",variant:\"outlined\",error:Boolean(touched.diet_type&&errors.diet_type),helperText:touched.diet_type&&errors.diet_type,inputProps:_objectSpread({},params.inputProps)}));}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(Autocomplete,{options:getCaloriesData,value:getCaloriesData.find(function(data){return data.id==values.calories;}),getOptionLabel:function getOptionLabel(option){return option.name;},getOptionSelected:function getOptionSelected(option){return option.id==values.calories;},onChange:function onChange(event,newValue){setFieldValue('calories',(newValue===null||newValue===void 0?void 0:newValue.id)||'');},onBlur:handleBlur,renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{label:\"Calories\",variant:\"outlined\",error:Boolean(touched.calories&&errors.calories),helperText:touched.calories&&errors.calories,inputProps:_objectSpread({},params.inputProps)}));}})}),[{label:'Protein',key:'protein'},{label:'Fat',key:'fat'},{label:'Carbs',key:'carbs'}].map(function(_ref10){var label=_ref10.label,key=_ref10.key;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:2,children:/*#__PURE__*/_jsx(Typography,{style:{padding:'20px'},variant:\"h5\",align:\"left\",children:/*#__PURE__*/_jsx(\"strong\",{children:label})})}),[{label:'Macros  ( % )',key:'macros'},{label:'Gram  ( g )',key:'gram'},{label:'Calories  ( Kcal )',key:'calories'}].map(function(subData,index){var SubKey=subData.key;var FieldName=\"\".concat(key,\".\").concat(SubKey);return/*#__PURE__*/_jsx(Grid,{item:true,xs:3,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:subData.label,name:FieldName,variant:\"outlined\",error:Boolean(getIn(touched,FieldName)&&getIn(errors,FieldName)),helperText:getIn(touched,FieldName)&&getIn(errors,FieldName),value:getIn(values,FieldName),onChange:handleChange,onBlur:handleBlur})});})]});}),/*#__PURE__*/_jsxs(TabContext,{value:tabValue||'',children:[/*#__PURE__*/_jsx(FieldArray,{name:\"nutrition\",validateOnChange:true,children:function children(_ref11){var push=_ref11.push,remove=_ref11.remove;return/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:/*#__PURE__*/_jsxs(TabList,{classes:{indicator:classes.tabIndicator},orientation:\"vertical\",variant:\"standard\",children:[values===null||values===void 0?void 0:values.nutrition.map(function(nutData,i){var FieldName=\"nutrition[\".concat(i,\"]\");var FieldTouched=getIn(touched,FieldName);var FieldErrors=getIn(errors,FieldName);var FieldValues=getIn(values,FieldName);var TabSelected=i==Number(tabValue);var SelectedStyle=TabSelected?{borderRight:'2px solid #41a58d'}:{borderRight:'2px solid white'};return/*#__PURE__*/_jsxs(\"div\",{className:classes.divTab,children:[/*#__PURE__*/_jsxs(Grid,{item:true,container:true,xs:12,spacing:1,style:_objectSpread({margin:'inherit'},SelectedStyle),children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:nutData.isEdit?10:6,children:[nutData.isEdit&&/*#__PURE__*/_jsx(TextField,{fullWidth:true,size:\"small\",label:\"Name\",name:\"\".concat(FieldName,\".meal_time\"),variant:\"outlined\",error:Boolean((FieldTouched===null||FieldTouched===void 0?void 0:FieldTouched.meal_time)&&(FieldErrors===null||FieldErrors===void 0?void 0:FieldErrors.meal_time)),helperText:(FieldTouched===null||FieldTouched===void 0?void 0:FieldTouched.meal_time)&&(FieldErrors===null||FieldErrors===void 0?void 0:FieldErrors.meal_time),value:nutData===null||nutData===void 0?void 0:nutData.meal_time,onChange:handleChange,onBlur:handleBlur}),console.log(FieldTouched===null||FieldTouched===void 0?void 0:FieldTouched.meals,FieldTouched===null||FieldTouched===void 0?void 0:FieldTouched.meal_time),!nutData.isEdit&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Button,{fullWidth:true,className:!Boolean((FieldTouched===null||FieldTouched===void 0?void 0:FieldTouched.meal_time)&&(FieldErrors===null||FieldErrors===void 0?void 0:FieldErrors.meal_time))?classes.themeButton:'',classes:{fullWidth:classes.tabBtnIcon},variant:\"contained\",color:\"secondary\",children:!Boolean((FieldTouched===null||FieldTouched===void 0?void 0:FieldTouched.meal_time)&&(FieldErrors===null||FieldErrors===void 0?void 0:FieldErrors.meal_time))?nutData===null||nutData===void 0?void 0:nutData.meal_time:FieldErrors===null||FieldErrors===void 0?void 0:FieldErrors.meal_time})})]}),nutData.isEdit&&/*#__PURE__*/_jsx(Grid,{item:true,xs:2,children:/*#__PURE__*/_jsx(Button,{fullWidth:true,className:classes.themeButton,classes:{fullWidth:classes.tabBtnIcon},variant:\"contained\",color:\"secondary\",onClick:function onClick(){return submitMealTime(i,values,setFieldValue);},children:/*#__PURE__*/_jsx(CheckIcon,{})})}),!nutData.isEdit&&/*#__PURE__*/_jsx(Grid,{item:true,xs:2,children:/*#__PURE__*/_jsx(Button,{fullWidth:true,classes:{fullWidth:classes.tabBtnIcon},variant:\"contained\",color:\"primary\",onClick:function onClick(e){return handleChangeTab(i.toString());},children:tabValue===i.toString()?/*#__PURE__*/_jsx(ChevronRightIcon,{}):/*#__PURE__*/_jsx(KeyboardArrowUpIcon,{})})}),!nutData.isEdit&&/*#__PURE__*/_jsx(Grid,{item:true,xs:2,children:/*#__PURE__*/_jsx(Button,{fullWidth:true,classes:{fullWidth:classes.tabBtnIcon},variant:\"contained\",color:\"primary\",onClick:function onClick(){return editMealTime(i,values,setFieldValue);},children:/*#__PURE__*/_jsx(EditIcon,{})})}),!nutData.isEdit&&/*#__PURE__*/_jsx(Grid,{item:true,xs:2,children:/*#__PURE__*/_jsx(Button,{fullWidth:true,classes:{fullWidth:classes.tabBtnIcon},variant:\"contained\",color:\"secondary\",onClick:function onClick(){return remove(i);},children:/*#__PURE__*/_jsx(DeleteIcon,{})})})]}),/*#__PURE__*/_jsx(FormHelperText,{children:/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"error\",children:getIn(touched,\"\".concat(FieldName,\".meals\"))&&getArrayError(getIn(errors,\"\".concat(FieldName,\".meals\")))})})]});}),/*#__PURE__*/_jsx(\"div\",{className:classes.divTab,children:/*#__PURE__*/_jsx(Grid,{container:true,xs:12,spacing:1,style:{margin:'inherit'},children:/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,error:Boolean(getIn(touched,'nutrition')&&getArrayError(getIn(errors,'nutrition'))),children:[/*#__PURE__*/_jsx(Button,{fullWidth:true,className:classes.themeButton,variant:\"contained\",color:\"secondary\",onClick:function onClick(){return addNewTab(values,setFieldValue,push);},endIcon:/*#__PURE__*/_jsx(AddIcon,{}),children:\"Add Meal Time\"}),/*#__PURE__*/_jsx(FormHelperText,{children:getIn(touched,'nutrition')&&getArrayError(getIn(errors,'nutrition'))})]})})})})]})});}}),/*#__PURE__*/_jsx(Grid,{item:true,xs:8,children:values===null||values===void 0?void 0:values.nutrition.map(function(nutData,i){var FieldMainName=\"nutrition[\".concat(i,\"]\");return/*#__PURE__*/_jsx(FieldArray,{name:\"\".concat(FieldMainName,\".meals\"),children:function children(_ref12){var push=_ref12.push,remove=_ref12.remove;return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(TabPanel,{className:classes.tabPanelRoot,value:i.toString(),children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Typography,{variant:\"h5\",align:\"center\",children:/*#__PURE__*/_jsx(\"strong\",{children:nutData===null||nutData===void 0?void 0:nutData.meal_time})})}),nutData===null||nutData===void 0?void 0:nutData.meals.map(function(mealData,i){var FieldName=\"\".concat(FieldMainName,\".meals[\").concat(i,\"]\");var FieldTouched=getIn(touched,FieldName);var FieldErrors=getIn(errors,FieldName);var FieldValues=getIn(values,FieldName);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:11,children:/*#__PURE__*/_jsx(Typography,{variant:\"h5\",align:\"center\",children:/*#__PURE__*/_jsx(\"strong\",{children:\"Ingredient #\".concat(i+1)})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:1,children:/*#__PURE__*/_jsx(Button,{fullWidth:true,classes:{fullWidth:classes.tabBtnIcon},variant:\"contained\",color:\"secondary\",onClick:function onClick(){return removeMeals(i,FieldMainName,values,setFieldValue,remove);},children:/*#__PURE__*/_jsx(DeleteIcon,{})})}),/*#__PURE__*/_jsx(Grid,{item:true,md:12,xs:12,children:/*#__PURE__*/_jsx(Autocomplete,{multiple:true,options:ingredientList,value:ingredientList.filter(function(data){var _mealData$ingredients;return mealData===null||mealData===void 0?void 0:(_mealData$ingredients=mealData.ingredients)===null||_mealData$ingredients===void 0?void 0:_mealData$ingredients.map(function(_ref13){var id=_ref13.id;return id;}).includes(data._id);}),getOptionLabel:function getOptionLabel(option){return option.name;},onChange:function onChange(event,newValue){var IngIds=newValue.map(function(_ref14){var _id=_ref14._id;return{id:_id};});setFieldValue(\"\".concat(FieldName,\".ingredients\"),IngIds||[]);},onBlur:handleBlur,renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{label:\"Ingredient\",variant:\"outlined\",error:Boolean((FieldTouched===null||FieldTouched===void 0?void 0:FieldTouched.ingredients)&&(FieldErrors===null||FieldErrors===void 0?void 0:FieldErrors.ingredients)),helperText:(FieldTouched===null||FieldTouched===void 0?void 0:FieldTouched.ingredients)&&(FieldErrors===null||FieldErrors===void 0?void 0:FieldErrors.ingredients),inputProps:_objectSpread({},params.inputProps)}));}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Quantity\",name:\"\".concat(FieldName,\".quantity\"),variant:\"outlined\",error:Boolean((FieldTouched===null||FieldTouched===void 0?void 0:FieldTouched.quantity)&&(FieldErrors===null||FieldErrors===void 0?void 0:FieldErrors.quantity))||Boolean((FieldTouched===null||FieldTouched===void 0?void 0:FieldTouched.quantity_unit)&&(FieldErrors===null||FieldErrors===void 0?void 0:FieldErrors.quantity_unit)),helperText:(FieldTouched===null||FieldTouched===void 0?void 0:FieldTouched.quantity)&&(FieldErrors===null||FieldErrors===void 0?void 0:FieldErrors.quantity)||(FieldTouched===null||FieldTouched===void 0?void 0:FieldTouched.quantity_unit)&&(FieldErrors===null||FieldErrors===void 0?void 0:FieldErrors.quantity_unit),value:mealData.quantity,onChange:handleChange,onBlur:handleBlur,InputProps:{classes:{adornedEnd:classes.textareaAdornedEnd},endAdornment:/*#__PURE__*/_jsx(UnitSelect,{id:\"quantity_unit\",option:UnitDropdown,name:\"\".concat(FieldName,\".quantity_unit\"),value:mealData.quantity_unit,onChange:handleChange,onBlur:handleBlur})}})}),/*#__PURE__*/_jsx(Grid,{item:true,md:6,xs:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,multiline:true,label:\"Protein ( g )\",name:\"\".concat(FieldName,\".protein\"),variant:\"outlined\",error:Boolean((FieldTouched===null||FieldTouched===void 0?void 0:FieldTouched.protein)&&(FieldErrors===null||FieldErrors===void 0?void 0:FieldErrors.protein)),helperText:(FieldTouched===null||FieldTouched===void 0?void 0:FieldTouched.protein)&&(FieldErrors===null||FieldErrors===void 0?void 0:FieldErrors.protein),value:mealData.protein,onChange:handleChange,onBlur:handleBlur})}),/*#__PURE__*/_jsx(Grid,{item:true,md:6,xs:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,multiline:true,label:\"Fat ( g )\",name:\"\".concat(FieldName,\".fat\"),variant:\"outlined\",error:Boolean((FieldTouched===null||FieldTouched===void 0?void 0:FieldTouched.fat)&&(FieldErrors===null||FieldErrors===void 0?void 0:FieldErrors.fat)),helperText:(FieldTouched===null||FieldTouched===void 0?void 0:FieldTouched.fat)&&(FieldErrors===null||FieldErrors===void 0?void 0:FieldErrors.fat),value:mealData.fat,onChange:handleChange,onBlur:handleBlur})}),/*#__PURE__*/_jsx(Grid,{item:true,md:6,xs:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,multiline:true,label:\"Carbs ( g )\",name:\"\".concat(FieldName,\".carbs\"),variant:\"outlined\",error:Boolean((FieldTouched===null||FieldTouched===void 0?void 0:FieldTouched.carbs)&&(FieldErrors===null||FieldErrors===void 0?void 0:FieldErrors.carbs)),helperText:(FieldTouched===null||FieldTouched===void 0?void 0:FieldTouched.carbs)&&(FieldErrors===null||FieldErrors===void 0?void 0:FieldErrors.carbs),value:mealData.carbs,onChange:handleChange,onBlur:handleBlur})}),/*#__PURE__*/_jsx(Grid,{item:true,md:6,xs:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,multiline:true,label:\"calories ( kcal )\",name:\"\".concat(FieldName,\".calories\"),variant:\"outlined\",error:Boolean((FieldTouched===null||FieldTouched===void 0?void 0:FieldTouched.calories)&&(FieldErrors===null||FieldErrors===void 0?void 0:FieldErrors.calories)),helperText:(FieldTouched===null||FieldTouched===void 0?void 0:FieldTouched.calories)&&(FieldErrors===null||FieldErrors===void 0?void 0:FieldErrors.calories),value:mealData.calories,onChange:handleChange,onBlur:handleBlur})})]});}),/*#__PURE__*/_jsx(Grid,{item:true,md:12,xs:12,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,error:Boolean(getIn(touched,\"\".concat(FieldMainName,\".meals\"))&&getArrayError(getIn(errors,\"\".concat(FieldMainName,\".meals\")))),children:[/*#__PURE__*/_jsx(Button,{fullWidth:true,className:classes.themeButton,variant:\"contained\",color:\"default\",onClick:function onClick(){return addMeals(values,i,setFieldValue,push);},endIcon:/*#__PURE__*/_jsx(ControlPointIcon,{}),children:\"Add Ingredients\"}),/*#__PURE__*/_jsx(FormHelperText,{children:getIn(touched,\"\".concat(FieldMainName,\".meals\"))&&getArrayError(getIn(errors,\"\".concat(FieldMainName,\".meals\")))})]})})]})},i)});}});})})]})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:onClose,variant:\"outlined\",color:\"secondary\",children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{className:classes.themeButton,onClick:function onClick(){return submitForm();},disabled:isSubmitting,variant:\"outlined\",children:isSubmitting?/*#__PURE__*/_jsx(CircularProgress,{size:24,style:{color:'white'}}):okBtnText})]})]});}})]})});};var ViewNutritionModel=function ViewNutritionModel(props){var isOpen=props.isOpen,title=props.title,onClose=props.onClose,data=props.data;var classes=useStyles();var _useState15=useState(data),_useState16=_slicedToArray(_useState15,2),formValue=_useState16[0],setFormValue=_useState16[1];var _React$useState5=React.useState('0'),_React$useState6=_slicedToArray(_React$useState5,2),tabValue=_React$useState6[0],setTabValue=_React$useState6[1];var _React$useState7=React.useState('Early-Morning'),_React$useState8=_slicedToArray(_React$useState7,2),timings=_React$useState8[0],setTimings=_React$useState8[1];var handleTabChange=function handleTabChange(event,newValue){setTabValue(newValue);};var getDropValues=function getDropValues(dropValues,value){var _dropValues$find2;return((_dropValues$find2=dropValues.find(function(_ref15){var id=_ref15.id;return id==value;}))===null||_dropValues$find2===void 0?void 0:_dropValues$find2.name)||'';};useEffect(function(){setFormValue(data);},[props]);console.log(formValue);return/*#__PURE__*/_jsxs(Dialog,{disableBackdropClick:true,disableEscapeKeyDown:true,fullWidth:true,maxWidth:\"md\",\"aria-labelledby\":\"dialog-view-title\",open:isOpen,children:[/*#__PURE__*/_jsx(DialogTitle,{id:\"dialog-view-title\",onClose:onClose,children:title}),/*#__PURE__*/_jsxs(DialogContent,{dividers:true,children:[/*#__PURE__*/_jsx(Paper,{children:/*#__PURE__*/_jsx(Table,{children:/*#__PURE__*/_jsxs(TableBody,{children:[/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Diet Type\"}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(\"strong\",{children:getDropValues(DietTypeDrop,formValue===null||formValue===void 0?void 0:formValue.diet_type)})})]}),/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Calories\"}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsxs(\"strong\",{children:[formValue===null||formValue===void 0?void 0:formValue.calories,\" Kcal\"]})})]})]})})}),/*#__PURE__*/_jsxs(Card,{className:classes.nutCard,children:[/*#__PURE__*/_jsx(CardHeader,{classes:{root:classes.nutCardRoot,title:classes.nutCardTitle},title:\"\".concat(formValue===null||formValue===void 0?void 0:formValue.calories,\" Kcal\")}),/*#__PURE__*/_jsxs(CardActions,{className:classes.nutCardAction,children:[/*#__PURE__*/_jsx(NutritionData,{title:\"Protein\",data:formValue===null||formValue===void 0?void 0:formValue.protein}),/*#__PURE__*/_jsx(NutritionData,{title:\"Fat\",data:formValue===null||formValue===void 0?void 0:formValue.fat}),/*#__PURE__*/_jsx(NutritionData,{title:\"Carbs\",data:formValue===null||formValue===void 0?void 0:formValue.carbs})]})]}),/*#__PURE__*/_jsx(Paper,{children:/*#__PURE__*/_jsx(TabContext,{value:tabValue||'',children:/*#__PURE__*/_jsxs(Grid,{item:true,container:true,xs:12,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:3,children:/*#__PURE__*/_jsx(TabList,{classes:{indicator:classes.tabIndicator},onChange:handleTabChange,orientation:\"vertical\",variant:\"standard\",children:formValue===null||formValue===void 0?void 0:formValue.nutrition.map(function(nutData,i){var meal_time=nutData.meal_time;return/*#__PURE__*/_jsx(Tab,{classes:{root:classes.tabRoot,textColorInherit:classes.tabTextColorInherit},label:meal_time,value:i.toString()});})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:9,children:formValue===null||formValue===void 0?void 0:formValue.nutrition.map(function(nutData,i){var _nutData$meals=nutData.meals,meals=_nutData$meals===void 0?[]:_nutData$meals;return/*#__PURE__*/_jsx(TabPanel,{className:classes.tabPanelRoot,value:i.toString(),children:meals.map(function(mealData,i){var _mealData$ingredients2=mealData.ingredients,ingredients=_mealData$ingredients2===void 0?[]:_mealData$ingredients2;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,className:classes.mealTimeText,children:/*#__PURE__*/_jsx(Typography,{variant:\"h5\",align:\"center\",children:/*#__PURE__*/_jsx(\"strong\",{children:\"Ingredient #\".concat(i+1)})})}),/*#__PURE__*/_jsx(Grid,{item:true,container:true,xs:12,spacing:2,children:ingredients.map(function(incData,i){var _incData$image;var _incData$benfits=incData.benfits,benfits=_incData$benfits===void 0?[]:_incData$benfits;return/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:12,md:6,children:/*#__PURE__*/_jsx(Card,{elevation:0,className:classes.cardRoot,children:/*#__PURE__*/_jsxs(CardContent,{className:classes.cardContentRoot,children:[/*#__PURE__*/_jsx(List,{className:classes.noPadding,children:/*#__PURE__*/_jsxs(ListItem,{disableGutters:true,className:classes.noPadding,children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(Avatar,{className:classes.avatarRoot,src:(_incData$image=incData.image)===null||_incData$image===void 0?void 0:_incData$image.url})}),/*#__PURE__*/_jsx(ListItemText,{classes:{primary:classes.textPrimary,secondary:classes.textSecondary},primary:incData.name,secondary:\"\".concat(mealData.quantity,\"  \").concat(mealData.quantity_unit)})]})}),/*#__PURE__*/_jsxs(CardActions,{disableSpacing:true,className:classes.cardActionsRoot,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:/*#__PURE__*/_jsxs(\"ul\",{className:classes.ulRoot,children:[/*#__PURE__*/_jsx(\"li\",{className:clsx(classes.liRoot,classes.colorProtein),children:\"Protein\"}),/*#__PURE__*/_jsx(Typography,{className:classes.ulTypo,variant:\"body1\",children:mealData.protein})]})})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:/*#__PURE__*/_jsxs(\"ul\",{className:classes.ulRoot,children:[/*#__PURE__*/_jsx(\"li\",{className:clsx(classes.liRoot,classes.colorFat),children:\"Fat\"}),/*#__PURE__*/_jsx(Typography,{className:classes.ulTypo,variant:\"body1\",children:mealData.fat})]})})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:/*#__PURE__*/_jsxs(\"ul\",{className:classes.ulRoot,children:[/*#__PURE__*/_jsx(\"li\",{className:clsx(classes.liRoot,classes.colorCarbs),children:\"Carbs\"}),/*#__PURE__*/_jsx(Typography,{className:classes.ulTypo,variant:\"body1\",children:mealData.carbs})]})})})]}),/*#__PURE__*/_jsx(Divider,{className:classes.dividerRoot}),/*#__PURE__*/_jsxs(CardActions,{disableSpacing:true,className:classes.cardActionsBenifitsRoot,children:[/*#__PURE__*/_jsx(Grid,{item:true,container:true,xs:12,className:classes.benefitsText,children:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"inherit\",children:/*#__PURE__*/_jsx(\"strong\",{children:\"Benefits:\"})})}),/*#__PURE__*/_jsx(Grid,{item:true,container:true,xs:12,children:benfits.map(function(benfData,i){return/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(\"ul\",{className:classes.ulRoot,children:/*#__PURE__*/_jsx(\"li\",{className:clsx(classes.liRoot,classes.benefitsList),children:benfData})})});})})]})]})})});})})]});})},i);})})]})})})]}),/*#__PURE__*/_jsx(DialogActions,{children:/*#__PURE__*/_jsx(Button,{onClick:onClose,variant:\"outlined\",color:\"secondary\",children:\"Close\"})})]});};var CircularProgressWithLabel=function CircularProgressWithLabel(props){var classes=useStyles();return/*#__PURE__*/_jsxs(Box,{position:\"relative\",display:\"inline-flex\",color:\"inherit\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(CircularProgress,_objectSpread(_objectSpread({variant:\"determinate\",className:classes.circleBottom,size:50,thickness:3},props),{},{value:100})),/*#__PURE__*/_jsx(CircularProgress,_objectSpread({size:50,className:classes.circleTop,color:\"inherit\",variant:\"determinate\"},props)),/*#__PURE__*/_jsx(Box,{color:\"inherit\",top:0,left:0,bottom:0,right:0,position:\"absolute\",display:\"flex\",alignItems:\"center\",justifyContent:\"center\",children:/*#__PURE__*/_jsx(Typography,{color:\"inherit\",variant:\"caption\",component:\"div\",children:\"\".concat(Math.round(props.value),\"%\")})})]});};var NutritionData=function NutritionData(props){var _useState17=useState(props.data),_useState18=_slicedToArray(_useState17,2),data=_useState18[0],setData=_useState18[1];var _useState19=useState(props.title),_useState20=_slicedToArray(_useState19,2),title=_useState20[0],setTitle=_useState20[1];useEffect(function(){setData(props.data);setTitle(props.title);},[props]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Typography,{color:\"inherit\",align:\"center\",children:/*#__PURE__*/_jsx(CircularProgressWithLabel,{value:(data===null||data===void 0?void 0:data.macros)||0})}),/*#__PURE__*/_jsx(Typography,{color:\"inherit\",variant:\"h6\",align:\"center\",children:/*#__PURE__*/_jsx(\"strong\",{children:title})}),/*#__PURE__*/_jsx(Typography,{color:\"inherit\",variant:\"body2\",align:\"center\",children:\"\".concat(data===null||data===void 0?void 0:data.gram,\" g\")}),/*#__PURE__*/_jsx(Typography,{color:\"inherit\",variant:\"body2\",align:\"center\",children:\"\".concat(data===null||data===void 0?void 0:data.calories,\" c\")})]});};export default NutritionPlan;","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/pages/NutritionPlan/NutritionPlan.tsx"],"names":["Avatar","Box","Button","Card","CardActions","CardContent","CardHeader","CircularProgress","Dialog","DialogActions","DialogContent","Divider","FormControl","FormHelperText","Grid","IconButton","ListItem","ListItemAvatar","makeStyles","Paper","Tab","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TextField","Tooltip","Typography","List","ListItemText","AddIcon","CenterFocusStrongIcon","CheckIcon","ControlPointIcon","DeleteIcon","EditIcon","Pagination","TabContext","TabList","TabPanel","Autocomplete","Formik","getIn","FieldArray","React","useEffect","useRef","useState","DialogTitle","TableLoader","TableNoData","Page","useConfModel","useService","useSnackbar","UnitSelect","UnitDropdown","initialFormValues","NutMeal","NutMealTime","validation","ChevronRightIcon","KeyboardArrowUpIcon","clsx","useCalories","useStyles","theme","root","width","breakpoints","values","lg","maxWidth","margin","padding","spacing","content","tabCard","marginTop","themeButton","color","palette","white","backgroundColor","green","main","dark","sEvenly","display","justifyContent","sBetween","iconPadd","jCenter","actions","tabRoot","minWidth","textTransform","tabIndicator","tabTextColorInherit","border","tabPanelRoot","paddingTop","paddingBottom","listItemRoot","flexDisplay","paperRoot","paperRoot1","tablePanelRoot","largeAvatar","height","justPadding","borderRadius","tabBtnIcon","divTab","flexDirection","avatarRoot","marginRight","textPrimary","fontWeight","textSecondary","noPadding","benefitsList","fontSize","cardRoot","position","cardMediaRoot","cardContentRoot","cardActionsRoot","cardActionsBenifitsRoot","ulRoot","listStyle","liRoot","paddingLeft","textIndent","ulTypo","marginLeft","colorProtein","colorFat","colorCarbs","dividerRoot","background","mealTimeText","benefitsText","nutritionTextDiv","top","left","nutritionText","nutCard","nutCardRoot","nutCardTitle","textAlign","nutCardAction","circleBottom","circleTop","textareaAdornedEnd","paddingRight","DietTypeDrop","id","name","CaloriesDrop","NutritionPlan","classes","Snackbar","Post","ConfModel","loading","setLoading","page_no","page_limit","stateData","setStateData","pageCount","setPageCount","nutritionPlanList","setNutritionPlanList","isOpen","title","okBtnText","isEdit","data","addEditDialog","setAddEditDialog","viewDialog","setViewDialog","openAddDialog","prevState","openEditDialog","onDelete","openModel","closeModel","submitFunction","_id","then","res","onSuccessAction","show","message","catch","err","openViewDialog","listNutritionPlan","error","page_count","console","log","onPageChange","event","value","closeAddEditDialog","closeViewDialog","getDropValues","dropValues","find","map","index","diet_type","calories","length","AddEditModel","props","onClose","onSuccess","formikRef","getCaloriesData","tabValue","setTabValue","ingredientList","setIngredientList","initialValue","setInitialValue","onSubmit","helper","setSubmitting","postData","addData","editData","resetForm","handleChangeTab","newValue","addNewTab","setFieldValue","push","submitMealTime","i","nutrition","NewNutrition","toString","editMealTime","deleteMealTime","filter","d","addMeals","pushvalue","listAllMealIngredient","response","getArrayError","removeMeals","FieldName","remove","rest","NutData","meals","NewMeals","MealData","ingredients","IngredientIds","NewInc","includes","errors","touched","handleChange","handleBlur","submitForm","isSubmitting","option","params","Boolean","inputProps","label","key","subData","SubKey","indicator","nutData","FieldTouched","FieldErrors","FieldValues","TabSelected","Number","SelectedStyle","borderRight","meal_time","fullWidth","e","FieldMainName","mealData","IngIds","quantity","quantity_unit","adornedEnd","endAdornment","protein","fat","carbs","ViewNutritionModel","formValue","setFormValue","timings","setTimings","handleTabChange","textColorInherit","incData","benfits","image","url","primary","secondary","benfData","CircularProgressWithLabel","Math","round","NutritionData","setData","setTitle","macros","gram"],"mappings":"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","sourcesContent":["import {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  CardMedia,\r\n  CircularProgress,\r\n  CircularProgressProps,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent, Divider, FormControl,\r\n  FormHelperText, Grid,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  makeStyles,\r\n  Paper,\r\n  Tab,\r\n  Table,\r\n  TableBody, TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Tooltip, Typography\r\n} from '@material-ui/core';\r\nimport List from '@material-ui/core/List';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Pagination, TabContext, TabList, TabPanel } from '@material-ui/lab';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Formik, getIn, FieldArray } from 'formik';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\r\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\r\nimport Page from '../../components/Page/Page';\r\nimport useConfModel from '../../hook/useConfModel';\r\nimport useService from '../../hook/useService';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport UnitSelect from '../../components/UnitSelect/UnitSelect';\r\nimport UnitDropdown from '../../utils/MetricUnits';\r\nimport { initialFormValues, NutMeal, NutMealTime, validation } from './FormikValues';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport clsx from 'clsx';\r\nimport useCalories from '../../hook/useCalories';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  root: {\r\n    width: theme.breakpoints.values.lg,\r\n    maxWidth: '100%',\r\n    margin: '0 auto',\r\n    padding: theme.spacing(3),\r\n  },\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  tabCard: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  themeButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n  },\r\n  sEvenly: {\r\n    display: 'flex',\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  sBetween: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  iconPadd: {\r\n    padding: 5,\r\n  },\r\n  jCenter: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(1),\r\n    justifyContent: 'center',\r\n  },\r\n  tabRoot: {\r\n    minWidth: 0,\r\n    textTransform: 'none'\r\n    // margin: '10px 0px',\r\n  },\r\n  tabIndicator: {\r\n    backgroundColor: theme.palette.green.main,\r\n  },\r\n  tabTextColorInherit: {\r\n    backgroundColor: theme.palette.green.main,\r\n    color: 'white',\r\n    border: '1px solid white',\r\n  },\r\n  tabPanelRoot: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n    width: '100%',\r\n  },\r\n  listItemRoot: {\r\n    backgroundColor: '#7ac0af2b',\r\n    margin: '10px 0px',\r\n  },\r\n  flexDisplay: {\r\n    display: 'flex',\r\n  },\r\n  paperRoot: {\r\n    display: 'flex',\r\n    marginTop: '20px',\r\n  },\r\n  paperRoot1: {\r\n    display: 'flex',\r\n    marginTop: '20px',\r\n  },\r\n  tablePanelRoot: {\r\n    padding: '0px',\r\n  },\r\n  largeAvatar: {\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10)\r\n  },\r\n  justPadding: {\r\n    padding: 10,\r\n    borderRadius: 10\r\n  },\r\n  tabBtnIcon: {\r\n    height: '100%',\r\n    minWidth: 0,\r\n    textTransform: 'none'\r\n  },\r\n  divTab: {\r\n    flexDirection: 'column',\r\n    display: 'flex'\r\n  },\r\n  //=========\r\n\r\n  avatarRoot: {\r\n    borderRadius: 10,\r\n    marginRight: 15,\r\n    // width: theme.spacing(10),\r\n    // height: theme.spacing(10),\r\n  },\r\n  textPrimary: {\r\n    fontWeight: 'bold'\r\n  },\r\n  textSecondary: {\r\n    color: '#A0A6B2'\r\n  },\r\n  noPadding: {\r\n    padding: 0\r\n  },\r\n  benefitsList: {\r\n    fontSize: '0.7rem',\r\n    '&::before': {\r\n      content: \"'•  '\",\r\n      color: 'black',\r\n    }\r\n  },\r\n  cardRoot: {\r\n    borderRadius: theme.spacing(3),\r\n    position: 'relative'\r\n  },\r\n  cardMediaRoot: {\r\n    height: theme.spacing(25)\r\n  },\r\n  cardContentRoot: {\r\n    backgroundColor: '#EFF1F3',\r\n    padding: theme.spacing(2),\r\n    paddingBottom: `${theme.spacing(2)}px !important`\r\n  },\r\n  cardActionsRoot: {\r\n    padding: 0,\r\n    paddingTop: theme.spacing(1),\r\n    justifyContent: 'space-between'\r\n  },\r\n  cardActionsBenifitsRoot: {\r\n    padding: 0,\r\n    paddingTop: theme.spacing(1),\r\n    display: 'block'\r\n  },\r\n  ulRoot: {\r\n    listStyle: 'none',\r\n    display: 'flex',\r\n    padding: 0,\r\n    margin: 0,\r\n  },\r\n  liRoot: {\r\n    paddingLeft: '1em',\r\n    textIndent: '-.7em',\r\n  },\r\n  ulTypo: {\r\n    marginLeft: theme.spacing(0.5)\r\n  },\r\n  colorProtein: {\r\n    '&::before': {\r\n      content: \"'•  '\",\r\n      color: '#9A88FF',\r\n    }\r\n  },\r\n  colorFat: {\r\n    '&::before': {\r\n      content: \"'•  '\",\r\n      color: '#E57B91',\r\n    }\r\n  },\r\n  colorCarbs: {\r\n    '&::before': {\r\n      content: \"'•  '\",\r\n      color: '',\r\n    }\r\n  },\r\n  dividerRoot: {\r\n    background: 'white',\r\n    margin: theme.spacing(1, -2)\r\n  },\r\n  mealTimeText: {\r\n    margin: theme.spacing(2, 0)\r\n  },\r\n  benefitsText: {\r\n    color: '#41A58D'\r\n  },\r\n  nutritionTextDiv: {\r\n    border: '1px solid #EFF1F3',\r\n    color: '#EFF1F3',\r\n    borderRadius: 20,\r\n    padding: theme.spacing(0.5, 1),\r\n    width: 'fit-content',\r\n    position: 'absolute',\r\n    top: theme.spacing(2),\r\n    left: theme.spacing(2),\r\n  },\r\n  nutritionText: {\r\n    fontSize: '0.5rem',\r\n  },\r\n  nutCard: {\r\n    borderRadius: theme.spacing(3),\r\n    margin: theme.spacing(2, 0)\r\n  },\r\n  nutCardRoot: {\r\n    backgroundColor: '#41A58D',\r\n    color: 'white'\r\n  },\r\n  nutCardTitle: {\r\n    textAlign: 'center',\r\n    color: 'inherit'\r\n  },\r\n  nutCardAction: {\r\n    backgroundColor: '#276955',\r\n    color: 'white',\r\n    justifyContent: 'space-evenly'\r\n  },\r\n  circleBottom: {\r\n    color: '#eeeeee42',\r\n  },\r\n  circleTop: {\r\n    position: 'absolute',\r\n    left: 0,\r\n  },\r\n  textareaAdornedEnd: {\r\n    paddingRight: 0\r\n  },\r\n}));\r\n\r\nconst DietTypeDrop = [\r\n  { id: 'VEG', name: 'Vegetarian' },\r\n  { id: 'NONVEG', name: 'Non-Vegetarian' },\r\n  { id: 'EGG', name: 'Eggetarian' },\r\n];\r\n\r\nconst CaloriesDrop = [\r\n  { id: '2000', name: '2000' },\r\n  { id: '2100', name: '2100' },\r\n  { id: '2200', name: '2200' },\r\n  { id: '2300', name: '2300' },\r\n];\r\n\r\nconst NutritionPlan = () => {\r\n  const classes = useStyles();\r\n  const Snackbar = useSnackbar();\r\n  const { Post } = useService();\r\n  const ConfModel = useConfModel();\r\n  const [loading, setLoading] = useState(true);\r\n  const [stateData, setStateData] = useState({ page_no: 1, page_limit: 10 });\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const [nutritionPlanList, setNutritionPlanList] = useState([]);\r\n  const [addEditDialog, setAddEditDialog] = useState({\r\n    isOpen: false,\r\n    title: '',\r\n    okBtnText: '',\r\n    isEdit: false,\r\n    data: {},\r\n  });\r\n\r\n  const [viewDialog, setViewDialog] = useState({\r\n    isOpen: false,\r\n    title: '',\r\n    data: {},\r\n  });\r\n\r\n  const openAddDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      title: 'Add Nutrition Plan',\r\n      isEdit: false,\r\n      okBtnText: 'Save',\r\n    }));\r\n  };\r\n\r\n  const openEditDialog = (data: any) => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      isEdit: true,\r\n      data,\r\n      title: 'Edit Nutrition Plan',\r\n      okBtnText: 'Edit',\r\n    }));\r\n  };\r\n\r\n  const onDelete = (data: any) => {\r\n    const { openModel, setLoading, closeModel } = ConfModel;\r\n    const submitFunction = () => {\r\n      setLoading(true);\r\n      Post('app/deleteNutritionPlan', { id: data._id })\r\n        .then(async (res: any) => {\r\n          setLoading(false);\r\n          closeModel();\r\n          onSuccessAction();\r\n          Snackbar.show(res.message, 'success');\r\n        })\r\n        .catch((err: any) => {\r\n          setLoading(false);\r\n          Snackbar.show('Internal Server Error', 'error');\r\n        });\r\n    };\r\n    openModel(submitFunction);\r\n  };\r\n\r\n  const openViewDialog = (data: any) => {\r\n    setViewDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      data,\r\n      title: 'View Nutrition Plan',\r\n    }));\r\n  };\r\n\r\n  const listNutritionPlan = async () => {\r\n    setLoading(true);\r\n    Post('app/listNutritionPlan', stateData)\r\n      .then((res: any) => {\r\n        setLoading(false);\r\n        if (!res.error) {\r\n          setNutritionPlanList(res.data);\r\n          setPageCount(res.page_count);\r\n        } else {\r\n          Snackbar.show(res.message, 'error');\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        console.log('err', err);\r\n        setLoading(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const onPageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    setStateData((prevState: any) => ({ ...prevState, page_no: value }));\r\n  };\r\n\r\n  const closeAddEditDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const closeViewDialog = () => {\r\n    setViewDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  };\r\n\r\n  const onSuccessAction = () => {\r\n    listNutritionPlan();\r\n    closeAddEditDialog();\r\n  };\r\n\r\n  const getDropValues = (dropValues: any, value: string) => {\r\n    return dropValues.find(({ id }: any) => id == value)?.name || ''\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    listNutritionPlan();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Page title='Nutrition Plan' />\r\n\r\n      <Grid alignItems='flex-end' container justify='space-between' spacing={3}>\r\n        <Grid item>\r\n          <Typography component='h1' variant='h3'>\r\n            Nutrition Plan\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant='contained'\r\n            onClick={() => openAddDialog()}\r\n            className={classes.themeButton}\r\n            startIcon={<AddIcon />}\r\n          >\r\n            Add\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* =============Search======== */}\r\n      {/* <Grid container spacing={3}>\r\n        <Grid item>\r\n          <Paper elevation={0}>\r\n            <TextField\r\n              fullWidth\r\n              size='small'\r\n              placeholder='Name'\r\n              variant='outlined'\r\n              name='state'\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid> */}\r\n\r\n      <Card className={classes.tabCard}>\r\n        <CardContent className={classes.content}>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align='center'>#</TableCell>\r\n                  <TableCell align='center'>Diet Type</TableCell>\r\n                  <TableCell align='center'>Calories</TableCell>\r\n                  <TableCell align='center'>Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {!loading &&\r\n                  nutritionPlanList.map((data: any, index: number) => (\r\n                    <TableRow hover key={index}>\r\n                      <TableCell align='center'>\r\n                        {stateData.page_limit * (stateData.page_no - 1) +\r\n                          index +\r\n                          1}\r\n                      </TableCell>\r\n                      <TableCell align='center'>{getDropValues(DietTypeDrop, data?.diet_type)}</TableCell>\r\n                      <TableCell align='center'>{data?.calories}</TableCell>\r\n                      <TableCell align='center'>\r\n                        <div className={classes.sEvenly}>\r\n                          <Tooltip title='View' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openViewDialog(data)}\r\n                            >\r\n                              <CenterFocusStrongIcon color='primary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Edit' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => openEditDialog(data)}\r\n                            >\r\n                              <EditIcon color='action' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title='Delete' arrow>\r\n                            <IconButton\r\n                              className={classes.iconPadd}\r\n                              onClick={() => onDelete(data)}\r\n                            >\r\n                              <DeleteIcon color='secondary' />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                {loading && <TableLoader />}\r\n                {!loading && nutritionPlanList.length == 0 && (\r\n                  <TableNoData>No Data Found</TableNoData>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </CardContent>\r\n\r\n        <CardActions className={classes.actions}>\r\n          <Pagination\r\n            count={pageCount}\r\n            page={stateData.page_no}\r\n            onChange={onPageChange}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n\r\n      <AddEditModel\r\n        {...addEditDialog}\r\n        onClose={closeAddEditDialog}\r\n        onSuccess={onSuccessAction}\r\n      />\r\n      {viewDialog.isOpen && (\r\n        <ViewNutritionModel {...viewDialog} onClose={closeViewDialog} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const AddEditModel = (props: any) => {\r\n  const {\r\n    isEdit,\r\n    isOpen,\r\n    okBtnText = 'OK',\r\n    onClose,\r\n    data,\r\n    title,\r\n    onSuccess,\r\n  } = props;\r\n  const formikRef = useRef<any>(null);\r\n  const classes = useStyles();\r\n  const Snackbar = useSnackbar();\r\n  const { Post } = useService();\r\n  const getCaloriesData = useCalories()\r\n  const [tabValue, setTabValue] = React.useState('none');\r\n  const [ingredientList, setIngredientList] = useState([])\r\n  const [initialValue, setInitialValue] = React.useState({ ...initialFormValues });\r\n\r\n  const onSubmit = (value: any, helper: any) => {\r\n    helper.setSubmitting(true);\r\n    const postData = { ...value };\r\n    !isEdit && addData(postData, helper);\r\n    isEdit && editData(postData, helper);\r\n  };\r\n\r\n  const addData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n    Post('app/addNutritionPlan', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const editData = (data: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n    Post('app/editNutritionPlan', data)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        Snackbar.show(err.message, 'error');\r\n      });\r\n  };\r\n\r\n\r\n\r\n  const handleChangeTab = (newValue: string) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  const addNewTab = (values: any, setFieldValue: any, push: any) => {\r\n    push(NutMealTime)\r\n  }\r\n\r\n  const submitMealTime = (i: number, values: any, setFieldValue: any) => {\r\n\r\n    const { nutrition } = values\r\n    const NewNutrition = { ...nutrition[i] }\r\n    NewNutrition.isEdit = false\r\n    nutrition[i] = NewNutrition\r\n    setFieldValue('nutrition', nutrition)\r\n    handleChangeTab(i.toString())\r\n  }\r\n\r\n  const editMealTime = (i: number, values: any, setFieldValue: any) => {\r\n    const { nutrition } = values\r\n    const NewNutrition = { ...nutrition[i] }\r\n    NewNutrition.isEdit = true\r\n    nutrition[i] = NewNutrition\r\n    setFieldValue('nutrition', nutrition)\r\n    handleChangeTab(i.toString())\r\n  }\r\n\r\n  const deleteMealTime = (i: number, values: any, setFieldValue: any) => {\r\n    const { nutrition } = values\r\n    const NewNutrition = nutrition.filter((d: any, index: number) => index != i)\r\n    setFieldValue('nutrition', NewNutrition)\r\n  }\r\n\r\n  const addMeals = (values: any, i: number, setFieldValue: any, pushvalue: any) => {\r\n    // const FormKey = `nutrition[${i}].meals`\r\n    // const { nutrition } = values\r\n    // const meals = [...nutrition[i].meals]\r\n    pushvalue(NutMeal)\r\n    // setFieldValue(FormKey, meals)\r\n  }\r\n\r\n\r\n\r\n  const listAllMealIngredient = () => {\r\n    Post('app/listAllMealIngredient', {})\r\n      .then((response: any) => {\r\n        if (!response.error) {\r\n          setIngredientList(response.data);\r\n        } else {\r\n          Snackbar.show(response.message, 'error');\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        Snackbar.show(error.message, 'error');\r\n      });\r\n  };\r\n\r\n  const getArrayError = (error: any) => {\r\n    return typeof error == 'string' ? error : ''\r\n  }\r\n\r\n  const removeMeals = (i: number, FieldName: string, values: any, setFieldValue: any, remove: any) => {\r\n    // const MealValue = getIn(values, `${FieldName}.meals`)\r\n    // const FinelMealValue = MealValue.filter((d: any, index: number) => i != index)\r\n    // setFieldValue(`${FieldName}.meals`, FinelMealValue)\r\n    remove(i)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isEdit) {\r\n      const { _id, ...rest } = data;\r\n      const editData = { ...rest, id: _id };\r\n      let nutrition = editData.nutrition.map((NutData: any) => {\r\n        const { meals, ...rest } = NutData\r\n        let NewMeals = meals.map((MealData: any) => {\r\n          const { ingredients, ...rest } = MealData\r\n          const IngredientIds = ingredientList.map(({ _id }: any) => _id)\r\n          const NewInc = ingredients.filter(({ _id }: any) => IngredientIds.includes(_id)).map(({ _id }: any) => ({ id: _id }));\r\n          return { ...rest, ingredients: NewInc }\r\n        })\r\n        return { ...rest, isEdit: false, meals: NewMeals }\r\n      })\r\n      editData.nutrition = nutrition\r\n      console.log('editData', editData)\r\n      setInitialValue(editData);\r\n    } else {\r\n      setInitialValue(initialFormValues);\r\n    }\r\n  }, [props, ingredientList]);\r\n\r\n  useEffect(() => {\r\n    listAllMealIngredient();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={isOpen}\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        fullWidth\r\n        fullScreen\r\n        maxWidth='lg'\r\n        aria-labelledby='dialog-title'\r\n      >\r\n        <DialogTitle id='dialog-title' onClose={onClose}>\r\n          {title}\r\n        </DialogTitle>\r\n        <Formik\r\n          innerRef={formikRef}\r\n          enableReinitialize\r\n          initialValues={initialValue}\r\n          validationSchema={validation}\r\n          onSubmit={onSubmit}\r\n        >\r\n          {({ values, errors, touched, handleChange, handleBlur, setFieldValue, submitForm, isSubmitting }) => (\r\n            <>\r\n              <DialogContent dividers>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <Autocomplete\r\n                      options={DietTypeDrop}\r\n                      value={DietTypeDrop.find((data: any) => data.id == values.diet_type)}\r\n                      getOptionLabel={(option: any) => option.name}\r\n                      getOptionSelected={(option) => option.id == values.diet_type}\r\n                      onChange={(event: any, newValue: any) => {\r\n                        setFieldValue('diet_type', newValue?.id || '');\r\n                      }}\r\n                      onBlur={handleBlur}\r\n                      renderInput={(params: any) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label='Diet Types'\r\n                          variant='outlined'\r\n                          error={Boolean(touched.diet_type && errors.diet_type)}\r\n                          helperText={touched.diet_type && errors.diet_type}\r\n                          inputProps={{\r\n                            ...params.inputProps,\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Autocomplete\r\n                      options={getCaloriesData}\r\n                      value={getCaloriesData.find((data: any) => data.id == values.calories)}\r\n                      getOptionLabel={(option: any) => option.name}\r\n                      getOptionSelected={(option) => option.id == values.calories}\r\n                      onChange={(event: any, newValue: any) => {\r\n                        setFieldValue('calories', newValue?.id || '');\r\n                      }}\r\n                      onBlur={handleBlur}\r\n                      renderInput={(params: any) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label='Calories'\r\n                          variant='outlined'\r\n                          error={Boolean(touched.calories && errors.calories)}\r\n                          helperText={touched.calories && errors.calories}\r\n                          inputProps={{\r\n                            ...params.inputProps,\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n\r\n                  {[{ label: 'Protein', key: 'protein' }, { label: 'Fat', key: 'fat' }, { label: 'Carbs', key: 'carbs' }].map(({ label, key }) =>\r\n                    <>\r\n                      <Grid item xs={2}>\r\n                        <Typography style={{ padding: '20px' }} variant='h5' align='left'>\r\n                          <strong>{label}</strong>\r\n                        </Typography>\r\n                      </Grid>\r\n\r\n                      {[{ label: 'Macros  ( % )', key: 'macros' }, { label: 'Gram  ( g )', key: 'gram' }, { label: 'Calories  ( Kcal )', key: 'calories' }].map((subData: any, index: any) => {\r\n                        const SubKey = subData.key;\r\n                        const FieldName = `${key}.${SubKey}`;\r\n                        return (\r\n                          <Grid item xs={3}>\r\n                            <TextField\r\n                              fullWidth\r\n                              label={subData.label}\r\n                              name={FieldName}\r\n                              variant='outlined'\r\n                              error={Boolean(getIn(touched, FieldName) && getIn(errors, FieldName))}\r\n                              helperText={getIn(touched, FieldName) && getIn(errors, FieldName)}\r\n                              value={getIn(values, FieldName)}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </Grid>\r\n                        )\r\n                      })}\r\n                    </>\r\n                  )}\r\n\r\n                  {/* <Paper className={classes.paperRoot}> */}\r\n\r\n                  <TabContext value={tabValue || ''}>\r\n                    <FieldArray name='nutrition' validateOnChange>\r\n                      {({ push, remove }) => (\r\n                        <Grid item xs={4}>\r\n                          <TabList\r\n                            classes={{\r\n                              indicator: classes.tabIndicator\r\n                            }}\r\n                            orientation=\"vertical\"\r\n                            variant=\"standard\"\r\n                          >\r\n                            {values?.nutrition.map((nutData: any, i: number) => {\r\n                              let FieldName: string = `nutrition[${i}]`\r\n                              let FieldTouched: any = getIn(touched, FieldName)\r\n                              let FieldErrors: any = getIn(errors, FieldName)\r\n                              let FieldValues: any = getIn(values, FieldName)\r\n                              const TabSelected = i == Number(tabValue)\r\n                              const SelectedStyle = TabSelected ? { borderRight: '2px solid #41a58d' } : { borderRight: '2px solid white' }\r\n                              return (\r\n                                <div className={classes.divTab}>\r\n                                  <Grid item container xs={12} spacing={1} style={{ margin: 'inherit', ...SelectedStyle }}>\r\n                                    <Grid item xs={nutData.isEdit ? 10 : 6}>\r\n\r\n                                      {nutData.isEdit && <TextField\r\n                                        fullWidth\r\n                                        size='small'\r\n                                        label='Name'\r\n                                        name={`${FieldName}.meal_time`}\r\n                                        variant='outlined'\r\n                                        error={Boolean(FieldTouched?.meal_time && FieldErrors?.meal_time)}\r\n                                        helperText={FieldTouched?.meal_time && FieldErrors?.meal_time}\r\n                                        value={nutData?.meal_time}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                      />\r\n                                      }\r\n                                      {console.log(FieldTouched?.meals, FieldTouched?.meal_time)}\r\n                                      {!nutData.isEdit &&\r\n                                        <>\r\n                                          <Button\r\n                                            fullWidth\r\n                                            className={!Boolean(FieldTouched?.meal_time && FieldErrors?.meal_time) ? classes.themeButton : ''}\r\n                                            classes={{\r\n                                              fullWidth: classes.tabBtnIcon\r\n                                            }}\r\n                                            variant='contained'\r\n                                            color='secondary'\r\n                                          >\r\n                                            {!Boolean(FieldTouched?.meal_time && FieldErrors?.meal_time) ? nutData?.meal_time : FieldErrors?.meal_time}\r\n                                          </Button>\r\n                                        </>\r\n                                      }\r\n                                    </Grid>\r\n\r\n                                    {nutData.isEdit &&\r\n                                      <Grid item xs={2}>\r\n                                        <Button\r\n                                          fullWidth\r\n                                          className={classes.themeButton}\r\n                                          classes={{\r\n                                            fullWidth: classes.tabBtnIcon\r\n                                          }}\r\n                                          variant='contained'\r\n                                          color='secondary'\r\n                                          onClick={() => submitMealTime(i, values, setFieldValue)}\r\n                                        >\r\n                                          <CheckIcon />\r\n                                        </Button>\r\n                                      </Grid>\r\n                                    }\r\n\r\n                                    {!nutData.isEdit && <Grid item xs={2} >\r\n                                      <Button\r\n                                        fullWidth\r\n                                        classes={{\r\n                                          fullWidth: classes.tabBtnIcon\r\n                                        }}\r\n                                        variant='contained'\r\n                                        color='primary'\r\n                                        onClick={(e) => handleChangeTab(i.toString())}\r\n                                      >\r\n                                        {tabValue === i.toString() ? <ChevronRightIcon /> : <KeyboardArrowUpIcon />}\r\n                                      </Button>\r\n                                    </Grid>\r\n                                    }\r\n\r\n                                    {!nutData.isEdit && <Grid item xs={2} >\r\n                                      <Button\r\n                                        fullWidth\r\n                                        classes={{\r\n                                          fullWidth: classes.tabBtnIcon\r\n                                        }}\r\n                                        variant='contained'\r\n                                        color='primary'\r\n                                        onClick={() => editMealTime(i, values, setFieldValue)}\r\n                                      >\r\n                                        <EditIcon />\r\n                                      </Button>\r\n                                    </Grid>\r\n                                    }\r\n\r\n                                    {!nutData.isEdit &&\r\n                                      <Grid item xs={2}>\r\n                                        <Button\r\n                                          fullWidth\r\n                                          classes={{\r\n                                            fullWidth: classes.tabBtnIcon\r\n                                          }}\r\n                                          variant='contained'\r\n                                          color='secondary'\r\n                                          onClick={() => remove(i)}\r\n                                        >\r\n                                          <DeleteIcon />\r\n                                        </Button>\r\n                                      </Grid>\r\n                                    }\r\n                                  </Grid>\r\n                                  <FormHelperText>\r\n                                    <Typography variant='caption' color='error'>{getIn(touched, `${FieldName}.meals`) && getArrayError(getIn(errors, `${FieldName}.meals`))}</Typography>\r\n                                  </FormHelperText>\r\n                                </div>\r\n                              )\r\n                            }\r\n                            )}\r\n                            <div className={classes.divTab}>\r\n                              <Grid container xs={12} spacing={1} style={{ margin: 'inherit' }}>\r\n                                <Grid item xs={12}>\r\n                                  <FormControl fullWidth\r\n                                    error={Boolean(getIn(touched, 'nutrition') && getArrayError(getIn(errors, 'nutrition')))}\r\n                                  >\r\n                                    <Button\r\n                                      fullWidth\r\n                                      className={classes.themeButton}\r\n                                      variant='contained'\r\n                                      color='secondary'\r\n                                      onClick={() => addNewTab(values, setFieldValue, push)}\r\n                                      endIcon={<AddIcon />}\r\n                                    >\r\n                                      Add Meal Time\r\n                                    </Button>\r\n\r\n                                    <FormHelperText>\r\n                                      {getIn(touched, 'nutrition') && getArrayError(getIn(errors, 'nutrition'))}\r\n                                    </FormHelperText>\r\n                                  </FormControl>\r\n                                </Grid>\r\n                              </Grid>\r\n                            </div>\r\n\r\n                          </TabList>\r\n                        </Grid>\r\n                      )}\r\n                    </FieldArray>\r\n\r\n\r\n                    <Grid item xs={8}>\r\n                      {values?.nutrition.map((nutData: any, i: number) => {\r\n                        let FieldMainName: string = `nutrition[${i}]`\r\n                        return (\r\n                          <FieldArray name={`${FieldMainName}.meals`}>\r\n                            {({ push, remove }) => (\r\n                              <>\r\n                                <TabPanel key={i} className={classes.tabPanelRoot} value={i.toString()}>\r\n\r\n                                  <Grid container spacing={2}>\r\n                                    <Grid item xs={12}>\r\n                                      <Typography variant='h5' align='center'>\r\n                                        <strong>{nutData?.meal_time}</strong>\r\n                                      </Typography>\r\n                                    </Grid>\r\n\r\n                                    {nutData?.meals.map((mealData: any, i: number) => {\r\n                                      let FieldName: string = `${FieldMainName}.meals[${i}]`\r\n                                      let FieldTouched: any = getIn(touched, FieldName)\r\n                                      let FieldErrors: any = getIn(errors, FieldName)\r\n                                      let FieldValues: any = getIn(values, FieldName)\r\n                                      return (\r\n                                        <>\r\n                                          <Grid item xs={11}>\r\n                                            <Typography variant='h5' align='center' >\r\n                                              <strong>{`Ingredient #${i + 1}`}</strong>\r\n                                            </Typography>\r\n                                          </Grid>\r\n\r\n                                          <Grid item xs={1}>\r\n                                            <Button\r\n                                              fullWidth\r\n                                              classes={{\r\n                                                fullWidth: classes.tabBtnIcon\r\n                                              }}\r\n                                              variant='contained'\r\n                                              color='secondary'\r\n                                              onClick={() => removeMeals(i, FieldMainName, values, setFieldValue, remove)}\r\n                                            >\r\n                                              <DeleteIcon />\r\n                                            </Button>\r\n                                          </Grid>\r\n\r\n                                          <Grid item md={12} xs={12}>\r\n                                            <Autocomplete\r\n                                              multiple\r\n                                              options={ingredientList}\r\n                                              value={ingredientList.filter((data: any) => mealData?.ingredients?.map(({ id }: any) => id).includes(data._id))}\r\n                                              getOptionLabel={(option: any) => option.name}\r\n                                              onChange={(event: any, newValue: any) => {\r\n                                                let IngIds = newValue.map(({ _id }: any) => ({ id: _id }))\r\n                                                setFieldValue(`${FieldName}.ingredients`, IngIds || []);\r\n                                              }}\r\n                                              onBlur={handleBlur}\r\n                                              renderInput={(params: any) => (\r\n                                                <TextField\r\n                                                  {...params}\r\n                                                  label='Ingredient'\r\n                                                  variant='outlined'\r\n                                                  error={Boolean(FieldTouched?.ingredients && FieldErrors?.ingredients)}\r\n                                                  helperText={FieldTouched?.ingredients && FieldErrors?.ingredients}\r\n                                                  inputProps={{\r\n                                                    ...params.inputProps,\r\n                                                  }}\r\n                                                />\r\n                                              )}\r\n                                            />\r\n                                          </Grid>\r\n                                          <Grid item xs={12}>\r\n                                            <TextField\r\n                                              fullWidth\r\n                                              label='Quantity'\r\n                                              name={`${FieldName}.quantity`}\r\n                                              variant='outlined'\r\n                                              error={Boolean(FieldTouched?.quantity && FieldErrors?.quantity) || Boolean(FieldTouched?.quantity_unit && FieldErrors?.quantity_unit)}\r\n                                              helperText={FieldTouched?.quantity && FieldErrors?.quantity || (FieldTouched?.quantity_unit && FieldErrors?.quantity_unit)}\r\n                                              value={mealData.quantity}\r\n                                              onChange={handleChange}\r\n                                              onBlur={handleBlur}\r\n                                              InputProps={{\r\n                                                classes: {\r\n                                                  adornedEnd: classes.textareaAdornedEnd\r\n                                                },\r\n                                                endAdornment: <UnitSelect id='quantity_unit' option={UnitDropdown} name={`${FieldName}.quantity_unit`} value={mealData.quantity_unit} onChange={handleChange} onBlur={handleBlur} />\r\n                                              }}\r\n                                            />\r\n                                          </Grid>\r\n\r\n                                          <Grid item md={6} xs={6}>\r\n                                            <TextField\r\n                                              fullWidth\r\n                                              multiline\r\n                                              label='Protein ( g )'\r\n                                              name={`${FieldName}.protein`}\r\n                                              variant='outlined'\r\n                                              error={Boolean(FieldTouched?.protein && FieldErrors?.protein)}\r\n                                              helperText={FieldTouched?.protein && FieldErrors?.protein}\r\n                                              value={mealData.protein}\r\n                                              onChange={handleChange}\r\n                                              onBlur={handleBlur}\r\n                                            />\r\n                                          </Grid>\r\n\r\n                                          <Grid item md={6} xs={6}>\r\n                                            <TextField\r\n                                              fullWidth\r\n                                              multiline\r\n                                              label='Fat ( g )'\r\n                                              name={`${FieldName}.fat`}\r\n                                              variant='outlined'\r\n                                              error={Boolean(FieldTouched?.fat && FieldErrors?.fat)}\r\n                                              helperText={FieldTouched?.fat && FieldErrors?.fat}\r\n                                              value={mealData.fat}\r\n                                              onChange={handleChange}\r\n                                              onBlur={handleBlur}\r\n                                            />\r\n                                          </Grid>\r\n\r\n                                          <Grid item md={6} xs={6}>\r\n                                            <TextField\r\n                                              fullWidth\r\n                                              multiline\r\n                                              label='Carbs ( g )'\r\n                                              name={`${FieldName}.carbs`}\r\n                                              variant='outlined'\r\n                                              error={Boolean(FieldTouched?.carbs && FieldErrors?.carbs)}\r\n                                              helperText={FieldTouched?.carbs && FieldErrors?.carbs}\r\n                                              value={mealData.carbs}\r\n                                              onChange={handleChange}\r\n                                              onBlur={handleBlur}\r\n                                            />\r\n                                          </Grid>\r\n\r\n                                          <Grid item md={6} xs={6}>\r\n                                            <TextField\r\n                                              fullWidth\r\n                                              multiline\r\n                                              label='calories ( kcal )'\r\n                                              name={`${FieldName}.calories`}\r\n                                              variant='outlined'\r\n                                              error={Boolean(FieldTouched?.calories && FieldErrors?.calories)}\r\n                                              helperText={FieldTouched?.calories && FieldErrors?.calories}\r\n                                              value={mealData.calories}\r\n                                              onChange={handleChange}\r\n                                              onBlur={handleBlur}\r\n                                            />\r\n                                          </Grid>\r\n                                        </>\r\n                                      )\r\n                                    })}\r\n\r\n                                    <Grid item md={12} xs={12}>\r\n                                      <FormControl fullWidth\r\n                                        error={Boolean(getIn(touched, `${FieldMainName}.meals`) && getArrayError(getIn(errors, `${FieldMainName}.meals`)))}\r\n                                      >\r\n                                        <Button\r\n                                          fullWidth\r\n                                          className={classes.themeButton}\r\n                                          variant='contained'\r\n                                          color='default'\r\n                                          onClick={() => addMeals(values, i, setFieldValue, push)}\r\n                                          endIcon={<ControlPointIcon />}\r\n                                        >\r\n                                          Add Ingredients\r\n                                        </Button>\r\n\r\n                                        <FormHelperText>\r\n                                          {getIn(touched, `${FieldMainName}.meals`) && getArrayError(getIn(errors, `${FieldMainName}.meals`))}\r\n                                        </FormHelperText>\r\n                                      </FormControl>\r\n                                    </Grid>\r\n\r\n                                  </Grid>\r\n\r\n                                </TabPanel>\r\n                              </>\r\n                            )}\r\n                          </FieldArray>\r\n                        )\r\n                      }\r\n                      )}\r\n\r\n                    </Grid>\r\n                  </TabContext>\r\n                  {/* </Paper> */}\r\n\r\n                </Grid>\r\n              </DialogContent>\r\n\r\n              <DialogActions>\r\n                <Button onClick={onClose} variant='outlined' color='secondary'>\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  className={classes.themeButton}\r\n                  onClick={() => submitForm()}\r\n                  disabled={isSubmitting}\r\n                  variant='outlined'\r\n                >\r\n                  {isSubmitting ? (\r\n                    <CircularProgress size={24} style={{ color: 'white' }} />\r\n                  ) : (\r\n                    okBtnText\r\n                  )}\r\n                </Button>\r\n              </DialogActions>\r\n            </>\r\n          )}\r\n        </Formik>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ViewNutritionModel = (props: any) => {\r\n  const { isOpen, title, onClose, data } = props;\r\n  const classes = useStyles();\r\n  const [formValue, setFormValue] = useState(data);\r\n  const [tabValue, setTabValue] = React.useState<any>('0');\r\n  const [timings, setTimings] = React.useState('Early-Morning');\r\n\r\n  const handleTabChange = (event: React.ChangeEvent<{}>, newValue: string) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  const getDropValues = (dropValues: any, value: string) => {\r\n    return dropValues.find(({ id }: any) => id == value)?.name || ''\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFormValue(data);\r\n  }, [props]);\r\n\r\n  console.log(formValue)\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      fullWidth\r\n      maxWidth='md'\r\n      aria-labelledby='dialog-view-title'\r\n      open={isOpen}\r\n    >\r\n      <DialogTitle id='dialog-view-title' onClose={onClose}>\r\n        {title}\r\n      </DialogTitle>\r\n\r\n      <DialogContent dividers>\r\n\r\n        <Paper >\r\n          <Table>\r\n            <TableBody>\r\n              <TableRow >\r\n                <TableCell>Diet Type</TableCell>\r\n                <TableCell><strong>{getDropValues(DietTypeDrop, formValue?.diet_type)}</strong></TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Calories</TableCell>\r\n                <TableCell><strong>{formValue?.calories} Kcal</strong></TableCell>\r\n              </TableRow>\r\n\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n\r\n        <Card className={classes.nutCard}>\r\n          <CardHeader\r\n            classes={{\r\n              root: classes.nutCardRoot,\r\n              title: classes.nutCardTitle\r\n            }}\r\n            title={`${formValue?.calories} Kcal`}\r\n          />\r\n          <CardActions className={classes.nutCardAction}>\r\n            <NutritionData title='Protein' data={formValue?.protein} />\r\n            <NutritionData title='Fat' data={formValue?.fat} />\r\n            <NutritionData title='Carbs' data={formValue?.carbs} />\r\n          </CardActions>\r\n        </Card>\r\n\r\n        <Paper>\r\n          <TabContext value={tabValue || ''}>\r\n            <Grid item container xs={12} spacing={2}>\r\n              <Grid item xs={3}>\r\n                <TabList\r\n                  classes={{\r\n                    indicator: classes.tabIndicator\r\n                  }}\r\n                  onChange={handleTabChange}\r\n                  orientation=\"vertical\"\r\n                  variant=\"standard\"\r\n                >\r\n                  {formValue?.nutrition.map((nutData: any, i: number) => {\r\n                    const { meal_time } = nutData\r\n                    return (\r\n                      <Tab\r\n                        classes={{ root: classes.tabRoot, textColorInherit: classes.tabTextColorInherit }}\r\n                        label={meal_time}\r\n                        value={i.toString()} />\r\n                    )\r\n                  }\r\n                  )}\r\n\r\n                </TabList>\r\n              </Grid>\r\n\r\n              <Grid item xs={9}>\r\n                {formValue?.nutrition.map((nutData: any, i: number) => {\r\n                  const { meals = [] } = nutData\r\n                  return (\r\n                    <TabPanel key={i} className={classes.tabPanelRoot} value={i.toString()}>\r\n                      {meals.map((mealData: any, i: number) => {\r\n                        const { ingredients = [] } = mealData\r\n                        return (\r\n                          <>\r\n                            <Grid item xs={12} className={classes.mealTimeText}>\r\n                              <Typography variant='h5' align='center'>\r\n                                <strong>{`Ingredient #${i + 1}`}</strong>\r\n                              </Typography>\r\n                            </Grid>\r\n                            <Grid item container xs={12} spacing={2}>\r\n                              {ingredients.map((incData: any, i: number) => {\r\n                                const { benfits = [] } = incData\r\n                                return (\r\n\r\n                                  <Grid item xs={12} sm={12} md={6}>\r\n                                    <Card elevation={0} className={classes.cardRoot}>\r\n                                      <CardContent className={classes.cardContentRoot}>\r\n                                        <List className={classes.noPadding}>\r\n                                          <ListItem disableGutters className={classes.noPadding}>\r\n                                            <ListItemAvatar>\r\n                                              <Avatar className={classes.avatarRoot} src={incData.image?.url} />\r\n                                            </ListItemAvatar>\r\n                                            <ListItemText\r\n                                              classes={{\r\n                                                primary: classes.textPrimary,\r\n                                                secondary: classes.textSecondary\r\n                                              }}\r\n                                              primary={incData.name}\r\n                                              secondary={`${mealData.quantity}  ${mealData.quantity_unit}`}\r\n                                            />\r\n                                          </ListItem>\r\n                                        </List>\r\n\r\n                                        <CardActions disableSpacing className={classes.cardActionsRoot}>\r\n                                          <div>\r\n                                            <Typography variant=\"body2\" >\r\n                                              <ul className={classes.ulRoot}>\r\n                                                <li className={clsx(classes.liRoot, classes.colorProtein)}>Protein</li>\r\n                                                <Typography className={classes.ulTypo} variant=\"body1\" >{mealData.protein}</Typography>\r\n                                              </ul>\r\n                                            </Typography>\r\n\r\n                                          </div>\r\n\r\n                                          <div>\r\n                                            <Typography variant=\"body2\" >\r\n                                              <ul className={classes.ulRoot}>\r\n                                                <li className={clsx(classes.liRoot, classes.colorFat)}>Fat</li>\r\n                                                <Typography className={classes.ulTypo} variant=\"body1\" >{mealData.fat}</Typography>\r\n                                              </ul>\r\n                                            </Typography>\r\n\r\n                                          </div>\r\n\r\n                                          <div>\r\n                                            <Typography variant=\"body2\" >\r\n                                              <ul className={classes.ulRoot}>\r\n                                                <li className={clsx(classes.liRoot, classes.colorCarbs)}>Carbs</li>\r\n                                                <Typography className={classes.ulTypo} variant=\"body1\" >{mealData.carbs}</Typography>\r\n                                              </ul>\r\n                                            </Typography>\r\n\r\n                                          </div>\r\n                                        </CardActions>\r\n\r\n                                        <Divider className={classes.dividerRoot} />\r\n                                        <CardActions disableSpacing className={classes.cardActionsBenifitsRoot}>\r\n                                          <Grid item container xs={12} className={classes.benefitsText}>\r\n                                            <Typography variant='body2' color='inherit'>\r\n                                              <strong>Benefits:</strong>\r\n                                            </Typography>\r\n                                          </Grid>\r\n                                          <Grid item container xs={12}>\r\n\r\n                                            {benfits.map((benfData: any, i: number) =>\r\n                                              <Grid item xs={12} sm={6} >\r\n                                                <ul className={classes.ulRoot}>\r\n                                                  <li className={clsx(classes.liRoot, classes.benefitsList)}>{benfData}</li>\r\n\r\n                                                </ul>\r\n                                              </Grid>)}\r\n\r\n                                          </Grid>\r\n                                        </CardActions>\r\n\r\n                                      </CardContent>\r\n                                    </Card>\r\n                                  </Grid>\r\n                                )\r\n                              })}\r\n                            </Grid>\r\n                          </>\r\n                        )\r\n                      })}\r\n                    </TabPanel>\r\n                  )\r\n                })}\r\n              </Grid>\r\n\r\n            </Grid>\r\n\r\n          </TabContext>\r\n        </Paper>\r\n\r\n\r\n      </DialogContent >\r\n\r\n      <DialogActions>\r\n        <Button onClick={onClose} variant='outlined' color='secondary'>\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog >\r\n  );\r\n};\r\n\r\nconst CircularProgressWithLabel = (props: CircularProgressProps & { value: number }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box position=\"relative\" display=\"inline-flex\" color='inherit' alignItems=\"center\">\r\n      <CircularProgress\r\n        variant=\"determinate\"\r\n        className={classes.circleBottom}\r\n        size={50}\r\n        thickness={3}\r\n        {...props}\r\n        value={100}\r\n      />\r\n      <CircularProgress size={50} className={classes.circleTop} color='inherit' variant=\"determinate\" {...props} />\r\n      <Box\r\n        color='inherit'\r\n        top={0}\r\n        left={0}\r\n        bottom={0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Typography color='inherit' variant=\"caption\" component=\"div\" >{`${Math.round(\r\n          props.value,\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst NutritionData = (props: any) => {\r\n  const [data, setData] = useState(props.data)\r\n  const [title, setTitle] = useState(props.title)\r\n\r\n  useEffect(() => {\r\n    setData(props.data)\r\n    setTitle(props.title)\r\n  }, [props])\r\n  return (\r\n    <div >\r\n      <Typography color='inherit' align='center'>\r\n        <CircularProgressWithLabel value={data?.macros || 0} />\r\n      </Typography>\r\n      <Typography color='inherit' variant='h6' align='center'>\r\n        <strong>{title}</strong>\r\n      </Typography>\r\n      <Typography color='inherit' variant='body2' align='center'>\r\n        {`${data?.gram} g`}\r\n      </Typography>\r\n      <Typography color='inherit' variant='body2' align='center'>\r\n        {`${data?.calories} c`}\r\n      </Typography>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NutritionPlan;\r\n"]},"metadata":{},"sourceType":"module"}