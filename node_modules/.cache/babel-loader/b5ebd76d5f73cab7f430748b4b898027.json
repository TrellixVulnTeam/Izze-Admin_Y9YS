{"ast":null,"code":"import _objectSpread from\"D:/Pyramidion/WebApp/Izze-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:/Pyramidion/WebApp/Izze-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useLayoutEffect,useRef,useState}from'react';import{Button,Card,CircularProgress,Grid,Table,TableBody,TableCell,TableRow,TextField}from'@material-ui/core';import{Autocomplete}from'@material-ui/lab';import{makeStyles}from'@material-ui/styles';import{Formik}from'formik';import clsx from'clsx';import*as Yup from'yup';import getDropValues,{ExperienceDrop,InterestsDrop,NoOption,PreferredDrop}from'../../utils/PlanDropdowns';import useSnackbar from'../../hook/useSnackbar';import useService from'../../hook/useService';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{editCardRoot:{padding:theme.spacing(2)},marginLeft1:{marginLeft:theme.spacing(1)},themeButton:{color:theme.palette.white,backgroundColor:theme.palette.green.main,'&:hover':{backgroundColor:theme.palette.green.dark}},actionGrid:{display:'flex',alignItems:\"center\",justifyContent:\"flex-end\"},editButtonDiv:{display:'flex',alignItems:\"center\",justifyContent:\"flex-end\",paddingBottom:theme.spacing(2)}};});var AppWorkout=function AppWorkout(props){var classes=useStyles();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isEdit=_useState2[0],setIsEdit=_useState2[1];var data=props.data,onRefresh=props.onRefresh;var _useState3=useState(data),_useState4=_slicedToArray(_useState3,2),formData=_useState4[0],setFormData=_useState4[1];useEffect(function(){setFormData(props.data);},[props.data]);return/*#__PURE__*/_jsxs(_Fragment,{children:[!isEdit&&/*#__PURE__*/_jsx(\"div\",{className:classes.editButtonDiv,children:/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return setIsEdit(true);},className:classes.themeButton,variant:\"outlined\",children:\"Edit\"})}),!isEdit&&/*#__PURE__*/_jsx(ViewCard,{data:formData}),isEdit&&/*#__PURE__*/_jsx(EditCard,{data:formData,onClose:function onClose(){return setIsEdit(false);},onSuccess:function onSuccess(){return onRefresh();}})]});};var EditCard=function EditCard(props){var classes=useStyles();var onClose=props.onClose,onSuccess=props.onSuccess;var formikRef=useRef(null);var Snackbar=useSnackbar();var _useService=useService(),Post=_useService.Post;var formInitialValue={id:\"\",experience_level:\"\",preferred_workout:\"\",interests:\"\"};var _useState5=useState(formInitialValue),_useState6=_slicedToArray(_useState5,2),initialValue=_useState6[0],setInitialValue=_useState6[1];var onSubmit=function onSubmit(value,_ref){var setSubmitting=_ref.setSubmitting,resetForm=_ref.resetForm;setSubmitting(true);Post('app/updateWorkoutPlan',value).then(function(res){Snackbar.show(res.message,'success');setSubmitting(false);resetForm();onClose();onSuccess();}).catch(function(err){setSubmitting(false);if(err.message==='Request failed with status code 500'){Snackbar.show('No combination found','error');}else{Snackbar.show(err.message,'error');}});};useLayoutEffect(function(){var _props$data=props.data,_id=_props$data._id,experience_level=_props$data.experience_level,preferred_workout=_props$data.preferred_workout,interests=_props$data.interests;setInitialValue(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{id:_id,experience_level:experience_level,preferred_workout:preferred_workout,interests:interests});});},[props.data]);return/*#__PURE__*/_jsx(Card,{className:classes.editCardRoot,children:/*#__PURE__*/_jsx(Formik,{innerRef:formikRef,enableReinitialize:true,initialValues:initialValue,validationSchema:Yup.object().shape({experience_level:Yup.string().trim().required('Experience level is required'),preferred_workout:Yup.string().trim().required('Preferred workout is required'),interests:Yup.string().trim().required('Interests is required')}),onSubmit:onSubmit,children:function children(_ref2){var values=_ref2.values,errors=_ref2.errors,touched=_ref2.touched,handleChange=_ref2.handleChange,handleBlur=_ref2.handleBlur,setFieldValue=_ref2.setFieldValue,submitForm=_ref2.submitForm,isSubmitting=_ref2.isSubmitting;return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:/*#__PURE__*/_jsx(Autocomplete,{options:ExperienceDrop,value:ExperienceDrop.find(function(data){return data.id==values.experience_level;})||NoOption,getOptionLabel:function getOptionLabel(option){return option.name;},getOptionSelected:function getOptionSelected(option){return option.id==values.experience_level;},onChange:function onChange(event,newValue){setFieldValue('experience_level',(newValue===null||newValue===void 0?void 0:newValue.id)||'');},onBlur:handleBlur,renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{label:\"Experience Level\",variant:\"outlined\",error:Boolean(touched.experience_level&&errors.experience_level),helperText:touched.experience_level&&errors.experience_level,inputProps:_objectSpread({},params.inputProps)}));}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:/*#__PURE__*/_jsx(Autocomplete,{options:PreferredDrop,value:PreferredDrop.find(function(data){return data.id==values.preferred_workout;})||NoOption,getOptionLabel:function getOptionLabel(option){return option.name;},getOptionSelected:function getOptionSelected(option){return option.id==values.preferred_workout;},onChange:function onChange(event,newValue){setFieldValue('preferred_workout',(newValue===null||newValue===void 0?void 0:newValue.id)||'');},onBlur:handleBlur,renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{label:\"Preferred Workout\",variant:\"outlined\",error:Boolean(touched.preferred_workout&&errors.preferred_workout),helperText:touched.preferred_workout&&errors.preferred_workout,inputProps:_objectSpread({},params.inputProps)}));}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:/*#__PURE__*/_jsx(Autocomplete,{options:InterestsDrop,value:InterestsDrop.find(function(data){return data.id==values.interests;})||NoOption,getOptionLabel:function getOptionLabel(option){return option.name;},getOptionSelected:function getOptionSelected(option){return option.id==values.interests;},onChange:function onChange(event,newValue){setFieldValue('interests',(newValue===null||newValue===void 0?void 0:newValue.id)||'');},onBlur:handleBlur,renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{label:\"Interests\",variant:\"outlined\",error:Boolean(touched.interests&&errors.interests),helperText:touched.interests&&errors.interests,inputProps:_objectSpread({},params.inputProps)}));}})}),/*#__PURE__*/_jsxs(Grid,{className:classes.actionGrid,item:true,xs:12,children:[/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return onClose();},variant:\"outlined\",color:\"secondary\",children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{className:clsx(classes.themeButton,classes.marginLeft1),onClick:function onClick(){return submitForm();},disabled:isSubmitting,variant:\"outlined\",children:isSubmitting?/*#__PURE__*/_jsx(CircularProgress,{size:24,style:{color:'white'}}):'Update'})]})]})});}})});};var ViewCard=function ViewCard(props){var classes=useStyles();var data=props.data;var _useState7=useState({}),_useState8=_slicedToArray(_useState7,2),formData=_useState8[0],setFormData=_useState8[1];useEffect(function(){setFormData(data);},[props]);return/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(Table,{children:/*#__PURE__*/_jsxs(TableBody,{children:[/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Experience Level\"}),/*#__PURE__*/_jsx(TableCell,{children:getDropValues(ExperienceDrop,formData===null||formData===void 0?void 0:formData.experience_level)})]}),/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Preferred Workout\"}),/*#__PURE__*/_jsx(TableCell,{children:getDropValues(PreferredDrop,formData===null||formData===void 0?void 0:formData.preferred_workout)})]}),/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Interests\"}),/*#__PURE__*/_jsx(TableCell,{children:getDropValues(InterestsDrop,formData===null||formData===void 0?void 0:formData.interests)})]})]})})});};export default AppWorkout;","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/pages/AppUsers/AppWorkout.tsx"],"names":["React","useEffect","useLayoutEffect","useRef","useState","Button","Card","CircularProgress","Grid","Table","TableBody","TableCell","TableRow","TextField","Autocomplete","makeStyles","Formik","clsx","Yup","getDropValues","ExperienceDrop","InterestsDrop","NoOption","PreferredDrop","useSnackbar","useService","useStyles","theme","editCardRoot","padding","spacing","marginLeft1","marginLeft","themeButton","color","palette","white","backgroundColor","green","main","dark","actionGrid","display","alignItems","justifyContent","editButtonDiv","paddingBottom","AppWorkout","props","classes","isEdit","setIsEdit","data","onRefresh","formData","setFormData","EditCard","onClose","onSuccess","formikRef","Snackbar","Post","formInitialValue","id","experience_level","preferred_workout","interests","initialValue","setInitialValue","onSubmit","value","setSubmitting","resetForm","then","res","show","message","catch","err","_id","prevState","object","shape","string","trim","required","values","errors","touched","handleChange","handleBlur","setFieldValue","submitForm","isSubmitting","find","option","name","event","newValue","params","Boolean","inputProps","ViewCard"],"mappings":"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","sourcesContent":["import React, { memo, useEffect, useLayoutEffect, useRef, useState } from 'react';\r\nimport { Button, Card, CircularProgress, Grid, Table, TableBody, TableCell, TableRow, TextField } from '@material-ui/core';\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Formik } from 'formik';\r\nimport clsx from 'clsx';\r\nimport * as Yup from 'yup';\r\nimport getDropValues, { CurrentClimateDrop, DietTypeDrop, ExperienceDrop, FitnessGoalDrop, getSubSkinIrregular, InterestsDrop, LifeStyleDrop, NoOption, PreferredDrop, SkinIrregularDrop, SkinTextureDrop, SkinTypeDrop } from '../../utils/PlanDropdowns';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport useService from '../../hook/useService';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  editCardRoot: {\r\n    padding: theme.spacing(2)\r\n  },\r\n  marginLeft1: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  themeButton: {\r\n    color: theme.palette.white,\r\n\r\n    backgroundColor: theme.palette.green.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.dark,\r\n    },\r\n  },\r\n  actionGrid: {\r\n    display: 'flex',\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\"\r\n  },\r\n  editButtonDiv: {\r\n    display: 'flex',\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    paddingBottom: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst AppWorkout = (props: any) => {\r\n  const classes = useStyles();\r\n  const [isEdit, setIsEdit] = useState(false)\r\n  const { data, onRefresh } = props;\r\n  const [formData, setFormData] = useState<any>(data);\r\n  useEffect(() => {\r\n    setFormData(props.data)\r\n  }, [props.data]);\r\n\r\n  return (\r\n    <>\r\n      {!isEdit && <div className={classes.editButtonDiv}>\r\n        <Button onClick={() => setIsEdit(true)} className={classes.themeButton} variant='outlined'>\r\n          Edit\r\n        </Button>\r\n      </div>\r\n      }\r\n      {!isEdit && <ViewCard data={formData} />}\r\n      {isEdit && <EditCard data={formData} onClose={() => setIsEdit(false)} onSuccess={() => onRefresh()} />}\r\n    </>\r\n  );\r\n};\r\n\r\nconst EditCard = (props: any) => {\r\n  const classes = useStyles();\r\n  const { onClose, onSuccess } = props;\r\n  const formikRef = useRef<any>(null);\r\n  const Snackbar = useSnackbar();\r\n  const { Post } = useService();\r\n\r\n  const formInitialValue = {\r\n    id: \"\",\r\n    experience_level: \"\",\r\n    preferred_workout: \"\",\r\n    interests: \"\"\r\n  }\r\n\r\n  const [initialValue, setInitialValue] = useState<any>(formInitialValue);\r\n\r\n  const onSubmit = (value: any, { setSubmitting, resetForm }: any) => {\r\n    setSubmitting(true);\r\n\r\n    Post('app/updateWorkoutPlan', value)\r\n      .then((res: any) => {\r\n        Snackbar.show(res.message, 'success');\r\n        setSubmitting(false);\r\n        resetForm();\r\n        onClose();\r\n        onSuccess();\r\n      })\r\n      .catch((err: any) => {\r\n        setSubmitting(false);\r\n        if(err.message === 'Request failed with status code 500'){\r\n          Snackbar.show('No combination found', 'error');\r\n        }\r\n        else {\r\n          Snackbar.show(err.message, 'error');\r\n        }\r\n      });\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    const { _id, experience_level, preferred_workout, interests } = props.data\r\n    setInitialValue((prevState: any) => ({ ...prevState, id: _id, experience_level, preferred_workout, interests }))\r\n  }, [props.data]);\r\n\r\n  return (\r\n    <Card className={classes.editCardRoot}>\r\n      <Formik\r\n        innerRef={formikRef}\r\n        enableReinitialize\r\n        initialValues={initialValue}\r\n        validationSchema={\r\n          Yup.object().shape({\r\n            experience_level: Yup.string().trim().required('Experience level is required'),\r\n            preferred_workout: Yup.string().trim().required('Preferred workout is required'),\r\n            interests: Yup.string().trim().required('Interests is required'),\r\n          })\r\n        }\r\n        onSubmit={onSubmit}\r\n      >\r\n        {({ values, errors, touched, handleChange, handleBlur, setFieldValue, submitForm, isSubmitting }) => (\r\n          <>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={4}>\r\n\r\n                <Autocomplete\r\n                  options={ExperienceDrop}\r\n                  value={ExperienceDrop.find((data: any) => data.id == values.experience_level) || NoOption}\r\n                  getOptionLabel={(option: any) => option.name}\r\n                  getOptionSelected={(option) => option.id == values.experience_level}\r\n                  onChange={(event: any, newValue: any) => {\r\n                    setFieldValue('experience_level', newValue?.id || '');\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  renderInput={(params: any) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label='Experience Level'\r\n                      variant='outlined'\r\n                      error={Boolean(touched.experience_level && errors.experience_level)}\r\n                      helperText={touched.experience_level && errors.experience_level}\r\n                      inputProps={{\r\n                        ...params.inputProps,\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={4}>\r\n                <Autocomplete\r\n                  options={PreferredDrop}\r\n                  value={PreferredDrop.find((data: any) => data.id == values.preferred_workout) || NoOption}\r\n                  getOptionLabel={(option: any) => option.name}\r\n                  getOptionSelected={(option) => option.id == values.preferred_workout}\r\n                  onChange={(event: any, newValue: any) => {\r\n                    setFieldValue('preferred_workout', newValue?.id || '');\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  renderInput={(params: any) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label='Preferred Workout'\r\n                      variant='outlined'\r\n                      error={Boolean(touched.preferred_workout && errors.preferred_workout)}\r\n                      helperText={touched.preferred_workout && errors.preferred_workout}\r\n                      inputProps={{\r\n                        ...params.inputProps,\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={4}>\r\n                <Autocomplete\r\n                  options={InterestsDrop}\r\n                  value={InterestsDrop.find((data: any) => data.id == values.interests) || NoOption}\r\n                  getOptionLabel={(option: any) => option.name}\r\n                  getOptionSelected={(option) => option.id == values.interests}\r\n                  onChange={(event: any, newValue: any) => {\r\n                    setFieldValue('interests', newValue?.id || '');\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  renderInput={(params: any) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label='Interests'\r\n                      variant='outlined'\r\n                      error={Boolean(touched.interests && errors.interests)}\r\n                      helperText={touched.interests && errors.interests}\r\n                      inputProps={{\r\n                        ...params.inputProps,\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid className={classes.actionGrid} item xs={12}>\r\n                <Button onClick={() => onClose()} variant='outlined' color='secondary'>\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  className={clsx(classes.themeButton, classes.marginLeft1)}\r\n                  onClick={() => submitForm()}\r\n                  disabled={isSubmitting}\r\n                  variant='outlined'\r\n                >\r\n                  {isSubmitting ? (\r\n                    <CircularProgress size={24} style={{ color: 'white' }} />\r\n                  ) : 'Update'}\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst ViewCard = (props: any) => {\r\n  const classes = useStyles();\r\n\r\n  const { data } = props;\r\n  const [formData, setFormData] = useState<any>({});\r\n  useEffect(() => {\r\n    setFormData(data)\r\n  }, [props]);\r\n\r\n  return (\r\n    <Card>\r\n      <Table>\r\n        <TableBody>\r\n          <TableRow >\r\n            <TableCell>Experience Level</TableCell>\r\n            <TableCell>{getDropValues(ExperienceDrop, formData?.experience_level)}</TableCell>\r\n          </TableRow>\r\n          <TableRow >\r\n            <TableCell>Preferred Workout</TableCell>\r\n            <TableCell>{getDropValues(PreferredDrop, formData?.preferred_workout)}</TableCell>\r\n          </TableRow>\r\n          <TableRow >\r\n            <TableCell>Interests</TableCell>\r\n            <TableCell>{getDropValues(InterestsDrop, formData?.interests)}</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AppWorkout;\r\n"]},"metadata":{},"sourceType":"module"}