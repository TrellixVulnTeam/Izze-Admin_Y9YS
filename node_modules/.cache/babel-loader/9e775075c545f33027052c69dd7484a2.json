{"ast":null,"code":"import { Extension } from '@tiptap/core';\nimport { undo as _undo, redo as _redo, history } from 'prosemirror-history';\nvar History = Extension.create({\n  name: 'history',\n  defaultOptions: {\n    depth: 100,\n    newGroupDelay: 500\n  },\n  addCommands: function addCommands() {\n    return {\n      undo: function undo() {\n        return function (_ref) {\n          var state = _ref.state,\n              dispatch = _ref.dispatch;\n          return _undo(state, dispatch);\n        };\n      },\n      redo: function redo() {\n        return function (_ref2) {\n          var state = _ref2.state,\n              dispatch = _ref2.dispatch;\n          return _redo(state, dispatch);\n        };\n      }\n    };\n  },\n  addProseMirrorPlugins: function addProseMirrorPlugins() {\n    return [history(this.options)];\n  },\n  addKeyboardShortcuts: function addKeyboardShortcuts() {\n    var _this = this;\n\n    return {\n      'Mod-z': function ModZ() {\n        return _this.editor.commands.undo();\n      },\n      'Mod-y': function ModY() {\n        return _this.editor.commands.redo();\n      },\n      'Shift-Mod-z': function ShiftModZ() {\n        return _this.editor.commands.redo();\n      }\n    };\n  }\n});\nexport default History;\nexport { History };","map":{"version":3,"sources":["../src/history.ts"],"names":[],"mappings":";;IAuBa,OAAO,GAAG,SAAS,CAAC,MAAV,CAAiC;AACtD,EAAA,IAAI,EAAE,SADgD;AAGtD,EAAA,cAAc,EAAE;AACd,IAAA,KAAK,EAAE,GADO;AAEd,IAAA,aAAa,EAAE;AAFD,GAHsC;AAQtD,EAAA,WARsD,yBAQ3C;AACT,WAAO;AACL,MAAA,IAAI,EAAE;AAAA,eAAM,gBAAoB;AAAA,cAAjB,KAAiB,QAAjB,KAAiB;AAAA,cAAV,QAAU,QAAV,QAAU;AAC9B,iBAAO,KAAI,CAAC,KAAD,EAAQ,QAAR,CAAX;AACD,SAFK;AAAA,OADD;AAIL,MAAA,IAAI,EAAE;AAAA,eAAM,iBAAoB;AAAA,cAAjB,KAAiB,SAAjB,KAAiB;AAAA,cAAV,QAAU,SAAV,QAAU;AAC9B,iBAAO,KAAI,CAAC,KAAD,EAAQ,QAAR,CAAX;AACD,SAFK;AAAA;AAJD,KAAP;AAQD,GAjBqD;AAmBtD,EAAA,qBAnBsD,mCAmBjC;AACnB,WAAO,CACL,OAAO,CAAC,KAAK,OAAN,CADF,CAAP;AAGD,GAvBqD;AAyBtD,EAAA,oBAzBsD,kCAyBlC;AAAA;;AAClB,WAAO;AACL,eAAS;AAAA,eAAM,KAAI,CAAC,MAAL,CAAY,QAAZ,CAAqB,IAArB,EAAN;AAAA,OADJ;AAEL,eAAS;AAAA,eAAM,KAAI,CAAC,MAAL,CAAY,QAAZ,CAAqB,IAArB,EAAN;AAAA,OAFJ;AAGL,qBAAe;AAAA,eAAM,KAAI,CAAC,MAAL,CAAY,QAAZ,CAAqB,IAArB,EAAN;AAAA;AAHV,KAAP;AAKD;AA/BqD,CAAjC,C","sourcesContent":["import { Command, Extension } from '@tiptap/core'\nimport { history, undo, redo } from 'prosemirror-history'\n\nexport interface HistoryOptions {\n  depth: number,\n  newGroupDelay: number,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands {\n    history: {\n      /**\n       * Undo recent changes\n       */\n      undo: () => Command,\n      /**\n       * Reapply reverted changes\n       */\n      redo: () => Command,\n    }\n  }\n}\n\nexport const History = Extension.create<HistoryOptions>({\n  name: 'history',\n\n  defaultOptions: {\n    depth: 100,\n    newGroupDelay: 500,\n  },\n\n  addCommands() {\n    return {\n      undo: () => ({ state, dispatch }) => {\n        return undo(state, dispatch)\n      },\n      redo: () => ({ state, dispatch }) => {\n        return redo(state, dispatch)\n      },\n    }\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      history(this.options),\n    ]\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-z': () => this.editor.commands.undo(),\n      'Mod-y': () => this.editor.commands.redo(),\n      'Shift-Mod-z': () => this.editor.commands.redo(),\n    }\n  },\n})\n"]},"metadata":{},"sourceType":"module"}