{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pyramidion\\\\WebApp\\\\Izze-Admin\\\\src\\\\pages\\\\MealRecipe\\\\MealRecipe.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { Avatar, Button, CircularProgress, Dialog, DialogActions, DialogContent, Grid, makeStyles, Paper, FormControl, FormHelperText, TextField, Typography } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: theme.breakpoints.values.lg,\n    maxWidth: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(3)\n  },\n  themeButton: {\n    color: theme.palette.white,\n    backgroundColor: theme.palette.green.main,\n    '&:hover': {\n      backgroundColor: theme.palette.green.dark\n    }\n  },\n  workouttermsavatar: {\n    width: '100%',\n    height: '100%'\n  },\n  deleteButton: {\n    width: '100%',\n    height: '50px'\n  }\n}));\n\nfunction MealRecipe() {\n  _s();\n\n  const classes = useStyles();\n  const [addEditDialog, setAddEditDialog] = React.useState({\n    isOpen: false,\n    title: '',\n    okBtnText: '',\n    isEdit: false,\n    data: {}\n  });\n\n  const openAddDialog = () => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: true,\n      title: 'Add Meal Recipe',\n      isEdit: false,\n      okBtnText: 'Save'\n    }));\n  };\n\n  const closeAddEditDialog = () => {\n    setAddEditDialog(prevState => ({ ...prevState,\n      isOpen: false\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      alignItems: \"flex-end\",\n      container: true,\n      justify: \"space-between\",\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h3\",\n          children: \"Meal Recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => openAddDialog(),\n          className: classes.themeButton,\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 28\n          }, this),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 0,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            size: \"small\",\n            placeholder: \"Name\",\n            variant: \"outlined\",\n            name: \"state\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AddEditModel, { ...addEditDialog,\n      onClose: closeAddEditDialog // onSuccess={onSuccessAction}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MealRecipe, \"s5o9kyFm5KAS0TTYVhpPTPgOC/g=\", false, function () {\n  return [useStyles];\n});\n\n_c = MealRecipe;\nconst initialFormValues = {\n  name: '',\n  image: {\n    file: null,\n    prevImage: '',\n    isNew: null\n  },\n  nutrition: '',\n  description: '',\n  protein: '',\n  fat: '',\n  carbs: '',\n  terms: [{\n    name: '',\n    image: {\n      file: null,\n      prevImage: '',\n      isNew: null\n    },\n    term: ''\n  }],\n  ingredients: [{\n    id: ''\n  }],\n  preparation_time: '',\n  preparation_description: ''\n};\nexport const AddEditModel = props => {\n  _s2();\n\n  const {\n    isEdit,\n    isOpen,\n    okBtnText = 'OK',\n    onClose,\n    data,\n    title,\n    onSuccess\n  } = props;\n  const classes = useStyles();\n  const [initialValues, setInitialValues] = React.useState({ ...initialFormValues\n  });\n  const formikRef = React.useRef(null);\n  const imageRef = React.useRef(null);\n  const avatharimgRef = React.useRef(null);\n\n  const onSubmit = () => {\n    alert('done');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isOpen,\n      disableBackdropClick: true,\n      disableEscapeKeyDown: true,\n      fullWidth: true,\n      maxWidth: \"md\",\n      \"aria-labelledby\": \"dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"dialog-title\",\n        onClose: onClose,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        innerRef: formikRef,\n        enableReinitialize: true,\n        initialValues: initialFormValues,\n        onSubmit: onSubmit,\n        validationSchema: Yup.object().shape({\n          name: Yup.string().trim().required('Name is required'),\n          nutrition: Yup.string().trim().required('Nutrition is required'),\n          description: Yup.string().trim().required('Description is required'),\n          protein: Yup.string().trim().required('Protein is required'),\n          fat: Yup.string().trim().required('Fat is required'),\n          carbs: Yup.string().trim().required('Carbs is required'),\n          terms: Yup.array().of(Yup.object().shape({\n            name: Yup.string().trim().required('Workout term name is Required'),\n            image: Yup.object({\n              file: Yup.mixed().required('required')\n            }),\n            term: Yup.string().trim().required('Workout description is Required')\n          }))\n        }),\n        children: ({\n          values,\n          errors,\n          touched,\n          handleBlur,\n          handleChange,\n          submitForm,\n          isSubmitting\n        }) => {\n          var _values$terms, _values$terms2;\n\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n              dividers: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Name\",\n                    name: \"name\",\n                    variant: \"outlined\",\n                    value: values.name,\n                    onChange: handleChange,\n                    onBlur: handleBlur\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Nutrition\",\n                    name: \"nutrition\",\n                    variant: \"outlined\",\n                    value: values.nutrition,\n                    onChange: handleChange,\n                    onBlur: handleBlur\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    multiline: true,\n                    label: \"Description\",\n                    name: \"description\",\n                    variant: \"outlined\",\n                    value: values.description,\n                    onChange: handleChange,\n                    onBlur: handleBlur\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Protein\",\n                    name: \"protein\",\n                    variant: \"outlined\",\n                    value: values.protein,\n                    onChange: handleChange,\n                    onBlur: handleBlur\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Fat\",\n                    name: \"fat\",\n                    variant: \"outlined\",\n                    value: values.fat,\n                    onChange: handleChange,\n                    onBlur: handleBlur\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Carbs\",\n                    name: \"carbs\",\n                    variant: \"outlined\",\n                    value: values.carbs,\n                    onChange: handleChange,\n                    onBlur: handleBlur\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 12,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    fullWidth: true,\n                    className: classes.themeButton,\n                    variant: \"contained\",\n                    color: \"default\" // onClick={() => addIngredients(values, setFieldValue)}\n                    ,\n                    endIcon: /*#__PURE__*/_jsxDEV(ControlPointIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 294,\n                      columnNumber: 42\n                    }, this),\n                    children: \"Add Terms\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 25\n                }, this), values === null || values === void 0 ? void 0 : (_values$terms = values.terms) === null || _values$terms === void 0 ? void 0 : _values$terms.map((items, index) => {\n                  var _items$image, _touched$terms$index, _touched$terms$index$, _errors$terms$index, _errors$terms$index$i, _touched$terms$index2, _touched$terms$index3, _errors$terms$index2, _errors$terms$index2$, _touched$terms$index4, _errors$terms$index3, _touched$terms$index5, _errors$terms$index4, _touched$terms$index6, _errors$terms$index5, _touched$terms$index7, _errors$terms$index6;\n\n                  return /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    container: true,\n                    md: 12,\n                    xs: 12,\n                    direction: \"row\",\n                    spacing: 2,\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      md: 1,\n                      xs: 12,\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        ref: avatharimgRef,\n                        type: \"file\",\n                        accept: \".jpg,.png,jpeg\" // onChange={(e) => onAvatarImageChange(e, index)}\n                        ,\n                        onBlur: handleBlur,\n                        hidden: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 311,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n                        className: classes.workouttermsavatar,\n                        variant: \"square\",\n                        onClick: () => avatharimgRef.current.click(),\n                        src: items === null || items === void 0 ? void 0 : (_items$image = items.image) === null || _items$image === void 0 ? void 0 : _items$image.prevImage\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 319,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                        error: Boolean((touched === null || touched === void 0 ? void 0 : touched.terms) && (touched === null || touched === void 0 ? void 0 : (_touched$terms$index = touched.terms[index]) === null || _touched$terms$index === void 0 ? void 0 : (_touched$terms$index$ = _touched$terms$index.image) === null || _touched$terms$index$ === void 0 ? void 0 : _touched$terms$index$.file) && (errors === null || errors === void 0 ? void 0 : errors.terms) && (errors === null || errors === void 0 ? void 0 : (_errors$terms$index = errors.terms[index]) === null || _errors$terms$index === void 0 ? void 0 : (_errors$terms$index$i = _errors$terms$index.image) === null || _errors$terms$index$i === void 0 ? void 0 : _errors$terms$index$i.file)),\n                        children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n                          children: (touched === null || touched === void 0 ? void 0 : touched.terms) && (touched === null || touched === void 0 ? void 0 : (_touched$terms$index2 = touched.terms[index]) === null || _touched$terms$index2 === void 0 ? void 0 : (_touched$terms$index3 = _touched$terms$index2.image) === null || _touched$terms$index3 === void 0 ? void 0 : _touched$terms$index3.file) && (errors === null || errors === void 0 ? void 0 : errors.terms) && (errors === null || errors === void 0 ? void 0 : (_errors$terms$index2 = errors.terms[index]) === null || _errors$terms$index2 === void 0 ? void 0 : (_errors$terms$index2$ = _errors$terms$index2.image) === null || _errors$terms$index2$ === void 0 ? void 0 : _errors$terms$index2$.file)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 333,\n                          columnNumber: 37\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 325,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 310,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      md: 5,\n                      xs: 12,\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        fullWidth: true,\n                        multiline: true,\n                        label: \"Workout terms name\",\n                        name: `terms[${index}].name`,\n                        variant: \"outlined\",\n                        error: Boolean((touched === null || touched === void 0 ? void 0 : touched.terms) && (touched === null || touched === void 0 ? void 0 : (_touched$terms$index4 = touched.terms[index]) === null || _touched$terms$index4 === void 0 ? void 0 : _touched$terms$index4.name) && (errors === null || errors === void 0 ? void 0 : errors.terms) && (errors === null || errors === void 0 ? void 0 : (_errors$terms$index3 = errors.terms[index]) === null || _errors$terms$index3 === void 0 ? void 0 : _errors$terms$index3.name)),\n                        helperText: (touched === null || touched === void 0 ? void 0 : touched.terms) && (touched === null || touched === void 0 ? void 0 : (_touched$terms$index5 = touched.terms[index]) === null || _touched$terms$index5 === void 0 ? void 0 : _touched$terms$index5.name) && (errors === null || errors === void 0 ? void 0 : errors.terms) && (errors === null || errors === void 0 ? void 0 : (_errors$terms$index4 = errors.terms[index]) === null || _errors$terms$index4 === void 0 ? void 0 : _errors$terms$index4.name),\n                        value: items.name,\n                        onChange: handleChange,\n                        onBlur: handleBlur\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 343,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 342,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      md: 5,\n                      xs: 8,\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        fullWidth: true,\n                        multiline: true,\n                        label: \"Workout terms description\",\n                        name: `terms[${index}].description`,\n                        variant: \"outlined\",\n                        error: Boolean((touched === null || touched === void 0 ? void 0 : touched.terms) && (touched === null || touched === void 0 ? void 0 : (_touched$terms$index6 = touched.terms[index]) === null || _touched$terms$index6 === void 0 ? void 0 : _touched$terms$index6.term) && (errors === null || errors === void 0 ? void 0 : errors.terms) && (errors === null || errors === void 0 ? void 0 : (_errors$terms$index5 = errors.terms[index]) === null || _errors$terms$index5 === void 0 ? void 0 : _errors$terms$index5.description)),\n                        helperText: (touched === null || touched === void 0 ? void 0 : touched.terms) && (touched === null || touched === void 0 ? void 0 : (_touched$terms$index7 = touched.terms[index]) === null || _touched$terms$index7 === void 0 ? void 0 : _touched$terms$index7.term) && (errors === null || errors === void 0 ? void 0 : errors.terms) && (errors === null || errors === void 0 ? void 0 : (_errors$terms$index6 = errors.terms[index]) === null || _errors$terms$index6 === void 0 ? void 0 : _errors$terms$index6.description),\n                        value: items.term,\n                        onChange: handleChange,\n                        onBlur: handleBlur\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 367,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 366,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      md: 1,\n                      xs: 4,\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        fullWidth: true,\n                        className: classes.deleteButton,\n                        variant: \"contained\",\n                        color: \"secondary\" // onClick={() =>\n                        //   removeIngredients(values, index, setFieldValue)\n                        // }\n                        ,\n                        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 401,\n                          columnNumber: 37\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 392,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 391,\n                      columnNumber: 33\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 301,\n                    columnNumber: 33\n                  }, this);\n                }), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 12,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    fullWidth: true,\n                    className: classes.themeButton,\n                    variant: \"contained\",\n                    color: \"default\" // onClick={() => addIngredients(values, setFieldValue)}\n                    ,\n                    endIcon: /*#__PURE__*/_jsxDEV(ControlPointIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 414,\n                      columnNumber: 42\n                    }, this),\n                    children: \"Add Terms\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 408,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 25\n                }, this), values === null || values === void 0 ? void 0 : (_values$terms2 = values.terms) === null || _values$terms2 === void 0 ? void 0 : _values$terms2.map((items, index) => {\n                  var _items$image2, _touched$terms$index8, _touched$terms$index9, _errors$terms$index7, _errors$terms$index7$, _touched$terms$index10, _touched$terms$index11, _errors$terms$index8, _errors$terms$index8$, _touched$terms$index12, _errors$terms$index9, _touched$terms$index13, _errors$terms$index10, _touched$terms$index14, _errors$terms$index11, _touched$terms$index15, _errors$terms$index12;\n\n                  return /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    container: true,\n                    md: 12,\n                    xs: 12,\n                    direction: \"row\",\n                    spacing: 2,\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      md: 1,\n                      xs: 12,\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        ref: avatharimgRef,\n                        type: \"file\",\n                        accept: \".jpg,.png,jpeg\" // onChange={(e) => onAvatarImageChange(e, index)}\n                        ,\n                        onBlur: handleBlur,\n                        hidden: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 431,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n                        className: classes.workouttermsavatar,\n                        variant: \"square\",\n                        onClick: () => avatharimgRef.current.click(),\n                        src: items === null || items === void 0 ? void 0 : (_items$image2 = items.image) === null || _items$image2 === void 0 ? void 0 : _items$image2.prevImage\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 439,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                        error: Boolean((touched === null || touched === void 0 ? void 0 : touched.terms) && (touched === null || touched === void 0 ? void 0 : (_touched$terms$index8 = touched.terms[index]) === null || _touched$terms$index8 === void 0 ? void 0 : (_touched$terms$index9 = _touched$terms$index8.image) === null || _touched$terms$index9 === void 0 ? void 0 : _touched$terms$index9.file) && (errors === null || errors === void 0 ? void 0 : errors.terms) && (errors === null || errors === void 0 ? void 0 : (_errors$terms$index7 = errors.terms[index]) === null || _errors$terms$index7 === void 0 ? void 0 : (_errors$terms$index7$ = _errors$terms$index7.image) === null || _errors$terms$index7$ === void 0 ? void 0 : _errors$terms$index7$.file)),\n                        children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n                          children: (touched === null || touched === void 0 ? void 0 : touched.terms) && (touched === null || touched === void 0 ? void 0 : (_touched$terms$index10 = touched.terms[index]) === null || _touched$terms$index10 === void 0 ? void 0 : (_touched$terms$index11 = _touched$terms$index10.image) === null || _touched$terms$index11 === void 0 ? void 0 : _touched$terms$index11.file) && (errors === null || errors === void 0 ? void 0 : errors.terms) && (errors === null || errors === void 0 ? void 0 : (_errors$terms$index8 = errors.terms[index]) === null || _errors$terms$index8 === void 0 ? void 0 : (_errors$terms$index8$ = _errors$terms$index8.image) === null || _errors$terms$index8$ === void 0 ? void 0 : _errors$terms$index8$.file)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 453,\n                          columnNumber: 37\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 445,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 430,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      md: 5,\n                      xs: 12,\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        fullWidth: true,\n                        multiline: true,\n                        label: \"Workout terms name\",\n                        name: `terms[${index}].name`,\n                        variant: \"outlined\",\n                        error: Boolean((touched === null || touched === void 0 ? void 0 : touched.terms) && (touched === null || touched === void 0 ? void 0 : (_touched$terms$index12 = touched.terms[index]) === null || _touched$terms$index12 === void 0 ? void 0 : _touched$terms$index12.name) && (errors === null || errors === void 0 ? void 0 : errors.terms) && (errors === null || errors === void 0 ? void 0 : (_errors$terms$index9 = errors.terms[index]) === null || _errors$terms$index9 === void 0 ? void 0 : _errors$terms$index9.name)),\n                        helperText: (touched === null || touched === void 0 ? void 0 : touched.terms) && (touched === null || touched === void 0 ? void 0 : (_touched$terms$index13 = touched.terms[index]) === null || _touched$terms$index13 === void 0 ? void 0 : _touched$terms$index13.name) && (errors === null || errors === void 0 ? void 0 : errors.terms) && (errors === null || errors === void 0 ? void 0 : (_errors$terms$index10 = errors.terms[index]) === null || _errors$terms$index10 === void 0 ? void 0 : _errors$terms$index10.name),\n                        value: items.name,\n                        onChange: handleChange,\n                        onBlur: handleBlur\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 463,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 462,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      md: 5,\n                      xs: 8,\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        fullWidth: true,\n                        multiline: true,\n                        label: \"Workout terms description\",\n                        name: `terms[${index}].description`,\n                        variant: \"outlined\",\n                        error: Boolean((touched === null || touched === void 0 ? void 0 : touched.terms) && (touched === null || touched === void 0 ? void 0 : (_touched$terms$index14 = touched.terms[index]) === null || _touched$terms$index14 === void 0 ? void 0 : _touched$terms$index14.term) && (errors === null || errors === void 0 ? void 0 : errors.terms) && (errors === null || errors === void 0 ? void 0 : (_errors$terms$index11 = errors.terms[index]) === null || _errors$terms$index11 === void 0 ? void 0 : _errors$terms$index11.description)),\n                        helperText: (touched === null || touched === void 0 ? void 0 : touched.terms) && (touched === null || touched === void 0 ? void 0 : (_touched$terms$index15 = touched.terms[index]) === null || _touched$terms$index15 === void 0 ? void 0 : _touched$terms$index15.term) && (errors === null || errors === void 0 ? void 0 : errors.terms) && (errors === null || errors === void 0 ? void 0 : (_errors$terms$index12 = errors.terms[index]) === null || _errors$terms$index12 === void 0 ? void 0 : _errors$terms$index12.description),\n                        value: items.term,\n                        onChange: handleChange,\n                        onBlur: handleBlur\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 487,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 486,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      md: 1,\n                      xs: 4,\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        fullWidth: true,\n                        className: classes.deleteButton,\n                        variant: \"contained\",\n                        color: \"secondary\" // onClick={() =>\n                        //   removeIngredients(values, index, setFieldValue)\n                        // }\n                        ,\n                        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 521,\n                          columnNumber: 37\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 512,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 511,\n                      columnNumber: 33\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 421,\n                    columnNumber: 33\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: onClose,\n                variant: \"outlined\",\n                color: \"secondary\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: classes.themeButton,\n                onClick: () => submitForm(),\n                disabled: isSubmitting,\n                variant: \"outlined\",\n                children: isSubmitting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  size: 24,\n                  style: {\n                    color: 'white'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 541,\n                  columnNumber: 25\n                }, this) : okBtnText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 534,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s2(AddEditModel, \"n9s9e4rRsxVb1k6+X/03j+R3fCE=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = AddEditModel;\nexport default MealRecipe;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MealRecipe\");\n$RefreshReg$(_c2, \"AddEditModel\");","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/pages/MealRecipe/MealRecipe.tsx"],"names":["React","Avatar","Button","CircularProgress","Dialog","DialogActions","DialogContent","Grid","makeStyles","Paper","FormControl","FormHelperText","TextField","Typography","AddIcon","DeleteIcon","Formik","Yup","DialogTitle","ControlPointIcon","useStyles","theme","root","width","breakpoints","values","lg","maxWidth","margin","padding","spacing","themeButton","color","palette","white","backgroundColor","green","main","dark","workouttermsavatar","height","deleteButton","MealRecipe","classes","addEditDialog","setAddEditDialog","useState","isOpen","title","okBtnText","isEdit","data","openAddDialog","prevState","closeAddEditDialog","initialFormValues","name","image","file","prevImage","isNew","nutrition","description","protein","fat","carbs","terms","term","ingredients","id","preparation_time","preparation_description","AddEditModel","props","onClose","onSuccess","initialValues","setInitialValues","formikRef","useRef","imageRef","avatharimgRef","onSubmit","alert","object","shape","string","trim","required","array","of","mixed","errors","touched","handleBlur","handleChange","submitForm","isSubmitting","map","items","index","current","click","Boolean"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Avatar, Button, Card, CardActions, CardContent, CircularProgress, Dialog, DialogActions, DialogContent, Grid, IconButton, makeStyles, Paper, Tab,  Table, TableBody, FormControl, FormHelperText, TableCell, TableContainer, TableHead, TableRow, TextField, Tooltip,  Divider, Typography, Tabs} from '@material-ui/core';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Pagination, TabContext, TabList, TabPanel } from '@material-ui/lab';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { imageUpload } from '../../utils/FirebaseUtils';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport DialogTitle from '../../components/DialogTitlle/DialogTitle';\r\nimport { TableLoader, TableNoData } from '../../components/Loader/Loader';\r\nimport Page from '../../components/Page/Page';\r\nimport useConfModel from '../../hook/useConfModel';\r\nimport useService from '../../hook/useService';\r\nimport useSnackbar from '../../hook/useSnackbar';\r\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\n\r\n\r\nconst useStyles = makeStyles((theme: any)=>({\r\n    root: {\r\n        width: theme.breakpoints.values.lg,\r\n        maxWidth: '100%',\r\n        margin: '0 auto',\r\n        padding: theme.spacing(3),\r\n    },\r\n    themeButton: {\r\n        color: theme.palette.white,\r\n        backgroundColor: theme.palette.green.main,\r\n        '&:hover': {\r\n          backgroundColor: theme.palette.green.dark,\r\n        },\r\n    },\r\n    workouttermsavatar: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    deleteButton: {\r\n        width: '100%',\r\n        height: '50px',\r\n    },\r\n}))\r\nfunction MealRecipe() {\r\n  const classes = useStyles();\r\n  const [addEditDialog, setAddEditDialog] = React.useState({\r\n    isOpen: false,\r\n    title: '',\r\n    okBtnText: '',\r\n    isEdit: false,\r\n    data: {},\r\n  });\r\n\r\n  const openAddDialog = () => {\r\n    setAddEditDialog((prevState: any) => ({\r\n      ...prevState,\r\n      isOpen: true,\r\n      title: 'Add Meal Recipe',\r\n      isEdit: false,\r\n      okBtnText: 'Save',\r\n    }));\r\n  };\r\n\r\n  const closeAddEditDialog = () =>{\r\n    setAddEditDialog((prevState: any) => ({ ...prevState, isOpen: false }));\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <Grid alignItems='flex-end' container justify='space-between' spacing={3}>\r\n            <Grid item>\r\n            <Typography component='h1' variant='h3'>\r\n                Meal Recipe\r\n            </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n            <Button\r\n                variant='contained'\r\n                onClick={() => openAddDialog()}\r\n                className={classes.themeButton}\r\n                startIcon={<AddIcon />}\r\n            >\r\n                Add\r\n            </Button>\r\n            </Grid>\r\n        </Grid>\r\n\r\n      {/* =============Search======== */}\r\n        <Grid container spacing={3}>\r\n            <Grid item>\r\n                <Paper elevation={0}>\r\n                    <TextField\r\n                    fullWidth\r\n                    size='small'\r\n                    placeholder='Name'\r\n                    variant='outlined'\r\n                    name='state'\r\n                    />\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n\r\n        <AddEditModel\r\n            {...addEditDialog}\r\n            onClose={closeAddEditDialog}\r\n            // onSuccess={onSuccessAction}\r\n         />\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\ninterface MealTerms {\r\n    name : string,\r\n    image : {file:string | null, prevImage : string, isNew: boolean | null},\r\n    term : string\r\n}\r\n\r\ninterface Ingredients {\r\n    id : string\r\n}\r\n\r\ninterface MealPlan {\r\n    name : string,\r\n    image : {file:string | null, prevImage : string, isNew: boolean | null},\r\n    nutrition : string,\r\n    description : string,\r\n    protein : string,\r\n    fat : string,\r\n    carbs : string,\r\n    terms : MealTerms[],\r\n    ingredients : Ingredients[],\r\n    preparation_time : string,\r\n    preparation_description : string\r\n\r\n}\r\n\r\nconst initialFormValues: MealPlan = {\r\n    name : '',\r\n    image : { file:null, prevImage : '', isNew : null },\r\n    nutrition : '',\r\n    description : '',\r\n    protein : '',\r\n    fat : '',\r\n    carbs : '',\r\n    terms : [\r\n        {\r\n            name : '',\r\n            image : { file:null , prevImage : '', isNew: null},\r\n            term : ''\r\n        }\r\n    ],\r\n    ingredients : [{ id: '' }],\r\n    preparation_time : '',\r\n    preparation_description : ''\r\n}\r\n\r\nexport const AddEditModel = (props: any) =>{\r\n    const { isEdit, isOpen, okBtnText = 'OK', onClose, data, title, onSuccess } = props;\r\n    const classes = useStyles()\r\n    const [initialValues, setInitialValues] = React.useState({...initialFormValues});\r\n    const formikRef = React.useRef<any>(null);\r\n    const imageRef = React.useRef<any>(null);\r\n    const avatharimgRef = React.useRef<any>(null);\r\n\r\n    const onSubmit = () =>{\r\n        alert('done')\r\n    }\r\n    return (\r\n        <>\r\n        <Dialog\r\n            open={isOpen}\r\n            disableBackdropClick\r\n            disableEscapeKeyDown\r\n            fullWidth\r\n            maxWidth='md'\r\n            aria-labelledby='dialog-title'\r\n        >\r\n            <DialogTitle id='dialog-title' onClose={onClose}>\r\n             {title}\r\n            </DialogTitle>\r\n            <Formik\r\n                innerRef={formikRef}\r\n                enableReinitialize\r\n                initialValues={initialFormValues}\r\n                onSubmit={onSubmit}\r\n                validationSchema={Yup.object().shape({\r\n                    name: Yup.string().trim().required('Name is required'),\r\n                    nutrition: Yup.string().trim().required('Nutrition is required'),\r\n                    description: Yup.string().trim().required('Description is required'),\r\n                    protein: Yup.string().trim().required('Protein is required'),\r\n                    fat: Yup.string().trim().required('Fat is required'),\r\n                    carbs: Yup.string().trim().required('Carbs is required'),\r\n                    terms : Yup.array().of(\r\n                        Yup.object().shape({\r\n                            name: Yup.string()\r\n                              .trim()\r\n                              .required('Workout term name is Required'),\r\n                            image: Yup.object({\r\n                              file: Yup.mixed().required('required'),\r\n                            }),\r\n                            term: Yup.string()\r\n                              .trim()\r\n                              .required('Workout description is Required'),\r\n                        })\r\n                    )\r\n\r\n                })}\r\n            >\r\n                {({values, errors, touched, handleBlur,handleChange, submitForm, isSubmitting,})=>(\r\n                <>\r\n                <DialogContent dividers>\r\n                    <Grid container spacing = {2}>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label='Name'\r\n                                name='name'\r\n                                variant='outlined'\r\n                                value={values.name}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                            />\r\n                        </Grid>                        \r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label='Nutrition'\r\n                                name='nutrition'\r\n                                variant='outlined'\r\n                                value={values.nutrition}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                            />\r\n                        </Grid>                        \r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                multiline\r\n                                label='Description'\r\n                                name='description'\r\n                                variant='outlined'\r\n                                value={values.description}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                            />\r\n                        </Grid>                        \r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label='Protein'\r\n                                name='protein'\r\n                                variant='outlined'\r\n                                value={values.protein}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                            />\r\n                        </Grid>                        \r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label='Fat'\r\n                                name='fat'\r\n                                variant='outlined'\r\n                                value={values.fat}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                            />\r\n                        </Grid>                        \r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label='Carbs'\r\n                                name='carbs'\r\n                                variant='outlined'\r\n                                value={values.carbs}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                            />\r\n                        </Grid>  \r\n                        <Grid item md={12} xs={12}>\r\n                            <Button\r\n                                fullWidth\r\n                                className={classes.themeButton}\r\n                                variant='contained'\r\n                                color='default'\r\n                                // onClick={() => addIngredients(values, setFieldValue)}\r\n                                endIcon={<ControlPointIcon />}\r\n                            >\r\n                                Add Terms\r\n                            </Button>\r\n                        </Grid>\r\n\r\n                        {values?.terms?.map((items: any, index: any)=>(\r\n                                <Grid\r\n                                key={index}\r\n                                item\r\n                                container\r\n                                md={12}\r\n                                xs={12}\r\n                                direction='row'\r\n                                spacing={2}\r\n                              >\r\n                                <Grid item md={1} xs={12}>\r\n                                  <input\r\n                                    ref={avatharimgRef}\r\n                                    type='file'\r\n                                    accept='.jpg,.png,jpeg'\r\n                                    // onChange={(e) => onAvatarImageChange(e, index)}\r\n                                    onBlur={handleBlur}\r\n                                    hidden\r\n                                  />\r\n                                  <Avatar\r\n                                    className={classes.workouttermsavatar}\r\n                                    variant='square'\r\n                                    onClick={() => avatharimgRef.current.click()}\r\n                                    src={items?.image?.prevImage}\r\n                                  />\r\n                                  <FormControl\r\n                                    error={Boolean(\r\n                                      touched?.terms &&\r\n                                        touched?.terms[index]?.image?.file &&\r\n                                        errors?.terms &&\r\n                                        (errors?.terms[index] as any)?.image?.file\r\n                                    )}\r\n                                  >\r\n                                    <FormHelperText>\r\n                                      {touched?.terms &&\r\n                                        touched?.terms[index]?.image?.file &&\r\n                                        errors?.terms &&\r\n                                        (errors?.terms[index] as any)?.image?.file}\r\n                                    </FormHelperText>\r\n                                  </FormControl>\r\n                                </Grid>\r\n          \r\n                                <Grid item md={5} xs={12}>\r\n                                  <TextField\r\n                                    fullWidth\r\n                                    multiline\r\n                                    label='Workout terms name'\r\n                                    name={`terms[${index}].name`}\r\n                                    variant='outlined'\r\n                                    error={Boolean(\r\n                                      touched?.terms &&\r\n                                        touched?.terms[index]?.name &&\r\n                                        errors?.terms &&\r\n                                        (errors?.terms[index] as any)?.name\r\n                                    )}\r\n                                    helperText={\r\n                                      touched?.terms &&\r\n                                      touched?.terms[index]?.name &&\r\n                                      errors?.terms &&\r\n                                      (errors?.terms[index] as any)?.name\r\n                                    }\r\n                                    value={items.name}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                  />\r\n                                </Grid>\r\n                                <Grid item md={5} xs={8}>\r\n                                  <TextField\r\n                                    fullWidth\r\n                                    multiline\r\n                                    label='Workout terms description'\r\n                                    name={`terms[${index}].description`}\r\n                                    variant='outlined'\r\n                                    error={Boolean(\r\n                                      touched?.terms &&\r\n                                        touched?.terms[index]?.term &&\r\n                                        errors?.terms &&\r\n                                        (errors?.terms[index] as any)?.description\r\n                                    )}\r\n                                    helperText={\r\n                                      touched?.terms &&\r\n                                      touched?.terms[index]?.term &&\r\n                                      errors?.terms &&\r\n                                      (errors?.terms[index] as any)?.description\r\n                                    }\r\n                                    value={items.term}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                  />\r\n                                </Grid>\r\n          \r\n                                <Grid item md={1} xs={4}>\r\n                                  <Button\r\n                                    fullWidth\r\n                                    className={classes.deleteButton}\r\n                                    variant='contained'\r\n                                    color='secondary'\r\n                                    // onClick={() =>\r\n                                    //   removeIngredients(values, index, setFieldValue)\r\n                                    // }\r\n                                  >\r\n                                    <DeleteIcon />\r\n                                  </Button>\r\n                                </Grid>\r\n                              </Grid>\r\n                            ))}\r\n\r\n                        <Grid item md={12} xs={12}>\r\n                            <Button\r\n                                fullWidth\r\n                                className={classes.themeButton}\r\n                                variant='contained'\r\n                                color='default'\r\n                                // onClick={() => addIngredients(values, setFieldValue)}\r\n                                endIcon={<ControlPointIcon />}\r\n                            >\r\n                                Add Terms\r\n                            </Button>\r\n                        </Grid>\r\n\r\n                        {values?.terms?.map((items: any, index: any)=>(\r\n                                <Grid\r\n                                key={index}\r\n                                item\r\n                                container\r\n                                md={12}\r\n                                xs={12}\r\n                                direction='row'\r\n                                spacing={2}\r\n                              >\r\n                                <Grid item md={1} xs={12}>\r\n                                  <input\r\n                                    ref={avatharimgRef}\r\n                                    type='file'\r\n                                    accept='.jpg,.png,jpeg'\r\n                                    // onChange={(e) => onAvatarImageChange(e, index)}\r\n                                    onBlur={handleBlur}\r\n                                    hidden\r\n                                  />\r\n                                  <Avatar\r\n                                    className={classes.workouttermsavatar}\r\n                                    variant='square'\r\n                                    onClick={() => avatharimgRef.current.click()}\r\n                                    src={items?.image?.prevImage}\r\n                                  />\r\n                                  <FormControl\r\n                                    error={Boolean(\r\n                                      touched?.terms &&\r\n                                        touched?.terms[index]?.image?.file &&\r\n                                        errors?.terms &&\r\n                                        (errors?.terms[index] as any)?.image?.file\r\n                                    )}\r\n                                  >\r\n                                    <FormHelperText>\r\n                                      {touched?.terms &&\r\n                                        touched?.terms[index]?.image?.file &&\r\n                                        errors?.terms &&\r\n                                        (errors?.terms[index] as any)?.image?.file}\r\n                                    </FormHelperText>\r\n                                  </FormControl>\r\n                                </Grid>\r\n          \r\n                                <Grid item md={5} xs={12}>\r\n                                  <TextField\r\n                                    fullWidth\r\n                                    multiline\r\n                                    label='Workout terms name'\r\n                                    name={`terms[${index}].name`}\r\n                                    variant='outlined'\r\n                                    error={Boolean(\r\n                                      touched?.terms &&\r\n                                        touched?.terms[index]?.name &&\r\n                                        errors?.terms &&\r\n                                        (errors?.terms[index] as any)?.name\r\n                                    )}\r\n                                    helperText={\r\n                                      touched?.terms &&\r\n                                      touched?.terms[index]?.name &&\r\n                                      errors?.terms &&\r\n                                      (errors?.terms[index] as any)?.name\r\n                                    }\r\n                                    value={items.name}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                  />\r\n                                </Grid>\r\n                                <Grid item md={5} xs={8}>\r\n                                  <TextField\r\n                                    fullWidth\r\n                                    multiline\r\n                                    label='Workout terms description'\r\n                                    name={`terms[${index}].description`}\r\n                                    variant='outlined'\r\n                                    error={Boolean(\r\n                                      touched?.terms &&\r\n                                        touched?.terms[index]?.term &&\r\n                                        errors?.terms &&\r\n                                        (errors?.terms[index] as any)?.description\r\n                                    )}\r\n                                    helperText={\r\n                                      touched?.terms &&\r\n                                      touched?.terms[index]?.term &&\r\n                                      errors?.terms &&\r\n                                      (errors?.terms[index] as any)?.description\r\n                                    }\r\n                                    value={items.term}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                  />\r\n                                </Grid>\r\n          \r\n                                <Grid item md={1} xs={4}>\r\n                                  <Button\r\n                                    fullWidth\r\n                                    className={classes.deleteButton}\r\n                                    variant='contained'\r\n                                    color='secondary'\r\n                                    // onClick={() =>\r\n                                    //   removeIngredients(values, index, setFieldValue)\r\n                                    // }\r\n                                  >\r\n                                    <DeleteIcon />\r\n                                  </Button>\r\n                                </Grid>\r\n                              </Grid>\r\n                        ))}\r\n                                        \r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onClose} variant='outlined' color='secondary'>\r\n                      Cancel\r\n                    </Button>\r\n\r\n                    <Button\r\n                      className={classes.themeButton}\r\n                      onClick={() => submitForm()}\r\n                      disabled={isSubmitting}\r\n                      variant='outlined'\r\n                    >\r\n                      {isSubmitting ? (\r\n                        <CircularProgress size={24} style={{color : 'white'}} />\r\n                      ) : (\r\n                        okBtnText\r\n                      )}\r\n                    </Button>\r\n                  </DialogActions>\r\n                </>\r\n            )}\r\n            </Formik>\r\n         </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MealRecipe\r\n"]},"metadata":{},"sourceType":"module"}