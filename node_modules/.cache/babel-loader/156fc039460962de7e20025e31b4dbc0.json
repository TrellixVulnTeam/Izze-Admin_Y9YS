{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pyramidion\\\\WebApp\\\\Izze-Admin\\\\src\\\\components\\\\TipTapEditor\\\\TipTapEditor.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { EditorContent, useEditor } from \"@tiptap/react\";\nimport StarterKit from \"@tiptap/starter-kit\";\nimport Link from '@tiptap/extension-link';\nimport EditorButton from \"./EditorButtons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TipTapEditor = props => {\n  _s();\n\n  const {\n    value,\n    onChange,\n    onBlur\n  } = props;\n  const editor = useEditor({\n    extensions: [StarterKit, Link],\n    content: value,\n    onUpdate: ({\n      editor\n    }) => onChange(editor.getHTML()),\n    onBlur: ({\n      editor\n    }) => onBlur()\n  }); // useEffect(() => {\n  //   editor?.commands?.setContent(value)\n  // }, [value,editor])\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(EditorButton, {\n      editor: editor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(EditorContent, {\n      editor: editor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TipTapEditor, \"t0rsU/t1p+LiVrRpHUSgNnV9Lz4=\", false, function () {\n  return [useEditor];\n});\n\n_c = TipTapEditor;\nexport default TipTapEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"TipTapEditor\");","map":{"version":3,"sources":["D:/Pyramidion/WebApp/Izze-Admin/src/components/TipTapEditor/TipTapEditor.tsx"],"names":["React","EditorContent","useEditor","StarterKit","Link","EditorButton","TipTapEditor","props","value","onChange","onBlur","editor","extensions","content","onUpdate","getHTML"],"mappings":";;;AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,eAAzC;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAgB;AAAA;;AACjC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,MAA8BH,KAApC;AACA,QAAMI,MAAM,GAAGT,SAAS,CAAC;AACvBU,IAAAA,UAAU,EAAE,CACVT,UADU,EAEVC,IAFU,CADW;AAKvBS,IAAAA,OAAO,EAAEL,KALc;AAMvBM,IAAAA,QAAQ,EAAE,CAAC;AAAEH,MAAAA;AAAF,KAAD,KAAsBF,QAAQ,CAACE,MAAM,CAACI,OAAP,EAAD,CANjB;AAOvBL,IAAAA,MAAM,EAAE,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAsBD,MAAM;AAPb,GAAD,CAAxB,CAFiC,CAYjC;AACA;AACA;;AAEA,sBACE;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,MAAM,EAAEC;AAAtB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AAAe,MAAA,MAAM,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD,CAtBH;;GAAML,Y;UAEaJ,S;;;KAFbI,Y;AAwBN,eAAeA,YAAf","sourcesContent":["import React, { useEffect } from \"react\"\r\nimport { EditorContent, useEditor } from \"@tiptap/react\"\r\nimport StarterKit from \"@tiptap/starter-kit\"\r\nimport Link from '@tiptap/extension-link'\r\nimport EditorButton from \"./EditorButtons\"\r\n\r\nconst TipTapEditor = (props: any) => {\r\n    const { value, onChange, onBlur } = props\r\n    const editor = useEditor({\r\n      extensions: [\r\n        StarterKit,\r\n        Link,\r\n      ],\r\n      content: value,\r\n      onUpdate: ({ editor }): void => onChange(editor.getHTML()),\r\n      onBlur: ({ editor }): void => onBlur(),\r\n    })\r\n  \r\n    // useEffect(() => {\r\n    //   editor?.commands?.setContent(value)\r\n    // }, [value,editor])\r\n  \r\n    return (\r\n      <>\r\n        <EditorButton editor={editor} />\r\n        <EditorContent editor={editor} />\r\n      </>\r\n    )\r\n  }\r\n\r\nexport default TipTapEditor"]},"metadata":{},"sourceType":"module"}